! function e(t, n, r) {
    function i(o, s) {
        if (!n[o]) {
            if (!t[o]) {
                var u = "function" == typeof require && require;
                if (!s && u) return u(o, !0);
                if (a) return a(o, !0);
                var l = new Error("Cannot find module '" + o + "'");
                throw l.code = "MODULE_NOT_FOUND", l
            }
            var c = n[o] = {
                exports: {}
            };
            t[o][0].call(c.exports, (function(e) {
                return i(t[o][1][e] || e)
            }), c, c.exports, e, t, n, r)
        }
        return n[o].exports
    }
    for (var a = "function" == typeof require && require, o = 0; o < r.length; o++) i(r[o]);
    return i
}({
    1: [function(e, t, n) {
        "use strict";
        t.exports = function(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    2: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            if (Array.isArray(e)) return e
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    3: [function(e, t, n) {
        "use strict";
        var r = e("./arrayLikeToArray.js");
        t.exports = function(e) {
            if (Array.isArray(e)) return r(e)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./arrayLikeToArray.js": 1
    }],
    4: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    5: [function(e, t, n) {
        "use strict";

        function r(e, t, n, r, i, a, o) {
            try {
                var s = e[a](o),
                    u = s.value
            } catch (e) {
                return void n(e)
            }
            s.done ? t(u) : Promise.resolve(u).then(r, i)
        }
        t.exports = function(e) {
            return function() {
                var t = this,
                    n = arguments;
                return new Promise((function(i, a) {
                    var o = e.apply(t, n);

                    function s(e) {
                        r(o, i, a, s, u, "next", e)
                    }

                    function u(e) {
                        r(o, i, a, s, u, "throw", e)
                    }
                    s(void 0)
                }))
            }
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    6: [function(e, t, n) {
        "use strict";
        t.exports = function(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    7: [function(e, t, n) {
        "use strict";
        var r = e("./toPropertyKey.js");

        function i(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, r(i.key), i)
            }
        }
        t.exports = function(e, t, n) {
            return t && i(e.prototype, t), n && i(e, n), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./toPropertyKey.js": 23
    }],
    8: [function(e, t, n) {
        "use strict";
        var r = e("./toPropertyKey.js");
        t.exports = function(e, t, n) {
            return (t = r(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./toPropertyKey.js": 23
    }],
    9: [function(e, t, n) {
        "use strict";
        var r = e("./superPropBase.js");

        function i() {
            return "undefined" != typeof Reflect && Reflect.get ? (t.exports = i = Reflect.get.bind(), t.exports.__esModule = !0, t.exports.default = t.exports) : (t.exports = i = function(e, t, n) {
                var i = r(e, t);
                if (i) {
                    var a = Object.getOwnPropertyDescriptor(i, t);
                    return a.get ? a.get.call(arguments.length < 3 ? e : n) : a.value
                }
            }, t.exports.__esModule = !0, t.exports.default = t.exports), i.apply(this, arguments)
        }
        t.exports = i, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./superPropBase.js": 20
    }],
    10: [function(e, t, n) {
        "use strict";

        function r(e) {
            return t.exports = r = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }, t.exports.__esModule = !0, t.exports.default = t.exports, r(e)
        }
        t.exports = r, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    11: [function(e, t, n) {
        "use strict";
        var r = e("./setPrototypeOf.js");
        t.exports = function(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && r(e, t)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./setPrototypeOf.js": 18
    }],
    12: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            return e && e.__esModule ? e : {
                default: e
            }
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    13: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    14: [function(e, t, n) {
        "use strict";
        t.exports = function(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, i, a, o, s = [],
                    u = !0,
                    l = !1;
                try {
                    if (a = (n = n.call(e)).next, 0 === t) {
                        if (Object(n) !== n) return;
                        u = !1
                    } else
                        for (; !(u = (r = a.call(n)).done) && (s.push(r.value), s.length !== t); u = !0);
                } catch (e) {
                    l = !0, i = e
                } finally {
                    try {
                        if (!u && null != n.return && (o = n.return(), Object(o) !== o)) return
                    } finally {
                        if (l) throw i
                    }
                }
                return s
            }
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    15: [function(e, t, n) {
        "use strict";
        t.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    16: [function(e, t, n) {
        "use strict";
        t.exports = function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    17: [function(e, t, n) {
        "use strict";
        var r = e("./typeof.js").default,
            i = e("./assertThisInitialized.js");
        t.exports = function(e, t) {
            if (t && ("object" === r(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return i(e)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./assertThisInitialized.js": 4,
        "./typeof.js": 24
    }],
    18: [function(e, t, n) {
        "use strict";

        function r(e, n) {
            return t.exports = r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e
            }, t.exports.__esModule = !0, t.exports.default = t.exports, r(e, n)
        }
        t.exports = r, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    19: [function(e, t, n) {
        "use strict";
        var r = e("./arrayWithHoles.js"),
            i = e("./iterableToArrayLimit.js"),
            a = e("./unsupportedIterableToArray.js"),
            o = e("./nonIterableRest.js");
        t.exports = function(e, t) {
            return r(e) || i(e, t) || a(e, t) || o()
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./arrayWithHoles.js": 2,
        "./iterableToArrayLimit.js": 14,
        "./nonIterableRest.js": 15,
        "./unsupportedIterableToArray.js": 25
    }],
    20: [function(e, t, n) {
        "use strict";
        var r = e("./getPrototypeOf.js");
        t.exports = function(e, t) {
            for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = r(e)););
            return e
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./getPrototypeOf.js": 10
    }],
    21: [function(e, t, n) {
        "use strict";
        var r = e("./arrayWithoutHoles.js"),
            i = e("./iterableToArray.js"),
            a = e("./unsupportedIterableToArray.js"),
            o = e("./nonIterableSpread.js");
        t.exports = function(e) {
            return r(e) || i(e) || a(e) || o()
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./arrayWithoutHoles.js": 3,
        "./iterableToArray.js": 13,
        "./nonIterableSpread.js": 16,
        "./unsupportedIterableToArray.js": 25
    }],
    22: [function(e, t, n) {
        "use strict";
        var r = e("./typeof.js").default;
        t.exports = function(e, t) {
            if ("object" !== r(e) || null === e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var i = n.call(e, t || "default");
                if ("object" !== r(i)) return i;
                throw new TypeError("@@toPrimitive must return a primitive value.")
            }
            return ("string" === t ? String : Number)(e)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./typeof.js": 24
    }],
    23: [function(e, t, n) {
        "use strict";
        var r = e("./typeof.js").default,
            i = e("./toPrimitive.js");
        t.exports = function(e) {
            var t = i(e, "string");
            return "symbol" === r(t) ? t : String(t)
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./toPrimitive.js": 22,
        "./typeof.js": 24
    }],
    24: [function(e, t, n) {
        "use strict";

        function r(e) {
            return t.exports = r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, t.exports.__esModule = !0, t.exports.default = t.exports, r(e)
        }
        t.exports = r, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {}],
    25: [function(e, t, n) {
        "use strict";
        var r = e("./arrayLikeToArray.js");
        t.exports = function(e, t) {
            if (e) {
                if ("string" == typeof e) return r(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(e, t) : void 0
            }
        }, t.exports.__esModule = !0, t.exports.default = t.exports
    }, {
        "./arrayLikeToArray.js": 1
    }],
    26: [function(e, t, n) {
        "use strict";
        t.exports = function(e, t, n, r) {
            if (r = (n = window.getComputedStyle) ? n(e) : e.currentStyle) return r[t.replace(/-(\w)/gi, (function(e, t) {
                return t.toUpperCase()
            }))]
        }
    }, {}],
    27: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            "string" == typeof e && (e = [e]);
            for (var t = [].slice.call(arguments, 1), n = [], r = 0; r < e.length - 1; r++) n.push(e[r], t[r] || "");
            return n.push(e[r]), n.join("")
        }
    }, {}],
    28: [function(e, t, n) {
        "use strict";
        var r, i, a = e("@babel/runtime/helpers/interopRequireDefault")(e("@babel/runtime/helpers/typeof"));
        r = void 0, i = function(e) {
            function t(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
            }

            function n(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }
            /*!
             * GSAP 3.11.5
             * https://greensock.com
             *
             * @license Copyright 2008-2023, GreenSock. All rights reserved.
             * Subject to the terms at https://greensock.com/standard-license or for
             * Club GreenSock members, the agreement issued with that membership.
             * @author: Jack Doyle, jack@greensock.com
             */
            var r, i, o, s, u, l, c, h, d, f, p, v, m, g, y, _ = {
                    autoSleep: 120,
                    force3D: "auto",
                    nullTargetWarn: 1,
                    units: {
                        lineHeight: ""
                    }
                },
                x = {
                    duration: .5,
                    overwrite: !1,
                    delay: 0
                },
                b = 1e8,
                w = 1e-8,
                T = 2 * Math.PI,
                M = T / 4,
                S = 0,
                E = Math.sqrt,
                A = Math.cos,
                L = Math.sin,
                C = function(e) {
                    return "string" == typeof e
                },
                R = function(e) {
                    return "function" == typeof e
                },
                k = function(e) {
                    return "number" == typeof e
                },
                P = function(e) {
                    return void 0 === e
                },
                D = function(e) {
                    return "object" === (0, a.default)(e)
                },
                I = function(e) {
                    return !1 !== e
                },
                O = function() {
                    return "undefined" != typeof window
                },
                N = function(e) {
                    return R(e) || C(e)
                },
                F = "function" == typeof ArrayBuffer && ArrayBuffer.isView || function() {},
                U = Array.isArray,
                B = /(?:-?\.?\d|\.)+/gi,
                z = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
                G = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
                H = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
                V = /[+-]=-?[.\d]+/,
                W = /[^,'"\[\]\s]+/gi,
                j = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
                q = {},
                X = {},
                Y = function(e) {
                    return (X = Te(e, q)) && Mn
                },
                K = function(e, t) {
                    return console.warn("Invalid property", e, "set to", t, "Missing plugin? gsap.registerPlugin()")
                },
                Z = function(e, t) {
                    return !t && console.warn(e)
                },
                J = function(e, t) {
                    return e && (q[e] = t) && X && (X[e] = t) || q
                },
                Q = function() {
                    return 0
                },
                $ = {
                    suppressEvents: !0,
                    isStart: !0,
                    kill: !1
                },
                ee = {
                    suppressEvents: !0,
                    kill: !1
                },
                te = {
                    suppressEvents: !0
                },
                ne = {},
                re = [],
                ie = {},
                ae = {},
                oe = {},
                se = 30,
                ue = [],
                le = "",
                ce = function(e) {
                    var t, n, r = e[0];
                    if (D(r) || R(r) || (e = [e]), !(t = (r._gsap || {}).harness)) {
                        for (n = ue.length; n-- && !ue[n].targetTest(r););
                        t = ue[n]
                    }
                    for (n = e.length; n--;) e[n] && (e[n]._gsap || (e[n]._gsap = new Ut(e[n], t))) || e.splice(n, 1);
                    return e
                },
                he = function(e) {
                    return e._gsap || ce(tt(e))[0]._gsap
                },
                de = function(e, t, n) {
                    return (n = e[t]) && R(n) ? e[t]() : P(n) && e.getAttribute && e.getAttribute(t) || n
                },
                fe = function(e, t) {
                    return (e = e.split(",")).forEach(t) || e
                },
                pe = function(e) {
                    return Math.round(1e5 * e) / 1e5 || 0
                },
                ve = function(e) {
                    return Math.round(1e7 * e) / 1e7 || 0
                },
                me = function(e, t) {
                    var n = t.charAt(0),
                        r = parseFloat(t.substr(2));
                    return e = parseFloat(e), "+" === n ? e + r : "-" === n ? e - r : "*" === n ? e * r : e / r
                },
                ge = function(e, t) {
                    for (var n = t.length, r = 0; e.indexOf(t[r]) < 0 && ++r < n;);
                    return r < n
                },
                ye = function() {
                    var e, t, n = re.length,
                        r = re.slice(0);
                    for (ie = {}, re.length = 0, e = 0; e < n; e++)(t = r[e]) && t._lazy && (t.render(t._lazy[0], t._lazy[1], !0)._lazy = 0)
                },
                _e = function(e, t, n, r) {
                    re.length && !i && ye(), e.render(t, n, r || i && t < 0 && (e._initted || e._startAt)), re.length && !i && ye()
                },
                xe = function(e) {
                    var t = parseFloat(e);
                    return (t || 0 === t) && (e + "").match(W).length < 2 ? t : C(e) ? e.trim() : e
                },
                be = function(e) {
                    return e
                },
                we = function(e, t) {
                    for (var n in t) n in e || (e[n] = t[n]);
                    return e
                },
                Te = function(e, t) {
                    for (var n in t) e[n] = t[n];
                    return e
                },
                Me = function e(t, n) {
                    for (var r in n) "__proto__" !== r && "constructor" !== r && "prototype" !== r && (t[r] = D(n[r]) ? e(t[r] || (t[r] = {}), n[r]) : n[r]);
                    return t
                },
                Se = function(e, t) {
                    var n, r = {};
                    for (n in e) n in t || (r[n] = e[n]);
                    return r
                },
                Ee = function(e) {
                    var t, n = e.parent || s,
                        r = e.keyframes ? (t = U(e.keyframes), function(e, n) {
                            for (var r in n) r in e || "duration" === r && t || "ease" === r || (e[r] = n[r])
                        }) : we;
                    if (I(e.inherit))
                        for (; n;) r(e, n.vars.defaults), n = n.parent || n._dp;
                    return e
                },
                Ae = function(e, t, n, r, i) {
                    void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                    var a, o = e[r];
                    if (i)
                        for (a = t[i]; o && o[i] > a;) o = o._prev;
                    return o ? (t._next = o._next, o._next = t) : (t._next = e[n], e[n] = t), t._next ? t._next._prev = t : e[r] = t, t._prev = o, t.parent = t._dp = e, t
                },
                Le = function(e, t, n, r) {
                    void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                    var i = t._prev,
                        a = t._next;
                    i ? i._next = a : e[n] === t && (e[n] = a), a ? a._prev = i : e[r] === t && (e[r] = i), t._next = t._prev = t.parent = null
                },
                Ce = function(e, t) {
                    e.parent && (!t || e.parent.autoRemoveChildren) && e.parent.remove(e), e._act = 0
                },
                Re = function(e, t) {
                    if (e && (!t || t._end > e._dur || t._start < 0))
                        for (var n = e; n;) n._dirty = 1, n = n.parent;
                    return e
                },
                ke = function(e, t, n, r) {
                    return e._startAt && (i ? e._startAt.revert(ee) : e.vars.immediateRender && !e.vars.autoRevert || e._startAt.render(t, !0, r))
                },
                Pe = function e(t) {
                    return !t || t._ts && e(t.parent)
                },
                De = function(e) {
                    return e._repeat ? Ie(e._tTime, e = e.duration() + e._rDelay) * e : 0
                },
                Ie = function(e, t) {
                    var n = Math.floor(e /= t);
                    return e && n === e ? n - 1 : n
                },
                Oe = function(e, t) {
                    return (e - t._start) * t._ts + (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
                },
                Ne = function(e) {
                    return e._end = ve(e._start + (e._tDur / Math.abs(e._ts || e._rts || w) || 0))
                },
                Fe = function(e, t) {
                    var n = e._dp;
                    return n && n.smoothChildTiming && e._ts && (e._start = ve(n._time - (e._ts > 0 ? t / e._ts : ((e._dirty ? e.totalDuration() : e._tDur) - t) / -e._ts)), Ne(e), n._dirty || Re(n, e)), e
                },
                Ue = function(e, t) {
                    var n;
                    if ((t._time || t._initted && !t._dur) && (n = Oe(e.rawTime(), t), (!t._dur || Ze(0, t.totalDuration(), n) - t._tTime > w) && t.render(n, !0)), Re(e, t)._dp && e._initted && e._time >= e._dur && e._ts) {
                        if (e._dur < e.duration())
                            for (n = e; n._dp;) n.rawTime() >= 0 && n.totalTime(n._tTime), n = n._dp;
                        e._zTime = -1e-8
                    }
                },
                Be = function(e, t, n, r) {
                    return t.parent && Ce(t), t._start = ve((k(n) ? n : n || e !== s ? Xe(e, n, t) : e._time) + t._delay), t._end = ve(t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)), Ae(e, t, "_first", "_last", e._sort ? "_start" : 0), Ve(t) || (e._recent = t), r || Ue(e, t), e._ts < 0 && Fe(e, e._tTime), e
                },
                ze = function(e, t) {
                    return (q.ScrollTrigger || K("scrollTrigger", t)) && q.ScrollTrigger.create(t, e)
                },
                Ge = function(e, t, n, r, a) {
                    return qt(e, t, a), e._initted ? !n && e._pt && !i && (e._dur && !1 !== e.vars.lazy || !e._dur && e.vars.lazy) && d !== St.frame ? (re.push(e), e._lazy = [a, r], 1) : void 0 : 1
                },
                He = function e(t) {
                    var n = t.parent;
                    return n && n._ts && n._initted && !n._lock && (n.rawTime() < 0 || e(n))
                },
                Ve = function(e) {
                    var t = e.data;
                    return "isFromStart" === t || "isStart" === t
                },
                We = function(e, t, n, r) {
                    var i = e._repeat,
                        a = ve(t) || 0,
                        o = e._tTime / e._tDur;
                    return o && !r && (e._time *= a / e._dur), e._dur = a, e._tDur = i ? i < 0 ? 1e10 : ve(a * (i + 1) + e._rDelay * i) : a, o > 0 && !r && Fe(e, e._tTime = e._tDur * o), e.parent && Ne(e), n || Re(e.parent, e), e
                },
                je = function(e) {
                    return e instanceof zt ? Re(e) : We(e, e._dur)
                },
                qe = {
                    _start: 0,
                    endTime: Q,
                    totalDuration: Q
                },
                Xe = function e(t, n, r) {
                    var i, a, o, s = t.labels,
                        u = t._recent || qe,
                        l = t.duration() >= b ? u.endTime(!1) : t._dur;
                    return C(n) && (isNaN(n) || n in s) ? (a = n.charAt(0), o = "%" === n.substr(-1), i = n.indexOf("="), "<" === a || ">" === a ? (i >= 0 && (n = n.replace(/=/, "")), ("<" === a ? u._start : u.endTime(u._repeat >= 0)) + (parseFloat(n.substr(1)) || 0) * (o ? (i < 0 ? u : r).totalDuration() / 100 : 1)) : i < 0 ? (n in s || (s[n] = l), s[n]) : (a = parseFloat(n.charAt(i - 1) + n.substr(i + 1)), o && r && (a = a / 100 * (U(r) ? r[0] : r).totalDuration()), i > 1 ? e(t, n.substr(0, i - 1), r) + a : l + a)) : null == n ? l : +n
                },
                Ye = function(e, t, n) {
                    var r, i, a = k(t[1]),
                        o = (a ? 2 : 1) + (e < 2 ? 0 : 1),
                        s = t[o];
                    if (a && (s.duration = t[1]), s.parent = n, e) {
                        for (r = s, i = n; i && !("immediateRender" in r);) r = i.vars.defaults || {}, i = I(i.vars.inherit) && i.parent;
                        s.immediateRender = I(r.immediateRender), e < 2 ? s.runBackwards = 1 : s.startAt = t[o - 1]
                    }
                    return new Jt(t[0], s, t[o + 1])
                },
                Ke = function(e, t) {
                    return e || 0 === e ? t(e) : t
                },
                Ze = function(e, t, n) {
                    return n < e ? e : n > t ? t : n
                },
                Je = function(e, t) {
                    return C(e) && (t = j.exec(e)) ? t[1] : ""
                },
                Qe = [].slice,
                $e = function(e, t) {
                    return e && D(e) && "length" in e && (!t && !e.length || e.length - 1 in e && D(e[0])) && !e.nodeType && e !== u
                },
                et = function(e, t, n) {
                    return void 0 === n && (n = []), e.forEach((function(e) {
                        var r;
                        return C(e) && !t || $e(e, 1) ? (r = n).push.apply(r, tt(e)) : n.push(e)
                    })) || n
                },
                tt = function(e, t, n) {
                    return o && !t && o.selector ? o.selector(e) : !C(e) || n || !l && Et() ? U(e) ? et(e, n) : $e(e) ? Qe.call(e, 0) : e ? [e] : [] : Qe.call((t || c).querySelectorAll(e), 0)
                },
                nt = function(e) {
                    return e = tt(e)[0] || Z("Invalid scope") || {},
                        function(t) {
                            var n = e.current || e.nativeElement || e;
                            return tt(t, n.querySelectorAll ? n : n === e ? Z("Invalid scope") || c.createElement("div") : e)
                        }
                },
                rt = function(e) {
                    return e.sort((function() {
                        return .5 - Math.random()
                    }))
                },
                it = function(e) {
                    if (R(e)) return e;
                    var t = D(e) ? e : {
                            each: e
                        },
                        n = Dt(t.ease),
                        r = t.from || 0,
                        i = parseFloat(t.base) || 0,
                        a = {},
                        o = r > 0 && r < 1,
                        s = isNaN(r) || o,
                        u = t.axis,
                        l = r,
                        c = r;
                    return C(r) ? l = c = {
                            center: .5,
                            edges: .5,
                            end: 1
                        }[r] || 0 : !o && s && (l = r[0], c = r[1]),
                        function(e, o, h) {
                            var d, f, p, v, m, g, y, _, x, w = (h || t).length,
                                T = a[w];
                            if (!T) {
                                if (!(x = "auto" === t.grid ? 0 : (t.grid || [1, b])[1])) {
                                    for (y = -b; y < (y = h[x++].getBoundingClientRect().left) && x < w;);
                                    x--
                                }
                                for (T = a[w] = [], d = s ? Math.min(x, w) * l - .5 : r % x, f = x === b ? 0 : s ? w * c / x - .5 : r / x | 0, y = 0, _ = b, g = 0; g < w; g++) p = g % x - d, v = f - (g / x | 0), T[g] = m = u ? Math.abs("y" === u ? v : p) : E(p * p + v * v), m > y && (y = m), m < _ && (_ = m);
                                "random" === r && rt(T), T.max = y - _, T.min = _, T.v = w = (parseFloat(t.amount) || parseFloat(t.each) * (x > w ? w - 1 : u ? "y" === u ? w / x : x : Math.max(x, w / x)) || 0) * ("edges" === r ? -1 : 1), T.b = w < 0 ? i - w : i, T.u = Je(t.amount || t.each) || 0, n = n && w < 0 ? kt(n) : n
                            }
                            return w = (T[e] - T.min) / T.max || 0, ve(T.b + (n ? n(w) : w) * T.v) + T.u
                        }
                },
                at = function(e) {
                    var t = Math.pow(10, ((e + "").split(".")[1] || "").length);
                    return function(n) {
                        var r = ve(Math.round(parseFloat(n) / e) * e * t);
                        return (r - r % 1) / t + (k(n) ? 0 : Je(n))
                    }
                },
                ot = function(e, t) {
                    var n, r, i = U(e);
                    return !i && D(e) && (n = i = e.radius || b, e.values ? (e = tt(e.values), (r = !k(e[0])) && (n *= n)) : e = at(e.increment)), Ke(t, i ? R(e) ? function(t) {
                        return r = e(t), Math.abs(r - t) <= n ? r : t
                    } : function(t) {
                        for (var i, a, o = parseFloat(r ? t.x : t), s = parseFloat(r ? t.y : 0), u = b, l = 0, c = e.length; c--;)(i = r ? (i = e[c].x - o) * i + (a = e[c].y - s) * a : Math.abs(e[c] - o)) < u && (u = i, l = c);
                        return l = !n || u <= n ? e[l] : t, r || l === t || k(t) ? l : l + Je(t)
                    } : at(e))
                },
                st = function(e, t, n, r) {
                    return Ke(U(e) ? !t : !0 === n ? !!(n = 0) : !r, (function() {
                        return U(e) ? e[~~(Math.random() * e.length)] : (n = n || 1e-5) && (r = n < 1 ? Math.pow(10, (n + "").length - 2) : 1) && Math.floor(Math.round((e - n / 2 + Math.random() * (t - e + .99 * n)) / n) * n * r) / r
                    }))
                },
                ut = function(e, t, n) {
                    return Ke(n, (function(n) {
                        return e[~~t(n)]
                    }))
                },
                lt = function(e) {
                    for (var t, n, r, i, a = 0, o = ""; ~(t = e.indexOf("random(", a));) r = e.indexOf(")", t), i = "[" === e.charAt(t + 7), n = e.substr(t + 7, r - t - 7).match(i ? W : B), o += e.substr(a, t - a) + st(i ? n : +n[0], i ? 0 : +n[1], +n[2] || 1e-5), a = r + 1;
                    return o + e.substr(a, e.length - a)
                },
                ct = function(e, t, n, r, i) {
                    var a = t - e,
                        o = r - n;
                    return Ke(i, (function(t) {
                        return n + ((t - e) / a * o || 0)
                    }))
                },
                ht = function(e, t, n) {
                    var r, i, a, o = e.labels,
                        s = b;
                    for (r in o)(i = o[r] - t) < 0 == !!n && i && s > (i = Math.abs(i)) && (a = r, s = i);
                    return a
                },
                dt = function(e, t, n) {
                    var r, i, a, s = e.vars,
                        u = s[t],
                        l = o,
                        c = e._ctx;
                    if (u) return r = s[t + "Params"], i = s.callbackScope || e, n && re.length && ye(), c && (o = c), a = r ? u.apply(i, r) : u.call(i), o = l, a
                },
                ft = function(e) {
                    return Ce(e), e.scrollTrigger && e.scrollTrigger.kill(!!i), e.progress() < 1 && dt(e, "onInterrupt"), e
                },
                pt = [],
                vt = function(e) {
                    if (O()) {
                        var t = (e = !e.name && e.default || e).name,
                            n = R(e),
                            r = t && !n && e.init ? function() {
                                this._props = []
                            } : e,
                            i = {
                                init: Q,
                                render: sn,
                                add: Wt,
                                kill: ln,
                                modifier: un,
                                rawVars: 0
                            },
                            a = {
                                targetTest: 0,
                                get: 0,
                                getSetter: nn,
                                aliases: {},
                                register: 0
                            };
                        if (Et(), e !== r) {
                            if (ae[t]) return;
                            we(r, we(Se(e, i), a)), Te(r.prototype, Te(i, Se(e, a))), ae[r.prop = t] = r, e.targetTest && (ue.push(r), ne[t] = 1), t = ("css" === t ? "CSS" : t.charAt(0).toUpperCase() + t.substr(1)) + "Plugin"
                        }
                        J(t, r), e.register && e.register(Mn, r, dn)
                    } else pt.push(e)
                },
                mt = 255,
                gt = {
                    aqua: [0, mt, mt],
                    lime: [0, mt, 0],
                    silver: [192, 192, 192],
                    black: [0, 0, 0],
                    maroon: [128, 0, 0],
                    teal: [0, 128, 128],
                    blue: [0, 0, mt],
                    navy: [0, 0, 128],
                    white: [mt, mt, mt],
                    olive: [128, 128, 0],
                    yellow: [mt, mt, 0],
                    orange: [mt, 165, 0],
                    gray: [128, 128, 128],
                    purple: [128, 0, 128],
                    green: [0, 128, 0],
                    red: [mt, 0, 0],
                    pink: [mt, 192, 203],
                    cyan: [0, mt, mt],
                    transparent: [mt, mt, mt, 0]
                },
                yt = function(e, t, n) {
                    return (6 * (e += e < 0 ? 1 : e > 1 ? -1 : 0) < 1 ? t + (n - t) * e * 6 : e < .5 ? n : 3 * e < 2 ? t + (n - t) * (2 / 3 - e) * 6 : t) * mt + .5 | 0
                },
                _t = function(e, t, n) {
                    var r, i, a, o, s, u, l, c, h, d, f = e ? k(e) ? [e >> 16, e >> 8 & mt, e & mt] : 0 : gt.black;
                    if (!f) {
                        if ("," === e.substr(-1) && (e = e.substr(0, e.length - 1)), gt[e]) f = gt[e];
                        else if ("#" === e.charAt(0)) {
                            if (e.length < 6 && (r = e.charAt(1), i = e.charAt(2), a = e.charAt(3), e = "#" + r + r + i + i + a + a + (5 === e.length ? e.charAt(4) + e.charAt(4) : "")), 9 === e.length) return [(f = parseInt(e.substr(1, 6), 16)) >> 16, f >> 8 & mt, f & mt, parseInt(e.substr(7), 16) / 255];
                            f = [(e = parseInt(e.substr(1), 16)) >> 16, e >> 8 & mt, e & mt]
                        } else if ("hsl" === e.substr(0, 3))
                            if (f = d = e.match(B), t) {
                                if (~e.indexOf("=")) return f = e.match(z), n && f.length < 4 && (f[3] = 1), f
                            } else o = +f[0] % 360 / 360, s = +f[1] / 100, r = 2 * (u = +f[2] / 100) - (i = u <= .5 ? u * (s + 1) : u + s - u * s), f.length > 3 && (f[3] *= 1), f[0] = yt(o + 1 / 3, r, i), f[1] = yt(o, r, i), f[2] = yt(o - 1 / 3, r, i);
                        else f = e.match(B) || gt.transparent;
                        f = f.map(Number)
                    }
                    return t && !d && (r = f[0] / mt, i = f[1] / mt, a = f[2] / mt, u = ((l = Math.max(r, i, a)) + (c = Math.min(r, i, a))) / 2, l === c ? o = s = 0 : (h = l - c, s = u > .5 ? h / (2 - l - c) : h / (l + c), o = l === r ? (i - a) / h + (i < a ? 6 : 0) : l === i ? (a - r) / h + 2 : (r - i) / h + 4, o *= 60), f[0] = ~~(o + .5), f[1] = ~~(100 * s + .5), f[2] = ~~(100 * u + .5)), n && f.length < 4 && (f[3] = 1), f
                },
                xt = function(e) {
                    var t = [],
                        n = [],
                        r = -1;
                    return e.split(wt).forEach((function(e) {
                        var i = e.match(G) || [];
                        t.push.apply(t, i), n.push(r += i.length + 1)
                    })), t.c = n, t
                },
                bt = function(e, t, n) {
                    var r, i, a, o, s = "",
                        u = (e + s).match(wt),
                        l = t ? "hsla(" : "rgba(",
                        c = 0;
                    if (!u) return e;
                    if (u = u.map((function(e) {
                            return (e = _t(e, t, 1)) && l + (t ? e[0] + "," + e[1] + "%," + e[2] + "%," + e[3] : e.join(",")) + ")"
                        })), n && (a = xt(e), (r = n.c).join(s) !== a.c.join(s)))
                        for (o = (i = e.replace(wt, "1").split(G)).length - 1; c < o; c++) s += i[c] + (~r.indexOf(c) ? u.shift() || l + "0,0,0,0)" : (a.length ? a : u.length ? u : n).shift());
                    if (!i)
                        for (o = (i = e.split(wt)).length - 1; c < o; c++) s += i[c] + u[c];
                    return s + i[o]
                },
                wt = function() {
                    var e, t = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";
                    for (e in gt) t += "|" + e + "\\b";
                    return new RegExp(t + ")", "gi")
                }(),
                Tt = /hsl[a]?\(/,
                Mt = function(e) {
                    var t, n = e.join(" ");
                    if (wt.lastIndex = 0, wt.test(n)) return t = Tt.test(n), e[1] = bt(e[1], t), e[0] = bt(e[0], t, xt(e[1])), !0
                },
                St = function() {
                    var e, t, n, r, i, a, o = Date.now,
                        s = 500,
                        d = 33,
                        f = o(),
                        v = f,
                        m = 1e3 / 240,
                        g = m,
                        y = [],
                        _ = function n(u) {
                            var l, c, h, p, _ = o() - v,
                                x = !0 === u;
                            if (_ > s && (f += _ - d), ((l = (h = (v += _) - f) - g) > 0 || x) && (p = ++r.frame, i = h - 1e3 * r.time, r.time = h /= 1e3, g += l + (l >= m ? 4 : m - l), c = 1), x || (e = t(n)), c)
                                for (a = 0; a < y.length; a++) y[a](h, i, p, u)
                        };
                    return r = {
                        time: 0,
                        frame: 0,
                        tick: function() {
                            _(!0)
                        },
                        deltaRatio: function(e) {
                            return i / (1e3 / (e || 60))
                        },
                        wake: function() {
                            h && (!l && O() && (u = l = window, c = u.document || {}, q.gsap = Mn, (u.gsapVersions || (u.gsapVersions = [])).push(Mn.version), Y(X || u.GreenSockGlobals || !u.gsap && u || {}), n = u.requestAnimationFrame, pt.forEach(vt)), e && r.sleep(), t = n || function(e) {
                                return setTimeout(e, g - 1e3 * r.time + 1 | 0)
                            }, p = 1, _(2))
                        },
                        sleep: function() {
                            (n ? u.cancelAnimationFrame : clearTimeout)(e), p = 0, t = Q
                        },
                        lagSmoothing: function(e, t) {
                            s = e || 1 / 0, d = Math.min(t || 33, s)
                        },
                        fps: function(e) {
                            m = 1e3 / (e || 240), g = 1e3 * r.time + m
                        },
                        add: function(e, t, n) {
                            var i = t ? function(t, n, a, o) {
                                e(t, n, a, o), r.remove(i)
                            } : e;
                            return r.remove(e), y[n ? "unshift" : "push"](i), Et(), i
                        },
                        remove: function(e, t) {
                            ~(t = y.indexOf(e)) && y.splice(t, 1) && a >= t && a--
                        },
                        _listeners: y
                    }
                }(),
                Et = function() {
                    return !p && St.wake()
                },
                At = {},
                Lt = /^[\d.\-M][\d.\-,\s]/,
                Ct = /["']/g,
                Rt = function(e) {
                    for (var t, n, r, i = {}, a = e.substr(1, e.length - 3).split(":"), o = a[0], s = 1, u = a.length; s < u; s++) n = a[s], t = s !== u - 1 ? n.lastIndexOf(",") : n.length, r = n.substr(0, t), i[o] = isNaN(r) ? r.replace(Ct, "").trim() : +r, o = n.substr(t + 1).trim();
                    return i
                },
                kt = function(e) {
                    return function(t) {
                        return 1 - e(1 - t)
                    }
                },
                Pt = function e(t, n) {
                    for (var r, i = t._first; i;) i instanceof zt ? e(i, n) : !i.vars.yoyoEase || i._yoyo && i._repeat || i._yoyo === n || (i.timeline ? e(i.timeline, n) : (r = i._ease, i._ease = i._yEase, i._yEase = r, i._yoyo = n)), i = i._next
                },
                Dt = function(e, t) {
                    return e && (R(e) ? e : At[e] || function(e) {
                        var t, n, r, i, a = (e + "").split("("),
                            o = At[a[0]];
                        return o && a.length > 1 && o.config ? o.config.apply(null, ~e.indexOf("{") ? [Rt(a[1])] : (t = e, n = t.indexOf("(") + 1, r = t.indexOf(")"), i = t.indexOf("(", n), t.substring(n, ~i && i < r ? t.indexOf(")", r + 1) : r)).split(",").map(xe)) : At._CE && Lt.test(e) ? At._CE("", e) : o
                    }(e)) || t
                },
                It = function(e, t, n, r) {
                    void 0 === n && (n = function(e) {
                        return 1 - t(1 - e)
                    }), void 0 === r && (r = function(e) {
                        return e < .5 ? t(2 * e) / 2 : 1 - t(2 * (1 - e)) / 2
                    });
                    var i, a = {
                        easeIn: t,
                        easeOut: n,
                        easeInOut: r
                    };
                    return fe(e, (function(e) {
                        for (var t in At[e] = q[e] = a, At[i = e.toLowerCase()] = n, a) At[i + ("easeIn" === t ? ".in" : "easeOut" === t ? ".out" : ".inOut")] = At[e + "." + t] = a[t]
                    })), a
                },
                Ot = function(e) {
                    return function(t) {
                        return t < .5 ? (1 - e(1 - 2 * t)) / 2 : .5 + e(2 * (t - .5)) / 2
                    }
                },
                Nt = function e(t, n, r) {
                    var i = n >= 1 ? n : 1,
                        a = (r || (t ? .3 : .45)) / (n < 1 ? n : 1),
                        o = a / T * (Math.asin(1 / i) || 0),
                        s = function(e) {
                            return 1 === e ? 1 : i * Math.pow(2, -10 * e) * L((e - o) * a) + 1
                        },
                        u = "out" === t ? s : "in" === t ? function(e) {
                            return 1 - s(1 - e)
                        } : Ot(s);
                    return a = T / a, u.config = function(n, r) {
                        return e(t, n, r)
                    }, u
                },
                Ft = function e(t, n) {
                    void 0 === n && (n = 1.70158);
                    var r = function(e) {
                            return e ? --e * e * ((n + 1) * e + n) + 1 : 0
                        },
                        i = "out" === t ? r : "in" === t ? function(e) {
                            return 1 - r(1 - e)
                        } : Ot(r);
                    return i.config = function(n) {
                        return e(t, n)
                    }, i
                };
            fe("Linear,Quad,Cubic,Quart,Quint,Strong", (function(e, t) {
                var n = t < 5 ? t + 1 : t;
                It(e + ",Power" + (n - 1), t ? function(e) {
                    return Math.pow(e, n)
                } : function(e) {
                    return e
                }, (function(e) {
                    return 1 - Math.pow(1 - e, n)
                }), (function(e) {
                    return e < .5 ? Math.pow(2 * e, n) / 2 : 1 - Math.pow(2 * (1 - e), n) / 2
                }))
            })), At.Linear.easeNone = At.none = At.Linear.easeIn, It("Elastic", Nt("in"), Nt("out"), Nt()), v = 7.5625, g = 1 / (m = 2.75), It("Bounce", (function(e) {
                return 1 - y(1 - e)
            }), y = function(e) {
                return e < g ? v * e * e : e < .7272727272727273 ? v * Math.pow(e - 1.5 / m, 2) + .75 : e < .9090909090909092 ? v * (e -= 2.25 / m) * e + .9375 : v * Math.pow(e - 2.625 / m, 2) + .984375
            }), It("Expo", (function(e) {
                return e ? Math.pow(2, 10 * (e - 1)) : 0
            })), It("Circ", (function(e) {
                return -(E(1 - e * e) - 1)
            })), It("Sine", (function(e) {
                return 1 === e ? 1 : 1 - A(e * M)
            })), It("Back", Ft("in"), Ft("out"), Ft()), At.SteppedEase = At.steps = q.SteppedEase = {
                config: function(e, t) {
                    void 0 === e && (e = 1);
                    var n = 1 / e,
                        r = e + (t ? 0 : 1),
                        i = t ? 1 : 0;
                    return function(e) {
                        return ((r * Ze(0, .99999999, e) | 0) + i) * n
                    }
                }
            }, x.ease = At["quad.out"], fe("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", (function(e) {
                return le += e + "," + e + "Params,"
            }));
            var Ut = function(e, t) {
                    this.id = S++, e._gsap = this, this.target = e, this.harness = t, this.get = t ? t.get : de, this.set = t ? t.getSetter : nn
                },
                Bt = function() {
                    function e(e) {
                        this.vars = e, this._delay = +e.delay || 0, (this._repeat = e.repeat === 1 / 0 ? -2 : e.repeat || 0) && (this._rDelay = e.repeatDelay || 0, this._yoyo = !!e.yoyo || !!e.yoyoEase), this._ts = 1, We(this, +e.duration, 1, 1), this.data = e.data, o && (this._ctx = o, o.data.push(this)), p || St.wake()
                    }
                    var t = e.prototype;
                    return t.delay = function(e) {
                        return e || 0 === e ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + e - this._delay), this._delay = e, this) : this._delay
                    }, t.duration = function(e) {
                        return arguments.length ? this.totalDuration(this._repeat > 0 ? e + (e + this._rDelay) * this._repeat : e) : this.totalDuration() && this._dur
                    }, t.totalDuration = function(e) {
                        return arguments.length ? (this._dirty = 0, We(this, this._repeat < 0 ? e : (e - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur
                    }, t.totalTime = function(e, t) {
                        if (Et(), !arguments.length) return this._tTime;
                        var n = this._dp;
                        if (n && n.smoothChildTiming && this._ts) {
                            for (Fe(this, e), !n._dp || n.parent || Ue(n, this); n && n.parent;) n.parent._time !== n._start + (n._ts >= 0 ? n._tTime / n._ts : (n.totalDuration() - n._tTime) / -n._ts) && n.totalTime(n._tTime, !0), n = n.parent;
                            !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && e < this._tDur || this._ts < 0 && e > 0 || !this._tDur && !e) && Be(this._dp, this, this._start - this._delay)
                        }
                        return (this._tTime !== e || !this._dur && !t || this._initted && Math.abs(this._zTime) === w || !e && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = e), _e(this, e, t)), this
                    }, t.time = function(e, t) {
                        return arguments.length ? this.totalTime(Math.min(this.totalDuration(), e + De(this)) % (this._dur + this._rDelay) || (e ? this._dur : 0), t) : this._time
                    }, t.totalProgress = function(e, t) {
                        return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio
                    }, t.progress = function(e, t) {
                        return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? e : 1 - e) + De(this), t) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio
                    }, t.iteration = function(e, t) {
                        var n = this.duration() + this._rDelay;
                        return arguments.length ? this.totalTime(this._time + (e - 1) * n, t) : this._repeat ? Ie(this._tTime, n) + 1 : 1
                    }, t.timeScale = function(e) {
                        if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
                        if (this._rts === e) return this;
                        var t = this.parent && this._ts ? Oe(this.parent._time, this) : this._tTime;
                        return this._rts = +e || 0, this._ts = this._ps || -1e-8 === e ? 0 : this._rts, this.totalTime(Ze(-Math.abs(this._delay), this._tDur, t), !0), Ne(this),
                            function(e) {
                                for (var t = e.parent; t && t.parent;) t._dirty = 1, t.totalDuration(), t = t.parent;
                                return e
                            }(this)
                    }, t.paused = function(e) {
                        return arguments.length ? (this._ps !== e && (this._ps = e, e ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (Et(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && Math.abs(this._zTime) !== w && (this._tTime -= w)))), this) : this._ps
                    }, t.startTime = function(e) {
                        if (arguments.length) {
                            this._start = e;
                            var t = this.parent || this._dp;
                            return t && (t._sort || !this.parent) && Be(t, this, e - this._delay), this
                        }
                        return this._start
                    }, t.endTime = function(e) {
                        return this._start + (I(e) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1)
                    }, t.rawTime = function(e) {
                        var t = this.parent || this._dp;
                        return t ? e && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? Oe(t.rawTime(e), this) : this._tTime : this._tTime
                    }, t.revert = function(e) {
                        void 0 === e && (e = te);
                        var t = i;
                        return i = e, (this._initted || this._startAt) && (this.timeline && this.timeline.revert(e), this.totalTime(-.01, e.suppressEvents)), "nested" !== this.data && !1 !== e.kill && this.kill(), i = t, this
                    }, t.globalTime = function(e) {
                        for (var t = this, n = arguments.length ? e : t.rawTime(); t;) n = t._start + n / (t._ts || 1), t = t._dp;
                        return !this.parent && this._sat ? this._sat.vars.immediateRender ? -1 : this._sat.globalTime(e) : n
                    }, t.repeat = function(e) {
                        return arguments.length ? (this._repeat = e === 1 / 0 ? -2 : e, je(this)) : -2 === this._repeat ? 1 / 0 : this._repeat
                    }, t.repeatDelay = function(e) {
                        if (arguments.length) {
                            var t = this._time;
                            return this._rDelay = e, je(this), t ? this.time(t) : this
                        }
                        return this._rDelay
                    }, t.yoyo = function(e) {
                        return arguments.length ? (this._yoyo = e, this) : this._yoyo
                    }, t.seek = function(e, t) {
                        return this.totalTime(Xe(this, e), I(t))
                    }, t.restart = function(e, t) {
                        return this.play().totalTime(e ? -this._delay : 0, I(t))
                    }, t.play = function(e, t) {
                        return null != e && this.seek(e, t), this.reversed(!1).paused(!1)
                    }, t.reverse = function(e, t) {
                        return null != e && this.seek(e || this.totalDuration(), t), this.reversed(!0).paused(!1)
                    }, t.pause = function(e, t) {
                        return null != e && this.seek(e, t), this.paused(!0)
                    }, t.resume = function() {
                        return this.paused(!1)
                    }, t.reversed = function(e) {
                        return arguments.length ? (!!e !== this.reversed() && this.timeScale(-this._rts || (e ? -1e-8 : 0)), this) : this._rts < 0
                    }, t.invalidate = function() {
                        return this._initted = this._act = 0, this._zTime = -1e-8, this
                    }, t.isActive = function() {
                        var e, t = this.parent || this._dp,
                            n = this._start;
                        return !(t && !(this._ts && this._initted && t.isActive() && (e = t.rawTime(!0)) >= n && e < this.endTime(!0) - w))
                    }, t.eventCallback = function(e, t, n) {
                        var r = this.vars;
                        return arguments.length > 1 ? (t ? (r[e] = t, n && (r[e + "Params"] = n), "onUpdate" === e && (this._onUpdate = t)) : delete r[e], this) : r[e]
                    }, t.then = function(e) {
                        var t = this;
                        return new Promise((function(n) {
                            var r = R(e) ? e : be,
                                i = function() {
                                    var e = t.then;
                                    t.then = null, R(r) && (r = r(t)) && (r.then || r === t) && (t.then = e), n(r), t.then = e
                                };
                            t._initted && 1 === t.totalProgress() && t._ts >= 0 || !t._tTime && t._ts < 0 ? i() : t._prom = i
                        }))
                    }, t.kill = function() {
                        ft(this)
                    }, e
                }();
            we(Bt.prototype, {
                _time: 0,
                _start: 0,
                _end: 0,
                _tTime: 0,
                _tDur: 0,
                _dirty: 0,
                _repeat: 0,
                _yoyo: !1,
                parent: null,
                _initted: !1,
                _rDelay: 0,
                _ts: 1,
                _dp: 0,
                ratio: 0,
                _zTime: -1e-8,
                _prom: 0,
                _ps: !1,
                _rts: 1
            });
            var zt = function(e) {
                function r(t, r) {
                    var i;
                    return void 0 === t && (t = {}), (i = e.call(this, t) || this).labels = {}, i.smoothChildTiming = !!t.smoothChildTiming, i.autoRemoveChildren = !!t.autoRemoveChildren, i._sort = I(t.sortChildren), s && Be(t.parent || s, n(i), r), t.reversed && i.reverse(), t.paused && i.paused(!0), t.scrollTrigger && ze(n(i), t.scrollTrigger), i
                }
                t(r, e);
                var a = r.prototype;
                return a.to = function(e, t, n) {
                    return Ye(0, arguments, this), this
                }, a.from = function(e, t, n) {
                    return Ye(1, arguments, this), this
                }, a.fromTo = function(e, t, n, r) {
                    return Ye(2, arguments, this), this
                }, a.set = function(e, t, n) {
                    return t.duration = 0, t.parent = this, Ee(t).repeatDelay || (t.repeat = 0), t.immediateRender = !!t.immediateRender, new Jt(e, t, Xe(this, n), 1), this
                }, a.call = function(e, t, n) {
                    return Be(this, Jt.delayedCall(0, e, t), n)
                }, a.staggerTo = function(e, t, n, r, i, a, o) {
                    return n.duration = t, n.stagger = n.stagger || r, n.onComplete = a, n.onCompleteParams = o, n.parent = this, new Jt(e, n, Xe(this, i)), this
                }, a.staggerFrom = function(e, t, n, r, i, a, o) {
                    return n.runBackwards = 1, Ee(n).immediateRender = I(n.immediateRender), this.staggerTo(e, t, n, r, i, a, o)
                }, a.staggerFromTo = function(e, t, n, r, i, a, o, s) {
                    return r.startAt = n, Ee(r).immediateRender = I(r.immediateRender), this.staggerTo(e, t, r, i, a, o, s)
                }, a.render = function(e, t, n) {
                    var r, a, o, u, l, c, h, d, f, p, v, m, g = this._time,
                        y = this._dirty ? this.totalDuration() : this._tDur,
                        _ = this._dur,
                        x = e <= 0 ? 0 : ve(e),
                        b = this._zTime < 0 != e < 0 && (this._initted || !_);
                    if (this !== s && x > y && e >= 0 && (x = y), x !== this._tTime || n || b) {
                        if (g !== this._time && _ && (x += this._time - g, e += this._time - g), r = x, f = this._start, c = !(d = this._ts), b && (_ || (g = this._zTime), (e || !t) && (this._zTime = e)), this._repeat) {
                            if (v = this._yoyo, l = _ + this._rDelay, this._repeat < -1 && e < 0) return this.totalTime(100 * l + e, t, n);
                            if (r = ve(x % l), x === y ? (u = this._repeat, r = _) : ((u = ~~(x / l)) && u === x / l && (r = _, u--), r > _ && (r = _)), p = Ie(this._tTime, l), !g && this._tTime && p !== u && this._tTime - p * l - this._dur <= 0 && (p = u), v && 1 & u && (r = _ - r, m = 1), u !== p && !this._lock) {
                                var T = v && 1 & p,
                                    M = T === (v && 1 & u);
                                if (u < p && (T = !T), g = T ? 0 : _, this._lock = 1, this.render(g || (m ? 0 : ve(u * l)), t, !_)._lock = 0, this._tTime = x, !t && this.parent && dt(this, "onRepeat"), this.vars.repeatRefresh && !m && (this.invalidate()._lock = 1), g && g !== this._time || c !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) return this;
                                if (_ = this._dur, y = this._tDur, M && (this._lock = 2, g = T ? _ : -1e-4, this.render(g, !0), this.vars.repeatRefresh && !m && this.invalidate()), this._lock = 0, !this._ts && !c) return this;
                                Pt(this, m)
                            }
                        }
                        if (this._hasPause && !this._forcing && this._lock < 2 && (h = function(e, t, n) {
                                var r;
                                if (n > t)
                                    for (r = e._first; r && r._start <= n;) {
                                        if ("isPause" === r.data && r._start > t) return r;
                                        r = r._next
                                    } else
                                        for (r = e._last; r && r._start >= n;) {
                                            if ("isPause" === r.data && r._start < t) return r;
                                            r = r._prev
                                        }
                            }(this, ve(g), ve(r)), h && (x -= r - (r = h._start))), this._tTime = x, this._time = r, this._act = !d, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = e, g = 0), !g && r && !t && !u && (dt(this, "onStart"), this._tTime !== x)) return this;
                        if (r >= g && e >= 0)
                            for (a = this._first; a;) {
                                if (o = a._next, (a._act || r >= a._start) && a._ts && h !== a) {
                                    if (a.parent !== this) return this.render(e, t, n);
                                    if (a.render(a._ts > 0 ? (r - a._start) * a._ts : (a._dirty ? a.totalDuration() : a._tDur) + (r - a._start) * a._ts, t, n), r !== this._time || !this._ts && !c) {
                                        h = 0, o && (x += this._zTime = -1e-8);
                                        break
                                    }
                                }
                                a = o
                            } else {
                                a = this._last;
                                for (var S = e < 0 ? e : r; a;) {
                                    if (o = a._prev, (a._act || S <= a._end) && a._ts && h !== a) {
                                        if (a.parent !== this) return this.render(e, t, n);
                                        if (a.render(a._ts > 0 ? (S - a._start) * a._ts : (a._dirty ? a.totalDuration() : a._tDur) + (S - a._start) * a._ts, t, n || i && (a._initted || a._startAt)), r !== this._time || !this._ts && !c) {
                                            h = 0, o && (x += this._zTime = S ? -1e-8 : w);
                                            break
                                        }
                                    }
                                    a = o
                                }
                            }
                        if (h && !t && (this.pause(), h.render(r >= g ? 0 : -1e-8)._zTime = r >= g ? 1 : -1, this._ts)) return this._start = f, Ne(this), this.render(e, t, n);
                        this._onUpdate && !t && dt(this, "onUpdate", !0), (x === y && this._tTime >= this.totalDuration() || !x && g) && (f !== this._start && Math.abs(d) === Math.abs(this._ts) || this._lock || ((e || !_) && (x === y && this._ts > 0 || !x && this._ts < 0) && Ce(this, 1), t || e < 0 && !g || !x && !g && y || (dt(this, x === y && e >= 0 ? "onComplete" : "onReverseComplete", !0), this._prom && !(x < y && this.timeScale() > 0) && this._prom())))
                    }
                    return this
                }, a.add = function(e, t) {
                    var n = this;
                    if (k(t) || (t = Xe(this, t, e)), !(e instanceof Bt)) {
                        if (U(e)) return e.forEach((function(e) {
                            return n.add(e, t)
                        })), this;
                        if (C(e)) return this.addLabel(e, t);
                        if (!R(e)) return this;
                        e = Jt.delayedCall(0, e)
                    }
                    return this !== e ? Be(this, e, t) : this
                }, a.getChildren = function(e, t, n, r) {
                    void 0 === e && (e = !0), void 0 === t && (t = !0), void 0 === n && (n = !0), void 0 === r && (r = -b);
                    for (var i = [], a = this._first; a;) a._start >= r && (a instanceof Jt ? t && i.push(a) : (n && i.push(a), e && i.push.apply(i, a.getChildren(!0, t, n)))), a = a._next;
                    return i
                }, a.getById = function(e) {
                    for (var t = this.getChildren(1, 1, 1), n = t.length; n--;)
                        if (t[n].vars.id === e) return t[n]
                }, a.remove = function(e) {
                    return C(e) ? this.removeLabel(e) : R(e) ? this.killTweensOf(e) : (Le(this, e), e === this._recent && (this._recent = this._last), Re(this))
                }, a.totalTime = function(t, n) {
                    return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = ve(St.time - (this._ts > 0 ? t / this._ts : (this.totalDuration() - t) / -this._ts))), e.prototype.totalTime.call(this, t, n), this._forcing = 0, this) : this._tTime
                }, a.addLabel = function(e, t) {
                    return this.labels[e] = Xe(this, t), this
                }, a.removeLabel = function(e) {
                    return delete this.labels[e], this
                }, a.addPause = function(e, t, n) {
                    var r = Jt.delayedCall(0, t || Q, n);
                    return r.data = "isPause", this._hasPause = 1, Be(this, r, Xe(this, e))
                }, a.removePause = function(e) {
                    var t = this._first;
                    for (e = Xe(this, e); t;) t._start === e && "isPause" === t.data && Ce(t), t = t._next
                }, a.killTweensOf = function(e, t, n) {
                    for (var r = this.getTweensOf(e, n), i = r.length; i--;) Gt !== r[i] && r[i].kill(e, t);
                    return this
                }, a.getTweensOf = function(e, t) {
                    for (var n, r = [], i = tt(e), a = this._first, o = k(t); a;) a instanceof Jt ? ge(a._targets, i) && (o ? (!Gt || a._initted && a._ts) && a.globalTime(0) <= t && a.globalTime(a.totalDuration()) > t : !t || a.isActive()) && r.push(a) : (n = a.getTweensOf(i, t)).length && r.push.apply(r, n), a = a._next;
                    return r
                }, a.tweenTo = function(e, t) {
                    t = t || {};
                    var n, r = this,
                        i = Xe(r, e),
                        a = t,
                        o = a.startAt,
                        s = a.onStart,
                        u = a.onStartParams,
                        l = a.immediateRender,
                        c = Jt.to(r, we({
                            ease: t.ease || "none",
                            lazy: !1,
                            immediateRender: !1,
                            time: i,
                            overwrite: "auto",
                            duration: t.duration || Math.abs((i - (o && "time" in o ? o.time : r._time)) / r.timeScale()) || w,
                            onStart: function() {
                                if (r.pause(), !n) {
                                    var e = t.duration || Math.abs((i - (o && "time" in o ? o.time : r._time)) / r.timeScale());
                                    c._dur !== e && We(c, e, 0, 1).render(c._time, !0, !0), n = 1
                                }
                                s && s.apply(c, u || [])
                            }
                        }, t));
                    return l ? c.render(0) : c
                }, a.tweenFromTo = function(e, t, n) {
                    return this.tweenTo(t, we({
                        startAt: {
                            time: Xe(this, e)
                        }
                    }, n))
                }, a.recent = function() {
                    return this._recent
                }, a.nextLabel = function(e) {
                    return void 0 === e && (e = this._time), ht(this, Xe(this, e))
                }, a.previousLabel = function(e) {
                    return void 0 === e && (e = this._time), ht(this, Xe(this, e), 1)
                }, a.currentLabel = function(e) {
                    return arguments.length ? this.seek(e, !0) : this.previousLabel(this._time + w)
                }, a.shiftChildren = function(e, t, n) {
                    void 0 === n && (n = 0);
                    for (var r, i = this._first, a = this.labels; i;) i._start >= n && (i._start += e, i._end += e), i = i._next;
                    if (t)
                        for (r in a) a[r] >= n && (a[r] += e);
                    return Re(this)
                }, a.invalidate = function(t) {
                    var n = this._first;
                    for (this._lock = 0; n;) n.invalidate(t), n = n._next;
                    return e.prototype.invalidate.call(this, t)
                }, a.clear = function(e) {
                    void 0 === e && (e = !0);
                    for (var t, n = this._first; n;) t = n._next, this.remove(n), n = t;
                    return this._dp && (this._time = this._tTime = this._pTime = 0), e && (this.labels = {}), Re(this)
                }, a.totalDuration = function(e) {
                    var t, n, r, i = 0,
                        a = this,
                        o = a._last,
                        u = b;
                    if (arguments.length) return a.timeScale((a._repeat < 0 ? a.duration() : a.totalDuration()) / (a.reversed() ? -e : e));
                    if (a._dirty) {
                        for (r = a.parent; o;) t = o._prev, o._dirty && o.totalDuration(), (n = o._start) > u && a._sort && o._ts && !a._lock ? (a._lock = 1, Be(a, o, n - o._delay, 1)._lock = 0) : u = n, n < 0 && o._ts && (i -= n, (!r && !a._dp || r && r.smoothChildTiming) && (a._start += n / a._ts, a._time -= n, a._tTime -= n), a.shiftChildren(-n, !1, -Infinity), u = 0), o._end > i && o._ts && (i = o._end), o = t;
                        We(a, a === s && a._time > i ? a._time : i, 1, 1), a._dirty = 0
                    }
                    return a._tDur
                }, r.updateRoot = function(e) {
                    if (s._ts && (_e(s, Oe(e, s)), d = St.frame), St.frame >= se) {
                        se += _.autoSleep || 120;
                        var t = s._first;
                        if ((!t || !t._ts) && _.autoSleep && St._listeners.length < 2) {
                            for (; t && !t._ts;) t = t._next;
                            t || St.sleep()
                        }
                    }
                }, r
            }(Bt);
            we(zt.prototype, {
                _lock: 0,
                _hasPause: 0,
                _forcing: 0
            });
            var Gt, Ht, Vt = function(e, t, n, r, i, a, o) {
                    var s, u, l, c, h, d, f, p, v = new dn(this._pt, e, t, 0, 1, on, null, i),
                        m = 0,
                        g = 0;
                    for (v.b = n, v.e = r, n += "", (f = ~(r += "").indexOf("random(")) && (r = lt(r)), a && (a(p = [n, r], e, t), n = p[0], r = p[1]), u = n.match(H) || []; s = H.exec(r);) c = s[0], h = r.substring(m, s.index), l ? l = (l + 1) % 5 : "rgba(" === h.substr(-5) && (l = 1), c !== u[g++] && (d = parseFloat(u[g - 1]) || 0, v._pt = {
                        _next: v._pt,
                        p: h || 1 === g ? h : ",",
                        s: d,
                        c: "=" === c.charAt(1) ? me(d, c) - d : parseFloat(c) - d,
                        m: l && l < 4 ? Math.round : 0
                    }, m = H.lastIndex);
                    return v.c = m < r.length ? r.substring(m, r.length) : "", v.fp = o, (V.test(r) || f) && (v.e = 0), this._pt = v, v
                },
                Wt = function(e, t, n, r, i, a, o, s, u, l) {
                    R(r) && (r = r(i || 0, e, a));
                    var c, h = e[t],
                        d = "get" !== n ? n : R(h) ? u ? e[t.indexOf("set") || !R(e["get" + t.substr(3)]) ? t : "get" + t.substr(3)](u) : e[t]() : h,
                        f = R(h) ? u ? en : $t : Qt;
                    if (C(r) && (~r.indexOf("random(") && (r = lt(r)), "=" === r.charAt(1) && ((c = me(d, r) + (Je(d) || 0)) || 0 === c) && (r = c)), !l || d !== r || Ht) return isNaN(d * r) || "" === r ? (!h && !(t in e) && K(t, r), Vt.call(this, e, t, d, r, f, s || _.stringFilter, u)) : (c = new dn(this._pt, e, t, +d || 0, r - (d || 0), "boolean" == typeof h ? an : rn, 0, f), u && (c.fp = u), o && c.modifier(o, this, e), this._pt = c)
                },
                jt = function(e, t, n, r, i, a) {
                    var o, s, u, l;
                    if (ae[e] && !1 !== (o = new ae[e]).init(i, o.rawVars ? t[e] : function(e, t, n, r, i) {
                            if (R(e) && (e = Yt(e, i, t, n, r)), !D(e) || e.style && e.nodeType || U(e) || F(e)) return C(e) ? Yt(e, i, t, n, r) : e;
                            var a, o = {};
                            for (a in e) o[a] = Yt(e[a], i, t, n, r);
                            return o
                        }(t[e], r, i, a, n), n, r, a) && (n._pt = s = new dn(n._pt, i, e, 0, 1, o.render, o, 0, o.priority), n !== f))
                        for (u = n._ptLookup[n._targets.indexOf(i)], l = o._props.length; l--;) u[o._props[l]] = s;
                    return o
                },
                qt = function e(t, n, a) {
                    var o, u, l, c, h, d, f, p, v, m, g, y, _, T = t.vars,
                        M = T.ease,
                        S = T.startAt,
                        E = T.immediateRender,
                        A = T.lazy,
                        L = T.onUpdate,
                        C = T.onUpdateParams,
                        R = T.callbackScope,
                        k = T.runBackwards,
                        P = T.yoyoEase,
                        D = T.keyframes,
                        O = T.autoRevert,
                        N = t._dur,
                        F = t._startAt,
                        U = t._targets,
                        B = t.parent,
                        z = B && "nested" === B.data ? B.vars.targets : U,
                        G = "auto" === t._overwrite && !r,
                        H = t.timeline;
                    if (H && (!D || !M) && (M = "none"), t._ease = Dt(M, x.ease), t._yEase = P ? kt(Dt(!0 === P ? M : P, x.ease)) : 0, P && t._yoyo && !t._repeat && (P = t._yEase, t._yEase = t._ease, t._ease = P), t._from = !H && !!T.runBackwards, !H || D && !T.stagger) {
                        if (y = (p = U[0] ? he(U[0]).harness : 0) && T[p.prop], o = Se(T, ne), F && (F._zTime < 0 && F.progress(1), n < 0 && k && E && !O ? F.render(-1, !0) : F.revert(k && N ? ee : $), F._lazy = 0), S) {
                            if (Ce(t._startAt = Jt.set(U, we({
                                    data: "isStart",
                                    overwrite: !1,
                                    parent: B,
                                    immediateRender: !0,
                                    lazy: !F && I(A),
                                    startAt: null,
                                    delay: 0,
                                    onUpdate: L,
                                    onUpdateParams: C,
                                    callbackScope: R,
                                    stagger: 0
                                }, S))), t._startAt._dp = 0, t._startAt._sat = t, n < 0 && (i || !E && !O) && t._startAt.revert(ee), E && N && n <= 0 && a <= 0) return void(n && (t._zTime = n))
                        } else if (k && N && !F)
                            if (n && (E = !1), l = we({
                                    overwrite: !1,
                                    data: "isFromStart",
                                    lazy: E && !F && I(A),
                                    immediateRender: E,
                                    stagger: 0,
                                    parent: B
                                }, o), y && (l[p.prop] = y), Ce(t._startAt = Jt.set(U, l)), t._startAt._dp = 0, t._startAt._sat = t, n < 0 && (i ? t._startAt.revert(ee) : t._startAt.render(-1, !0)), t._zTime = n, E) {
                                if (!n) return
                            } else e(t._startAt, w, w);
                        for (t._pt = t._ptCache = 0, A = N && I(A) || A && !N, u = 0; u < U.length; u++) {
                            if (f = (h = U[u])._gsap || ce(U)[u]._gsap, t._ptLookup[u] = m = {}, ie[f.id] && re.length && ye(), g = z === U ? u : z.indexOf(h), p && !1 !== (v = new p).init(h, y || o, t, g, z) && (t._pt = c = new dn(t._pt, h, v.name, 0, 1, v.render, v, 0, v.priority), v._props.forEach((function(e) {
                                    m[e] = c
                                })), v.priority && (d = 1)), !p || y)
                                for (l in o) ae[l] && (v = jt(l, o, t, g, h, z)) ? v.priority && (d = 1) : m[l] = c = Wt.call(t, h, l, "get", o[l], g, z, 0, T.stringFilter);
                            t._op && t._op[u] && t.kill(h, t._op[u]), G && t._pt && (Gt = t, s.killTweensOf(h, m, t.globalTime(n)), _ = !t.parent, Gt = 0), t._pt && A && (ie[f.id] = 1)
                        }
                        d && hn(t), t._onInit && t._onInit(t)
                    }
                    t._onUpdate = L, t._initted = (!t._op || t._pt) && !_, D && n <= 0 && H.render(b, !0, !0)
                },
                Xt = function(e, t, n, r) {
                    var i, a, o = t.ease || r || "power1.inOut";
                    if (U(t)) a = n[e] || (n[e] = []), t.forEach((function(e, n) {
                        return a.push({
                            t: n / (t.length - 1) * 100,
                            v: e,
                            e: o
                        })
                    }));
                    else
                        for (i in t) a = n[i] || (n[i] = []), "ease" === i || a.push({
                            t: parseFloat(e),
                            v: t[i],
                            e: o
                        })
                },
                Yt = function(e, t, n, r, i) {
                    return R(e) ? e.call(t, n, r, i) : C(e) && ~e.indexOf("random(") ? lt(e) : e
                },
                Kt = le + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
                Zt = {};
            fe(Kt + ",id,stagger,delay,duration,paused,scrollTrigger", (function(e) {
                return Zt[e] = 1
            }));
            var Jt = function(e) {
                function a(t, i, a, o) {
                    var u;
                    "number" == typeof i && (a.duration = i, i = a, a = null);
                    var l, c, h, d, f, p, v, m, g = (u = e.call(this, o ? i : Ee(i)) || this).vars,
                        y = g.duration,
                        x = g.delay,
                        b = g.immediateRender,
                        w = g.stagger,
                        T = g.overwrite,
                        M = g.keyframes,
                        S = g.defaults,
                        E = g.scrollTrigger,
                        A = g.yoyoEase,
                        L = i.parent || s,
                        C = (U(t) || F(t) ? k(t[0]) : "length" in i) ? [t] : tt(t);
                    if (u._targets = C.length ? ce(C) : Z("GSAP target " + t + " not found. https://greensock.com", !_.nullTargetWarn) || [], u._ptLookup = [], u._overwrite = T, M || w || N(y) || N(x)) {
                        if (i = u.vars, (l = u.timeline = new zt({
                                data: "nested",
                                defaults: S || {},
                                targets: L && "nested" === L.data ? L.vars.targets : C
                            })).kill(), l.parent = l._dp = n(u), l._start = 0, w || N(y) || N(x)) {
                            if (d = C.length, v = w && it(w), D(w))
                                for (f in w) ~Kt.indexOf(f) && (m || (m = {}), m[f] = w[f]);
                            for (c = 0; c < d; c++)(h = Se(i, Zt)).stagger = 0, A && (h.yoyoEase = A), m && Te(h, m), p = C[c], h.duration = +Yt(y, n(u), c, p, C), h.delay = (+Yt(x, n(u), c, p, C) || 0) - u._delay, !w && 1 === d && h.delay && (u._delay = x = h.delay, u._start += x, h.delay = 0), l.to(p, h, v ? v(c, p, C) : 0), l._ease = At.none;
                            l.duration() ? y = x = 0 : u.timeline = 0
                        } else if (M) {
                            Ee(we(l.vars.defaults, {
                                ease: "none"
                            })), l._ease = Dt(M.ease || i.ease || "none");
                            var R, P, O, B = 0;
                            if (U(M)) M.forEach((function(e) {
                                return l.to(C, e, ">")
                            })), l.duration();
                            else {
                                for (f in h = {}, M) "ease" === f || "easeEach" === f || Xt(f, M[f], h, M.easeEach);
                                for (f in h)
                                    for (R = h[f].sort((function(e, t) {
                                            return e.t - t.t
                                        })), B = 0, c = 0; c < R.length; c++)(O = {
                                        ease: (P = R[c]).e,
                                        duration: (P.t - (c ? R[c - 1].t : 0)) / 100 * y
                                    })[f] = P.v, l.to(C, O, B), B += O.duration;
                                l.duration() < y && l.to({}, {
                                    duration: y - l.duration()
                                })
                            }
                        }
                        y || u.duration(y = l.duration())
                    } else u.timeline = 0;
                    return !0 !== T || r || (Gt = n(u), s.killTweensOf(C), Gt = 0), Be(L, n(u), a), i.reversed && u.reverse(), i.paused && u.paused(!0), (b || !y && !M && u._start === ve(L._time) && I(b) && Pe(n(u)) && "nested" !== L.data) && (u._tTime = -1e-8, u.render(Math.max(0, -x) || 0)), E && ze(n(u), E), u
                }
                t(a, e);
                var o = a.prototype;
                return o.render = function(e, t, n) {
                    var r, a, o, s, u, l, c, h, d, f = this._time,
                        p = this._tDur,
                        v = this._dur,
                        m = e < 0,
                        g = e > p - w && !m ? p : e < w ? 0 : e;
                    if (v) {
                        if (g !== this._tTime || !e || n || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== m) {
                            if (r = g, h = this.timeline, this._repeat) {
                                if (s = v + this._rDelay, this._repeat < -1 && m) return this.totalTime(100 * s + e, t, n);
                                if (r = ve(g % s), g === p ? (o = this._repeat, r = v) : ((o = ~~(g / s)) && o === g / s && (r = v, o--), r > v && (r = v)), (l = this._yoyo && 1 & o) && (d = this._yEase, r = v - r), u = Ie(this._tTime, s), r === f && !n && this._initted) return this._tTime = g, this;
                                o !== u && (h && this._yEase && Pt(h, l), !this.vars.repeatRefresh || l || this._lock || (this._lock = n = 1, this.render(ve(s * o), !0).invalidate()._lock = 0))
                            }
                            if (!this._initted) {
                                if (Ge(this, m ? e : r, n, t, g)) return this._tTime = 0, this;
                                if (f !== this._time) return this;
                                if (v !== this._dur) return this.render(e, t, n)
                            }
                            if (this._tTime = g, this._time = r, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = c = (d || this._ease)(r / v), this._from && (this.ratio = c = 1 - c), r && !f && !t && !o && (dt(this, "onStart"), this._tTime !== g)) return this;
                            for (a = this._pt; a;) a.r(c, a.d), a = a._next;
                            h && h.render(e < 0 ? e : !r && l ? -1e-8 : h._dur * h._ease(r / this._dur), t, n) || this._startAt && (this._zTime = e), this._onUpdate && !t && (m && ke(this, e, 0, n), dt(this, "onUpdate")), this._repeat && o !== u && this.vars.onRepeat && !t && this.parent && dt(this, "onRepeat"), g !== this._tDur && g || this._tTime !== g || (m && !this._onUpdate && ke(this, e, 0, !0), (e || !v) && (g === this._tDur && this._ts > 0 || !g && this._ts < 0) && Ce(this, 1), t || m && !f || !(g || f || l) || (dt(this, g === p ? "onComplete" : "onReverseComplete", !0), this._prom && !(g < p && this.timeScale() > 0) && this._prom()))
                        }
                    } else ! function(e, t, n, r) {
                        var a, o, s, u = e.ratio,
                            l = t < 0 || !t && (!e._start && He(e) && (e._initted || !Ve(e)) || (e._ts < 0 || e._dp._ts < 0) && !Ve(e)) ? 0 : 1,
                            c = e._rDelay,
                            h = 0;
                        if (c && e._repeat && (h = Ze(0, e._tDur, t), o = Ie(h, c), e._yoyo && 1 & o && (l = 1 - l), o !== Ie(e._tTime, c) && (u = 1 - l, e.vars.repeatRefresh && e._initted && e.invalidate())), l !== u || i || r || e._zTime === w || !t && e._zTime) {
                            if (!e._initted && Ge(e, t, r, n, h)) return;
                            for (s = e._zTime, e._zTime = t || (n ? w : 0), n || (n = t && !s), e.ratio = l, e._from && (l = 1 - l), e._time = 0, e._tTime = h, a = e._pt; a;) a.r(l, a.d), a = a._next;
                            t < 0 && ke(e, t, 0, !0), e._onUpdate && !n && dt(e, "onUpdate"), h && e._repeat && !n && e.parent && dt(e, "onRepeat"), (t >= e._tDur || t < 0) && e.ratio === l && (l && Ce(e, 1), n || i || (dt(e, l ? "onComplete" : "onReverseComplete", !0), e._prom && e._prom()))
                        } else e._zTime || (e._zTime = t)
                    }(this, e, t, n);
                    return this
                }, o.targets = function() {
                    return this._targets
                }, o.invalidate = function(t) {
                    return (!t || !this.vars.runBackwards) && (this._startAt = 0), this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(t), e.prototype.invalidate.call(this, t)
                }, o.resetTo = function(e, t, n, r) {
                    p || St.wake(), this._ts || this.play();
                    var i = Math.min(this._dur, (this._dp._time - this._start) * this._ts);
                    return this._initted || qt(this, i),
                        function(e, t, n, r, i, a, o) {
                            var s, u, l, c, h = (e._pt && e._ptCache || (e._ptCache = {}))[t];
                            if (!h)
                                for (h = e._ptCache[t] = [], l = e._ptLookup, c = e._targets.length; c--;) {
                                    if ((s = l[c][t]) && s.d && s.d._pt)
                                        for (s = s.d._pt; s && s.p !== t && s.fp !== t;) s = s._next;
                                    if (!s) return Ht = 1, e.vars[t] = "+=0", qt(e, o), Ht = 0, 1;
                                    h.push(s)
                                }
                            for (c = h.length; c--;)(s = (u = h[c])._pt || u).s = !r && 0 !== r || i ? s.s + (r || 0) + a * s.c : r, s.c = n - s.s, u.e && (u.e = pe(n) + Je(u.e)), u.b && (u.b = s.s + Je(u.b))
                        }(this, e, t, n, r, this._ease(i / this._dur), i) ? this.resetTo(e, t, n, r) : (Fe(this, 0), this.parent || Ae(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0), this.render(0))
                }, o.kill = function(e, t) {
                    if (void 0 === t && (t = "all"), !(e || t && "all" !== t)) return this._lazy = this._pt = 0, this.parent ? ft(this) : this;
                    if (this.timeline) {
                        var n = this.timeline.totalDuration();
                        return this.timeline.killTweensOf(e, t, Gt && !0 !== Gt.vars.overwrite)._first || ft(this), this.parent && n !== this.timeline.totalDuration() && We(this, this._dur * this.timeline._tDur / n, 0, 1), this
                    }
                    var r, i, a, o, s, u, l, c = this._targets,
                        h = e ? tt(e) : c,
                        d = this._ptLookup,
                        f = this._pt;
                    if ((!t || "all" === t) && function(e, t) {
                            for (var n = e.length, r = n === t.length; r && n-- && e[n] === t[n];);
                            return n < 0
                        }(c, h)) return "all" === t && (this._pt = 0), ft(this);
                    for (r = this._op = this._op || [], "all" !== t && (C(t) && (s = {}, fe(t, (function(e) {
                            return s[e] = 1
                        })), t = s), t = function(e, t) {
                            var n, r, i, a, o = e[0] ? he(e[0]).harness : 0,
                                s = o && o.aliases;
                            if (!s) return t;
                            for (r in n = Te({}, t), s)
                                if (r in n)
                                    for (i = (a = s[r].split(",")).length; i--;) n[a[i]] = n[r];
                            return n
                        }(c, t)), l = c.length; l--;)
                        if (~h.indexOf(c[l]))
                            for (s in i = d[l], "all" === t ? (r[l] = t, o = i, a = {}) : (a = r[l] = r[l] || {}, o = t), o)(u = i && i[s]) && ("kill" in u.d && !0 !== u.d.kill(s) || Le(this, u, "_pt"), delete i[s]), "all" !== a && (a[s] = 1);
                    return this._initted && !this._pt && f && ft(this), this
                }, a.to = function(e, t) {
                    return new a(e, t, arguments[2])
                }, a.from = function(e, t) {
                    return Ye(1, arguments)
                }, a.delayedCall = function(e, t, n, r) {
                    return new a(t, 0, {
                        immediateRender: !1,
                        lazy: !1,
                        overwrite: !1,
                        delay: e,
                        onComplete: t,
                        onReverseComplete: t,
                        onCompleteParams: n,
                        onReverseCompleteParams: n,
                        callbackScope: r
                    })
                }, a.fromTo = function(e, t, n) {
                    return Ye(2, arguments)
                }, a.set = function(e, t) {
                    return t.duration = 0, t.repeatDelay || (t.repeat = 0), new a(e, t)
                }, a.killTweensOf = function(e, t, n) {
                    return s.killTweensOf(e, t, n)
                }, a
            }(Bt);
            we(Jt.prototype, {
                _targets: [],
                _lazy: 0,
                _startAt: 0,
                _op: 0,
                _onInit: 0
            }), fe("staggerTo,staggerFrom,staggerFromTo", (function(e) {
                Jt[e] = function() {
                    var t = new zt,
                        n = Qe.call(arguments, 0);
                    return n.splice("staggerFromTo" === e ? 5 : 4, 0, 0), t[e].apply(t, n)
                }
            }));
            var Qt = function(e, t, n) {
                    return e[t] = n
                },
                $t = function(e, t, n) {
                    return e[t](n)
                },
                en = function(e, t, n, r) {
                    return e[t](r.fp, n)
                },
                tn = function(e, t, n) {
                    return e.setAttribute(t, n)
                },
                nn = function(e, t) {
                    return R(e[t]) ? $t : P(e[t]) && e.setAttribute ? tn : Qt
                },
                rn = function(e, t) {
                    return t.set(t.t, t.p, Math.round(1e6 * (t.s + t.c * e)) / 1e6, t)
                },
                an = function(e, t) {
                    return t.set(t.t, t.p, !!(t.s + t.c * e), t)
                },
                on = function(e, t) {
                    var n = t._pt,
                        r = "";
                    if (!e && t.b) r = t.b;
                    else if (1 === e && t.e) r = t.e;
                    else {
                        for (; n;) r = n.p + (n.m ? n.m(n.s + n.c * e) : Math.round(1e4 * (n.s + n.c * e)) / 1e4) + r, n = n._next;
                        r += t.c
                    }
                    t.set(t.t, t.p, r, t)
                },
                sn = function(e, t) {
                    for (var n = t._pt; n;) n.r(e, n.d), n = n._next
                },
                un = function(e, t, n, r) {
                    for (var i, a = this._pt; a;) i = a._next, a.p === r && a.modifier(e, t, n), a = i
                },
                ln = function(e) {
                    for (var t, n, r = this._pt; r;) n = r._next, r.p === e && !r.op || r.op === e ? Le(this, r, "_pt") : r.dep || (t = 1), r = n;
                    return !t
                },
                cn = function(e, t, n, r) {
                    r.mSet(e, t, r.m.call(r.tween, n, r.mt), r)
                },
                hn = function(e) {
                    for (var t, n, r, i, a = e._pt; a;) {
                        for (t = a._next, n = r; n && n.pr > a.pr;) n = n._next;
                        (a._prev = n ? n._prev : i) ? a._prev._next = a: r = a, (a._next = n) ? n._prev = a : i = a, a = t
                    }
                    e._pt = r
                },
                dn = function() {
                    function e(e, t, n, r, i, a, o, s, u) {
                        this.t = t, this.s = r, this.c = i, this.p = n, this.r = a || rn, this.d = o || this, this.set = s || Qt, this.pr = u || 0, this._next = e, e && (e._prev = this)
                    }
                    return e.prototype.modifier = function(e, t, n) {
                        this.mSet = this.mSet || this.set, this.set = cn, this.m = e, this.mt = n, this.tween = t
                    }, e
                }();
            fe(le + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", (function(e) {
                return ne[e] = 1
            })), q.TweenMax = q.TweenLite = Jt, q.TimelineLite = q.TimelineMax = zt, s = new zt({
                sortChildren: !1,
                defaults: x,
                autoRemoveChildren: !0,
                id: "root",
                smoothChildTiming: !0
            }), _.stringFilter = Mt;
            var fn = [],
                pn = {},
                vn = [],
                mn = 0,
                gn = function(e) {
                    return (pn[e] || vn).map((function(e) {
                        return e()
                    }))
                },
                yn = function() {
                    var e = Date.now(),
                        t = [];
                    e - mn > 2 && (gn("matchMediaInit"), fn.forEach((function(e) {
                        var n, r, i, a, o = e.queries,
                            s = e.conditions;
                        for (r in o)(n = u.matchMedia(o[r]).matches) && (i = 1), n !== s[r] && (s[r] = n, a = 1);
                        a && (e.revert(), i && t.push(e))
                    })), gn("matchMediaRevert"), t.forEach((function(e) {
                        return e.onMatch(e)
                    })), mn = e, gn("matchMedia"))
                },
                _n = function() {
                    function e(e, t) {
                        this.selector = t && nt(t), this.data = [], this._r = [], this.isReverted = !1, e && this.add(e)
                    }
                    var t = e.prototype;
                    return t.add = function(e, t, n) {
                        R(e) && (n = t, t = e, e = R);
                        var r = this,
                            i = function() {
                                var e, i = o,
                                    a = r.selector;
                                return i && i !== r && i.data.push(r), n && (r.selector = nt(n)), o = r, e = t.apply(r, arguments), R(e) && r._r.push(e), o = i, r.selector = a, r.isReverted = !1, e
                            };
                        return r.last = i, e === R ? i(r) : e ? r[e] = i : i
                    }, t.ignore = function(e) {
                        var t = o;
                        o = null, e(this), o = t
                    }, t.getTweens = function() {
                        var t = [];
                        return this.data.forEach((function(n) {
                            return n instanceof e ? t.push.apply(t, n.getTweens()) : n instanceof Jt && !(n.parent && "nested" === n.parent.data) && t.push(n)
                        })), t
                    }, t.clear = function() {
                        this._r.length = this.data.length = 0
                    }, t.kill = function(e, t) {
                        var n = this;
                        if (e) {
                            var r = this.getTweens();
                            this.data.forEach((function(e) {
                                "isFlip" === e.data && (e.revert(), e.getChildren(!0, !0, !1).forEach((function(e) {
                                    return r.splice(r.indexOf(e), 1)
                                })))
                            })), r.map((function(e) {
                                return {
                                    g: e.globalTime(0),
                                    t: e
                                }
                            })).sort((function(e, t) {
                                return t.g - e.g || -1
                            })).forEach((function(t) {
                                return t.t.revert(e)
                            })), this.data.forEach((function(t) {
                                return !(t instanceof Bt) && t.revert && t.revert(e)
                            })), this._r.forEach((function(t) {
                                return t(e, n)
                            })), this.isReverted = !0
                        } else this.data.forEach((function(e) {
                            return e.kill && e.kill()
                        }));
                        if (this.clear(), t) {
                            var i = fn.indexOf(this);
                            ~i && fn.splice(i, 1)
                        }
                    }, t.revert = function(e) {
                        this.kill(e || {})
                    }, e
                }(),
                xn = function() {
                    function e(e) {
                        this.contexts = [], this.scope = e
                    }
                    var t = e.prototype;
                    return t.add = function(e, t, n) {
                        D(e) || (e = {
                            matches: e
                        });
                        var r, i, a, o = new _n(0, n || this.scope),
                            s = o.conditions = {};
                        for (i in this.contexts.push(o), t = o.add("onMatch", t), o.queries = e, e) "all" === i ? a = 1 : (r = u.matchMedia(e[i])) && (fn.indexOf(o) < 0 && fn.push(o), (s[i] = r.matches) && (a = 1), r.addListener ? r.addListener(yn) : r.addEventListener("change", yn));
                        return a && t(o), this
                    }, t.revert = function(e) {
                        this.kill(e || {})
                    }, t.kill = function(e) {
                        this.contexts.forEach((function(t) {
                            return t.kill(e, !0)
                        }))
                    }, e
                }(),
                bn = {
                    registerPlugin: function() {
                        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                        t.forEach((function(e) {
                            return vt(e)
                        }))
                    },
                    timeline: function(e) {
                        return new zt(e)
                    },
                    getTweensOf: function(e, t) {
                        return s.getTweensOf(e, t)
                    },
                    getProperty: function(e, t, n, r) {
                        C(e) && (e = tt(e)[0]);
                        var i = he(e || {}).get,
                            a = n ? be : xe;
                        return "native" === n && (n = ""), e ? t ? a((ae[t] && ae[t].get || i)(e, t, n, r)) : function(t, n, r) {
                            return a((ae[t] && ae[t].get || i)(e, t, n, r))
                        } : e
                    },
                    quickSetter: function(e, t, n) {
                        if ((e = tt(e)).length > 1) {
                            var r = e.map((function(e) {
                                    return Mn.quickSetter(e, t, n)
                                })),
                                i = r.length;
                            return function(e) {
                                for (var t = i; t--;) r[t](e)
                            }
                        }
                        e = e[0] || {};
                        var a = ae[t],
                            o = he(e),
                            s = o.harness && (o.harness.aliases || {})[t] || t,
                            u = a ? function(t) {
                                var r = new a;
                                f._pt = 0, r.init(e, n ? t + n : t, f, 0, [e]), r.render(1, r), f._pt && sn(1, f)
                            } : o.set(e, s);
                        return a ? u : function(t) {
                            return u(e, s, n ? t + n : t, o, 1)
                        }
                    },
                    quickTo: function(e, t, n) {
                        var r, i = Mn.to(e, Te(((r = {})[t] = "+=0.1", r.paused = !0, r), n || {})),
                            a = function(e, n, r) {
                                return i.resetTo(t, e, n, r)
                            };
                        return a.tween = i, a
                    },
                    isTweening: function(e) {
                        return s.getTweensOf(e, !0).length > 0
                    },
                    defaults: function(e) {
                        return e && e.ease && (e.ease = Dt(e.ease, x.ease)), Me(x, e || {})
                    },
                    config: function(e) {
                        return Me(_, e || {})
                    },
                    registerEffect: function(e) {
                        var t = e.name,
                            n = e.effect,
                            r = e.plugins,
                            i = e.defaults,
                            a = e.extendTimeline;
                        (r || "").split(",").forEach((function(e) {
                            return e && !ae[e] && !q[e] && Z(t + " effect requires " + e + " plugin.")
                        })), oe[t] = function(e, t, r) {
                            return n(tt(e), we(t || {}, i), r)
                        }, a && (zt.prototype[t] = function(e, n, r) {
                            return this.add(oe[t](e, D(n) ? n : (r = n) && {}, this), r)
                        })
                    },
                    registerEase: function(e, t) {
                        At[e] = Dt(t)
                    },
                    parseEase: function(e, t) {
                        return arguments.length ? Dt(e, t) : At
                    },
                    getById: function(e) {
                        return s.getById(e)
                    },
                    exportRoot: function(e, t) {
                        void 0 === e && (e = {});
                        var n, r, i = new zt(e);
                        for (i.smoothChildTiming = I(e.smoothChildTiming), s.remove(i), i._dp = 0, i._time = i._tTime = s._time, n = s._first; n;) r = n._next, !t && !n._dur && n instanceof Jt && n.vars.onComplete === n._targets[0] || Be(i, n, n._start - n._delay), n = r;
                        return Be(s, i, 0), i
                    },
                    context: function(e, t) {
                        return e ? new _n(e, t) : o
                    },
                    matchMedia: function(e) {
                        return new xn(e)
                    },
                    matchMediaRefresh: function() {
                        return fn.forEach((function(e) {
                            var t, n, r = e.conditions;
                            for (n in r) r[n] && (r[n] = !1, t = 1);
                            t && e.revert()
                        })) || yn()
                    },
                    addEventListener: function(e, t) {
                        var n = pn[e] || (pn[e] = []);
                        ~n.indexOf(t) || n.push(t)
                    },
                    removeEventListener: function(e, t) {
                        var n = pn[e],
                            r = n && n.indexOf(t);
                        r >= 0 && n.splice(r, 1)
                    },
                    utils: {
                        wrap: function e(t, n, r) {
                            var i = n - t;
                            return U(t) ? ut(t, e(0, t.length), n) : Ke(r, (function(e) {
                                return (i + (e - t) % i) % i + t
                            }))
                        },
                        wrapYoyo: function e(t, n, r) {
                            var i = n - t,
                                a = 2 * i;
                            return U(t) ? ut(t, e(0, t.length - 1), n) : Ke(r, (function(e) {
                                return t + ((e = (a + (e - t) % a) % a || 0) > i ? a - e : e)
                            }))
                        },
                        distribute: it,
                        random: st,
                        snap: ot,
                        normalize: function(e, t, n) {
                            return ct(e, t, 0, 1, n)
                        },
                        getUnit: Je,
                        clamp: function(e, t, n) {
                            return Ke(n, (function(n) {
                                return Ze(e, t, n)
                            }))
                        },
                        splitColor: _t,
                        toArray: tt,
                        selector: nt,
                        mapRange: ct,
                        pipe: function() {
                            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                            return function(e) {
                                return t.reduce((function(e, t) {
                                    return t(e)
                                }), e)
                            }
                        },
                        unitize: function(e, t) {
                            return function(n) {
                                return e(parseFloat(n)) + (t || Je(n))
                            }
                        },
                        interpolate: function e(t, n, r, i) {
                            var a = isNaN(t + n) ? 0 : function(e) {
                                return (1 - e) * t + e * n
                            };
                            if (!a) {
                                var o, s, u, l, c, h = C(t),
                                    d = {};
                                if (!0 === r && (i = 1) && (r = null), h) t = {
                                    p: t
                                }, n = {
                                    p: n
                                };
                                else if (U(t) && !U(n)) {
                                    for (u = [], l = t.length, c = l - 2, s = 1; s < l; s++) u.push(e(t[s - 1], t[s]));
                                    l--, a = function(e) {
                                        e *= l;
                                        var t = Math.min(c, ~~e);
                                        return u[t](e - t)
                                    }, r = n
                                } else i || (t = Te(U(t) ? [] : {}, t));
                                if (!u) {
                                    for (o in n) Wt.call(d, t, o, "get", n[o]);
                                    a = function(e) {
                                        return sn(e, d) || (h ? t.p : t)
                                    }
                                }
                            }
                            return Ke(r, a)
                        },
                        shuffle: rt
                    },
                    install: Y,
                    effects: oe,
                    ticker: St,
                    updateRoot: zt.updateRoot,
                    plugins: ae,
                    globalTimeline: s,
                    core: {
                        PropTween: dn,
                        globals: J,
                        Tween: Jt,
                        Timeline: zt,
                        Animation: Bt,
                        getCache: he,
                        _removeLinkedListItem: Le,
                        reverting: function() {
                            return i
                        },
                        context: function(e) {
                            return e && o && (o.data.push(e), e._ctx = o), o
                        },
                        suppressOverwrites: function(e) {
                            return r = e
                        }
                    }
                };
            fe("to,from,fromTo,delayedCall,set,killTweensOf", (function(e) {
                return bn[e] = Jt[e]
            })), St.add(zt.updateRoot), f = bn.to({}, {
                duration: 0
            });
            var wn = function(e, t) {
                    for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t;) n = n._next;
                    return n
                },
                Tn = function(e, t) {
                    return {
                        name: e,
                        rawVars: 1,
                        init: function(e, n, r) {
                            r._onInit = function(e) {
                                var r, i;
                                if (C(n) && (r = {}, fe(n, (function(e) {
                                        return r[e] = 1
                                    })), n = r), t) {
                                    for (i in r = {}, n) r[i] = t(n[i]);
                                    n = r
                                }! function(e, t) {
                                    var n, r, i, a = e._targets;
                                    for (n in t)
                                        for (r = a.length; r--;)(i = e._ptLookup[r][n]) && (i = i.d) && (i._pt && (i = wn(i, n)), i && i.modifier && i.modifier(t[n], e, a[r], n))
                                }(e, n)
                            }
                        }
                    }
                },
                Mn = bn.registerPlugin({
                    name: "attr",
                    init: function(e, t, n, r, i) {
                        var a, o, s;
                        for (a in this.tween = n, t) s = e.getAttribute(a) || "", (o = this.add(e, "setAttribute", (s || 0) + "", t[a], r, i, 0, 0, a)).op = a, o.b = s, this._props.push(a)
                    },
                    render: function(e, t) {
                        for (var n = t._pt; n;) i ? n.set(n.t, n.p, n.b, n) : n.r(e, n.d), n = n._next
                    }
                }, {
                    name: "endArray",
                    init: function(e, t) {
                        for (var n = t.length; n--;) this.add(e, n, e[n] || 0, t[n], 0, 0, 0, 0, 0, 1)
                    }
                }, Tn("roundProps", at), Tn("modifiers"), Tn("snap", ot)) || bn;
            Jt.version = zt.version = Mn.version = "3.11.5", h = 1, O() && Et();
            var Sn, En, An, Ln, Cn, Rn, kn, Pn, Dn = At.Power0,
                In = At.Power1,
                On = At.Power2,
                Nn = At.Power3,
                Fn = At.Power4,
                Un = At.Linear,
                Bn = At.Quad,
                zn = At.Cubic,
                Gn = At.Quart,
                Hn = At.Quint,
                Vn = At.Strong,
                Wn = At.Elastic,
                jn = At.Back,
                qn = At.SteppedEase,
                Xn = At.Bounce,
                Yn = At.Sine,
                Kn = At.Expo,
                Zn = At.Circ,
                Jn = {},
                Qn = 180 / Math.PI,
                $n = Math.PI / 180,
                er = Math.atan2,
                tr = /([A-Z])/g,
                nr = /(left|right|width|margin|padding|x)/i,
                rr = /[\s,\(]\S/,
                ir = {
                    autoAlpha: "opacity,visibility",
                    scale: "scaleX,scaleY",
                    alpha: "opacity"
                },
                ar = function(e, t) {
                    return t.set(t.t, t.p, Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u, t)
                },
                or = function(e, t) {
                    return t.set(t.t, t.p, 1 === e ? t.e : Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u, t)
                },
                sr = function(e, t) {
                    return t.set(t.t, t.p, e ? Math.round(1e4 * (t.s + t.c * e)) / 1e4 + t.u : t.b, t)
                },
                ur = function(e, t) {
                    var n = t.s + t.c * e;
                    t.set(t.t, t.p, ~~(n + (n < 0 ? -.5 : .5)) + t.u, t)
                },
                lr = function(e, t) {
                    return t.set(t.t, t.p, e ? t.e : t.b, t)
                },
                cr = function(e, t) {
                    return t.set(t.t, t.p, 1 !== e ? t.b : t.e, t)
                },
                hr = function(e, t, n) {
                    return e.style[t] = n
                },
                dr = function(e, t, n) {
                    return e.style.setProperty(t, n)
                },
                fr = function(e, t, n) {
                    return e._gsap[t] = n
                },
                pr = function(e, t, n) {
                    return e._gsap.scaleX = e._gsap.scaleY = n
                },
                vr = function(e, t, n, r, i) {
                    var a = e._gsap;
                    a.scaleX = a.scaleY = n, a.renderTransform(i, a)
                },
                mr = function(e, t, n, r, i) {
                    var a = e._gsap;
                    a[t] = n, a.renderTransform(i, a)
                },
                gr = "transform",
                yr = gr + "Origin",
                _r = function e(t, n) {
                    var r = this,
                        i = this.target,
                        a = i.style;
                    if (t in Jn) {
                        if (this.tfm = this.tfm || {}, "transform" === t) return ir.transform.split(",").forEach((function(t) {
                            return e.call(r, t, n)
                        }));
                        if (~(t = ir[t] || t).indexOf(",") ? t.split(",").forEach((function(e) {
                                return r.tfm[e] = Fr(i, e)
                            })) : this.tfm[t] = i._gsap.x ? i._gsap[t] : Fr(i, t), this.props.indexOf(gr) >= 0) return;
                        i._gsap.svg && (this.svgo = i.getAttribute("data-svg-origin"), this.props.push(yr, n, "")), t = gr
                    }(a || n) && this.props.push(t, n, a[t])
                },
                xr = function(e) {
                    e.translate && (e.removeProperty("translate"), e.removeProperty("scale"), e.removeProperty("rotate"))
                },
                br = function() {
                    var e, t, n = this.props,
                        r = this.target,
                        i = r.style,
                        a = r._gsap;
                    for (e = 0; e < n.length; e += 3) n[e + 1] ? r[n[e]] = n[e + 2] : n[e + 2] ? i[n[e]] = n[e + 2] : i.removeProperty("--" === n[e].substr(0, 2) ? n[e] : n[e].replace(tr, "-$1").toLowerCase());
                    if (this.tfm) {
                        for (t in this.tfm) a[t] = this.tfm[t];
                        a.svg && (a.renderTransform(), r.setAttribute("data-svg-origin", this.svgo || "")), (e = kn()) && e.isStart || i[gr] || (xr(i), a.uncache = 1)
                    }
                },
                wr = function(e, t) {
                    var n = {
                        target: e,
                        props: [],
                        revert: br,
                        save: _r
                    };
                    return e._gsap || Mn.core.getCache(e), t && t.split(",").forEach((function(e) {
                        return n.save(e)
                    })), n
                },
                Tr = function(e, t) {
                    var n = En.createElementNS ? En.createElementNS((t || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), e) : En.createElement(e);
                    return n.style ? n : En.createElement(e)
                },
                Mr = function e(t, n, r) {
                    var i = getComputedStyle(t);
                    return i[n] || i.getPropertyValue(n.replace(tr, "-$1").toLowerCase()) || i.getPropertyValue(n) || !r && e(t, Er(n) || n, 1) || ""
                },
                Sr = "O,Moz,ms,Ms,Webkit".split(","),
                Er = function(e, t, n) {
                    var r = (t || Cn).style,
                        i = 5;
                    if (e in r && !n) return e;
                    for (e = e.charAt(0).toUpperCase() + e.substr(1); i-- && !(Sr[i] + e in r););
                    return i < 0 ? null : (3 === i ? "ms" : i >= 0 ? Sr[i] : "") + e
                },
                Ar = function() {
                    "undefined" != typeof window && window.document && (Sn = window, En = Sn.document, An = En.documentElement, Cn = Tr("div") || {
                        style: {}
                    }, Tr("div"), gr = Er(gr), yr = gr + "Origin", Cn.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", Pn = !!Er("perspective"), kn = Mn.core.reverting, Ln = 1)
                },
                Lr = function e(t) {
                    var n, r = Tr("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
                        i = this.parentNode,
                        a = this.nextSibling,
                        o = this.style.cssText;
                    if (An.appendChild(r), r.appendChild(this), this.style.display = "block", t) try {
                        n = this.getBBox(), this._gsapBBox = this.getBBox, this.getBBox = e
                    } catch (e) {} else this._gsapBBox && (n = this._gsapBBox());
                    return i && (a ? i.insertBefore(this, a) : i.appendChild(this)), An.removeChild(r), this.style.cssText = o, n
                },
                Cr = function(e, t) {
                    for (var n = t.length; n--;)
                        if (e.hasAttribute(t[n])) return e.getAttribute(t[n])
                },
                Rr = function(e) {
                    var t;
                    try {
                        t = e.getBBox()
                    } catch (n) {
                        t = Lr.call(e, !0)
                    }
                    return t && (t.width || t.height) || e.getBBox === Lr || (t = Lr.call(e, !0)), !t || t.width || t.x || t.y ? t : {
                        x: +Cr(e, ["x", "cx", "x1"]) || 0,
                        y: +Cr(e, ["y", "cy", "y1"]) || 0,
                        width: 0,
                        height: 0
                    }
                },
                kr = function(e) {
                    return !(!e.getCTM || e.parentNode && !e.ownerSVGElement || !Rr(e))
                },
                Pr = function(e, t) {
                    if (t) {
                        var n = e.style;
                        t in Jn && t !== yr && (t = gr), n.removeProperty ? ("ms" !== t.substr(0, 2) && "webkit" !== t.substr(0, 6) || (t = "-" + t), n.removeProperty(t.replace(tr, "-$1").toLowerCase())) : n.removeAttribute(t)
                    }
                },
                Dr = function(e, t, n, r, i, a) {
                    var o = new dn(e._pt, t, n, 0, 1, a ? cr : lr);
                    return e._pt = o, o.b = r, o.e = i, e._props.push(n), o
                },
                Ir = {
                    deg: 1,
                    rad: 1,
                    turn: 1
                },
                Or = {
                    grid: 1,
                    flex: 1
                },
                Nr = function e(t, n, r, i) {
                    var a, o, s, u, l = parseFloat(r) || 0,
                        c = (r + "").trim().substr((l + "").length) || "px",
                        h = Cn.style,
                        d = nr.test(n),
                        f = "svg" === t.tagName.toLowerCase(),
                        p = (f ? "client" : "offset") + (d ? "Width" : "Height"),
                        v = 100,
                        m = "px" === i,
                        g = "%" === i;
                    return i === c || !l || Ir[i] || Ir[c] ? l : ("px" !== c && !m && (l = e(t, n, r, "px")), u = t.getCTM && kr(t), !g && "%" !== c || !Jn[n] && !~n.indexOf("adius") ? (h[d ? "width" : "height"] = v + (m ? c : i), o = ~n.indexOf("adius") || "em" === i && t.appendChild && !f ? t : t.parentNode, u && (o = (t.ownerSVGElement || {}).parentNode), o && o !== En && o.appendChild || (o = En.body), (s = o._gsap) && g && s.width && d && s.time === St.time && !s.uncache ? pe(l / s.width * v) : ((g || "%" === c) && !Or[Mr(o, "display")] && (h.position = Mr(t, "position")), o === t && (h.position = "static"), o.appendChild(Cn), a = Cn[p], o.removeChild(Cn), h.position = "absolute", d && g && ((s = he(o)).time = St.time, s.width = o[p]), pe(m ? a * l / v : a && l ? v / a * l : 0))) : (a = u ? t.getBBox()[d ? "width" : "height"] : t[p], pe(g ? l / a * v : l / 100 * a)))
                },
                Fr = function(e, t, n, r) {
                    var i;
                    return Ln || Ar(), t in ir && "transform" !== t && ~(t = ir[t]).indexOf(",") && (t = t.split(",")[0]), Jn[t] && "transform" !== t ? (i = Yr(e, r), i = "transformOrigin" !== t ? i[t] : i.svg ? i.origin : Kr(Mr(e, yr)) + " " + i.zOrigin + "px") : (!(i = e.style[t]) || "auto" === i || r || ~(i + "").indexOf("calc(")) && (i = Gr[t] && Gr[t](e, t, n) || Mr(e, t) || de(e, t) || ("opacity" === t ? 1 : 0)), n && !~(i + "").trim().indexOf(" ") ? Nr(e, t, i, n) + n : i
                },
                Ur = function(e, t, n, r) {
                    if (!n || "none" === n) {
                        var i = Er(t, e, 1),
                            a = i && Mr(e, i, 1);
                        a && a !== n ? (t = i, n = a) : "borderColor" === t && (n = Mr(e, "borderTopColor"))
                    }
                    var o, s, u, l, c, h, d, f, p, v, m, g = new dn(this._pt, e.style, t, 0, 1, on),
                        y = 0,
                        x = 0;
                    if (g.b = n, g.e = r, n += "", "auto" == (r += "") && (e.style[t] = r, r = Mr(e, t) || r, e.style[t] = n), Mt(o = [n, r]), r = o[1], u = (n = o[0]).match(G) || [], (r.match(G) || []).length) {
                        for (; s = G.exec(r);) d = s[0], p = r.substring(y, s.index), c ? c = (c + 1) % 5 : "rgba(" !== p.substr(-5) && "hsla(" !== p.substr(-5) || (c = 1), d !== (h = u[x++] || "") && (l = parseFloat(h) || 0, m = h.substr((l + "").length), "=" === d.charAt(1) && (d = me(l, d) + m), f = parseFloat(d), v = d.substr((f + "").length), y = G.lastIndex - v.length, v || (v = v || _.units[t] || m, y === r.length && (r += v, g.e += v)), m !== v && (l = Nr(e, t, h, v) || 0), g._pt = {
                            _next: g._pt,
                            p: p || 1 === x ? p : ",",
                            s: l,
                            c: f - l,
                            m: c && c < 4 || "zIndex" === t ? Math.round : 0
                        });
                        g.c = y < r.length ? r.substring(y, r.length) : ""
                    } else g.r = "display" === t && "none" === r ? cr : lr;
                    return V.test(r) && (g.e = 0), this._pt = g, g
                },
                Br = {
                    top: "0%",
                    bottom: "100%",
                    left: "0%",
                    right: "100%",
                    center: "50%"
                },
                zr = function(e, t) {
                    if (t.tween && t.tween._time === t.tween._dur) {
                        var n, r, i, a = t.t,
                            o = a.style,
                            s = t.u,
                            u = a._gsap;
                        if ("all" === s || !0 === s) o.cssText = "", r = 1;
                        else
                            for (i = (s = s.split(",")).length; --i > -1;) n = s[i], Jn[n] && (r = 1, n = "transformOrigin" === n ? yr : gr), Pr(a, n);
                        r && (Pr(a, gr), u && (u.svg && a.removeAttribute("transform"), Yr(a, 1), u.uncache = 1, xr(o)))
                    }
                },
                Gr = {
                    clearProps: function(e, t, n, r, i) {
                        if ("isFromStart" !== i.data) {
                            var a = e._pt = new dn(e._pt, t, n, 0, 0, zr);
                            return a.u = r, a.pr = -10, a.tween = i, e._props.push(n), 1
                        }
                    }
                },
                Hr = [1, 0, 0, 1, 0, 0],
                Vr = {},
                Wr = function(e) {
                    return "matrix(1, 0, 0, 1, 0, 0)" === e || "none" === e || !e
                },
                jr = function(e) {
                    var t = Mr(e, gr);
                    return Wr(t) ? Hr : t.substr(7).match(z).map(pe)
                },
                qr = function(e, t) {
                    var n, r, i, a, o = e._gsap || he(e),
                        s = e.style,
                        u = jr(e);
                    return o.svg && e.getAttribute("transform") ? "1,0,0,1,0,0" === (u = [(i = e.transform.baseVal.consolidate().matrix).a, i.b, i.c, i.d, i.e, i.f]).join(",") ? Hr : u : (u !== Hr || e.offsetParent || e === An || o.svg || (i = s.display, s.display = "block", (n = e.parentNode) && e.offsetParent || (a = 1, r = e.nextElementSibling, An.appendChild(e)), u = jr(e), i ? s.display = i : Pr(e, "display"), a && (r ? n.insertBefore(e, r) : n ? n.appendChild(e) : An.removeChild(e))), t && u.length > 6 ? [u[0], u[1], u[4], u[5], u[12], u[13]] : u)
                },
                Xr = function(e, t, n, r, i, a) {
                    var o, s, u, l = e._gsap,
                        c = i || qr(e, !0),
                        h = l.xOrigin || 0,
                        d = l.yOrigin || 0,
                        f = l.xOffset || 0,
                        p = l.yOffset || 0,
                        v = c[0],
                        m = c[1],
                        g = c[2],
                        y = c[3],
                        _ = c[4],
                        x = c[5],
                        b = t.split(" "),
                        w = parseFloat(b[0]) || 0,
                        T = parseFloat(b[1]) || 0;
                    n ? c !== Hr && (s = v * y - m * g) && (u = w * (-m / s) + T * (v / s) - (v * x - m * _) / s, w = w * (y / s) + T * (-g / s) + (g * x - y * _) / s, T = u) : (w = (o = Rr(e)).x + (~b[0].indexOf("%") ? w / 100 * o.width : w), T = o.y + (~(b[1] || b[0]).indexOf("%") ? T / 100 * o.height : T)), r || !1 !== r && l.smooth ? (_ = w - h, x = T - d, l.xOffset = f + (_ * v + x * g) - _, l.yOffset = p + (_ * m + x * y) - x) : l.xOffset = l.yOffset = 0, l.xOrigin = w, l.yOrigin = T, l.smooth = !!r, l.origin = t, l.originIsAbsolute = !!n, e.style[yr] = "0px 0px", a && (Dr(a, l, "xOrigin", h, w), Dr(a, l, "yOrigin", d, T), Dr(a, l, "xOffset", f, l.xOffset), Dr(a, l, "yOffset", p, l.yOffset)), e.setAttribute("data-svg-origin", w + " " + T)
                },
                Yr = function(e, t) {
                    var n = e._gsap || new Ut(e);
                    if ("x" in n && !t && !n.uncache) return n;
                    var r, i, a, o, s, u, l, c, h, d, f, p, v, m, g, y, x, b, w, T, M, S, E, A, L, C, R, k, P, D, I, O, N = e.style,
                        F = n.scaleX < 0,
                        U = "px",
                        B = "deg",
                        z = getComputedStyle(e),
                        G = Mr(e, yr) || "0";
                    return r = i = a = u = l = c = h = d = f = 0, o = s = 1, n.svg = !(!e.getCTM || !kr(e)), z.translate && ("none" === z.translate && "none" === z.scale && "none" === z.rotate || (N[gr] = ("none" !== z.translate ? "translate3d(" + (z.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + ("none" !== z.rotate ? "rotate(" + z.rotate + ") " : "") + ("none" !== z.scale ? "scale(" + z.scale.split(" ").join(",") + ") " : "") + ("none" !== z[gr] ? z[gr] : "")), N.scale = N.rotate = N.translate = "none"), m = qr(e, n.svg), n.svg && (n.uncache ? (L = e.getBBox(), G = n.xOrigin - L.x + "px " + (n.yOrigin - L.y) + "px", A = "") : A = !t && e.getAttribute("data-svg-origin"), Xr(e, A || G, !!A || n.originIsAbsolute, !1 !== n.smooth, m)), p = n.xOrigin || 0, v = n.yOrigin || 0, m !== Hr && (b = m[0], w = m[1], T = m[2], M = m[3], r = S = m[4], i = E = m[5], 6 === m.length ? (o = Math.sqrt(b * b + w * w), s = Math.sqrt(M * M + T * T), u = b || w ? er(w, b) * Qn : 0, (h = T || M ? er(T, M) * Qn + u : 0) && (s *= Math.abs(Math.cos(h * $n))), n.svg && (r -= p - (p * b + v * T), i -= v - (p * w + v * M))) : (O = m[6], D = m[7], R = m[8], k = m[9], P = m[10], I = m[11], r = m[12], i = m[13], a = m[14], l = (g = er(O, P)) * Qn, g && (A = S * (y = Math.cos(-g)) + R * (x = Math.sin(-g)), L = E * y + k * x, C = O * y + P * x, R = S * -x + R * y, k = E * -x + k * y, P = O * -x + P * y, I = D * -x + I * y, S = A, E = L, O = C), c = (g = er(-T, P)) * Qn, g && (y = Math.cos(-g), I = M * (x = Math.sin(-g)) + I * y, b = A = b * y - R * x, w = L = w * y - k * x, T = C = T * y - P * x), u = (g = er(w, b)) * Qn, g && (A = b * (y = Math.cos(g)) + w * (x = Math.sin(g)), L = S * y + E * x, w = w * y - b * x, E = E * y - S * x, b = A, S = L), l && Math.abs(l) + Math.abs(u) > 359.9 && (l = u = 0, c = 180 - c), o = pe(Math.sqrt(b * b + w * w + T * T)), s = pe(Math.sqrt(E * E + O * O)), g = er(S, E), h = Math.abs(g) > 2e-4 ? g * Qn : 0, f = I ? 1 / (I < 0 ? -I : I) : 0), n.svg && (A = e.getAttribute("transform"), n.forceCSS = e.setAttribute("transform", "") || !Wr(Mr(e, gr)), A && e.setAttribute("transform", A))), Math.abs(h) > 90 && Math.abs(h) < 270 && (F ? (o *= -1, h += u <= 0 ? 180 : -180, u += u <= 0 ? 180 : -180) : (s *= -1, h += h <= 0 ? 180 : -180)), t = t || n.uncache, n.x = r - ((n.xPercent = r && (!t && n.xPercent || (Math.round(e.offsetWidth / 2) === Math.round(-r) ? -50 : 0))) ? e.offsetWidth * n.xPercent / 100 : 0) + U, n.y = i - ((n.yPercent = i && (!t && n.yPercent || (Math.round(e.offsetHeight / 2) === Math.round(-i) ? -50 : 0))) ? e.offsetHeight * n.yPercent / 100 : 0) + U, n.z = a + U, n.scaleX = pe(o), n.scaleY = pe(s), n.rotation = pe(u) + B, n.rotationX = pe(l) + B, n.rotationY = pe(c) + B, n.skewX = h + B, n.skewY = d + B, n.transformPerspective = f + U, (n.zOrigin = parseFloat(G.split(" ")[2]) || 0) && (N[yr] = Kr(G)), n.xOffset = n.yOffset = 0, n.force3D = _.force3D, n.renderTransform = n.svg ? ni : Pn ? ti : Jr, n.uncache = 0, n
                },
                Kr = function(e) {
                    return (e = e.split(" "))[0] + " " + e[1]
                },
                Zr = function(e, t, n) {
                    var r = Je(t);
                    return pe(parseFloat(t) + parseFloat(Nr(e, "x", n + "px", r))) + r
                },
                Jr = function(e, t) {
                    t.z = "0px", t.rotationY = t.rotationX = "0deg", t.force3D = 0, ti(e, t)
                },
                Qr = "0deg",
                $r = "0px",
                ei = ") ",
                ti = function(e, t) {
                    var n = t || this,
                        r = n.xPercent,
                        i = n.yPercent,
                        a = n.x,
                        o = n.y,
                        s = n.z,
                        u = n.rotation,
                        l = n.rotationY,
                        c = n.rotationX,
                        h = n.skewX,
                        d = n.skewY,
                        f = n.scaleX,
                        p = n.scaleY,
                        v = n.transformPerspective,
                        m = n.force3D,
                        g = n.target,
                        y = n.zOrigin,
                        _ = "",
                        x = "auto" === m && e && 1 !== e || !0 === m;
                    if (y && (c !== Qr || l !== Qr)) {
                        var b, w = parseFloat(l) * $n,
                            T = Math.sin(w),
                            M = Math.cos(w);
                        w = parseFloat(c) * $n, b = Math.cos(w), a = Zr(g, a, T * b * -y), o = Zr(g, o, -Math.sin(w) * -y), s = Zr(g, s, M * b * -y + y)
                    }
                    v !== $r && (_ += "perspective(" + v + ei), (r || i) && (_ += "translate(" + r + "%, " + i + "%) "), (x || a !== $r || o !== $r || s !== $r) && (_ += s !== $r || x ? "translate3d(" + a + ", " + o + ", " + s + ") " : "translate(" + a + ", " + o + ei), u !== Qr && (_ += "rotate(" + u + ei), l !== Qr && (_ += "rotateY(" + l + ei), c !== Qr && (_ += "rotateX(" + c + ei), h === Qr && d === Qr || (_ += "skew(" + h + ", " + d + ei), 1 === f && 1 === p || (_ += "scale(" + f + ", " + p + ei), g.style[gr] = _ || "translate(0, 0)"
                },
                ni = function(e, t) {
                    var n, r, i, a, o, s = t || this,
                        u = s.xPercent,
                        l = s.yPercent,
                        c = s.x,
                        h = s.y,
                        d = s.rotation,
                        f = s.skewX,
                        p = s.skewY,
                        v = s.scaleX,
                        m = s.scaleY,
                        g = s.target,
                        y = s.xOrigin,
                        _ = s.yOrigin,
                        x = s.xOffset,
                        b = s.yOffset,
                        w = s.forceCSS,
                        T = parseFloat(c),
                        M = parseFloat(h);
                    d = parseFloat(d), f = parseFloat(f), (p = parseFloat(p)) && (f += p = parseFloat(p), d += p), d || f ? (d *= $n, f *= $n, n = Math.cos(d) * v, r = Math.sin(d) * v, i = Math.sin(d - f) * -m, a = Math.cos(d - f) * m, f && (p *= $n, o = Math.tan(f - p), i *= o = Math.sqrt(1 + o * o), a *= o, p && (o = Math.tan(p), n *= o = Math.sqrt(1 + o * o), r *= o)), n = pe(n), r = pe(r), i = pe(i), a = pe(a)) : (n = v, a = m, r = i = 0), (T && !~(c + "").indexOf("px") || M && !~(h + "").indexOf("px")) && (T = Nr(g, "x", c, "px"), M = Nr(g, "y", h, "px")), (y || _ || x || b) && (T = pe(T + y - (y * n + _ * i) + x), M = pe(M + _ - (y * r + _ * a) + b)), (u || l) && (o = g.getBBox(), T = pe(T + u / 100 * o.width), M = pe(M + l / 100 * o.height)), o = "matrix(" + n + "," + r + "," + i + "," + a + "," + T + "," + M + ")", g.setAttribute("transform", o), w && (g.style[gr] = o)
                },
                ri = function(e, t, n, r, i) {
                    var a, o, s = 360,
                        u = C(i),
                        l = parseFloat(i) * (u && ~i.indexOf("rad") ? Qn : 1) - r,
                        c = r + l + "deg";
                    return u && ("short" === (a = i.split("_")[1]) && (l %= s) != l % 180 && (l += l < 0 ? s : -360), "cw" === a && l < 0 ? l = (l + 36e9) % s - ~~(l / s) * s : "ccw" === a && l > 0 && (l = (l - 36e9) % s - ~~(l / s) * s)), e._pt = o = new dn(e._pt, t, n, r, l, or), o.e = c, o.u = "deg", e._props.push(n), o
                },
                ii = function(e, t) {
                    for (var n in t) e[n] = t[n];
                    return e
                },
                ai = function(e, t, n) {
                    var r, i, a, o, s, u, l, c = ii({}, n._gsap),
                        h = n.style;
                    for (i in c.svg ? (a = n.getAttribute("transform"), n.setAttribute("transform", ""), h[gr] = t, r = Yr(n, 1), Pr(n, gr), n.setAttribute("transform", a)) : (a = getComputedStyle(n)[gr], h[gr] = t, r = Yr(n, 1), h[gr] = a), Jn)(a = c[i]) !== (o = r[i]) && "perspective,force3D,transformOrigin,svgOrigin".indexOf(i) < 0 && (s = Je(a) !== (l = Je(o)) ? Nr(n, i, a, l) : parseFloat(a), u = parseFloat(o), e._pt = new dn(e._pt, r, i, s, u - s, ar), e._pt.u = l || 0, e._props.push(i));
                    ii(r, c)
                };
            fe("padding,margin,Width,Radius", (function(e, t) {
                var n = "Top",
                    r = "Right",
                    i = "Bottom",
                    a = "Left",
                    o = (t < 3 ? [n, r, i, a] : [n + a, n + r, i + r, i + a]).map((function(n) {
                        return t < 2 ? e + n : "border" + n + e
                    }));
                Gr[t > 1 ? "border" + e : e] = function(e, t, n, r, i) {
                    var a, s;
                    if (arguments.length < 4) return a = o.map((function(t) {
                        return Fr(e, t, n)
                    })), 5 === (s = a.join(" ")).split(a[0]).length ? a[0] : s;
                    a = (r + "").split(" "), s = {}, o.forEach((function(e, t) {
                        return s[e] = a[t] = a[t] || a[(t - 1) / 2 | 0]
                    })), e.init(t, s, i)
                }
            }));
            var oi, si, ui, li = {
                name: "css",
                register: Ar,
                targetTest: function(e) {
                    return e.style && e.nodeType
                },
                init: function(e, t, n, r, i) {
                    var o, s, u, l, c, h, d, f, p, v, m, g, y, x, b, w, T, M, S, E, A = this._props,
                        L = e.style,
                        R = n.vars.startAt;
                    for (d in Ln || Ar(), this.styles = this.styles || wr(e), w = this.styles.props, this.tween = n, t)
                        if ("autoRound" !== d && (s = t[d], !ae[d] || !jt(d, t, n, r, e, i)))
                            if (c = (0, a.default)(s), h = Gr[d], "function" === c && (s = s.call(n, r, e, i), c = (0, a.default)(s)), "string" === c && ~s.indexOf("random(") && (s = lt(s)), h) h(this, e, d, s, n) && (b = 1);
                            else if ("--" === d.substr(0, 2)) o = (getComputedStyle(e).getPropertyValue(d) + "").trim(), s += "", wt.lastIndex = 0, wt.test(o) || (f = Je(o), p = Je(s)), p ? f !== p && (o = Nr(e, d, o, p) + p) : f && (s += f), this.add(L, "setProperty", o, s, r, i, 0, 0, d), A.push(d), w.push(d, 0, L[d]);
                    else if ("undefined" !== c) {
                        if (R && d in R ? (o = "function" == typeof R[d] ? R[d].call(n, r, e, i) : R[d], C(o) && ~o.indexOf("random(") && (o = lt(o)), Je(o + "") || (o += _.units[d] || Je(Fr(e, d)) || ""), "=" === (o + "").charAt(1) && (o = Fr(e, d))) : o = Fr(e, d), l = parseFloat(o), (v = "string" === c && "=" === s.charAt(1) && s.substr(0, 2)) && (s = s.substr(2)), u = parseFloat(s), d in ir && ("autoAlpha" === d && (1 === l && "hidden" === Fr(e, "visibility") && u && (l = 0), w.push("visibility", 0, L.visibility), Dr(this, L, "visibility", l ? "inherit" : "hidden", u ? "inherit" : "hidden", !u)), "scale" !== d && "transform" !== d && ~(d = ir[d]).indexOf(",") && (d = d.split(",")[0])), m = d in Jn)
                            if (this.styles.save(d), g || ((y = e._gsap).renderTransform && !t.parseTransform || Yr(e, t.parseTransform), x = !1 !== t.smoothOrigin && y.smooth, (g = this._pt = new dn(this._pt, L, gr, 0, 1, y.renderTransform, y, 0, -1)).dep = 1), "scale" === d) this._pt = new dn(this._pt, y, "scaleY", y.scaleY, (v ? me(y.scaleY, v + u) : u) - y.scaleY || 0, ar), this._pt.u = 0, A.push("scaleY", d), d += "X";
                            else {
                                if ("transformOrigin" === d) {
                                    w.push(yr, 0, L[yr]), M = void 0, S = void 0, E = void 0, M = (T = s).split(" "), S = M[0], E = M[1] || "50%", "top" !== S && "bottom" !== S && "left" !== E && "right" !== E || (T = S, S = E, E = T), M[0] = Br[S] || S, M[1] = Br[E] || E, s = M.join(" "), y.svg ? Xr(e, s, 0, x, 0, this) : ((p = parseFloat(s.split(" ")[2]) || 0) !== y.zOrigin && Dr(this, y, "zOrigin", y.zOrigin, p), Dr(this, L, d, Kr(o), Kr(s)));
                                    continue
                                }
                                if ("svgOrigin" === d) {
                                    Xr(e, s, 1, x, 0, this);
                                    continue
                                }
                                if (d in Vr) {
                                    ri(this, y, d, l, v ? me(l, v + s) : s);
                                    continue
                                }
                                if ("smoothOrigin" === d) {
                                    Dr(this, y, "smooth", y.smooth, s);
                                    continue
                                }
                                if ("force3D" === d) {
                                    y[d] = s;
                                    continue
                                }
                                if ("transform" === d) {
                                    ai(this, s, e);
                                    continue
                                }
                            }
                        else d in L || (d = Er(d) || d);
                        if (m || (u || 0 === u) && (l || 0 === l) && !rr.test(s) && d in L) u || (u = 0), (f = (o + "").substr((l + "").length)) !== (p = Je(s) || (d in _.units ? _.units[d] : f)) && (l = Nr(e, d, o, p)), this._pt = new dn(this._pt, m ? y : L, d, l, (v ? me(l, v + u) : u) - l, m || "px" !== p && "zIndex" !== d || !1 === t.autoRound ? ar : ur), this._pt.u = p || 0, f !== p && "%" !== p && (this._pt.b = o, this._pt.r = sr);
                        else if (d in L) Ur.call(this, e, d, o, v ? v + s : s);
                        else if (d in e) this.add(e, d, o || e[d], v ? v + s : s, r, i);
                        else if ("parseTransform" !== d) {
                            K(d, s);
                            continue
                        }
                        m || (d in L ? w.push(d, 0, L[d]) : w.push(d, 1, o || e[d])), A.push(d)
                    }
                    b && hn(this)
                },
                render: function(e, t) {
                    if (t.tween._time || !kn())
                        for (var n = t._pt; n;) n.r(e, n.d), n = n._next;
                    else t.styles.revert()
                },
                get: Fr,
                aliases: ir,
                getSetter: function(e, t, n) {
                    var r = ir[t];
                    return r && r.indexOf(",") < 0 && (t = r), t in Jn && t !== yr && (e._gsap.x || Fr(e, "x")) ? n && Rn === n ? "scale" === t ? pr : fr : (Rn = n || {}) && ("scale" === t ? vr : mr) : e.style && !P(e.style[t]) ? hr : ~t.indexOf("-") ? dr : nn(e, t)
                },
                core: {
                    _removeProperty: Pr,
                    _getMatrix: qr
                }
            };
            Mn.utils.checkPrefix = Er, Mn.core.getStyleSaver = wr, ui = fe((oi = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent") + "," + (si = "rotation,rotationX,rotationY,skewX,skewY") + ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", (function(e) {
                Jn[e] = 1
            })), fe(si, (function(e) {
                _.units[e] = "deg", Vr[e] = 1
            })), ir[ui[13]] = oi + "," + si, fe("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY", (function(e) {
                var t = e.split(":");
                ir[t[1]] = ui[t[0]]
            })), fe("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", (function(e) {
                _.units[e] = "px"
            })), Mn.registerPlugin(li);
            var ci = Mn.registerPlugin(li) || Mn,
                hi = ci.core.Tween;
            e.Back = jn, e.Bounce = Xn, e.CSSPlugin = li, e.Circ = Zn, e.Cubic = zn, e.Elastic = Wn, e.Expo = Kn, e.Linear = Un, e.Power0 = Dn, e.Power1 = In, e.Power2 = On, e.Power3 = Nn, e.Power4 = Fn, e.Quad = Bn, e.Quart = Gn, e.Quint = Hn, e.Sine = Yn, e.SteppedEase = qn, e.Strong = Vn, e.TimelineLite = zt, e.TimelineMax = zt, e.TweenLite = Jt, e.TweenMax = hi, e.default = ci, e.gsap = ci, "undefined" == typeof window || window !== e ? Object.defineProperty(e, "__esModule", {
                value: !0
            }) : delete window.default
        }, "object" === (void 0 === n ? "undefined" : (0, a.default)(n)) && void 0 !== t ? i(n) : "function" == typeof define && define.amd ? define(["exports"], i) : i((r = r || self).window = r.window || {})
    }, {
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24
    }],
    29: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.wrapYoyo = n.wrap = n.unitize = n.toArray = n.splitColor = n.snap = n.shuffle = n.selector = n.random = n.pipe = n.normalize = n.mapRange = n.interpolate = n.gsap = n.getUnit = n.distribute = n.default = n.clamp = n._ticker = n._sortPropTweensByPriority = n._setDefaults = n._roundModifier = n._round = n._replaceRandom = n._renderComplexString = n._removeLinkedListItem = n._relExp = n._plugins = n._parseRelative = n._numWithUnitExp = n._numExp = n._missingPlugin = n._isUndefined = n._isString = n._getSetter = n._getProperty = n._getCache = n._forEachName = n._config = n._colorStringFilter = n._colorExp = n._checkPlugin = n.TweenMax = n.TweenLite = n.Tween = n.TimelineMax = n.TimelineLite = n.Timeline = n.Strong = n.SteppedEase = n.Sine = n.Quint = n.Quart = n.Quad = n.PropTween = n.Power4 = n.Power3 = n.Power2 = n.Power1 = n.Power0 = n.Linear = n.GSCache = n.Expo = n.Elastic = n.Cubic = n.Circ = n.Bounce = n.Back = n.Animation = void 0;
        var i = r(e("@babel/runtime/helpers/typeof"));

        function a(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }

        function o(e, t) {
            e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
        }
        /*!
         * GSAP 3.11.5
         * https://greensock.com
         *
         * @license Copyright 2008-2023, GreenSock. All rights reserved.
         * Subject to the terms at https://greensock.com/standard-license or for
         * Club GreenSock members, the agreement issued with that membership.
         * @author: Jack Doyle, jack@greensock.com
         */
        var s, u, l, c, h, d, f, p, v, m, g, y, _, x, b, w = {
                autoSleep: 120,
                force3D: "auto",
                nullTargetWarn: 1,
                units: {
                    lineHeight: ""
                }
            },
            T = {
                duration: .5,
                overwrite: !1,
                delay: 0
            },
            M = 1e8,
            S = 1e-8,
            E = 2 * Math.PI,
            A = E / 4,
            L = 0,
            C = Math.sqrt,
            R = Math.cos,
            k = Math.sin,
            P = function(e) {
                return "string" == typeof e
            },
            D = function(e) {
                return "function" == typeof e
            },
            I = function(e) {
                return "number" == typeof e
            },
            O = function(e) {
                return void 0 === e
            },
            N = function(e) {
                return "object" === (0, i.default)(e)
            },
            F = function(e) {
                return !1 !== e
            },
            U = function() {
                return "undefined" != typeof window
            },
            B = function(e) {
                return D(e) || P(e)
            },
            z = "function" == typeof ArrayBuffer && ArrayBuffer.isView || function() {},
            G = Array.isArray,
            H = /(?:-?\.?\d|\.)+/gi,
            V = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
            W = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
            j = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
            q = /[+-]=-?[.\d]+/,
            X = /[^,'"\[\]\s]+/gi,
            Y = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
            K = {},
            Z = {},
            J = function(e) {
                return (Z = Ee(e, K)) && In
            },
            Q = function(e, t) {
                return console.warn("Invalid property", e, "set to", t, "Missing plugin? gsap.registerPlugin()")
            },
            $ = function(e, t) {
                return !t && console.warn(e)
            },
            ee = function(e, t) {
                return e && (K[e] = t) && Z && (Z[e] = t) || K
            },
            te = function() {
                return 0
            },
            ne = {
                suppressEvents: !0,
                isStart: !0,
                kill: !1
            },
            re = {
                suppressEvents: !0,
                kill: !1
            },
            ie = {
                suppressEvents: !0
            },
            ae = {},
            oe = [],
            se = {},
            ue = {},
            le = {},
            ce = 30,
            he = [],
            de = "",
            fe = function(e) {
                var t, n, r = e[0];
                if (N(r) || D(r) || (e = [e]), !(t = (r._gsap || {}).harness)) {
                    for (n = he.length; n-- && !he[n].targetTest(r););
                    t = he[n]
                }
                for (n = e.length; n--;) e[n] && (e[n]._gsap || (e[n]._gsap = new Yt(e[n], t))) || e.splice(n, 1);
                return e
            },
            pe = function(e) {
                return e._gsap || fe(at(e))[0]._gsap
            },
            ve = function(e, t, n) {
                return (n = e[t]) && D(n) ? e[t]() : O(n) && e.getAttribute && e.getAttribute(t) || n
            },
            me = function(e, t) {
                return (e = e.split(",")).forEach(t) || e
            },
            ge = function(e) {
                return Math.round(1e5 * e) / 1e5 || 0
            },
            ye = function(e) {
                return Math.round(1e7 * e) / 1e7 || 0
            },
            _e = function(e, t) {
                var n = t.charAt(0),
                    r = parseFloat(t.substr(2));
                return e = parseFloat(e), "+" === n ? e + r : "-" === n ? e - r : "*" === n ? e * r : e / r
            },
            xe = function(e, t) {
                for (var n = t.length, r = 0; e.indexOf(t[r]) < 0 && ++r < n;);
                return r < n
            },
            be = function() {
                var e, t, n = oe.length,
                    r = oe.slice(0);
                for (se = {}, oe.length = 0, e = 0; e < n; e++)(t = r[e]) && t._lazy && (t.render(t._lazy[0], t._lazy[1], !0)._lazy = 0)
            },
            we = function(e, t, n, r) {
                oe.length && !u && be(), e.render(t, n, r || u && t < 0 && (e._initted || e._startAt)), oe.length && !u && be()
            },
            Te = function(e) {
                var t = parseFloat(e);
                return (t || 0 === t) && (e + "").match(X).length < 2 ? t : P(e) ? e.trim() : e
            },
            Me = function(e) {
                return e
            },
            Se = function(e, t) {
                for (var n in t) n in e || (e[n] = t[n]);
                return e
            },
            Ee = function(e, t) {
                for (var n in t) e[n] = t[n];
                return e
            },
            Ae = function e(t, n) {
                for (var r in n) "__proto__" !== r && "constructor" !== r && "prototype" !== r && (t[r] = N(n[r]) ? e(t[r] || (t[r] = {}), n[r]) : n[r]);
                return t
            },
            Le = function(e, t) {
                var n, r = {};
                for (n in e) n in t || (r[n] = e[n]);
                return r
            },
            Ce = function(e) {
                var t, n = e.parent || c,
                    r = e.keyframes ? (t = G(e.keyframes), function(e, n) {
                        for (var r in n) r in e || "duration" === r && t || "ease" === r || (e[r] = n[r])
                    }) : Se;
                if (F(e.inherit))
                    for (; n;) r(e, n.vars.defaults), n = n.parent || n._dp;
                return e
            },
            Re = function(e, t, n, r, i) {
                void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                var a, o = e[r];
                if (i)
                    for (a = t[i]; o && o[i] > a;) o = o._prev;
                return o ? (t._next = o._next, o._next = t) : (t._next = e[n], e[n] = t), t._next ? t._next._prev = t : e[r] = t, t._prev = o, t.parent = t._dp = e, t
            },
            ke = function(e, t, n, r) {
                void 0 === n && (n = "_first"), void 0 === r && (r = "_last");
                var i = t._prev,
                    a = t._next;
                i ? i._next = a : e[n] === t && (e[n] = a), a ? a._prev = i : e[r] === t && (e[r] = i), t._next = t._prev = t.parent = null
            },
            Pe = function(e, t) {
                e.parent && (!t || e.parent.autoRemoveChildren) && e.parent.remove(e), e._act = 0
            },
            De = function(e, t) {
                if (e && (!t || t._end > e._dur || t._start < 0))
                    for (var n = e; n;) n._dirty = 1, n = n.parent;
                return e
            },
            Ie = function(e, t, n, r) {
                return e._startAt && (u ? e._startAt.revert(re) : e.vars.immediateRender && !e.vars.autoRevert || e._startAt.render(t, !0, r))
            },
            Oe = function e(t) {
                return !t || t._ts && e(t.parent)
            },
            Ne = function(e) {
                return e._repeat ? Fe(e._tTime, e = e.duration() + e._rDelay) * e : 0
            },
            Fe = function(e, t) {
                var n = Math.floor(e /= t);
                return e && n === e ? n - 1 : n
            },
            Ue = function(e, t) {
                return (e - t._start) * t._ts + (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
            },
            Be = function(e) {
                return e._end = ye(e._start + (e._tDur / Math.abs(e._ts || e._rts || S) || 0))
            },
            ze = function(e, t) {
                var n = e._dp;
                return n && n.smoothChildTiming && e._ts && (e._start = ye(n._time - (e._ts > 0 ? t / e._ts : ((e._dirty ? e.totalDuration() : e._tDur) - t) / -e._ts)), Be(e), n._dirty || De(n, e)), e
            },
            Ge = function(e, t) {
                var n;
                if ((t._time || t._initted && !t._dur) && (n = Ue(e.rawTime(), t), (!t._dur || $e(0, t.totalDuration(), n) - t._tTime > S) && t.render(n, !0)), De(e, t)._dp && e._initted && e._time >= e._dur && e._ts) {
                    if (e._dur < e.duration())
                        for (n = e; n._dp;) n.rawTime() >= 0 && n.totalTime(n._tTime), n = n._dp;
                    e._zTime = -1e-8
                }
            },
            He = function(e, t, n, r) {
                return t.parent && Pe(t), t._start = ye((I(n) ? n : n || e !== c ? Ze(e, n, t) : e._time) + t._delay), t._end = ye(t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)), Re(e, t, "_first", "_last", e._sort ? "_start" : 0), qe(t) || (e._recent = t), r || Ge(e, t), e._ts < 0 && ze(e, e._tTime), e
            },
            Ve = function(e, t) {
                return (K.ScrollTrigger || Q("scrollTrigger", t)) && K.ScrollTrigger.create(t, e)
            },
            We = function(e, t, n, r, i) {
                return nn(e, t, i), e._initted ? !n && e._pt && !u && (e._dur && !1 !== e.vars.lazy || !e._dur && e.vars.lazy) && v !== Ot.frame ? (oe.push(e), e._lazy = [i, r], 1) : void 0 : 1
            },
            je = function e(t) {
                var n = t.parent;
                return n && n._ts && n._initted && !n._lock && (n.rawTime() < 0 || e(n))
            },
            qe = function(e) {
                var t = e.data;
                return "isFromStart" === t || "isStart" === t
            },
            Xe = function(e, t, n, r) {
                var i = e._repeat,
                    a = ye(t) || 0,
                    o = e._tTime / e._tDur;
                return o && !r && (e._time *= a / e._dur), e._dur = a, e._tDur = i ? i < 0 ? 1e10 : ye(a * (i + 1) + e._rDelay * i) : a, o > 0 && !r && ze(e, e._tTime = e._tDur * o), e.parent && Be(e), n || De(e.parent, e), e
            },
            Ye = function(e) {
                return e instanceof Zt ? De(e) : Xe(e, e._dur)
            },
            Ke = {
                _start: 0,
                endTime: te,
                totalDuration: te
            },
            Ze = function e(t, n, r) {
                var i, a, o, s = t.labels,
                    u = t._recent || Ke,
                    l = t.duration() >= M ? u.endTime(!1) : t._dur;
                return P(n) && (isNaN(n) || n in s) ? (a = n.charAt(0), o = "%" === n.substr(-1), i = n.indexOf("="), "<" === a || ">" === a ? (i >= 0 && (n = n.replace(/=/, "")), ("<" === a ? u._start : u.endTime(u._repeat >= 0)) + (parseFloat(n.substr(1)) || 0) * (o ? (i < 0 ? u : r).totalDuration() / 100 : 1)) : i < 0 ? (n in s || (s[n] = l), s[n]) : (a = parseFloat(n.charAt(i - 1) + n.substr(i + 1)), o && r && (a = a / 100 * (G(r) ? r[0] : r).totalDuration()), i > 1 ? e(t, n.substr(0, i - 1), r) + a : l + a)) : null == n ? l : +n
            },
            Je = function(e, t, n) {
                var r, i, a = I(t[1]),
                    o = (a ? 2 : 1) + (e < 2 ? 0 : 1),
                    s = t[o];
                if (a && (s.duration = t[1]), s.parent = n, e) {
                    for (r = s, i = n; i && !("immediateRender" in r);) r = i.vars.defaults || {}, i = F(i.vars.inherit) && i.parent;
                    s.immediateRender = F(r.immediateRender), e < 2 ? s.runBackwards = 1 : s.startAt = t[o - 1]
                }
                return new un(t[0], s, t[o + 1])
            },
            Qe = function(e, t) {
                return e || 0 === e ? t(e) : t
            },
            $e = function(e, t, n) {
                return n < e ? e : n > t ? t : n
            },
            et = function(e, t) {
                return P(e) && (t = Y.exec(e)) ? t[1] : ""
            },
            tt = function(e, t, n) {
                return Qe(n, (function(n) {
                    return $e(e, t, n)
                }))
            },
            nt = [].slice,
            rt = function(e, t) {
                return e && N(e) && "length" in e && (!t && !e.length || e.length - 1 in e && N(e[0])) && !e.nodeType && e !== h
            },
            it = function(e, t, n) {
                return void 0 === n && (n = []), e.forEach((function(e) {
                    var r;
                    return P(e) && !t || rt(e, 1) ? (r = n).push.apply(r, at(e)) : n.push(e)
                })) || n
            },
            at = function(e, t, n) {
                return l && !t && l.selector ? l.selector(e) : !P(e) || n || !d && Nt() ? G(e) ? it(e, n) : rt(e) ? nt.call(e, 0) : e ? [e] : [] : nt.call((t || f).querySelectorAll(e), 0)
            },
            ot = function(e) {
                return e = at(e)[0] || $("Invalid scope") || {},
                    function(t) {
                        var n = e.current || e.nativeElement || e;
                        return at(t, n.querySelectorAll ? n : n === e ? $("Invalid scope") || f.createElement("div") : e)
                    }
            },
            st = function(e) {
                return e.sort((function() {
                    return .5 - Math.random()
                }))
            },
            ut = function(e) {
                if (D(e)) return e;
                var t = N(e) ? e : {
                        each: e
                    },
                    n = Vt(t.ease),
                    r = t.from || 0,
                    i = parseFloat(t.base) || 0,
                    a = {},
                    o = r > 0 && r < 1,
                    s = isNaN(r) || o,
                    u = t.axis,
                    l = r,
                    c = r;
                return P(r) ? l = c = {
                        center: .5,
                        edges: .5,
                        end: 1
                    }[r] || 0 : !o && s && (l = r[0], c = r[1]),
                    function(e, o, h) {
                        var d, f, p, v, m, g, y, _, x, b = (h || t).length,
                            w = a[b];
                        if (!w) {
                            if (!(x = "auto" === t.grid ? 0 : (t.grid || [1, M])[1])) {
                                for (y = -M; y < (y = h[x++].getBoundingClientRect().left) && x < b;);
                                x--
                            }
                            for (w = a[b] = [], d = s ? Math.min(x, b) * l - .5 : r % x, f = x === M ? 0 : s ? b * c / x - .5 : r / x | 0, y = 0, _ = M, g = 0; g < b; g++) p = g % x - d, v = f - (g / x | 0), w[g] = m = u ? Math.abs("y" === u ? v : p) : C(p * p + v * v), m > y && (y = m), m < _ && (_ = m);
                            "random" === r && st(w), w.max = y - _, w.min = _, w.v = b = (parseFloat(t.amount) || parseFloat(t.each) * (x > b ? b - 1 : u ? "y" === u ? b / x : x : Math.max(x, b / x)) || 0) * ("edges" === r ? -1 : 1), w.b = b < 0 ? i - b : i, w.u = et(t.amount || t.each) || 0, n = n && b < 0 ? Gt(n) : n
                        }
                        return b = (w[e] - w.min) / w.max || 0, ye(w.b + (n ? n(b) : b) * w.v) + w.u
                    }
            },
            lt = function(e) {
                var t = Math.pow(10, ((e + "").split(".")[1] || "").length);
                return function(n) {
                    var r = ye(Math.round(parseFloat(n) / e) * e * t);
                    return (r - r % 1) / t + (I(n) ? 0 : et(n))
                }
            },
            ct = function(e, t) {
                var n, r, i = G(e);
                return !i && N(e) && (n = i = e.radius || M, e.values ? (e = at(e.values), (r = !I(e[0])) && (n *= n)) : e = lt(e.increment)), Qe(t, i ? D(e) ? function(t) {
                    return r = e(t), Math.abs(r - t) <= n ? r : t
                } : function(t) {
                    for (var i, a, o = parseFloat(r ? t.x : t), s = parseFloat(r ? t.y : 0), u = M, l = 0, c = e.length; c--;)(i = r ? (i = e[c].x - o) * i + (a = e[c].y - s) * a : Math.abs(e[c] - o)) < u && (u = i, l = c);
                    return l = !n || u <= n ? e[l] : t, r || l === t || I(t) ? l : l + et(t)
                } : lt(e))
            },
            ht = function(e, t, n, r) {
                return Qe(G(e) ? !t : !0 === n ? !!(n = 0) : !r, (function() {
                    return G(e) ? e[~~(Math.random() * e.length)] : (n = n || 1e-5) && (r = n < 1 ? Math.pow(10, (n + "").length - 2) : 1) && Math.floor(Math.round((e - n / 2 + Math.random() * (t - e + .99 * n)) / n) * n * r) / r
                }))
            },
            dt = function() {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                return function(e) {
                    return t.reduce((function(e, t) {
                        return t(e)
                    }), e)
                }
            },
            ft = function(e, t) {
                return function(n) {
                    return e(parseFloat(n)) + (t || et(n))
                }
            },
            pt = function(e, t, n) {
                return _t(e, t, 0, 1, n)
            },
            vt = function(e, t, n) {
                return Qe(n, (function(n) {
                    return e[~~t(n)]
                }))
            },
            mt = function e(t, n, r) {
                var i = n - t;
                return G(t) ? vt(t, e(0, t.length), n) : Qe(r, (function(e) {
                    return (i + (e - t) % i) % i + t
                }))
            },
            gt = function e(t, n, r) {
                var i = n - t,
                    a = 2 * i;
                return G(t) ? vt(t, e(0, t.length - 1), n) : Qe(r, (function(e) {
                    return t + ((e = (a + (e - t) % a) % a || 0) > i ? a - e : e)
                }))
            },
            yt = function(e) {
                for (var t, n, r, i, a = 0, o = ""; ~(t = e.indexOf("random(", a));) r = e.indexOf(")", t), i = "[" === e.charAt(t + 7), n = e.substr(t + 7, r - t - 7).match(i ? X : H), o += e.substr(a, t - a) + ht(i ? n : +n[0], i ? 0 : +n[1], +n[2] || 1e-5), a = r + 1;
                return o + e.substr(a, e.length - a)
            },
            _t = function(e, t, n, r, i) {
                var a = t - e,
                    o = r - n;
                return Qe(i, (function(t) {
                    return n + ((t - e) / a * o || 0)
                }))
            },
            xt = function e(t, n, r, i) {
                var a = isNaN(t + n) ? 0 : function(e) {
                    return (1 - e) * t + e * n
                };
                if (!a) {
                    var o, s, u, l, c, h = P(t),
                        d = {};
                    if (!0 === r && (i = 1) && (r = null), h) t = {
                        p: t
                    }, n = {
                        p: n
                    };
                    else if (G(t) && !G(n)) {
                        for (u = [], l = t.length, c = l - 2, s = 1; s < l; s++) u.push(e(t[s - 1], t[s]));
                        l--, a = function(e) {
                            e *= l;
                            var t = Math.min(c, ~~e);
                            return u[t](e - t)
                        }, r = n
                    } else i || (t = Ee(G(t) ? [] : {}, t));
                    if (!u) {
                        for (o in n) en.call(d, t, o, "get", n[o]);
                        a = function(e) {
                            return gn(e, d) || (h ? t.p : t)
                        }
                    }
                }
                return Qe(r, a)
            },
            bt = function(e, t, n) {
                var r, i, a, o = e.labels,
                    s = M;
                for (r in o)(i = o[r] - t) < 0 == !!n && i && s > (i = Math.abs(i)) && (a = r, s = i);
                return a
            },
            wt = function(e, t, n) {
                var r, i, a, o = e.vars,
                    s = o[t],
                    u = l,
                    c = e._ctx;
                if (s) return r = o[t + "Params"], i = o.callbackScope || e, n && oe.length && be(), c && (l = c), a = r ? s.apply(i, r) : s.call(i), l = u, a
            },
            Tt = function(e) {
                return Pe(e), e.scrollTrigger && e.scrollTrigger.kill(!!u), e.progress() < 1 && wt(e, "onInterrupt"), e
            },
            Mt = [],
            St = function(e) {
                if (U()) {
                    var t = (e = !e.name && e.default || e).name,
                        n = D(e),
                        r = t && !n && e.init ? function() {
                            this._props = []
                        } : e,
                        i = {
                            init: te,
                            render: gn,
                            add: en,
                            kill: _n,
                            modifier: yn,
                            rawVars: 0
                        },
                        a = {
                            targetTest: 0,
                            get: 0,
                            getSetter: fn,
                            aliases: {},
                            register: 0
                        };
                    if (Nt(), e !== r) {
                        if (ue[t]) return;
                        Se(r, Se(Le(e, i), a)), Ee(r.prototype, Ee(i, Le(e, a))), ue[r.prop = t] = r, e.targetTest && (he.push(r), ae[t] = 1), t = ("css" === t ? "CSS" : t.charAt(0).toUpperCase() + t.substr(1)) + "Plugin"
                    }
                    ee(t, r), e.register && e.register(In, r, wn)
                } else Mt.push(e)
            },
            Et = 255,
            At = {
                aqua: [0, Et, Et],
                lime: [0, Et, 0],
                silver: [192, 192, 192],
                black: [0, 0, 0],
                maroon: [128, 0, 0],
                teal: [0, 128, 128],
                blue: [0, 0, Et],
                navy: [0, 0, 128],
                white: [Et, Et, Et],
                olive: [128, 128, 0],
                yellow: [Et, Et, 0],
                orange: [Et, 165, 0],
                gray: [128, 128, 128],
                purple: [128, 0, 128],
                green: [0, 128, 0],
                red: [Et, 0, 0],
                pink: [Et, 192, 203],
                cyan: [0, Et, Et],
                transparent: [Et, Et, Et, 0]
            },
            Lt = function(e, t, n) {
                return (6 * (e += e < 0 ? 1 : e > 1 ? -1 : 0) < 1 ? t + (n - t) * e * 6 : e < .5 ? n : 3 * e < 2 ? t + (n - t) * (2 / 3 - e) * 6 : t) * Et + .5 | 0
            },
            Ct = function(e, t, n) {
                var r, i, a, o, s, u, l, c, h, d, f = e ? I(e) ? [e >> 16, e >> 8 & Et, e & Et] : 0 : At.black;
                if (!f) {
                    if ("," === e.substr(-1) && (e = e.substr(0, e.length - 1)), At[e]) f = At[e];
                    else if ("#" === e.charAt(0)) {
                        if (e.length < 6 && (r = e.charAt(1), i = e.charAt(2), a = e.charAt(3), e = "#" + r + r + i + i + a + a + (5 === e.length ? e.charAt(4) + e.charAt(4) : "")), 9 === e.length) return [(f = parseInt(e.substr(1, 6), 16)) >> 16, f >> 8 & Et, f & Et, parseInt(e.substr(7), 16) / 255];
                        f = [(e = parseInt(e.substr(1), 16)) >> 16, e >> 8 & Et, e & Et]
                    } else if ("hsl" === e.substr(0, 3))
                        if (f = d = e.match(H), t) {
                            if (~e.indexOf("=")) return f = e.match(V), n && f.length < 4 && (f[3] = 1), f
                        } else o = +f[0] % 360 / 360, s = +f[1] / 100, r = 2 * (u = +f[2] / 100) - (i = u <= .5 ? u * (s + 1) : u + s - u * s), f.length > 3 && (f[3] *= 1), f[0] = Lt(o + 1 / 3, r, i), f[1] = Lt(o, r, i), f[2] = Lt(o - 1 / 3, r, i);
                    else f = e.match(H) || At.transparent;
                    f = f.map(Number)
                }
                return t && !d && (r = f[0] / Et, i = f[1] / Et, a = f[2] / Et, u = ((l = Math.max(r, i, a)) + (c = Math.min(r, i, a))) / 2, l === c ? o = s = 0 : (h = l - c, s = u > .5 ? h / (2 - l - c) : h / (l + c), o = l === r ? (i - a) / h + (i < a ? 6 : 0) : l === i ? (a - r) / h + 2 : (r - i) / h + 4, o *= 60), f[0] = ~~(o + .5), f[1] = ~~(100 * s + .5), f[2] = ~~(100 * u + .5)), n && f.length < 4 && (f[3] = 1), f
            },
            Rt = function(e) {
                var t = [],
                    n = [],
                    r = -1;
                return e.split(Pt).forEach((function(e) {
                    var i = e.match(W) || [];
                    t.push.apply(t, i), n.push(r += i.length + 1)
                })), t.c = n, t
            },
            kt = function(e, t, n) {
                var r, i, a, o, s = "",
                    u = (e + s).match(Pt),
                    l = t ? "hsla(" : "rgba(",
                    c = 0;
                if (!u) return e;
                if (u = u.map((function(e) {
                        return (e = Ct(e, t, 1)) && l + (t ? e[0] + "," + e[1] + "%," + e[2] + "%," + e[3] : e.join(",")) + ")"
                    })), n && (a = Rt(e), (r = n.c).join(s) !== a.c.join(s)))
                    for (o = (i = e.replace(Pt, "1").split(W)).length - 1; c < o; c++) s += i[c] + (~r.indexOf(c) ? u.shift() || l + "0,0,0,0)" : (a.length ? a : u.length ? u : n).shift());
                if (!i)
                    for (o = (i = e.split(Pt)).length - 1; c < o; c++) s += i[c] + u[c];
                return s + i[o]
            },
            Pt = function() {
                var e, t = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";
                for (e in At) t += "|" + e + "\\b";
                return new RegExp(t + ")", "gi")
            }(),
            Dt = /hsl[a]?\(/,
            It = function(e) {
                var t, n = e.join(" ");
                if (Pt.lastIndex = 0, Pt.test(n)) return t = Dt.test(n), e[1] = kt(e[1], t), e[0] = kt(e[0], t, Rt(e[1])), !0
            },
            Ot = function() {
                var e, t, n, r, i, a, o = Date.now,
                    s = 500,
                    u = 33,
                    l = o(),
                    c = l,
                    v = 1e3 / 240,
                    m = v,
                    y = [],
                    _ = function n(h) {
                        var d, f, p, g, _ = o() - c,
                            x = !0 === h;
                        if (_ > s && (l += _ - u), ((d = (p = (c += _) - l) - m) > 0 || x) && (g = ++r.frame, i = p - 1e3 * r.time, r.time = p /= 1e3, m += d + (d >= v ? 4 : v - d), f = 1), x || (e = t(n)), f)
                            for (a = 0; a < y.length; a++) y[a](p, i, g, h)
                    };
                return r = {
                    time: 0,
                    frame: 0,
                    tick: function() {
                        _(!0)
                    },
                    deltaRatio: function(e) {
                        return i / (1e3 / (e || 60))
                    },
                    wake: function() {
                        p && (!d && U() && (h = d = window, f = h.document || {}, K.gsap = In, (h.gsapVersions || (h.gsapVersions = [])).push(In.version), J(Z || h.GreenSockGlobals || !h.gsap && h || {}), n = h.requestAnimationFrame, Mt.forEach(St)), e && r.sleep(), t = n || function(e) {
                            return setTimeout(e, m - 1e3 * r.time + 1 | 0)
                        }, g = 1, _(2))
                    },
                    sleep: function() {
                        (n ? h.cancelAnimationFrame : clearTimeout)(e), g = 0, t = te
                    },
                    lagSmoothing: function(e, t) {
                        s = e || 1 / 0, u = Math.min(t || 33, s)
                    },
                    fps: function(e) {
                        v = 1e3 / (e || 240), m = 1e3 * r.time + v
                    },
                    add: function(e, t, n) {
                        var i = t ? function(t, n, a, o) {
                            e(t, n, a, o), r.remove(i)
                        } : e;
                        return r.remove(e), y[n ? "unshift" : "push"](i), Nt(), i
                    },
                    remove: function(e, t) {
                        ~(t = y.indexOf(e)) && y.splice(t, 1) && a >= t && a--
                    },
                    _listeners: y
                }
            }(),
            Nt = function() {
                return !g && Ot.wake()
            },
            Ft = {},
            Ut = /^[\d.\-M][\d.\-,\s]/,
            Bt = /["']/g,
            zt = function(e) {
                for (var t, n, r, i = {}, a = e.substr(1, e.length - 3).split(":"), o = a[0], s = 1, u = a.length; s < u; s++) n = a[s], t = s !== u - 1 ? n.lastIndexOf(",") : n.length, r = n.substr(0, t), i[o] = isNaN(r) ? r.replace(Bt, "").trim() : +r, o = n.substr(t + 1).trim();
                return i
            },
            Gt = function(e) {
                return function(t) {
                    return 1 - e(1 - t)
                }
            },
            Ht = function e(t, n) {
                for (var r, i = t._first; i;) i instanceof Zt ? e(i, n) : !i.vars.yoyoEase || i._yoyo && i._repeat || i._yoyo === n || (i.timeline ? e(i.timeline, n) : (r = i._ease, i._ease = i._yEase, i._yEase = r, i._yoyo = n)), i = i._next
            },
            Vt = function(e, t) {
                return e && (D(e) ? e : Ft[e] || function(e) {
                    var t, n, r, i, a = (e + "").split("("),
                        o = Ft[a[0]];
                    return o && a.length > 1 && o.config ? o.config.apply(null, ~e.indexOf("{") ? [zt(a[1])] : (t = e, n = t.indexOf("(") + 1, r = t.indexOf(")"), i = t.indexOf("(", n), t.substring(n, ~i && i < r ? t.indexOf(")", r + 1) : r)).split(",").map(Te)) : Ft._CE && Ut.test(e) ? Ft._CE("", e) : o
                }(e)) || t
            },
            Wt = function(e, t, n, r) {
                void 0 === n && (n = function(e) {
                    return 1 - t(1 - e)
                }), void 0 === r && (r = function(e) {
                    return e < .5 ? t(2 * e) / 2 : 1 - t(2 * (1 - e)) / 2
                });
                var i, a = {
                    easeIn: t,
                    easeOut: n,
                    easeInOut: r
                };
                return me(e, (function(e) {
                    for (var t in Ft[e] = K[e] = a, Ft[i = e.toLowerCase()] = n, a) Ft[i + ("easeIn" === t ? ".in" : "easeOut" === t ? ".out" : ".inOut")] = Ft[e + "." + t] = a[t]
                })), a
            },
            jt = function(e) {
                return function(t) {
                    return t < .5 ? (1 - e(1 - 2 * t)) / 2 : .5 + e(2 * (t - .5)) / 2
                }
            },
            qt = function e(t, n, r) {
                var i = n >= 1 ? n : 1,
                    a = (r || (t ? .3 : .45)) / (n < 1 ? n : 1),
                    o = a / E * (Math.asin(1 / i) || 0),
                    s = function(e) {
                        return 1 === e ? 1 : i * Math.pow(2, -10 * e) * k((e - o) * a) + 1
                    },
                    u = "out" === t ? s : "in" === t ? function(e) {
                        return 1 - s(1 - e)
                    } : jt(s);
                return a = E / a, u.config = function(n, r) {
                    return e(t, n, r)
                }, u
            },
            Xt = function e(t, n) {
                void 0 === n && (n = 1.70158);
                var r = function(e) {
                        return e ? --e * e * ((n + 1) * e + n) + 1 : 0
                    },
                    i = "out" === t ? r : "in" === t ? function(e) {
                        return 1 - r(1 - e)
                    } : jt(r);
                return i.config = function(n) {
                    return e(t, n)
                }, i
            };
        n._ticker = Ot, n._colorStringFilter = It, n._colorExp = Pt, n.splitColor = Ct, n.interpolate = xt, n.mapRange = _t, n._replaceRandom = yt, n.wrapYoyo = gt, n.wrap = mt, n.normalize = pt, n.unitize = ft, n.pipe = dt, n.random = ht, n.snap = ct, n._roundModifier = lt, n.distribute = ut, n.shuffle = st, n.selector = ot, n.toArray = at, n.clamp = tt, n.getUnit = et, n._removeLinkedListItem = ke, n._setDefaults = Se, n._parseRelative = _e, n._round = ge, n._forEachName = me, n._getProperty = ve, n._getCache = pe, n._plugins = ue, n._missingPlugin = Q, n._relExp = q, n._numWithUnitExp = W, n._numExp = V, n._isUndefined = O, n._isString = P, n._config = w, me("Linear,Quad,Cubic,Quart,Quint,Strong", (function(e, t) {
            var n = t < 5 ? t + 1 : t;
            Wt(e + ",Power" + (n - 1), t ? function(e) {
                return Math.pow(e, n)
            } : function(e) {
                return e
            }, (function(e) {
                return 1 - Math.pow(1 - e, n)
            }), (function(e) {
                return e < .5 ? Math.pow(2 * e, n) / 2 : 1 - Math.pow(2 * (1 - e), n) / 2
            }))
        })), Ft.Linear.easeNone = Ft.none = Ft.Linear.easeIn, Wt("Elastic", qt("in"), qt("out"), qt()), y = 7.5625, x = 1 / (_ = 2.75), Wt("Bounce", (function(e) {
            return 1 - b(1 - e)
        }), b = function(e) {
            return e < x ? y * e * e : e < .7272727272727273 ? y * Math.pow(e - 1.5 / _, 2) + .75 : e < .9090909090909092 ? y * (e -= 2.25 / _) * e + .9375 : y * Math.pow(e - 2.625 / _, 2) + .984375
        }), Wt("Expo", (function(e) {
            return e ? Math.pow(2, 10 * (e - 1)) : 0
        })), Wt("Circ", (function(e) {
            return -(C(1 - e * e) - 1)
        })), Wt("Sine", (function(e) {
            return 1 === e ? 1 : 1 - R(e * A)
        })), Wt("Back", Xt("in"), Xt("out"), Xt()), Ft.SteppedEase = Ft.steps = K.SteppedEase = {
            config: function(e, t) {
                void 0 === e && (e = 1);
                var n = 1 / e,
                    r = e + (t ? 0 : 1),
                    i = t ? 1 : 0;
                return function(e) {
                    return ((r * $e(0, .99999999, e) | 0) + i) * n
                }
            }
        }, T.ease = Ft["quad.out"], me("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", (function(e) {
            return de += e + "," + e + "Params,"
        }));
        var Yt = function(e, t) {
            this.id = L++, e._gsap = this, this.target = e, this.harness = t, this.get = t ? t.get : ve, this.set = t ? t.getSetter : fn
        };
        n.GSCache = Yt;
        var Kt = function() {
            function e(e) {
                this.vars = e, this._delay = +e.delay || 0, (this._repeat = e.repeat === 1 / 0 ? -2 : e.repeat || 0) && (this._rDelay = e.repeatDelay || 0, this._yoyo = !!e.yoyo || !!e.yoyoEase), this._ts = 1, Xe(this, +e.duration, 1, 1), this.data = e.data, l && (this._ctx = l, l.data.push(this)), g || Ot.wake()
            }
            var t = e.prototype;
            return t.delay = function(e) {
                return e || 0 === e ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + e - this._delay), this._delay = e, this) : this._delay
            }, t.duration = function(e) {
                return arguments.length ? this.totalDuration(this._repeat > 0 ? e + (e + this._rDelay) * this._repeat : e) : this.totalDuration() && this._dur
            }, t.totalDuration = function(e) {
                return arguments.length ? (this._dirty = 0, Xe(this, this._repeat < 0 ? e : (e - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur
            }, t.totalTime = function(e, t) {
                if (Nt(), !arguments.length) return this._tTime;
                var n = this._dp;
                if (n && n.smoothChildTiming && this._ts) {
                    for (ze(this, e), !n._dp || n.parent || Ge(n, this); n && n.parent;) n.parent._time !== n._start + (n._ts >= 0 ? n._tTime / n._ts : (n.totalDuration() - n._tTime) / -n._ts) && n.totalTime(n._tTime, !0), n = n.parent;
                    !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && e < this._tDur || this._ts < 0 && e > 0 || !this._tDur && !e) && He(this._dp, this, this._start - this._delay)
                }
                return (this._tTime !== e || !this._dur && !t || this._initted && Math.abs(this._zTime) === S || !e && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = e), we(this, e, t)), this
            }, t.time = function(e, t) {
                return arguments.length ? this.totalTime(Math.min(this.totalDuration(), e + Ne(this)) % (this._dur + this._rDelay) || (e ? this._dur : 0), t) : this._time
            }, t.totalProgress = function(e, t) {
                return arguments.length ? this.totalTime(this.totalDuration() * e, t) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio
            }, t.progress = function(e, t) {
                return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? e : 1 - e) + Ne(this), t) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio
            }, t.iteration = function(e, t) {
                var n = this.duration() + this._rDelay;
                return arguments.length ? this.totalTime(this._time + (e - 1) * n, t) : this._repeat ? Fe(this._tTime, n) + 1 : 1
            }, t.timeScale = function(e) {
                if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
                if (this._rts === e) return this;
                var t = this.parent && this._ts ? Ue(this.parent._time, this) : this._tTime;
                return this._rts = +e || 0, this._ts = this._ps || -1e-8 === e ? 0 : this._rts, this.totalTime($e(-Math.abs(this._delay), this._tDur, t), !0), Be(this),
                    function(e) {
                        for (var t = e.parent; t && t.parent;) t._dirty = 1, t.totalDuration(), t = t.parent;
                        return e
                    }(this)
            }, t.paused = function(e) {
                return arguments.length ? (this._ps !== e && (this._ps = e, e ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (Nt(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && Math.abs(this._zTime) !== S && (this._tTime -= S)))), this) : this._ps
            }, t.startTime = function(e) {
                if (arguments.length) {
                    this._start = e;
                    var t = this.parent || this._dp;
                    return t && (t._sort || !this.parent) && He(t, this, e - this._delay), this
                }
                return this._start
            }, t.endTime = function(e) {
                return this._start + (F(e) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1)
            }, t.rawTime = function(e) {
                var t = this.parent || this._dp;
                return t ? e && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? Ue(t.rawTime(e), this) : this._tTime : this._tTime
            }, t.revert = function(e) {
                void 0 === e && (e = ie);
                var t = u;
                return u = e, (this._initted || this._startAt) && (this.timeline && this.timeline.revert(e), this.totalTime(-.01, e.suppressEvents)), "nested" !== this.data && !1 !== e.kill && this.kill(), u = t, this
            }, t.globalTime = function(e) {
                for (var t = this, n = arguments.length ? e : t.rawTime(); t;) n = t._start + n / (t._ts || 1), t = t._dp;
                return !this.parent && this._sat ? this._sat.vars.immediateRender ? -1 : this._sat.globalTime(e) : n
            }, t.repeat = function(e) {
                return arguments.length ? (this._repeat = e === 1 / 0 ? -2 : e, Ye(this)) : -2 === this._repeat ? 1 / 0 : this._repeat
            }, t.repeatDelay = function(e) {
                if (arguments.length) {
                    var t = this._time;
                    return this._rDelay = e, Ye(this), t ? this.time(t) : this
                }
                return this._rDelay
            }, t.yoyo = function(e) {
                return arguments.length ? (this._yoyo = e, this) : this._yoyo
            }, t.seek = function(e, t) {
                return this.totalTime(Ze(this, e), F(t))
            }, t.restart = function(e, t) {
                return this.play().totalTime(e ? -this._delay : 0, F(t))
            }, t.play = function(e, t) {
                return null != e && this.seek(e, t), this.reversed(!1).paused(!1)
            }, t.reverse = function(e, t) {
                return null != e && this.seek(e || this.totalDuration(), t), this.reversed(!0).paused(!1)
            }, t.pause = function(e, t) {
                return null != e && this.seek(e, t), this.paused(!0)
            }, t.resume = function() {
                return this.paused(!1)
            }, t.reversed = function(e) {
                return arguments.length ? (!!e !== this.reversed() && this.timeScale(-this._rts || (e ? -1e-8 : 0)), this) : this._rts < 0
            }, t.invalidate = function() {
                return this._initted = this._act = 0, this._zTime = -1e-8, this
            }, t.isActive = function() {
                var e, t = this.parent || this._dp,
                    n = this._start;
                return !(t && !(this._ts && this._initted && t.isActive() && (e = t.rawTime(!0)) >= n && e < this.endTime(!0) - S))
            }, t.eventCallback = function(e, t, n) {
                var r = this.vars;
                return arguments.length > 1 ? (t ? (r[e] = t, n && (r[e + "Params"] = n), "onUpdate" === e && (this._onUpdate = t)) : delete r[e], this) : r[e]
            }, t.then = function(e) {
                var t = this;
                return new Promise((function(n) {
                    var r = D(e) ? e : Me,
                        i = function() {
                            var e = t.then;
                            t.then = null, D(r) && (r = r(t)) && (r.then || r === t) && (t.then = e), n(r), t.then = e
                        };
                    t._initted && 1 === t.totalProgress() && t._ts >= 0 || !t._tTime && t._ts < 0 ? i() : t._prom = i
                }))
            }, t.kill = function() {
                Tt(this)
            }, e
        }();
        n.Animation = Kt, Se(Kt.prototype, {
            _time: 0,
            _start: 0,
            _end: 0,
            _tTime: 0,
            _tDur: 0,
            _dirty: 0,
            _repeat: 0,
            _yoyo: !1,
            parent: null,
            _initted: !1,
            _rDelay: 0,
            _ts: 1,
            _dp: 0,
            ratio: 0,
            _zTime: -1e-8,
            _prom: 0,
            _ps: !1,
            _rts: 1
        });
        var Zt = function(e) {
            function t(t, n) {
                var r;
                return void 0 === t && (t = {}), (r = e.call(this, t) || this).labels = {}, r.smoothChildTiming = !!t.smoothChildTiming, r.autoRemoveChildren = !!t.autoRemoveChildren, r._sort = F(t.sortChildren), c && He(t.parent || c, a(r), n), t.reversed && r.reverse(), t.paused && r.paused(!0), t.scrollTrigger && Ve(a(r), t.scrollTrigger), r
            }
            o(t, e);
            var n = t.prototype;
            return n.to = function(e, t, n) {
                return Je(0, arguments, this), this
            }, n.from = function(e, t, n) {
                return Je(1, arguments, this), this
            }, n.fromTo = function(e, t, n, r) {
                return Je(2, arguments, this), this
            }, n.set = function(e, t, n) {
                return t.duration = 0, t.parent = this, Ce(t).repeatDelay || (t.repeat = 0), t.immediateRender = !!t.immediateRender, new un(e, t, Ze(this, n), 1), this
            }, n.call = function(e, t, n) {
                return He(this, un.delayedCall(0, e, t), n)
            }, n.staggerTo = function(e, t, n, r, i, a, o) {
                return n.duration = t, n.stagger = n.stagger || r, n.onComplete = a, n.onCompleteParams = o, n.parent = this, new un(e, n, Ze(this, i)), this
            }, n.staggerFrom = function(e, t, n, r, i, a, o) {
                return n.runBackwards = 1, Ce(n).immediateRender = F(n.immediateRender), this.staggerTo(e, t, n, r, i, a, o)
            }, n.staggerFromTo = function(e, t, n, r, i, a, o, s) {
                return r.startAt = n, Ce(r).immediateRender = F(r.immediateRender), this.staggerTo(e, t, r, i, a, o, s)
            }, n.render = function(e, t, n) {
                var r, i, a, o, s, l, h, d, f, p, v, m, g = this._time,
                    y = this._dirty ? this.totalDuration() : this._tDur,
                    _ = this._dur,
                    x = e <= 0 ? 0 : ye(e),
                    b = this._zTime < 0 != e < 0 && (this._initted || !_);
                if (this !== c && x > y && e >= 0 && (x = y), x !== this._tTime || n || b) {
                    if (g !== this._time && _ && (x += this._time - g, e += this._time - g), r = x, f = this._start, l = !(d = this._ts), b && (_ || (g = this._zTime), (e || !t) && (this._zTime = e)), this._repeat) {
                        if (v = this._yoyo, s = _ + this._rDelay, this._repeat < -1 && e < 0) return this.totalTime(100 * s + e, t, n);
                        if (r = ye(x % s), x === y ? (o = this._repeat, r = _) : ((o = ~~(x / s)) && o === x / s && (r = _, o--), r > _ && (r = _)), p = Fe(this._tTime, s), !g && this._tTime && p !== o && this._tTime - p * s - this._dur <= 0 && (p = o), v && 1 & o && (r = _ - r, m = 1), o !== p && !this._lock) {
                            var w = v && 1 & p,
                                T = w === (v && 1 & o);
                            if (o < p && (w = !w), g = w ? 0 : _, this._lock = 1, this.render(g || (m ? 0 : ye(o * s)), t, !_)._lock = 0, this._tTime = x, !t && this.parent && wt(this, "onRepeat"), this.vars.repeatRefresh && !m && (this.invalidate()._lock = 1), g && g !== this._time || l !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) return this;
                            if (_ = this._dur, y = this._tDur, T && (this._lock = 2, g = w ? _ : -1e-4, this.render(g, !0), this.vars.repeatRefresh && !m && this.invalidate()), this._lock = 0, !this._ts && !l) return this;
                            Ht(this, m)
                        }
                    }
                    if (this._hasPause && !this._forcing && this._lock < 2 && (h = function(e, t, n) {
                            var r;
                            if (n > t)
                                for (r = e._first; r && r._start <= n;) {
                                    if ("isPause" === r.data && r._start > t) return r;
                                    r = r._next
                                } else
                                    for (r = e._last; r && r._start >= n;) {
                                        if ("isPause" === r.data && r._start < t) return r;
                                        r = r._prev
                                    }
                        }(this, ye(g), ye(r)), h && (x -= r - (r = h._start))), this._tTime = x, this._time = r, this._act = !d, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = e, g = 0), !g && r && !t && !o && (wt(this, "onStart"), this._tTime !== x)) return this;
                    if (r >= g && e >= 0)
                        for (i = this._first; i;) {
                            if (a = i._next, (i._act || r >= i._start) && i._ts && h !== i) {
                                if (i.parent !== this) return this.render(e, t, n);
                                if (i.render(i._ts > 0 ? (r - i._start) * i._ts : (i._dirty ? i.totalDuration() : i._tDur) + (r - i._start) * i._ts, t, n), r !== this._time || !this._ts && !l) {
                                    h = 0, a && (x += this._zTime = -1e-8);
                                    break
                                }
                            }
                            i = a
                        } else {
                            i = this._last;
                            for (var M = e < 0 ? e : r; i;) {
                                if (a = i._prev, (i._act || M <= i._end) && i._ts && h !== i) {
                                    if (i.parent !== this) return this.render(e, t, n);
                                    if (i.render(i._ts > 0 ? (M - i._start) * i._ts : (i._dirty ? i.totalDuration() : i._tDur) + (M - i._start) * i._ts, t, n || u && (i._initted || i._startAt)), r !== this._time || !this._ts && !l) {
                                        h = 0, a && (x += this._zTime = M ? -1e-8 : S);
                                        break
                                    }
                                }
                                i = a
                            }
                        }
                    if (h && !t && (this.pause(), h.render(r >= g ? 0 : -1e-8)._zTime = r >= g ? 1 : -1, this._ts)) return this._start = f, Be(this), this.render(e, t, n);
                    this._onUpdate && !t && wt(this, "onUpdate", !0), (x === y && this._tTime >= this.totalDuration() || !x && g) && (f !== this._start && Math.abs(d) === Math.abs(this._ts) || this._lock || ((e || !_) && (x === y && this._ts > 0 || !x && this._ts < 0) && Pe(this, 1), t || e < 0 && !g || !x && !g && y || (wt(this, x === y && e >= 0 ? "onComplete" : "onReverseComplete", !0), this._prom && !(x < y && this.timeScale() > 0) && this._prom())))
                }
                return this
            }, n.add = function(e, t) {
                var n = this;
                if (I(t) || (t = Ze(this, t, e)), !(e instanceof Kt)) {
                    if (G(e)) return e.forEach((function(e) {
                        return n.add(e, t)
                    })), this;
                    if (P(e)) return this.addLabel(e, t);
                    if (!D(e)) return this;
                    e = un.delayedCall(0, e)
                }
                return this !== e ? He(this, e, t) : this
            }, n.getChildren = function(e, t, n, r) {
                void 0 === e && (e = !0), void 0 === t && (t = !0), void 0 === n && (n = !0), void 0 === r && (r = -M);
                for (var i = [], a = this._first; a;) a._start >= r && (a instanceof un ? t && i.push(a) : (n && i.push(a), e && i.push.apply(i, a.getChildren(!0, t, n)))), a = a._next;
                return i
            }, n.getById = function(e) {
                for (var t = this.getChildren(1, 1, 1), n = t.length; n--;)
                    if (t[n].vars.id === e) return t[n]
            }, n.remove = function(e) {
                return P(e) ? this.removeLabel(e) : D(e) ? this.killTweensOf(e) : (ke(this, e), e === this._recent && (this._recent = this._last), De(this))
            }, n.totalTime = function(t, n) {
                return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = ye(Ot.time - (this._ts > 0 ? t / this._ts : (this.totalDuration() - t) / -this._ts))), e.prototype.totalTime.call(this, t, n), this._forcing = 0, this) : this._tTime
            }, n.addLabel = function(e, t) {
                return this.labels[e] = Ze(this, t), this
            }, n.removeLabel = function(e) {
                return delete this.labels[e], this
            }, n.addPause = function(e, t, n) {
                var r = un.delayedCall(0, t || te, n);
                return r.data = "isPause", this._hasPause = 1, He(this, r, Ze(this, e))
            }, n.removePause = function(e) {
                var t = this._first;
                for (e = Ze(this, e); t;) t._start === e && "isPause" === t.data && Pe(t), t = t._next
            }, n.killTweensOf = function(e, t, n) {
                for (var r = this.getTweensOf(e, n), i = r.length; i--;) Jt !== r[i] && r[i].kill(e, t);
                return this
            }, n.getTweensOf = function(e, t) {
                for (var n, r = [], i = at(e), a = this._first, o = I(t); a;) a instanceof un ? xe(a._targets, i) && (o ? (!Jt || a._initted && a._ts) && a.globalTime(0) <= t && a.globalTime(a.totalDuration()) > t : !t || a.isActive()) && r.push(a) : (n = a.getTweensOf(i, t)).length && r.push.apply(r, n), a = a._next;
                return r
            }, n.tweenTo = function(e, t) {
                t = t || {};
                var n, r = this,
                    i = Ze(r, e),
                    a = t,
                    o = a.startAt,
                    s = a.onStart,
                    u = a.onStartParams,
                    l = a.immediateRender,
                    c = un.to(r, Se({
                        ease: t.ease || "none",
                        lazy: !1,
                        immediateRender: !1,
                        time: i,
                        overwrite: "auto",
                        duration: t.duration || Math.abs((i - (o && "time" in o ? o.time : r._time)) / r.timeScale()) || S,
                        onStart: function() {
                            if (r.pause(), !n) {
                                var e = t.duration || Math.abs((i - (o && "time" in o ? o.time : r._time)) / r.timeScale());
                                c._dur !== e && Xe(c, e, 0, 1).render(c._time, !0, !0), n = 1
                            }
                            s && s.apply(c, u || [])
                        }
                    }, t));
                return l ? c.render(0) : c
            }, n.tweenFromTo = function(e, t, n) {
                return this.tweenTo(t, Se({
                    startAt: {
                        time: Ze(this, e)
                    }
                }, n))
            }, n.recent = function() {
                return this._recent
            }, n.nextLabel = function(e) {
                return void 0 === e && (e = this._time), bt(this, Ze(this, e))
            }, n.previousLabel = function(e) {
                return void 0 === e && (e = this._time), bt(this, Ze(this, e), 1)
            }, n.currentLabel = function(e) {
                return arguments.length ? this.seek(e, !0) : this.previousLabel(this._time + S)
            }, n.shiftChildren = function(e, t, n) {
                void 0 === n && (n = 0);
                for (var r, i = this._first, a = this.labels; i;) i._start >= n && (i._start += e, i._end += e), i = i._next;
                if (t)
                    for (r in a) a[r] >= n && (a[r] += e);
                return De(this)
            }, n.invalidate = function(t) {
                var n = this._first;
                for (this._lock = 0; n;) n.invalidate(t), n = n._next;
                return e.prototype.invalidate.call(this, t)
            }, n.clear = function(e) {
                void 0 === e && (e = !0);
                for (var t, n = this._first; n;) t = n._next, this.remove(n), n = t;
                return this._dp && (this._time = this._tTime = this._pTime = 0), e && (this.labels = {}), De(this)
            }, n.totalDuration = function(e) {
                var t, n, r, i = 0,
                    a = this,
                    o = a._last,
                    s = M;
                if (arguments.length) return a.timeScale((a._repeat < 0 ? a.duration() : a.totalDuration()) / (a.reversed() ? -e : e));
                if (a._dirty) {
                    for (r = a.parent; o;) t = o._prev, o._dirty && o.totalDuration(), (n = o._start) > s && a._sort && o._ts && !a._lock ? (a._lock = 1, He(a, o, n - o._delay, 1)._lock = 0) : s = n, n < 0 && o._ts && (i -= n, (!r && !a._dp || r && r.smoothChildTiming) && (a._start += n / a._ts, a._time -= n, a._tTime -= n), a.shiftChildren(-n, !1, -Infinity), s = 0), o._end > i && o._ts && (i = o._end), o = t;
                    Xe(a, a === c && a._time > i ? a._time : i, 1, 1), a._dirty = 0
                }
                return a._tDur
            }, t.updateRoot = function(e) {
                if (c._ts && (we(c, Ue(e, c)), v = Ot.frame), Ot.frame >= ce) {
                    ce += w.autoSleep || 120;
                    var t = c._first;
                    if ((!t || !t._ts) && w.autoSleep && Ot._listeners.length < 2) {
                        for (; t && !t._ts;) t = t._next;
                        t || Ot.sleep()
                    }
                }
            }, t
        }(Kt);
        n.TimelineLite = n.TimelineMax = n.Timeline = Zt, Se(Zt.prototype, {
            _lock: 0,
            _hasPause: 0,
            _forcing: 0
        });
        var Jt, Qt, $t = function(e, t, n, r, i, a, o) {
                var s, u, l, c, h, d, f, p, v = new wn(this._pt, e, t, 0, 1, mn, null, i),
                    m = 0,
                    g = 0;
                for (v.b = n, v.e = r, n += "", (f = ~(r += "").indexOf("random(")) && (r = yt(r)), a && (a(p = [n, r], e, t), n = p[0], r = p[1]), u = n.match(j) || []; s = j.exec(r);) c = s[0], h = r.substring(m, s.index), l ? l = (l + 1) % 5 : "rgba(" === h.substr(-5) && (l = 1), c !== u[g++] && (d = parseFloat(u[g - 1]) || 0, v._pt = {
                    _next: v._pt,
                    p: h || 1 === g ? h : ",",
                    s: d,
                    c: "=" === c.charAt(1) ? _e(d, c) - d : parseFloat(c) - d,
                    m: l && l < 4 ? Math.round : 0
                }, m = j.lastIndex);
                return v.c = m < r.length ? r.substring(m, r.length) : "", v.fp = o, (q.test(r) || f) && (v.e = 0), this._pt = v, v
            },
            en = function(e, t, n, r, i, a, o, s, u, l) {
                D(r) && (r = r(i || 0, e, a));
                var c, h = e[t],
                    d = "get" !== n ? n : D(h) ? u ? e[t.indexOf("set") || !D(e["get" + t.substr(3)]) ? t : "get" + t.substr(3)](u) : e[t]() : h,
                    f = D(h) ? u ? hn : cn : ln;
                if (P(r) && (~r.indexOf("random(") && (r = yt(r)), "=" === r.charAt(1) && ((c = _e(d, r) + (et(d) || 0)) || 0 === c) && (r = c)), !l || d !== r || Qt) return isNaN(d * r) || "" === r ? (!h && !(t in e) && Q(t, r), $t.call(this, e, t, d, r, f, s || w.stringFilter, u)) : (c = new wn(this._pt, e, t, +d || 0, r - (d || 0), "boolean" == typeof h ? vn : pn, 0, f), u && (c.fp = u), o && c.modifier(o, this, e), this._pt = c)
            },
            tn = function(e, t, n, r, i, a) {
                var o, s, u, l;
                if (ue[e] && !1 !== (o = new ue[e]).init(i, o.rawVars ? t[e] : function(e, t, n, r, i) {
                        if (D(e) && (e = an(e, i, t, n, r)), !N(e) || e.style && e.nodeType || G(e) || z(e)) return P(e) ? an(e, i, t, n, r) : e;
                        var a, o = {};
                        for (a in e) o[a] = an(e[a], i, t, n, r);
                        return o
                    }(t[e], r, i, a, n), n, r, a) && (n._pt = s = new wn(n._pt, i, e, 0, 1, o.render, o, 0, o.priority), n !== m))
                    for (u = n._ptLookup[n._targets.indexOf(i)], l = o._props.length; l--;) u[o._props[l]] = s;
                return o
            },
            nn = function e(t, n, r) {
                var i, a, o, l, h, d, f, p, v, m, g, y, _, x = t.vars,
                    b = x.ease,
                    w = x.startAt,
                    E = x.immediateRender,
                    A = x.lazy,
                    L = x.onUpdate,
                    C = x.onUpdateParams,
                    R = x.callbackScope,
                    k = x.runBackwards,
                    P = x.yoyoEase,
                    D = x.keyframes,
                    I = x.autoRevert,
                    O = t._dur,
                    N = t._startAt,
                    U = t._targets,
                    B = t.parent,
                    z = B && "nested" === B.data ? B.vars.targets : U,
                    G = "auto" === t._overwrite && !s,
                    H = t.timeline;
                if (H && (!D || !b) && (b = "none"), t._ease = Vt(b, T.ease), t._yEase = P ? Gt(Vt(!0 === P ? b : P, T.ease)) : 0, P && t._yoyo && !t._repeat && (P = t._yEase, t._yEase = t._ease, t._ease = P), t._from = !H && !!x.runBackwards, !H || D && !x.stagger) {
                    if (y = (p = U[0] ? pe(U[0]).harness : 0) && x[p.prop], i = Le(x, ae), N && (N._zTime < 0 && N.progress(1), n < 0 && k && E && !I ? N.render(-1, !0) : N.revert(k && O ? re : ne), N._lazy = 0), w) {
                        if (Pe(t._startAt = un.set(U, Se({
                                data: "isStart",
                                overwrite: !1,
                                parent: B,
                                immediateRender: !0,
                                lazy: !N && F(A),
                                startAt: null,
                                delay: 0,
                                onUpdate: L,
                                onUpdateParams: C,
                                callbackScope: R,
                                stagger: 0
                            }, w))), t._startAt._dp = 0, t._startAt._sat = t, n < 0 && (u || !E && !I) && t._startAt.revert(re), E && O && n <= 0 && r <= 0) return void(n && (t._zTime = n))
                    } else if (k && O && !N)
                        if (n && (E = !1), o = Se({
                                overwrite: !1,
                                data: "isFromStart",
                                lazy: E && !N && F(A),
                                immediateRender: E,
                                stagger: 0,
                                parent: B
                            }, i), y && (o[p.prop] = y), Pe(t._startAt = un.set(U, o)), t._startAt._dp = 0, t._startAt._sat = t, n < 0 && (u ? t._startAt.revert(re) : t._startAt.render(-1, !0)), t._zTime = n, E) {
                            if (!n) return
                        } else e(t._startAt, S, S);
                    for (t._pt = t._ptCache = 0, A = O && F(A) || A && !O, a = 0; a < U.length; a++) {
                        if (f = (h = U[a])._gsap || fe(U)[a]._gsap, t._ptLookup[a] = m = {}, se[f.id] && oe.length && be(), g = z === U ? a : z.indexOf(h), p && !1 !== (v = new p).init(h, y || i, t, g, z) && (t._pt = l = new wn(t._pt, h, v.name, 0, 1, v.render, v, 0, v.priority), v._props.forEach((function(e) {
                                m[e] = l
                            })), v.priority && (d = 1)), !p || y)
                            for (o in i) ue[o] && (v = tn(o, i, t, g, h, z)) ? v.priority && (d = 1) : m[o] = l = en.call(t, h, o, "get", i[o], g, z, 0, x.stringFilter);
                        t._op && t._op[a] && t.kill(h, t._op[a]), G && t._pt && (Jt = t, c.killTweensOf(h, m, t.globalTime(n)), _ = !t.parent, Jt = 0), t._pt && A && (se[f.id] = 1)
                    }
                    d && bn(t), t._onInit && t._onInit(t)
                }
                t._onUpdate = L, t._initted = (!t._op || t._pt) && !_, D && n <= 0 && H.render(M, !0, !0)
            },
            rn = function(e, t, n, r) {
                var i, a, o = t.ease || r || "power1.inOut";
                if (G(t)) a = n[e] || (n[e] = []), t.forEach((function(e, n) {
                    return a.push({
                        t: n / (t.length - 1) * 100,
                        v: e,
                        e: o
                    })
                }));
                else
                    for (i in t) a = n[i] || (n[i] = []), "ease" === i || a.push({
                        t: parseFloat(e),
                        v: t[i],
                        e: o
                    })
            },
            an = function(e, t, n, r, i) {
                return D(e) ? e.call(t, n, r, i) : P(e) && ~e.indexOf("random(") ? yt(e) : e
            },
            on = de + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
            sn = {};
        n._checkPlugin = tn, me(on + ",id,stagger,delay,duration,paused,scrollTrigger", (function(e) {
            return sn[e] = 1
        }));
        var un = function(e) {
            function t(t, n, r, i) {
                var o;
                "number" == typeof n && (r.duration = n, n = r, r = null);
                var u, l, h, d, f, p, v, m, g = (o = e.call(this, i ? n : Ce(n)) || this).vars,
                    y = g.duration,
                    _ = g.delay,
                    x = g.immediateRender,
                    b = g.stagger,
                    T = g.overwrite,
                    M = g.keyframes,
                    S = g.defaults,
                    E = g.scrollTrigger,
                    A = g.yoyoEase,
                    L = n.parent || c,
                    C = (G(t) || z(t) ? I(t[0]) : "length" in n) ? [t] : at(t);
                if (o._targets = C.length ? fe(C) : $("GSAP target " + t + " not found. https://greensock.com", !w.nullTargetWarn) || [], o._ptLookup = [], o._overwrite = T, M || b || B(y) || B(_)) {
                    if (n = o.vars, (u = o.timeline = new Zt({
                            data: "nested",
                            defaults: S || {},
                            targets: L && "nested" === L.data ? L.vars.targets : C
                        })).kill(), u.parent = u._dp = a(o), u._start = 0, b || B(y) || B(_)) {
                        if (d = C.length, v = b && ut(b), N(b))
                            for (f in b) ~on.indexOf(f) && (m || (m = {}), m[f] = b[f]);
                        for (l = 0; l < d; l++)(h = Le(n, sn)).stagger = 0, A && (h.yoyoEase = A), m && Ee(h, m), p = C[l], h.duration = +an(y, a(o), l, p, C), h.delay = (+an(_, a(o), l, p, C) || 0) - o._delay, !b && 1 === d && h.delay && (o._delay = _ = h.delay, o._start += _, h.delay = 0), u.to(p, h, v ? v(l, p, C) : 0), u._ease = Ft.none;
                        u.duration() ? y = _ = 0 : o.timeline = 0
                    } else if (M) {
                        Ce(Se(u.vars.defaults, {
                            ease: "none"
                        })), u._ease = Vt(M.ease || n.ease || "none");
                        var R, k, P, D = 0;
                        if (G(M)) M.forEach((function(e) {
                            return u.to(C, e, ">")
                        })), u.duration();
                        else {
                            for (f in h = {}, M) "ease" === f || "easeEach" === f || rn(f, M[f], h, M.easeEach);
                            for (f in h)
                                for (R = h[f].sort((function(e, t) {
                                        return e.t - t.t
                                    })), D = 0, l = 0; l < R.length; l++)(P = {
                                    ease: (k = R[l]).e,
                                    duration: (k.t - (l ? R[l - 1].t : 0)) / 100 * y
                                })[f] = k.v, u.to(C, P, D), D += P.duration;
                            u.duration() < y && u.to({}, {
                                duration: y - u.duration()
                            })
                        }
                    }
                    y || o.duration(y = u.duration())
                } else o.timeline = 0;
                return !0 !== T || s || (Jt = a(o), c.killTweensOf(C), Jt = 0), He(L, a(o), r), n.reversed && o.reverse(), n.paused && o.paused(!0), (x || !y && !M && o._start === ye(L._time) && F(x) && Oe(a(o)) && "nested" !== L.data) && (o._tTime = -1e-8, o.render(Math.max(0, -_) || 0)), E && Ve(a(o), E), o
            }
            o(t, e);
            var n = t.prototype;
            return n.render = function(e, t, n) {
                var r, i, a, o, s, l, c, h, d, f = this._time,
                    p = this._tDur,
                    v = this._dur,
                    m = e < 0,
                    g = e > p - S && !m ? p : e < S ? 0 : e;
                if (v) {
                    if (g !== this._tTime || !e || n || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== m) {
                        if (r = g, h = this.timeline, this._repeat) {
                            if (o = v + this._rDelay, this._repeat < -1 && m) return this.totalTime(100 * o + e, t, n);
                            if (r = ye(g % o), g === p ? (a = this._repeat, r = v) : ((a = ~~(g / o)) && a === g / o && (r = v, a--), r > v && (r = v)), (l = this._yoyo && 1 & a) && (d = this._yEase, r = v - r), s = Fe(this._tTime, o), r === f && !n && this._initted) return this._tTime = g, this;
                            a !== s && (h && this._yEase && Ht(h, l), !this.vars.repeatRefresh || l || this._lock || (this._lock = n = 1, this.render(ye(o * a), !0).invalidate()._lock = 0))
                        }
                        if (!this._initted) {
                            if (We(this, m ? e : r, n, t, g)) return this._tTime = 0, this;
                            if (f !== this._time) return this;
                            if (v !== this._dur) return this.render(e, t, n)
                        }
                        if (this._tTime = g, this._time = r, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = c = (d || this._ease)(r / v), this._from && (this.ratio = c = 1 - c), r && !f && !t && !a && (wt(this, "onStart"), this._tTime !== g)) return this;
                        for (i = this._pt; i;) i.r(c, i.d), i = i._next;
                        h && h.render(e < 0 ? e : !r && l ? -1e-8 : h._dur * h._ease(r / this._dur), t, n) || this._startAt && (this._zTime = e), this._onUpdate && !t && (m && Ie(this, e, 0, n), wt(this, "onUpdate")), this._repeat && a !== s && this.vars.onRepeat && !t && this.parent && wt(this, "onRepeat"), g !== this._tDur && g || this._tTime !== g || (m && !this._onUpdate && Ie(this, e, 0, !0), (e || !v) && (g === this._tDur && this._ts > 0 || !g && this._ts < 0) && Pe(this, 1), t || m && !f || !(g || f || l) || (wt(this, g === p ? "onComplete" : "onReverseComplete", !0), this._prom && !(g < p && this.timeScale() > 0) && this._prom()))
                    }
                } else ! function(e, t, n, r) {
                    var i, a, o, s = e.ratio,
                        l = t < 0 || !t && (!e._start && je(e) && (e._initted || !qe(e)) || (e._ts < 0 || e._dp._ts < 0) && !qe(e)) ? 0 : 1,
                        c = e._rDelay,
                        h = 0;
                    if (c && e._repeat && (h = $e(0, e._tDur, t), a = Fe(h, c), e._yoyo && 1 & a && (l = 1 - l), a !== Fe(e._tTime, c) && (s = 1 - l, e.vars.repeatRefresh && e._initted && e.invalidate())), l !== s || u || r || e._zTime === S || !t && e._zTime) {
                        if (!e._initted && We(e, t, r, n, h)) return;
                        for (o = e._zTime, e._zTime = t || (n ? S : 0), n || (n = t && !o), e.ratio = l, e._from && (l = 1 - l), e._time = 0, e._tTime = h, i = e._pt; i;) i.r(l, i.d), i = i._next;
                        t < 0 && Ie(e, t, 0, !0), e._onUpdate && !n && wt(e, "onUpdate"), h && e._repeat && !n && e.parent && wt(e, "onRepeat"), (t >= e._tDur || t < 0) && e.ratio === l && (l && Pe(e, 1), n || u || (wt(e, l ? "onComplete" : "onReverseComplete", !0), e._prom && e._prom()))
                    } else e._zTime || (e._zTime = t)
                }(this, e, t, n);
                return this
            }, n.targets = function() {
                return this._targets
            }, n.invalidate = function(t) {
                return (!t || !this.vars.runBackwards) && (this._startAt = 0), this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(t), e.prototype.invalidate.call(this, t)
            }, n.resetTo = function(e, t, n, r) {
                g || Ot.wake(), this._ts || this.play();
                var i = Math.min(this._dur, (this._dp._time - this._start) * this._ts);
                return this._initted || nn(this, i),
                    function(e, t, n, r, i, a, o) {
                        var s, u, l, c, h = (e._pt && e._ptCache || (e._ptCache = {}))[t];
                        if (!h)
                            for (h = e._ptCache[t] = [], l = e._ptLookup, c = e._targets.length; c--;) {
                                if ((s = l[c][t]) && s.d && s.d._pt)
                                    for (s = s.d._pt; s && s.p !== t && s.fp !== t;) s = s._next;
                                if (!s) return Qt = 1, e.vars[t] = "+=0", nn(e, o), Qt = 0, 1;
                                h.push(s)
                            }
                        for (c = h.length; c--;)(s = (u = h[c])._pt || u).s = !r && 0 !== r || i ? s.s + (r || 0) + a * s.c : r, s.c = n - s.s, u.e && (u.e = ge(n) + et(u.e)), u.b && (u.b = s.s + et(u.b))
                    }(this, e, t, n, r, this._ease(i / this._dur), i) ? this.resetTo(e, t, n, r) : (ze(this, 0), this.parent || Re(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0), this.render(0))
            }, n.kill = function(e, t) {
                if (void 0 === t && (t = "all"), !(e || t && "all" !== t)) return this._lazy = this._pt = 0, this.parent ? Tt(this) : this;
                if (this.timeline) {
                    var n = this.timeline.totalDuration();
                    return this.timeline.killTweensOf(e, t, Jt && !0 !== Jt.vars.overwrite)._first || Tt(this), this.parent && n !== this.timeline.totalDuration() && Xe(this, this._dur * this.timeline._tDur / n, 0, 1), this
                }
                var r, i, a, o, s, u, l, c = this._targets,
                    h = e ? at(e) : c,
                    d = this._ptLookup,
                    f = this._pt;
                if ((!t || "all" === t) && function(e, t) {
                        for (var n = e.length, r = n === t.length; r && n-- && e[n] === t[n];);
                        return n < 0
                    }(c, h)) return "all" === t && (this._pt = 0), Tt(this);
                for (r = this._op = this._op || [], "all" !== t && (P(t) && (s = {}, me(t, (function(e) {
                        return s[e] = 1
                    })), t = s), t = function(e, t) {
                        var n, r, i, a, o = e[0] ? pe(e[0]).harness : 0,
                            s = o && o.aliases;
                        if (!s) return t;
                        for (r in n = Ee({}, t), s)
                            if (r in n)
                                for (i = (a = s[r].split(",")).length; i--;) n[a[i]] = n[r];
                        return n
                    }(c, t)), l = c.length; l--;)
                    if (~h.indexOf(c[l]))
                        for (s in i = d[l], "all" === t ? (r[l] = t, o = i, a = {}) : (a = r[l] = r[l] || {}, o = t), o)(u = i && i[s]) && ("kill" in u.d && !0 !== u.d.kill(s) || ke(this, u, "_pt"), delete i[s]), "all" !== a && (a[s] = 1);
                return this._initted && !this._pt && f && Tt(this), this
            }, t.to = function(e, n) {
                return new t(e, n, arguments[2])
            }, t.from = function(e, t) {
                return Je(1, arguments)
            }, t.delayedCall = function(e, n, r, i) {
                return new t(n, 0, {
                    immediateRender: !1,
                    lazy: !1,
                    overwrite: !1,
                    delay: e,
                    onComplete: n,
                    onReverseComplete: n,
                    onCompleteParams: r,
                    onReverseCompleteParams: r,
                    callbackScope: i
                })
            }, t.fromTo = function(e, t, n) {
                return Je(2, arguments)
            }, t.set = function(e, n) {
                return n.duration = 0, n.repeatDelay || (n.repeat = 0), new t(e, n)
            }, t.killTweensOf = function(e, t, n) {
                return c.killTweensOf(e, t, n)
            }, t
        }(Kt);
        n.TweenLite = n.TweenMax = n.Tween = un, Se(un.prototype, {
            _targets: [],
            _lazy: 0,
            _startAt: 0,
            _op: 0,
            _onInit: 0
        }), me("staggerTo,staggerFrom,staggerFromTo", (function(e) {
            un[e] = function() {
                var t = new Zt,
                    n = nt.call(arguments, 0);
                return n.splice("staggerFromTo" === e ? 5 : 4, 0, 0), t[e].apply(t, n)
            }
        }));
        var ln = function(e, t, n) {
                return e[t] = n
            },
            cn = function(e, t, n) {
                return e[t](n)
            },
            hn = function(e, t, n, r) {
                return e[t](r.fp, n)
            },
            dn = function(e, t, n) {
                return e.setAttribute(t, n)
            },
            fn = function(e, t) {
                return D(e[t]) ? cn : O(e[t]) && e.setAttribute ? dn : ln
            },
            pn = function(e, t) {
                return t.set(t.t, t.p, Math.round(1e6 * (t.s + t.c * e)) / 1e6, t)
            },
            vn = function(e, t) {
                return t.set(t.t, t.p, !!(t.s + t.c * e), t)
            },
            mn = function(e, t) {
                var n = t._pt,
                    r = "";
                if (!e && t.b) r = t.b;
                else if (1 === e && t.e) r = t.e;
                else {
                    for (; n;) r = n.p + (n.m ? n.m(n.s + n.c * e) : Math.round(1e4 * (n.s + n.c * e)) / 1e4) + r, n = n._next;
                    r += t.c
                }
                t.set(t.t, t.p, r, t)
            },
            gn = function(e, t) {
                for (var n = t._pt; n;) n.r(e, n.d), n = n._next
            },
            yn = function(e, t, n, r) {
                for (var i, a = this._pt; a;) i = a._next, a.p === r && a.modifier(e, t, n), a = i
            },
            _n = function(e) {
                for (var t, n, r = this._pt; r;) n = r._next, r.p === e && !r.op || r.op === e ? ke(this, r, "_pt") : r.dep || (t = 1), r = n;
                return !t
            },
            xn = function(e, t, n, r) {
                r.mSet(e, t, r.m.call(r.tween, n, r.mt), r)
            },
            bn = function(e) {
                for (var t, n, r, i, a = e._pt; a;) {
                    for (t = a._next, n = r; n && n.pr > a.pr;) n = n._next;
                    (a._prev = n ? n._prev : i) ? a._prev._next = a: r = a, (a._next = n) ? n._prev = a : i = a, a = t
                }
                e._pt = r
            };
        n._sortPropTweensByPriority = bn, n._renderComplexString = mn, n._getSetter = fn;
        var wn = function() {
            function e(e, t, n, r, i, a, o, s, u) {
                this.t = t, this.s = r, this.c = i, this.p = n, this.r = a || pn, this.d = o || this, this.set = s || ln, this.pr = u || 0, this._next = e, e && (e._prev = this)
            }
            return e.prototype.modifier = function(e, t, n) {
                this.mSet = this.mSet || this.set, this.set = xn, this.m = e, this.mt = n, this.tween = t
            }, e
        }();
        n.PropTween = wn, me(de + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", (function(e) {
            return ae[e] = 1
        })), K.TweenMax = K.TweenLite = un, K.TimelineLite = K.TimelineMax = Zt, c = new Zt({
            sortChildren: !1,
            defaults: T,
            autoRemoveChildren: !0,
            id: "root",
            smoothChildTiming: !0
        }), w.stringFilter = It;
        var Tn = [],
            Mn = {},
            Sn = [],
            En = 0,
            An = function(e) {
                return (Mn[e] || Sn).map((function(e) {
                    return e()
                }))
            },
            Ln = function() {
                var e = Date.now(),
                    t = [];
                e - En > 2 && (An("matchMediaInit"), Tn.forEach((function(e) {
                    var n, r, i, a, o = e.queries,
                        s = e.conditions;
                    for (r in o)(n = h.matchMedia(o[r]).matches) && (i = 1), n !== s[r] && (s[r] = n, a = 1);
                    a && (e.revert(), i && t.push(e))
                })), An("matchMediaRevert"), t.forEach((function(e) {
                    return e.onMatch(e)
                })), En = e, An("matchMedia"))
            },
            Cn = function() {
                function e(e, t) {
                    this.selector = t && ot(t), this.data = [], this._r = [], this.isReverted = !1, e && this.add(e)
                }
                var t = e.prototype;
                return t.add = function(e, t, n) {
                    D(e) && (n = t, t = e, e = D);
                    var r = this,
                        i = function() {
                            var e, i = l,
                                a = r.selector;
                            return i && i !== r && i.data.push(r), n && (r.selector = ot(n)), l = r, e = t.apply(r, arguments), D(e) && r._r.push(e), l = i, r.selector = a, r.isReverted = !1, e
                        };
                    return r.last = i, e === D ? i(r) : e ? r[e] = i : i
                }, t.ignore = function(e) {
                    var t = l;
                    l = null, e(this), l = t
                }, t.getTweens = function() {
                    var t = [];
                    return this.data.forEach((function(n) {
                        return n instanceof e ? t.push.apply(t, n.getTweens()) : n instanceof un && !(n.parent && "nested" === n.parent.data) && t.push(n)
                    })), t
                }, t.clear = function() {
                    this._r.length = this.data.length = 0
                }, t.kill = function(e, t) {
                    var n = this;
                    if (e) {
                        var r = this.getTweens();
                        this.data.forEach((function(e) {
                            "isFlip" === e.data && (e.revert(), e.getChildren(!0, !0, !1).forEach((function(e) {
                                return r.splice(r.indexOf(e), 1)
                            })))
                        })), r.map((function(e) {
                            return {
                                g: e.globalTime(0),
                                t: e
                            }
                        })).sort((function(e, t) {
                            return t.g - e.g || -1
                        })).forEach((function(t) {
                            return t.t.revert(e)
                        })), this.data.forEach((function(t) {
                            return !(t instanceof Kt) && t.revert && t.revert(e)
                        })), this._r.forEach((function(t) {
                            return t(e, n)
                        })), this.isReverted = !0
                    } else this.data.forEach((function(e) {
                        return e.kill && e.kill()
                    }));
                    if (this.clear(), t) {
                        var i = Tn.indexOf(this);
                        ~i && Tn.splice(i, 1)
                    }
                }, t.revert = function(e) {
                    this.kill(e || {})
                }, e
            }(),
            Rn = function() {
                function e(e) {
                    this.contexts = [], this.scope = e
                }
                var t = e.prototype;
                return t.add = function(e, t, n) {
                    N(e) || (e = {
                        matches: e
                    });
                    var r, i, a, o = new Cn(0, n || this.scope),
                        s = o.conditions = {};
                    for (i in this.contexts.push(o), t = o.add("onMatch", t), o.queries = e, e) "all" === i ? a = 1 : (r = h.matchMedia(e[i])) && (Tn.indexOf(o) < 0 && Tn.push(o), (s[i] = r.matches) && (a = 1), r.addListener ? r.addListener(Ln) : r.addEventListener("change", Ln));
                    return a && t(o), this
                }, t.revert = function(e) {
                    this.kill(e || {})
                }, t.kill = function(e) {
                    this.contexts.forEach((function(t) {
                        return t.kill(e, !0)
                    }))
                }, e
            }(),
            kn = {
                registerPlugin: function() {
                    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                    t.forEach((function(e) {
                        return St(e)
                    }))
                },
                timeline: function(e) {
                    return new Zt(e)
                },
                getTweensOf: function(e, t) {
                    return c.getTweensOf(e, t)
                },
                getProperty: function(e, t, n, r) {
                    P(e) && (e = at(e)[0]);
                    var i = pe(e || {}).get,
                        a = n ? Me : Te;
                    return "native" === n && (n = ""), e ? t ? a((ue[t] && ue[t].get || i)(e, t, n, r)) : function(t, n, r) {
                        return a((ue[t] && ue[t].get || i)(e, t, n, r))
                    } : e
                },
                quickSetter: function(e, t, n) {
                    if ((e = at(e)).length > 1) {
                        var r = e.map((function(e) {
                                return In.quickSetter(e, t, n)
                            })),
                            i = r.length;
                        return function(e) {
                            for (var t = i; t--;) r[t](e)
                        }
                    }
                    e = e[0] || {};
                    var a = ue[t],
                        o = pe(e),
                        s = o.harness && (o.harness.aliases || {})[t] || t,
                        u = a ? function(t) {
                            var r = new a;
                            m._pt = 0, r.init(e, n ? t + n : t, m, 0, [e]), r.render(1, r), m._pt && gn(1, m)
                        } : o.set(e, s);
                    return a ? u : function(t) {
                        return u(e, s, n ? t + n : t, o, 1)
                    }
                },
                quickTo: function(e, t, n) {
                    var r, i = In.to(e, Ee(((r = {})[t] = "+=0.1", r.paused = !0, r), n || {})),
                        a = function(e, n, r) {
                            return i.resetTo(t, e, n, r)
                        };
                    return a.tween = i, a
                },
                isTweening: function(e) {
                    return c.getTweensOf(e, !0).length > 0
                },
                defaults: function(e) {
                    return e && e.ease && (e.ease = Vt(e.ease, T.ease)), Ae(T, e || {})
                },
                config: function(e) {
                    return Ae(w, e || {})
                },
                registerEffect: function(e) {
                    var t = e.name,
                        n = e.effect,
                        r = e.plugins,
                        i = e.defaults,
                        a = e.extendTimeline;
                    (r || "").split(",").forEach((function(e) {
                        return e && !ue[e] && !K[e] && $(t + " effect requires " + e + " plugin.")
                    })), le[t] = function(e, t, r) {
                        return n(at(e), Se(t || {}, i), r)
                    }, a && (Zt.prototype[t] = function(e, n, r) {
                        return this.add(le[t](e, N(n) ? n : (r = n) && {}, this), r)
                    })
                },
                registerEase: function(e, t) {
                    Ft[e] = Vt(t)
                },
                parseEase: function(e, t) {
                    return arguments.length ? Vt(e, t) : Ft
                },
                getById: function(e) {
                    return c.getById(e)
                },
                exportRoot: function(e, t) {
                    void 0 === e && (e = {});
                    var n, r, i = new Zt(e);
                    for (i.smoothChildTiming = F(e.smoothChildTiming), c.remove(i), i._dp = 0, i._time = i._tTime = c._time, n = c._first; n;) r = n._next, !t && !n._dur && n instanceof un && n.vars.onComplete === n._targets[0] || He(i, n, n._start - n._delay), n = r;
                    return He(c, i, 0), i
                },
                context: function(e, t) {
                    return e ? new Cn(e, t) : l
                },
                matchMedia: function(e) {
                    return new Rn(e)
                },
                matchMediaRefresh: function() {
                    return Tn.forEach((function(e) {
                        var t, n, r = e.conditions;
                        for (n in r) r[n] && (r[n] = !1, t = 1);
                        t && e.revert()
                    })) || Ln()
                },
                addEventListener: function(e, t) {
                    var n = Mn[e] || (Mn[e] = []);
                    ~n.indexOf(t) || n.push(t)
                },
                removeEventListener: function(e, t) {
                    var n = Mn[e],
                        r = n && n.indexOf(t);
                    r >= 0 && n.splice(r, 1)
                },
                utils: {
                    wrap: mt,
                    wrapYoyo: gt,
                    distribute: ut,
                    random: ht,
                    snap: ct,
                    normalize: pt,
                    getUnit: et,
                    clamp: tt,
                    splitColor: Ct,
                    toArray: at,
                    selector: ot,
                    mapRange: _t,
                    pipe: dt,
                    unitize: ft,
                    interpolate: xt,
                    shuffle: st
                },
                install: J,
                effects: le,
                ticker: Ot,
                updateRoot: Zt.updateRoot,
                plugins: ue,
                globalTimeline: c,
                core: {
                    PropTween: wn,
                    globals: ee,
                    Tween: un,
                    Timeline: Zt,
                    Animation: Kt,
                    getCache: pe,
                    _removeLinkedListItem: ke,
                    reverting: function() {
                        return u
                    },
                    context: function(e) {
                        return e && l && (l.data.push(e), e._ctx = l), l
                    },
                    suppressOverwrites: function(e) {
                        return s = e
                    }
                }
            };
        me("to,from,fromTo,delayedCall,set,killTweensOf", (function(e) {
            return kn[e] = un[e]
        })), Ot.add(Zt.updateRoot), m = kn.to({}, {
            duration: 0
        });
        var Pn = function(e, t) {
                for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t;) n = n._next;
                return n
            },
            Dn = function(e, t) {
                return {
                    name: e,
                    rawVars: 1,
                    init: function(e, n, r) {
                        r._onInit = function(e) {
                            var r, i;
                            if (P(n) && (r = {}, me(n, (function(e) {
                                    return r[e] = 1
                                })), n = r), t) {
                                for (i in r = {}, n) r[i] = t(n[i]);
                                n = r
                            }! function(e, t) {
                                var n, r, i, a = e._targets;
                                for (n in t)
                                    for (r = a.length; r--;)(i = e._ptLookup[r][n]) && (i = i.d) && (i._pt && (i = Pn(i, n)), i && i.modifier && i.modifier(t[n], e, a[r], n))
                            }(e, n)
                        }
                    }
                }
            },
            In = kn.registerPlugin({
                name: "attr",
                init: function(e, t, n, r, i) {
                    var a, o, s;
                    for (a in this.tween = n, t) s = e.getAttribute(a) || "", (o = this.add(e, "setAttribute", (s || 0) + "", t[a], r, i, 0, 0, a)).op = a, o.b = s, this._props.push(a)
                },
                render: function(e, t) {
                    for (var n = t._pt; n;) u ? n.set(n.t, n.p, n.b, n) : n.r(e, n.d), n = n._next
                }
            }, {
                name: "endArray",
                init: function(e, t) {
                    for (var n = t.length; n--;) this.add(e, n, e[n] || 0, t[n], 0, 0, 0, 0, 0, 1)
                }
            }, Dn("roundProps", lt), Dn("modifiers"), Dn("snap", ct)) || kn;
        n.default = n.gsap = In, un.version = Zt.version = In.version = "3.11.5", p = 1, U() && Nt();
        var On = Ft.Power0,
            Nn = Ft.Power1,
            Fn = Ft.Power2,
            Un = Ft.Power3,
            Bn = Ft.Power4,
            zn = Ft.Linear,
            Gn = Ft.Quad,
            Hn = Ft.Cubic,
            Vn = Ft.Quart,
            Wn = Ft.Quint,
            jn = Ft.Strong,
            qn = Ft.Elastic,
            Xn = Ft.Back,
            Yn = Ft.SteppedEase,
            Kn = Ft.Bounce,
            Zn = Ft.Sine,
            Jn = Ft.Expo,
            Qn = Ft.Circ;
        n.Circ = Qn, n.Expo = Jn, n.Sine = Zn, n.Bounce = Kn, n.SteppedEase = Yn, n.Back = Xn, n.Elastic = qn, n.Strong = jn, n.Quint = Wn, n.Quart = Vn, n.Cubic = Hn, n.Quad = Gn, n.Linear = zn, n.Power4 = Bn, n.Power3 = Un, n.Power2 = Fn, n.Power1 = Nn, n.Power0 = On
    }, {
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24
    }],
    30: [function(e, t, n) {
        "use strict";
        ! function(e) {
            function n() {
                this._listeners = [], this.dispatchCount = 0
            }
            var r = n.prototype;
            r.add = o, r.addOnce = function(e, t, n, r) {
                if (!e) throw i;
                var s = this;
                r = a.call(arguments, 0), 1 === r.length && r.push(undefined);
                r.splice(2, 0, (function() {
                    return s.remove.call(s, e, t), e.apply(t, a.call(arguments, 0))
                })), o.apply(s, r)
            }, r.remove = function(e, t) {
                if (!e) return this._listeners.length = 0, !0;
                var n, r = this._listeners,
                    i = r.length;
                for (; i--;)
                    if ((n = r[i]).f === e && (!t || n.c === t)) return n.j = 0, r.splice(i, 1), !0;
                return !1
            }, r.dispatch = function(e) {
                e = a.call(arguments, 0), this.dispatchCount++;
                var t, n, r = this.dispatchCount,
                    i = this._listeners,
                    o = i.length;
                for (; o--;)
                    if ((t = i[o]) && t.j < r && (t.j = r, !1 === t.r.apply(t.c, t.a.concat(e)))) {
                        n = t;
                        break
                    }
                i = this._listeners, o = i.length;
                for (; o--;) i[o].j = 0;
                return n
            };
            var i = "Callback function is missing!",
                a = Array.prototype.slice;

            function o(e, t, n, r) {
                if (!e) throw i;
                n = n || 0;
                for (var o, s, u, l = this._listeners, c = l.length; c--;)
                    if ((o = l[c]).f === e && o.c === t) return !1;
                "function" == typeof n && (s = n, n = r, u = 4), l.unshift({
                    f: e,
                    c: t,
                    p: n,
                    r: s || e,
                    a: a.call(arguments, u || 3),
                    j: 0
                }), l.sort((function(e, t) {
                    return e = e.p, (t = t.p) < e ? 1 : e > t ? -1 : 0
                }))
            }
            void 0 !== t && (t.exports = n)
        }()
    }, {}],
    31: [function(e, t, n) {
        "use strict";
        var r = e("./kindOf"),
            i = e("./isPlainObject"),
            a = e("../object/mixIn");
        t.exports = function(e) {
            switch (r(e)) {
                case "Object":
                    return i(o = e) ? a({}, o) : o;
                case "Array":
                    return e.slice();
                case "RegExp":
                    return n = "", n += (t = e).multiline ? "m" : "", n += t.global ? "g" : "", n += t.ignoreCase ? "i" : "", new RegExp(t.source, n);
                case "Date":
                    return new Date(+e);
                default:
                    return e
            }
            var t, n, o
        }
    }, {
        "../object/mixIn": 46,
        "./isPlainObject": 39,
        "./kindOf": 40
    }],
    32: [function(e, t, n) {
        "use strict";
        var r = e("./clone"),
            i = e("../object/forOwn"),
            a = e("./kindOf"),
            o = e("./isPlainObject");

        function s(e, t) {
            switch (a(e)) {
                case "Object":
                    return function(e, t) {
                        if (o(e)) {
                            var n = {};
                            return i(e, (function(e, n) {
                                this[n] = s(e, t)
                            }), n), n
                        }
                        return t ? t(e) : e
                    }(e, t);
                case "Array":
                    return function(e, t) {
                        var n = [],
                            r = -1,
                            i = e.length;
                        for (; ++r < i;) n[r] = s(e[r], t);
                        return n
                    }(e, t);
                default:
                    return r(e)
            }
        }
        t.exports = s
    }, {
        "../object/forOwn": 43,
        "./clone": 31,
        "./isPlainObject": 39,
        "./kindOf": 40
    }],
    33: [function(e, t, n) {
        "use strict";
        var r = e("./isKind"),
            i = Array.isArray || function(e) {
                return r(e, "Array")
            };
        t.exports = i
    }, {
        "./isKind": 36
    }],
    34: [function(e, t, n) {
        "use strict";
        var r = e("./isKind");
        t.exports = function(e) {
            return r(e, "Boolean")
        }
    }, {
        "./isKind": 36
    }],
    35: [function(e, t, n) {
        "use strict";
        var r = e("./isNumber");
        t.exports = function(e) {
            return r(e) && e % 1 == 0
        }
    }, {
        "./isNumber": 37
    }],
    36: [function(e, t, n) {
        "use strict";
        var r = e("./kindOf");
        t.exports = function(e, t) {
            return r(e) === t
        }
    }, {
        "./kindOf": 40
    }],
    37: [function(e, t, n) {
        "use strict";
        var r = e("./isKind");
        t.exports = function(e) {
            return r(e, "Number")
        }
    }, {
        "./isKind": 36
    }],
    38: [function(e, t, n) {
        "use strict";
        var r = e("./isKind");
        t.exports = function(e) {
            return r(e, "Object")
        }
    }, {
        "./isKind": 36
    }],
    39: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault")(e("@babel/runtime/helpers/typeof"));
        t.exports = function(e) {
            return !!e && "object" === (0, r.default)(e) && e.constructor === Object
        }
    }, {
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24
    }],
    40: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            return Object.prototype.toString.call(e).slice(8, -1)
        }
    }, {}],
    41: [function(e, t, n) {
        "use strict";
        var r = e("./forOwn"),
            i = e("../lang/isPlainObject");

        function a(e, t) {
            for (var n, i = 0, a = arguments.length; ++i < a;)(n = arguments[i]) && r(n, o, e);
            return e
        }

        function o(e, t) {
            var n = this[t];
            i(e) && i(n) ? a(n, e) : this[t] = e
        }
        t.exports = a
    }, {
        "../lang/isPlainObject": 39,
        "./forOwn": 43
    }],
    42: [function(e, t, n) {
        "use strict";
        var r, i, a = e("./hasOwn");

        function o(e, t, n, r) {
            return e.call(r, t[n], n, t)
        }
        t.exports = function(e, t, n) {
            var s, u = 0;
            for (s in null == r && function() {
                    for (var e in i = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], r = !0, {
                            toString: null
                        }) r = !1
                }(), e)
                if (!1 === o(t, e, s, n)) break;
            if (r)
                for (var l = e.constructor, c = !!l && e === l.prototype;
                    (s = i[u++]) && ("constructor" === s && (c || !a(e, s)) || e[s] === Object.prototype[s] || !1 !== o(t, e, s, n)););
        }
    }, {
        "./hasOwn": 44
    }],
    43: [function(e, t, n) {
        "use strict";
        var r = e("./hasOwn"),
            i = e("./forIn");
        t.exports = function(e, t, n) {
            i(e, (function(i, a) {
                if (r(e, a)) return t.call(n, e[a], a, e)
            }))
        }
    }, {
        "./forIn": 42,
        "./hasOwn": 44
    }],
    44: [function(e, t, n) {
        "use strict";
        t.exports = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }
    }, {}],
    45: [function(e, t, n) {
        "use strict";
        var r = e("./hasOwn"),
            i = e("../lang/deepClone"),
            a = e("../lang/isObject");
        t.exports = function e() {
            var t, n, o, s, u = 1;
            for (s = i(arguments[0]); o = arguments[u++];)
                for (t in o) r(o, t) && (n = o[t], a(n) && a(s[t]) ? s[t] = e(s[t], n) : s[t] = i(n));
            return s
        }
    }, {
        "../lang/deepClone": 32,
        "../lang/isObject": 38,
        "./hasOwn": 44
    }],
    46: [function(e, t, n) {
        "use strict";
        var r = e("./forOwn");

        function i(e, t) {
            this[t] = e
        }
        t.exports = function(e, t) {
            for (var n, a = 0, o = arguments.length; ++a < o;) null != (n = arguments[a]) && r(n, i, e);
            return e
        }
    }, {
        "./forOwn": 43
    }],
    47: [function(e, t, n) {
        "use strict";
        var r = e("../string/typecast"),
            i = e("../lang/isArray"),
            a = e("../object/hasOwn");
        t.exports = function(e, t) {
            for (var n, o, s, u, l = (e || "").replace("?", "").split("&"), c = -1, h = {}; o = l[++c];) n = o.indexOf("="), u = o.substring(0, n), s = decodeURIComponent(o.substring(n + 1)), !1 !== t && (s = r(s)), a(h, u) ? i(h[u]) ? h[u].push(s) : h[u] = [h[u], s] : h[u] = s;
            return h
        }
    }, {
        "../lang/isArray": 33,
        "../object/hasOwn": 44,
        "../string/typecast": 50
    }],
    48: [function(e, t, n) {
        "use strict";
        t.exports = function(e) {
            var t = /\?[a-zA-Z0-9\=\&\%\$\-\_\.\+\!\*\'\(\)\,]+/.exec(e);
            return t ? decodeURIComponent(t[0].replace(/\+/g, " ")) : ""
        }
    }, {}],
    49: [function(e, t, n) {
        "use strict";
        var r = e("./decode"),
            i = e("./getQuery");
        t.exports = function(e, t) {
            return r(i(e), t)
        }
    }, {
        "./decode": 47,
        "./getQuery": 48
    }],
    50: [function(e, t, n) {
        "use strict";
        var r;
        t.exports = function(e) {
            return null === e || "null" === e ? null : "true" === e || "false" !== e && (e === r || "undefined" === e ? r : "" === e || isNaN(e) ? e : parseFloat(e))
        }
    }, {}],
    51: [function(e, t, n) {
        "use strict";
        t.exports = e("./src/quickLoader"), e("./src/types/JSONPItem"), e("./src/types/JSONItem"), e("./src/types/TextItem"), e("./src/types/AudioItem"), e("./src/types/VideoItem"), e("./src/types/AnyItem"), e("./src/types/ImageItem"), e("./src/types/XHRItem")
    }, {
        "./src/quickLoader": 53,
        "./src/types/AnyItem": 55,
        "./src/types/AudioItem": 56,
        "./src/types/ImageItem": 57,
        "./src/types/JSONItem": 58,
        "./src/types/JSONPItem": 59,
        "./src/types/TextItem": 60,
        "./src/types/VideoItem": 61,
        "./src/types/XHRItem": 62
    }],
    52: [function(e, t, n) {
        arguments[4][30][0].apply(n, arguments)
    }, {
        dup: 30
    }],
    53: [function(e, t, n) {
        "use strict";
        var r, i = e("min-signal");

        function a() {
            this.isLoading = !1, this.totalWeight = 0, this.loadedWeight = 0, this.itemUrls = {}, this.itemList = [], this.loadingSignal = new i, this.crossOriginMap = {}, this.queue = [], this.activeItems = [], this.maxActiveItems = 4
        }
        var o = a.prototype;
        o.addChunk = function(e, t) {
            var n, r, i, a, o, s = v(e, t);
            for (n = 0, i = s.length; n < i; n++)
                for (r = 0, a = (o = s[n]).items.length; r < a; r++) this.add(o.items[r], {
                    type: o.type
                });
            return s
        }, o.setCrossOrigin = function(e, t) {
            this.crossOriginMap[e] = t
        }, o.add = function(e, t) {
            var n = s[e];
            n || (n = this._createItem(e, t && t.type ? t.type : m(e).type, t));
            t && t.onLoad && n.onLoaded.addOnce(t.onLoad);
            this.itemUrls[e] || (this.itemUrls[e] = n, this.itemList.push(n), this.totalWeight += n.weight);
            return n
        }, o.load = function(e, t) {
            var n = s[e];
            n || (n = this._createItem(e, t && t.type ? t.type : m(e).type, t));
            t && t.onLoad && n.onLoaded.addOnce(t.onLoad);
            u[e] ? n.dispatch() : n.isStartLoaded || n.load();
            return n
        }, o.start = function(e) {
            e && this.loadingSignal.add(e);
            this.isLoading = !0;
            var t = this.itemList.length;
            if (t) {
                var n, i = this.itemList.splice(0, this.itemList.length);
                for (var a in this.itemUrls) delete this.itemUrls[a];
                for (var o = 0; o < t; o++) {
                    n = i[o];
                    var s = !!u[n.url];
                    n.onLoaded.addOnce(f, this, -1024, n, i, s), n.hasLoading && n.loadingSignal.add(h, this, -1024, n, i, r), s ? n.dispatch(f) : n.isStartLoaded || this.queue.push(n)
                }
                this.queue.length && this.loadNext()
            } else f.call(this, r, this.itemList)
        }, o.loadNext = function() {
            if (this.queue.length && this.activeItems.length < this.maxActiveItems) {
                var e = this.queue.shift();
                this.activeItems.push(e), this.loadNext(), e.load()
            }
        }, o._createItem = function(e, t, n) {
            if (!(n = n || {}).crossOrigin)
                for (var r in this.crossOriginMap)
                    if (0 === e.indexOf(r)) {
                        n.crossOrigin = this.crossOriginMap[r];
                        break
                    }
            return new c[t](e, n)
        }, o._onLoading = h, o.VERSION = "0.1.17", o.register = function(e) {
            c[e.type] || (l.push(e), c[e.type] = e)
        }, o.retrieveAll = v, o.retrieve = m, o.testExtensions = g, o.create = y, o.check = function() {
            var e = [],
                t = [];
            for (var n in s) e.push(n), u[n] || t.push(s[n]);
            console.log({
                added: e,
                notLoaded: t
            })
        };
        var s = o.addedItems = {},
            u = o.loadedItems = {},
            l = o.ITEM_CLASS_LIST = [],
            c = o.ITEM_CLASSES = {};
        t.exports = y();

        function h(e, t, n, i, a) {
            e && !e.isLoaded && 1 === e.getCombinedPercent(i) || (a === r && (this.loadedWeight = d(t), a = this.loadedWeight / this.totalWeight), (n = n || this.loadingSignal).dispatch(a, e))
        }

        function d(e) {
            for (var t = 0, n = 0, r = e.length; n < r; n++) t += e[n].loadedWeight;
            return t
        }

        function f(e, t, n) {
            if (this.loadedWeight = d(t), !n)
                for (var r = this.activeItems, a = r.length; a--;)
                    if (r[a] === e) {
                        r.splice(a, 1);
                        break
                    }
            var o = this.loadingSignal;
            this.loadedWeight === this.totalWeight ? (this.isLoading = !1, this.loadedWeight = 0, this.totalWeight = 0, this.loadingSignal = new i, this._onLoading(e, t, o, 1, 1), e && e.noCache && p(e)) : (this._onLoading(e, t, o, 1, this.loadedWeight / this.totalWeight), e && e.noCache && p(e), n || this.loadNext())
        }

        function p(e) {
            var t = e.url;
            e.content = r, s[t] = r, u[t] = r
        }

        function v(e, t) {
            var n, r, i = e.length,
                a = [];
            if (i && "string" != typeof e)
                for (n = 0; n < i; n++)(r = m(e[n], t)) && (a = a.concat(r));
            else(r = m(e, t)) && (a = a.concat(r));
            return a
        }

        function m(e, t) {
            var n, i, a, o, s;
            if (t) a = (o = c[t]).retrieve(e);
            else
                for (n = 0, i = l.length; n < i; n++) {
                    if (s = (o = l[n]).type, "string" == typeof e) {
                        if (g(e, o)) {
                            a = [e];
                            break
                        }
                    } else if ((a = o.retrieve(e)) && a.length && "string" == typeof a[0] && g(a[0], o)) break;
                    a = r, s = r
                }
            if (a) return {
                type: t || s,
                items: a
            }
        }

        function g(e, t) {
            if (e) {
                for (var n = function(e) {
                        return e.split(".").pop().split(/#|\?/)[0]
                    }(e), r = t.extensions, i = r.length; i--;)
                    if (n === r[i]) return !0;
                return !1
            }
        }

        function y() {
            return new a
        }
    }, {
        "min-signal": 52
    }],
    54: [function(e, t, n) {
        "use strict";
        var r = e("min-signal"),
            i = e("../quickLoader");

        function a(e, t) {
            if (e) {
                for (var n in this.url = e, this.loadedWeight = 0, this.weight = 1, this.postPercent = 0, t) this[n] = t[n];
                this.type || (this.type = this.constructor.type), this.hasLoading && (this.loadingSignal = new r, this.loadingSignal.add(s, this), this.onLoading && this.loadingSignal.add(this.onLoading)), this.onPost ? (this.onPostLoadingSignal = new r, this.onPostLoadingSignal.add(this._onPostLoading, this), this.postWeightRatio = this.postWeightRatio || .1) : this.postWeightRatio = 0;
                var a = this;
                this.boundOnLoad = function() {
                    a._onLoad()
                }, this.onLoaded = new r, i.addedItems[e] = this
            }
        }
        t.exports = a;
        var o = a.prototype;

        function s(e) {
            this.loadedWeight = this.weight * this.getCombinedPercent(e)
        }
        o.load = function() {
            this.isStartLoaded = !0
        }, o._onLoad = function() {
            this.onPost ? this.onPost.call(this, this.content, this.onPostLoadingSignal) : this._onLoadComplete()
        }, o._onLoading = s, o._onPostLoading = function(e) {
            this.postPercent = e, this.hasLoading && this.loadingSignal.dispatch(1);
            1 === e && this._onLoadComplete()
        }, o._onLoadComplete = function() {
            this.isLoaded = !0, this.loadedWeight = this.weight, i.loadedItems[this.url] = this, this.onLoaded.dispatch(this.content)
        }, o.getCombinedPercent = function(e) {
            return e * (1 - this.postWeightRatio) + this.postWeightRatio * this.postPercent
        }, o.dispatch = function() {
            this.hasLoading && this.loadingSignal.remove();
            this.onLoaded.dispatch(this.content)
        }, a.extensions = [], a.retrieve = function() {
            return !1
        }
    }, {
        "../quickLoader": 53,
        "min-signal": 52
    }],
    55: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("../quickLoader");

        function a(e, t) {
            e && (o.constructor.call(this, e, t), !this.loadFunc && console && console[console.error || console.log]("require loadFunc in the config object."))
        }
        t.exports = a, a.type = "any", a.extensions = [], i.register(a), a.retrieve = function() {
            return !1
        };
        var o = r.prototype,
            s = a.prototype = new r;
        s.constructor = a, s.load = function() {
            var e = this;
            this.loadFunc(this.url, (function(t) {
                e.content = t, o._onLoad.call(e)
            }), this.loadingSignal)
        }
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54
    }],
    56: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("../quickLoader");

        function a(e, t) {
            if (e) {
                this.loadThrough = !t || undefined === t.loadThrough || t.loadThrough, o.constructor.apply(this, arguments);
                try {
                    this.content = this.content || new Audio
                } catch (e) {
                    this.content = this.content || document.createElement("audio")
                }
                this.crossOrigin && (this.content.crossOrigin = this.crossOrigin)
            }
        }
        t.exports = a, a.type = "audio", a.extensions = ["mp3", "ogg"], i.register(a), a.retrieve = function(e) {
            return !1
        };
        var o = r.prototype,
            s = a.prototype = new r;
        s.constructor = a, s.load = function() {
            o.load.apply(this, arguments);
            var e = this.content;
            e.src = this.url, this.loadThrough ? e.addEventListener("canplaythrough", this.boundOnLoad, !1) : e.addEventListener("canplay", this.boundOnLoad, !1);
            e.load()
        }, s._onLoad = function() {
            if (this.content.removeEventListener("canplaythrough", this.boundOnLoad, !1), this.content.removeEventListener("canplay", this.boundOnLoad, !1), this.isLoaded) return;
            o._onLoad.call(this)
        }
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54
    }],
    57: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("computed-style"),
            a = e("../quickLoader");

        function o(e, t) {
            e && (s.constructor.apply(this, arguments), this.content = this.content || new Image, this.crossOrigin && (this.content.crossOrigin = this.crossOrigin))
        }
        t.exports = o;
        var s = r.prototype,
            u = o.prototype = new r;
        u.constructor = o, u.load = function() {
            s.load.apply(this, arguments);
            var e = this.content;
            e.onload = this.boundOnLoad, e.src = this.url
        }, u._onLoad = function() {
            delete this.content.onload, this.width = this.content.width, this.height = this.content.height, s._onLoad.call(this)
        }, o.retrieve = function(e) {
            if (e.nodeType && e.style) {
                var t = [];
                "img" === e.nodeName.toLowerCase() && e.src.indexOf(";") < 0 && t.push(e.src), i(e, "background-image").replace(/s?url\(\s*?['"]?([^;]*?)['"]?\s*?\)/g, (function(e, n) {
                    t.push(n)
                }));
                for (var n = t.length; n--;) 0 === t[n].indexOf("data:") && t.splice(n, 1);
                return !!t.length && t
            }
            return "string" == typeof e && [e]
        }, o.type = "image", o.extensions = ["jpg", "gif", "png"], a.register(o)
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54,
        "computed-style": 26
    }],
    58: [function(require, module, exports) {
        "use strict";
        var TextItem = require("./TextItem"),
            quickLoader = require("../quickLoader");

        function JSONItem(e) {
            e && _super.constructor.apply(this, arguments)
        }
        module.exports = JSONItem, JSONItem.type = "json", JSONItem.extensions = ["json"], quickLoader.register(JSONItem), JSONItem.retrieve = function() {
            return !1
        };
        var _super = TextItem.prototype,
            _p = JSONItem.prototype = new TextItem;

        function _onLoad() {
            this.content || (this.content = window.JSON && window.JSON.parse ? JSON.parse(this.xmlhttp.responseText.toString()) : eval(this.xmlhttp.responseText.toString())), _super._onLoad.call(this)
        }
        _p.constructor = JSONItem, _p._onLoad = _onLoad
    }, {
        "../quickLoader": 53,
        "./TextItem": 60
    }],
    59: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("../quickLoader");

        function a(e) {
            e && o.constructor.apply(this, arguments)
        }
        t.exports = a, a.type = "jsonp", a.extensions = [], i.register(a), a.retrieve = function(e) {
            return "string" == typeof e && e.indexOf("=") > -1 && [e]
        };
        var o = r.prototype,
            s = a.prototype = new r;
        s.constructor = a, s.load = function(e) {
            o.load.apply(this, arguments);
            var t = this,
                n = this.url.lastIndexOf("=") + 1,
                r = this.url.substr(0, n),
                i = this.url.substr(n);
            0 === i.length ? (i = "_jsonp" + (new Date).getTime() + ~~(1e8 * Math.random()), this.jsonpCallback = e) : this.jsonpCallback = this.jsonpCallback || window[i];
            window[i] = function(e) {
                a.parentNode && a.parentNode.removeChild(a), t.content = e, t._onLoad()
            };
            var a = document.createElement("script");
            a.type = "text/javascript", a.src = r + i, document.getElementsByTagName("head")[0].appendChild(a)
        }
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54
    }],
    60: [function(e, t, n) {
        "use strict";
        var r = e("./XHRItem"),
            i = e("../quickLoader");

        function a(e, t) {
            e && (t.responseType = "text", o.constructor.apply(this, arguments))
        }
        t.exports = a, a.type = "text", a.extensions = ["html", "txt", "svg"], i.register(a), a.retrieve = function() {
            return !1
        };
        var o = r.prototype,
            s = a.prototype = new r;
        s.constructor = a, s._onLoad = function() {
            this.content || (this.content = this.xmlhttp.responseText);
            o._onLoad.apply(this, arguments)
        }
    }, {
        "../quickLoader": 53,
        "./XHRItem": 62
    }],
    61: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("../quickLoader");

        function a(e, t) {
            if (e) {
                this.loadThrough = !t || undefined === t.loadThrough || t.loadThrough, o.constructor.apply(this, arguments);
                try {
                    this.content = this.content || new Video
                } catch (e) {
                    this.content = this.content || document.createElement("video")
                }
                this.crossOrigin && (this.content.crossOrigin = this.crossOrigin)
            }
        }
        t.exports = a, a.type = "video", a.extensions = ["mp4", "webm", "ogv"], i.register(a), a.retrieve = function(e) {
            return !1
        };
        var o = r.prototype,
            s = a.prototype = new r;
        s.constructor = a, s.load = function() {
            o.load.apply(this, arguments);
            var e = this.content;
            e.preload = "auto", e.src = this.url, this.loadThrough ? e.addEventListener("canplaythrough", this.boundOnLoad, !1) : e.addEventListener("canplay", this.boundOnLoad, !1);
            e.load()
        }, s._onLoad = function() {
            if (this.content.removeEventListener("canplaythrough", this.boundOnLoad), this.content.removeEventListener("canplay", this.boundOnLoad), this.isLoaded) return;
            o._onLoad.call(this)
        }
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54
    }],
    62: [function(e, t, n) {
        "use strict";
        var r = e("./AbstractItem"),
            i = e("../quickLoader"),
            a = !!window.XMLHttpRequest;

        function o(e) {
            e && (s.constructor.apply(this, arguments), this.responseType = this.responseType || "", this.method = this.method || "GET")
        }
        t.exports = o, o.type = "xhr", o.extensions = [], i.register(o), o.retrieve = function() {
            return !1
        };
        var s = r.prototype,
            u = o.prototype = new r;
        u.constructor = o, u.load = function() {
            s.load.apply(this, arguments);
            var e, t = this;
            e = this.xmlhttp = a ? new XMLHttpRequest : new ActiveXObject("Microsoft.XMLHTTP");
            this.hasLoading && (e.onprogress = function(e) {
                t._onXmlHttpProgress(e)
            });
            e.onreadystatechange = function() {
                t._onXmlHttpChange()
            }, e.open(this.method, this.url, !0), this.xmlhttp.responseType = this.responseType, a ? e.send(null) : e.send()
        }, u._onXmlHttpChange = function() {
            4 === this.xmlhttp.readyState && 200 === this.xmlhttp.status && this._onLoad(this.xmlhttp)
        }, u._onXmlHttpProgress = function(e) {
            this.loadingSignal.dispatch(e.loaded / e.total)
        }, u._onLoad = function() {
            this.content || (this.content = this.xmlhttp.response);
            this.xmlhttp = undefined, s._onLoad.call(this)
        }
    }, {
        "../quickLoader": 53,
        "./AbstractItem": 54
    }],
    63: [function(e, t, n) {
        "use strict";
        var r, i, a = e("@babel/runtime/helpers/interopRequireDefault"),
            o = e("@babel/runtime/helpers/typeof"),
            s = a(e("@babel/runtime/helpers/asyncToGenerator")),
            u = a(e("@babel/runtime/helpers/slicedToArray")),
            l = a(e("@babel/runtime/helpers/get")),
            c = a(e("@babel/runtime/helpers/defineProperty")),
            h = a(e("@babel/runtime/helpers/assertThisInitialized")),
            d = a(e("@babel/runtime/helpers/inherits")),
            f = a(e("@babel/runtime/helpers/possibleConstructorReturn")),
            p = a(e("@babel/runtime/helpers/getPrototypeOf")),
            v = a(e("@babel/runtime/helpers/classCallCheck")),
            m = a(e("@babel/runtime/helpers/createClass")),
            g = a(e("@babel/runtime/helpers/typeof"));

        function y() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            y = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                i = "function" == typeof Symbol ? Symbol : {},
                a = i.iterator || "@@iterator",
                s = i.asyncIterator || "@@asyncIterator",
                u = i.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function c(e, t, n, i) {
                var a = t && t.prototype instanceof f ? t : f,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function h(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = c;
            var d = {};

            function f() {}

            function p() {}

            function v() {}
            var m = {};
            l(m, a, (function() {
                return this
            }));
            var g = Object.getPrototypeOf,
                _ = g && g(g(L([])));
            _ && _ !== t && n.call(_, a) && (m = _);
            var x = v.prototype = f.prototype = Object.create(m);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function i(r, a, s, u) {
                    var l = h(e[r], e, a);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            d = c.value;
                        return d && "object" == o(d) && n.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                            i("next", e, s, u)
                        }), (function(e) {
                            i("throw", e, s, u)
                        })) : t.resolve(d).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return i("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var a;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                i(e, n, t, r)
                            }))
                        }
                        return a = a ? a.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === d) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = h(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === d) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), d;
                var i = h(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, d;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, d) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, d)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[a];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return p.prototype = v, r(x, "constructor", {
                value: v,
                configurable: !0
            }), r(v, "constructor", {
                value: p,
                configurable: !0
            }), p.displayName = l(v, u, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === p || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : (e.__proto__ = v, l(e, u, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, s, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(c(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), l(x, u, "Generator"), l(x, a, (function() {
                return this
            })), l(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, d) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), d
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), d
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), d
                }
            }, e
        }

        function _(e, t) {
            var n = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (!n) {
                if (Array.isArray(e) || (n = function(e, t) {
                        if (!e) return;
                        if ("string" == typeof e) return x(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        "Object" === n && e.constructor && (n = e.constructor.name);
                        if ("Map" === n || "Set" === n) return Array.from(e);
                        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return x(e, t)
                    }(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var r = 0,
                        i = function() {};
                    return {
                        s: i,
                        n: function() {
                            return r >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[r++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: i
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var a, o = !0,
                s = !1;
            return {
                s: function() {
                    n = n.call(e)
                },
                n: function() {
                    var e = n.next();
                    return o = e.done, e
                },
                e: function(e) {
                    s = !0, a = e
                },
                f: function() {
                    try {
                        o || null == n.return || n.return()
                    } finally {
                        if (s) throw a
                    }
                }
            }
        }

        function x(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r
        }

        function b(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, r)
            }
            return n
        }

        function w(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }
            /**
             * @license
             * Copyright 2010-2021 Three.js Authors
             * SPDX-License-Identifier: MIT
             */
            ();
            return function() {
                var n, r = (0, p.default)(e);
                if (t) {
                    var i = (0, p.default)(this).constructor;
                    n = Reflect.construct(r, arguments, i)
                } else n = r.apply(this, arguments);
                return (0, f.default)(this, n)
            }
        }
        r = void 0, i = function(e) {
            for (var t, n = "131", r = 0, i = 1, a = 2, o = 1, g = 2, x = 3, T = 0, M = 1, S = 2, E = 0, A = 1, L = 2, C = 3, R = 4, k = 5, P = 100, D = 101, I = 102, O = 103, N = 104, F = 200, U = 201, B = 202, z = 203, G = 204, H = 205, V = 206, W = 207, j = 208, q = 209, X = 210, Y = 0, K = 1, Z = 2, J = 3, Q = 4, $ = 5, ee = 6, te = 7, ne = 0, re = 1, ie = 2, ae = 0, oe = 1, se = 2, ue = 3, le = 4, ce = 5, he = 300, de = 301, fe = 302, pe = 303, ve = 304, me = 306, ge = 307, ye = 1e3, _e = 1001, xe = 1002, be = 1003, we = 1004, Te = 1005, Me = 1006, Se = 1007, Ee = 1008, Ae = 1009, Le = 1010, Ce = 1011, Re = 1012, ke = 1013, Pe = 1014, De = 1015, Ie = 1016, Oe = 1017, Ne = 1018, Fe = 1019, Ue = 1020, Be = 1021, ze = 1022, Ge = 1023, He = 1024, Ve = 1025, We = Ge, je = 1026, qe = 1027, Xe = 1028, Ye = 1029, Ke = 1030, Ze = 1031, Je = 1032, Qe = 1033, $e = 33776, et = 33777, tt = 33778, nt = 33779, rt = 35840, it = 35841, at = 35842, ot = 35843, st = 36196, ut = 37492, lt = 37496, ct = 37808, ht = 37809, dt = 37810, ft = 37811, pt = 37812, vt = 37813, mt = 37814, gt = 37815, yt = 37816, _t = 37817, xt = 37818, bt = 37819, wt = 37820, Tt = 37821, Mt = 36492, St = 37840, Et = 37841, At = 37842, Lt = 37843, Ct = 37844, Rt = 37845, kt = 37846, Pt = 37847, Dt = 37848, It = 37849, Ot = 37850, Nt = 37851, Ft = 37852, Ut = 37853, Bt = 2300, zt = 2301, Gt = 2302, Ht = 2400, Vt = 2401, Wt = 2402, jt = 2500, qt = 2501, Xt = 3e3, Yt = 3001, Kt = 3007, Zt = 3002, Jt = 3003, Qt = 3004, $t = 3005, en = 3006, tn = 3201, nn = 0, rn = 1, an = 7680, on = 35044, sn = 35048, un = "300 es", ln = function() {
                    function e() {
                        (0, v.default)(this, e)
                    }
                    return (0, m.default)(e, [{
                        key: "addEventListener",
                        value: function(e, t) {
                            void 0 === this._listeners && (this._listeners = {});
                            var n = this._listeners;
                            void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t)
                        }
                    }, {
                        key: "hasEventListener",
                        value: function(e, t) {
                            if (void 0 === this._listeners) return !1;
                            var n = this._listeners;
                            return void 0 !== n[e] && -1 !== n[e].indexOf(t)
                        }
                    }, {
                        key: "removeEventListener",
                        value: function(e, t) {
                            if (void 0 !== this._listeners) {
                                var n = this._listeners[e];
                                if (void 0 !== n) {
                                    var r = n.indexOf(t); - 1 !== r && n.splice(r, 1)
                                }
                            }
                        }
                    }, {
                        key: "dispatchEvent",
                        value: function(e) {
                            if (void 0 !== this._listeners) {
                                var t = this._listeners[e.type];
                                if (void 0 !== t) {
                                    e.target = this;
                                    for (var n = t.slice(0), r = 0, i = n.length; r < i; r++) n[r].call(this, e);
                                    e.target = null
                                }
                            }
                        }
                    }]), e
                }(), cn = [], hn = 0; hn < 256; hn++) cn[hn] = (hn < 16 ? "0" : "") + hn.toString(16);
            var dn = 1234567,
                fn = Math.PI / 180,
                pn = 180 / Math.PI;

            function vn() {
                var e = 4294967295 * Math.random() | 0,
                    t = 4294967295 * Math.random() | 0,
                    n = 4294967295 * Math.random() | 0,
                    r = 4294967295 * Math.random() | 0;
                return (cn[255 & e] + cn[e >> 8 & 255] + cn[e >> 16 & 255] + cn[e >> 24 & 255] + "-" + cn[255 & t] + cn[t >> 8 & 255] + "-" + cn[t >> 16 & 15 | 64] + cn[t >> 24 & 255] + "-" + cn[63 & n | 128] + cn[n >> 8 & 255] + "-" + cn[n >> 16 & 255] + cn[n >> 24 & 255] + cn[255 & r] + cn[r >> 8 & 255] + cn[r >> 16 & 255] + cn[r >> 24 & 255]).toUpperCase()
            }

            function mn(e, t, n) {
                return Math.max(t, Math.min(n, e))
            }

            function gn(e, t) {
                return (e % t + t) % t
            }

            function yn(e, t, n) {
                return (1 - n) * e + n * t
            }

            function _n(e) {
                return 0 == (e & e - 1) && 0 !== e
            }

            function xn(e) {
                return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
            }

            function bn(e) {
                return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
            }
            var wn = Object.freeze({
                    __proto__: null,
                    DEG2RAD: fn,
                    RAD2DEG: pn,
                    generateUUID: vn,
                    clamp: mn,
                    euclideanModulo: gn,
                    mapLinear: function(e, t, n, r, i) {
                        return r + (e - t) * (i - r) / (n - t)
                    },
                    inverseLerp: function(e, t, n) {
                        return e !== t ? (n - e) / (t - e) : 0
                    },
                    lerp: yn,
                    damp: function(e, t, n, r) {
                        return yn(e, t, 1 - Math.exp(-n * r))
                    },
                    pingpong: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                        return t - Math.abs(gn(e, 2 * t) - t)
                    },
                    smoothstep: function(e, t, n) {
                        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
                    },
                    smootherstep: function(e, t, n) {
                        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
                    },
                    randInt: function(e, t) {
                        return e + Math.floor(Math.random() * (t - e + 1))
                    },
                    randFloat: function(e, t) {
                        return e + Math.random() * (t - e)
                    },
                    randFloatSpread: function(e) {
                        return e * (.5 - Math.random())
                    },
                    seededRandom: function(e) {
                        return void 0 !== e && (dn = e % 2147483647), ((dn = 16807 * dn % 2147483647) - 1) / 2147483646
                    },
                    degToRad: function(e) {
                        return e * fn
                    },
                    radToDeg: function(e) {
                        return e * pn
                    },
                    isPowerOfTwo: _n,
                    ceilPowerOfTwo: xn,
                    floorPowerOfTwo: bn,
                    setQuaternionFromProperEuler: function(e, t, n, r, i) {
                        var a = Math.cos,
                            o = Math.sin,
                            s = a(n / 2),
                            u = o(n / 2),
                            l = a((t + r) / 2),
                            c = o((t + r) / 2),
                            h = a((t - r) / 2),
                            d = o((t - r) / 2),
                            f = a((r - t) / 2),
                            p = o((r - t) / 2);
                        switch (i) {
                            case "XYX":
                                e.set(s * c, u * h, u * d, s * l);
                                break;
                            case "YZY":
                                e.set(u * d, s * c, u * h, s * l);
                                break;
                            case "ZXZ":
                                e.set(u * h, u * d, s * c, s * l);
                                break;
                            case "XZX":
                                e.set(s * c, u * p, u * f, s * l);
                                break;
                            case "YXY":
                                e.set(u * f, s * c, u * p, s * l);
                                break;
                            case "ZYZ":
                                e.set(u * p, u * f, s * c, s * l);
                                break;
                            default:
                                console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: " + i)
                        }
                    }
                }),
                Tn = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        (0, v.default)(this, e), this.x = t, this.y = n
                    }
                    return (0, m.default)(e, [{
                        key: "width",
                        get: function() {
                            return this.x
                        },
                        set: function(e) {
                            this.x = e
                        }
                    }, {
                        key: "height",
                        get: function() {
                            return this.y
                        },
                        set: function(e) {
                            this.y = e
                        }
                    }, {
                        key: "set",
                        value: function(e, t) {
                            return this.x = e, this.y = t, this
                        }
                    }, {
                        key: "setScalar",
                        value: function(e) {
                            return this.x = e, this.y = e, this
                        }
                    }, {
                        key: "setX",
                        value: function(e) {
                            return this.x = e, this
                        }
                    }, {
                        key: "setY",
                        value: function(e) {
                            return this.y = e, this
                        }
                    }, {
                        key: "setComponent",
                        value: function(e, t) {
                            switch (e) {
                                case 0:
                                    this.x = t;
                                    break;
                                case 1:
                                    this.y = t;
                                    break;
                                default:
                                    throw new Error("index is out of range: " + e)
                            }
                            return this
                        }
                    }, {
                        key: "getComponent",
                        value: function(e) {
                            switch (e) {
                                case 0:
                                    return this.x;
                                case 1:
                                    return this.y;
                                default:
                                    throw new Error("index is out of range: " + e)
                            }
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new this.constructor(this.x, this.y)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.x = e.x, this.y = e.y, this
                        }
                    }, {
                        key: "add",
                        value: function(e, t) {
                            return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
                        }
                    }, {
                        key: "addScalar",
                        value: function(e) {
                            return this.x += e, this.y += e, this
                        }
                    }, {
                        key: "addVectors",
                        value: function(e, t) {
                            return this.x = e.x + t.x, this.y = e.y + t.y, this
                        }
                    }, {
                        key: "addScaledVector",
                        value: function(e, t) {
                            return this.x += e.x * t, this.y += e.y * t, this
                        }
                    }, {
                        key: "sub",
                        value: function(e, t) {
                            return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
                        }
                    }, {
                        key: "subScalar",
                        value: function(e) {
                            return this.x -= e, this.y -= e, this
                        }
                    }, {
                        key: "subVectors",
                        value: function(e, t) {
                            return this.x = e.x - t.x, this.y = e.y - t.y, this
                        }
                    }, {
                        key: "multiply",
                        value: function(e) {
                            return this.x *= e.x, this.y *= e.y, this
                        }
                    }, {
                        key: "multiplyScalar",
                        value: function(e) {
                            return this.x *= e, this.y *= e, this
                        }
                    }, {
                        key: "divide",
                        value: function(e) {
                            return this.x /= e.x, this.y /= e.y, this
                        }
                    }, {
                        key: "divideScalar",
                        value: function(e) {
                            return this.multiplyScalar(1 / e)
                        }
                    }, {
                        key: "applyMatrix3",
                        value: function(e) {
                            var t = this.x,
                                n = this.y,
                                r = e.elements;
                            return this.x = r[0] * t + r[3] * n + r[6], this.y = r[1] * t + r[4] * n + r[7], this
                        }
                    }, {
                        key: "min",
                        value: function(e) {
                            return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this
                        }
                    }, {
                        key: "max",
                        value: function(e) {
                            return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this
                        }
                    }, {
                        key: "clamp",
                        value: function(e, t) {
                            return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this
                        }
                    }, {
                        key: "clampScalar",
                        value: function(e, t) {
                            return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this
                        }
                    }, {
                        key: "clampLength",
                        value: function(e, t) {
                            var n = this.length();
                            return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                        }
                    }, {
                        key: "floor",
                        value: function() {
                            return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
                        }
                    }, {
                        key: "ceil",
                        value: function() {
                            return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
                        }
                    }, {
                        key: "round",
                        value: function() {
                            return this.x = Math.round(this.x), this.y = Math.round(this.y), this
                        }
                    }, {
                        key: "roundToZero",
                        value: function() {
                            return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
                        }
                    }, {
                        key: "negate",
                        value: function() {
                            return this.x = -this.x, this.y = -this.y, this
                        }
                    }, {
                        key: "dot",
                        value: function(e) {
                            return this.x * e.x + this.y * e.y
                        }
                    }, {
                        key: "cross",
                        value: function(e) {
                            return this.x * e.y - this.y * e.x
                        }
                    }, {
                        key: "lengthSq",
                        value: function() {
                            return this.x * this.x + this.y * this.y
                        }
                    }, {
                        key: "length",
                        value: function() {
                            return Math.sqrt(this.x * this.x + this.y * this.y)
                        }
                    }, {
                        key: "manhattanLength",
                        value: function() {
                            return Math.abs(this.x) + Math.abs(this.y)
                        }
                    }, {
                        key: "normalize",
                        value: function() {
                            return this.divideScalar(this.length() || 1)
                        }
                    }, {
                        key: "angle",
                        value: function() {
                            var e = Math.atan2(-this.y, -this.x) + Math.PI;
                            return e
                        }
                    }, {
                        key: "distanceTo",
                        value: function(e) {
                            return Math.sqrt(this.distanceToSquared(e))
                        }
                    }, {
                        key: "distanceToSquared",
                        value: function(e) {
                            var t = this.x - e.x,
                                n = this.y - e.y;
                            return t * t + n * n
                        }
                    }, {
                        key: "manhattanDistanceTo",
                        value: function(e) {
                            return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
                        }
                    }, {
                        key: "setLength",
                        value: function(e) {
                            return this.normalize().multiplyScalar(e)
                        }
                    }, {
                        key: "lerp",
                        value: function(e, t) {
                            return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
                        }
                    }, {
                        key: "lerpVectors",
                        value: function(e, t, n) {
                            return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.x === this.x && e.y === this.y
                        }
                    }, {
                        key: "fromArray",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return this.x = e[t], this.y = e[t + 1], this
                        }
                    }, {
                        key: "toArray",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return e[t] = this.x, e[t + 1] = this.y, e
                        }
                    }, {
                        key: "fromBufferAttribute",
                        value: function(e, t, n) {
                            return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this
                        }
                    }, {
                        key: "rotateAround",
                        value: function(e, t) {
                            var n = Math.cos(t),
                                r = Math.sin(t),
                                i = this.x - e.x,
                                a = this.y - e.y;
                            return this.x = i * n - a * r + e.x, this.y = i * r + a * n + e.y, this
                        }
                    }, {
                        key: "random",
                        value: function() {
                            return this.x = Math.random(), this.y = Math.random(), this
                        }
                    }]), e
                }();
            Tn.prototype.isVector2 = !0;
            var Mn, Sn = function() {
                function e() {
                    (0, v.default)(this, e), this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
                }
                return (0, m.default)(e, [{
                    key: "set",
                    value: function(e, t, n, r, i, a, o, s, u) {
                        var l = this.elements;
                        return l[0] = e, l[1] = r, l[2] = o, l[3] = t, l[4] = i, l[5] = s, l[6] = n, l[7] = a, l[8] = u, this
                    }
                }, {
                    key: "identity",
                    value: function() {
                        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        var t = this.elements,
                            n = e.elements;
                        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this
                    }
                }, {
                    key: "extractBasis",
                    value: function(e, t, n) {
                        return e.setFromMatrix3Column(this, 0), t.setFromMatrix3Column(this, 1), n.setFromMatrix3Column(this, 2), this
                    }
                }, {
                    key: "setFromMatrix4",
                    value: function(e) {
                        var t = e.elements;
                        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.multiplyMatrices(this, e)
                    }
                }, {
                    key: "premultiply",
                    value: function(e) {
                        return this.multiplyMatrices(e, this)
                    }
                }, {
                    key: "multiplyMatrices",
                    value: function(e, t) {
                        var n = e.elements,
                            r = t.elements,
                            i = this.elements,
                            a = n[0],
                            o = n[3],
                            s = n[6],
                            u = n[1],
                            l = n[4],
                            c = n[7],
                            h = n[2],
                            d = n[5],
                            f = n[8],
                            p = r[0],
                            v = r[3],
                            m = r[6],
                            g = r[1],
                            y = r[4],
                            _ = r[7],
                            x = r[2],
                            b = r[5],
                            w = r[8];
                        return i[0] = a * p + o * g + s * x, i[3] = a * v + o * y + s * b, i[6] = a * m + o * _ + s * w, i[1] = u * p + l * g + c * x, i[4] = u * v + l * y + c * b, i[7] = u * m + l * _ + c * w, i[2] = h * p + d * g + f * x, i[5] = h * v + d * y + f * b, i[8] = h * m + d * _ + f * w, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        var t = this.elements;
                        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
                    }
                }, {
                    key: "determinant",
                    value: function() {
                        var e = this.elements,
                            t = e[0],
                            n = e[1],
                            r = e[2],
                            i = e[3],
                            a = e[4],
                            o = e[5],
                            s = e[6],
                            u = e[7],
                            l = e[8];
                        return t * a * l - t * o * u - n * i * l + n * o * s + r * i * u - r * a * s
                    }
                }, {
                    key: "invert",
                    value: function() {
                        var e = this.elements,
                            t = e[0],
                            n = e[1],
                            r = e[2],
                            i = e[3],
                            a = e[4],
                            o = e[5],
                            s = e[6],
                            u = e[7],
                            l = e[8],
                            c = l * a - o * u,
                            h = o * s - l * i,
                            d = u * i - a * s,
                            f = t * c + n * h + r * d;
                        if (0 === f) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
                        var p = 1 / f;
                        return e[0] = c * p, e[1] = (r * u - l * n) * p, e[2] = (o * n - r * a) * p, e[3] = h * p, e[4] = (l * t - r * s) * p, e[5] = (r * i - o * t) * p, e[6] = d * p, e[7] = (n * s - u * t) * p, e[8] = (a * t - n * i) * p, this
                    }
                }, {
                    key: "transpose",
                    value: function() {
                        var e, t = this.elements;
                        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
                    }
                }, {
                    key: "getNormalMatrix",
                    value: function(e) {
                        return this.setFromMatrix4(e).invert().transpose()
                    }
                }, {
                    key: "transposeIntoArray",
                    value: function(e) {
                        var t = this.elements;
                        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
                    }
                }, {
                    key: "setUvTransform",
                    value: function(e, t, n, r, i, a, o) {
                        var s = Math.cos(i),
                            u = Math.sin(i);
                        return this.set(n * s, n * u, -n * (s * a + u * o) + a + e, -r * u, r * s, -r * (-u * a + s * o) + o + t, 0, 0, 1), this
                    }
                }, {
                    key: "scale",
                    value: function(e, t) {
                        var n = this.elements;
                        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this
                    }
                }, {
                    key: "rotate",
                    value: function(e) {
                        var t = Math.cos(e),
                            n = Math.sin(e),
                            r = this.elements,
                            i = r[0],
                            a = r[3],
                            o = r[6],
                            s = r[1],
                            u = r[4],
                            l = r[7];
                        return r[0] = t * i + n * s, r[3] = t * a + n * u, r[6] = t * o + n * l, r[1] = -n * i + t * s, r[4] = -n * a + t * u, r[7] = -n * o + t * l, this
                    }
                }, {
                    key: "translate",
                    value: function(e, t) {
                        var n = this.elements;
                        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
                            if (t[r] !== n[r]) return !1;
                        return !0
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 9; n++) this.elements[n] = e[n + t];
                        return this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = this.elements;
                        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).fromArray(this.elements)
                    }
                }]), e
            }();
            Sn.prototype.isMatrix3 = !0;
            var En = function() {
                    function e() {
                        (0, v.default)(this, e)
                    }
                    return (0, m.default)(e, null, [{
                        key: "getDataURL",
                        value: function(e) {
                            if (/^data:/i.test(e.src)) return e.src;
                            if ("undefined" == typeof HTMLCanvasElement) return e.src;
                            var t;
                            if (e instanceof HTMLCanvasElement) t = e;
                            else {
                                void 0 === Mn && (Mn = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), Mn.width = e.width, Mn.height = e.height;
                                var n = Mn.getContext("2d");
                                e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = Mn
                            }
                            return t.width > 2048 || t.height > 2048 ? (console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons", e), t.toDataURL("image/jpeg", .6)) : t.toDataURL("image/png")
                        }
                    }]), e
                }(),
                An = 0,
                Ln = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.DEFAULT_IMAGE,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n.DEFAULT_MAPPING,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : _e,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : _e,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : Me,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : Ee,
                            l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : Ge,
                            c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : Ae,
                            d = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 1,
                            f = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : Xt;
                        return (0, v.default)(this, n), e = t.call(this), Object.defineProperty((0, h.default)(e), "id", {
                            value: An++
                        }), e.uuid = vn(), e.name = "", e.image = r, e.mipmaps = [], e.mapping = i, e.wrapS = a, e.wrapT = o, e.magFilter = s, e.minFilter = u, e.anisotropy = d, e.format = l, e.internalFormat = null, e.type = c, e.offset = new Tn(0, 0), e.repeat = new Tn(1, 1), e.center = new Tn(0, 0), e.rotation = 0, e.matrixAutoUpdate = !0, e.matrix = new Sn, e.generateMipmaps = !0, e.premultiplyAlpha = !1, e.flipY = !0, e.unpackAlignment = 4, e.encoding = f, e.version = 0, e.onUpdate = null, e.isRenderTargetTexture = !1, e
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrix",
                        value: function() {
                            this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" == typeof e;
                            if (!t && void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
                            var n = {
                                metadata: {
                                    version: 4.5,
                                    type: "Texture",
                                    generator: "Texture.toJSON"
                                },
                                uuid: this.uuid,
                                name: this.name,
                                mapping: this.mapping,
                                repeat: [this.repeat.x, this.repeat.y],
                                offset: [this.offset.x, this.offset.y],
                                center: [this.center.x, this.center.y],
                                rotation: this.rotation,
                                wrap: [this.wrapS, this.wrapT],
                                format: this.format,
                                type: this.type,
                                encoding: this.encoding,
                                minFilter: this.minFilter,
                                magFilter: this.magFilter,
                                anisotropy: this.anisotropy,
                                flipY: this.flipY,
                                premultiplyAlpha: this.premultiplyAlpha,
                                unpackAlignment: this.unpackAlignment
                            };
                            if (void 0 !== this.image) {
                                var r = this.image;
                                if (void 0 === r.uuid && (r.uuid = vn()), !t && void 0 === e.images[r.uuid]) {
                                    var i;
                                    if (Array.isArray(r)) {
                                        i = [];
                                        for (var a = 0, o = r.length; a < o; a++) r[a].isDataTexture ? i.push(Cn(r[a].image)) : i.push(Cn(r[a]))
                                    } else i = Cn(r);
                                    e.images[r.uuid] = {
                                        uuid: r.uuid,
                                        url: i
                                    }
                                }
                                n.image = r.uuid
                            }
                            return t || (e.textures[this.uuid] = n), n
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }, {
                        key: "transformUv",
                        value: function(e) {
                            if (this.mapping !== he) return e;
                            if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS) {
                                case ye:
                                    e.x = e.x - Math.floor(e.x);
                                    break;
                                case _e:
                                    e.x = e.x < 0 ? 0 : 1;
                                    break;
                                case xe:
                                    1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
                            }
                            if (e.y < 0 || e.y > 1) switch (this.wrapT) {
                                case ye:
                                    e.y = e.y - Math.floor(e.y);
                                    break;
                                case _e:
                                    e.y = e.y < 0 ? 0 : 1;
                                    break;
                                case xe:
                                    1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
                            }
                            return this.flipY && (e.y = 1 - e.y), e
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }]), n
                }(ln);

            function Cn(e) {
                return "undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap ? En.getDataURL(e) : e.data ? {
                    data: Array.prototype.slice.call(e.data),
                    width: e.width,
                    height: e.height,
                    type: e.data.constructor.name
                } : (console.warn("THREE.Texture: Unable to serialize Texture."), {})
            }
            Ln.DEFAULT_IMAGE = void 0, Ln.DEFAULT_MAPPING = he, Ln.prototype.isTexture = !0;
            var Rn = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    (0, v.default)(this, e), this.x = t, this.y = n, this.z = r, this.w = i
                }
                return (0, m.default)(e, [{
                    key: "width",
                    get: function() {
                        return this.z
                    },
                    set: function(e) {
                        this.z = e
                    }
                }, {
                    key: "height",
                    get: function() {
                        return this.w
                    },
                    set: function(e) {
                        this.w = e
                    }
                }, {
                    key: "set",
                    value: function(e, t, n, r) {
                        return this.x = e, this.y = t, this.z = n, this.w = r, this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.x = e, this.y = e, this.z = e, this.w = e, this
                    }
                }, {
                    key: "setX",
                    value: function(e) {
                        return this.x = e, this
                    }
                }, {
                    key: "setY",
                    value: function(e) {
                        return this.y = e, this
                    }
                }, {
                    key: "setZ",
                    value: function(e) {
                        return this.z = e, this
                    }
                }, {
                    key: "setW",
                    value: function(e) {
                        return this.w = e, this
                    }
                }, {
                    key: "setComponent",
                    value: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            case 3:
                                this.w = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                        return this
                    }
                }, {
                    key: "getComponent",
                    value: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            case 3:
                                return this.w;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.x, this.y, this.z, this.w)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
                    }
                }, {
                    key: "add",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.x += e, this.y += e, this.z += e, this.w += e, this
                    }
                }, {
                    key: "addVectors",
                    value: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
                    }
                }, {
                    key: "addScaledVector",
                    value: function(e, t) {
                        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this
                    }
                }, {
                    key: "sub",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
                    }
                }, {
                    key: "subScalar",
                    value: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
                    }
                }, {
                    key: "subVectors",
                    value: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.x *= e.x, this.y *= e.y, this.z *= e.z, this.w *= e.w, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
                    }
                }, {
                    key: "applyMatrix4",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = this.w,
                            a = e.elements;
                        return this.x = a[0] * t + a[4] * n + a[8] * r + a[12] * i, this.y = a[1] * t + a[5] * n + a[9] * r + a[13] * i, this.z = a[2] * t + a[6] * n + a[10] * r + a[14] * i, this.w = a[3] * t + a[7] * n + a[11] * r + a[15] * i, this
                    }
                }, {
                    key: "divideScalar",
                    value: function(e) {
                        return this.multiplyScalar(1 / e)
                    }
                }, {
                    key: "setAxisAngleFromQuaternion",
                    value: function(e) {
                        this.w = 2 * Math.acos(e.w);
                        var t = Math.sqrt(1 - e.w * e.w);
                        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
                    }
                }, {
                    key: "setAxisAngleFromRotationMatrix",
                    value: function(e) {
                        var t, n, r, i, a = .01,
                            o = .1,
                            s = e.elements,
                            u = s[0],
                            l = s[4],
                            c = s[8],
                            h = s[1],
                            d = s[5],
                            f = s[9],
                            p = s[2],
                            v = s[6],
                            m = s[10];
                        if (Math.abs(l - h) < a && Math.abs(c - p) < a && Math.abs(f - v) < a) {
                            if (Math.abs(l + h) < o && Math.abs(c + p) < o && Math.abs(f + v) < o && Math.abs(u + d + m - 3) < o) return this.set(1, 0, 0, 0), this;
                            t = Math.PI;
                            var g = (u + 1) / 2,
                                y = (d + 1) / 2,
                                _ = (m + 1) / 2,
                                x = (l + h) / 4,
                                b = (c + p) / 4,
                                w = (f + v) / 4;
                            return g > y && g > _ ? g < a ? (n = 0, r = .707106781, i = .707106781) : (r = x / (n = Math.sqrt(g)), i = b / n) : y > _ ? y < a ? (n = .707106781, r = 0, i = .707106781) : (n = x / (r = Math.sqrt(y)), i = w / r) : _ < a ? (n = .707106781, r = .707106781, i = 0) : (n = b / (i = Math.sqrt(_)), r = w / i), this.set(n, r, i, t), this
                        }
                        var T = Math.sqrt((v - f) * (v - f) + (c - p) * (c - p) + (h - l) * (h - l));
                        return Math.abs(T) < .001 && (T = 1), this.x = (v - f) / T, this.y = (c - p) / T, this.z = (h - l) / T, this.w = Math.acos((u + d + m - 1) / 2), this
                    }
                }, {
                    key: "min",
                    value: function(e) {
                        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this
                    }
                }, {
                    key: "max",
                    value: function(e) {
                        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this
                    }
                }, {
                    key: "clamp",
                    value: function(e, t) {
                        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this
                    }
                }, {
                    key: "clampScalar",
                    value: function(e, t) {
                        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this
                    }
                }, {
                    key: "clampLength",
                    value: function(e, t) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                    }
                }, {
                    key: "floor",
                    value: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
                    }
                }, {
                    key: "ceil",
                    value: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
                    }
                }, {
                    key: "round",
                    value: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
                    }
                }, {
                    key: "roundToZero",
                    value: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
                    }
                }, {
                    key: "negate",
                    value: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                    }
                }, {
                    key: "manhattanLength",
                    value: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        return this.divideScalar(this.length() || 1)
                    }
                }, {
                    key: "setLength",
                    value: function(e) {
                        return this.normalize().multiplyScalar(e)
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
                    }
                }, {
                    key: "lerpVectors",
                    value: function(e, t, n) {
                        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this.w = e.w + (t.w - e.w) * n, this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t, n) {
                        return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this
                    }
                }, {
                    key: "random",
                    value: function() {
                        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this.w = Math.random(), this
                    }
                }]), e
            }();
            Rn.prototype.isVector4 = !0;
            var kn = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    return (0, v.default)(this, n), (i = t.call(this)).width = e, i.height = r, i.depth = 1, i.scissor = new Rn(0, 0, e, r), i.scissorTest = !1, i.viewport = new Rn(0, 0, e, r), i.texture = new Ln(void 0, a.mapping, a.wrapS, a.wrapT, a.magFilter, a.minFilter, a.format, a.type, a.anisotropy, a.encoding), i.texture.isRenderTargetTexture = !0, i.texture.image = {
                        width: e,
                        height: r,
                        depth: 1
                    }, i.texture.generateMipmaps = void 0 !== a.generateMipmaps && a.generateMipmaps, i.texture.minFilter = void 0 !== a.minFilter ? a.minFilter : Me, i.depthBuffer = void 0 === a.depthBuffer || a.depthBuffer, i.stencilBuffer = void 0 !== a.stencilBuffer && a.stencilBuffer, i.depthTexture = void 0 !== a.depthTexture ? a.depthTexture : null, i
                }
                return (0, m.default)(n, [{
                    key: "setTexture",
                    value: function(e) {
                        e.image = {
                            width: this.width,
                            height: this.height,
                            depth: this.depth
                        }, this.texture = e
                    }
                }, {
                    key: "setSize",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        this.width === e && this.height === t && this.depth === n || (this.width = e, this.height = t, this.depth = n, this.texture.image.width = e, this.texture.image.height = t, this.texture.image.depth = n, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t)
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.texture.image = function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? b(Object(n), !0).forEach((function(t) {
                                    (0, c.default)(e, t, n[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : b(Object(n)).forEach((function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                }))
                            }
                            return e
                        }({}, this.texture.image), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.dispatchEvent({
                            type: "dispose"
                        })
                    }
                }]), n
            }(ln);
            kn.prototype.isWebGLRenderTarget = !0;
            var Pn = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    (0, v.default)(this, n);
                    var o = (a = t.call(this, e, r)).texture;
                    a.texture = [];
                    for (var s = 0; s < i; s++) a.texture[s] = o.clone();
                    return a
                }
                return (0, m.default)(n, [{
                    key: "setSize",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        if (this.width !== e || this.height !== t || this.depth !== n) {
                            this.width = e, this.height = t, this.depth = n;
                            for (var r = 0, i = this.texture.length; r < i; r++) this.texture[r].image.width = e, this.texture[r].image.height = t, this.texture[r].image.depth = n;
                            this.dispose()
                        }
                        return this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t), this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        this.dispose(), this.width = e.width, this.height = e.height, this.depth = e.depth, this.viewport.set(0, 0, this.width, this.height), this.scissor.set(0, 0, this.width, this.height), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this.texture.length = 0;
                        for (var t = 0, n = e.texture.length; t < n; t++) this.texture[t] = e.texture[t].clone();
                        return this
                    }
                }]), n
            }(kn);
            Pn.prototype.isWebGLMultipleRenderTargets = !0;
            var Dn = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return (0, v.default)(this, n), (a = t.call(this, e, r, i)).samples = 4, a
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.samples = e.samples, this
                    }
                }]), n
            }(kn);
            Dn.prototype.isWebGLMultisampleRenderTarget = !0;
            var In = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    (0, v.default)(this, e), this._x = t, this._y = n, this._z = r, this._w = i
                }
                return (0, m.default)(e, [{
                    key: "x",
                    get: function() {
                        return this._x
                    },
                    set: function(e) {
                        this._x = e, this._onChangeCallback()
                    }
                }, {
                    key: "y",
                    get: function() {
                        return this._y
                    },
                    set: function(e) {
                        this._y = e, this._onChangeCallback()
                    }
                }, {
                    key: "z",
                    get: function() {
                        return this._z
                    },
                    set: function(e) {
                        this._z = e, this._onChangeCallback()
                    }
                }, {
                    key: "w",
                    get: function() {
                        return this._w
                    },
                    set: function(e) {
                        this._w = e, this._onChangeCallback()
                    }
                }, {
                    key: "set",
                    value: function(e, t, n, r) {
                        return this._x = e, this._y = t, this._z = n, this._w = r, this._onChangeCallback(), this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this._x, this._y, this._z, this._w)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromEuler",
                    value: function(e, t) {
                        if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                        var n = e._x,
                            r = e._y,
                            i = e._z,
                            a = e._order,
                            o = Math.cos,
                            s = Math.sin,
                            u = o(n / 2),
                            l = o(r / 2),
                            c = o(i / 2),
                            h = s(n / 2),
                            d = s(r / 2),
                            f = s(i / 2);
                        switch (a) {
                            case "XYZ":
                                this._x = h * l * c + u * d * f, this._y = u * d * c - h * l * f, this._z = u * l * f + h * d * c, this._w = u * l * c - h * d * f;
                                break;
                            case "YXZ":
                                this._x = h * l * c + u * d * f, this._y = u * d * c - h * l * f, this._z = u * l * f - h * d * c, this._w = u * l * c + h * d * f;
                                break;
                            case "ZXY":
                                this._x = h * l * c - u * d * f, this._y = u * d * c + h * l * f, this._z = u * l * f + h * d * c, this._w = u * l * c - h * d * f;
                                break;
                            case "ZYX":
                                this._x = h * l * c - u * d * f, this._y = u * d * c + h * l * f, this._z = u * l * f - h * d * c, this._w = u * l * c + h * d * f;
                                break;
                            case "YZX":
                                this._x = h * l * c + u * d * f, this._y = u * d * c + h * l * f, this._z = u * l * f - h * d * c, this._w = u * l * c - h * d * f;
                                break;
                            case "XZY":
                                this._x = h * l * c - u * d * f, this._y = u * d * c - h * l * f, this._z = u * l * f + h * d * c, this._w = u * l * c + h * d * f;
                                break;
                            default:
                                console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + a)
                        }
                        return !1 !== t && this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromAxisAngle",
                    value: function(e, t) {
                        var n = t / 2,
                            r = Math.sin(n);
                        return this._x = e.x * r, this._y = e.y * r, this._z = e.z * r, this._w = Math.cos(n), this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromRotationMatrix",
                    value: function(e) {
                        var t = e.elements,
                            n = t[0],
                            r = t[4],
                            i = t[8],
                            a = t[1],
                            o = t[5],
                            s = t[9],
                            u = t[2],
                            l = t[6],
                            c = t[10],
                            h = n + o + c;
                        if (h > 0) {
                            var d = .5 / Math.sqrt(h + 1);
                            this._w = .25 / d, this._x = (l - s) * d, this._y = (i - u) * d, this._z = (a - r) * d
                        } else if (n > o && n > c) {
                            var f = 2 * Math.sqrt(1 + n - o - c);
                            this._w = (l - s) / f, this._x = .25 * f, this._y = (r + a) / f, this._z = (i + u) / f
                        } else if (o > c) {
                            var p = 2 * Math.sqrt(1 + o - n - c);
                            this._w = (i - u) / p, this._x = (r + a) / p, this._y = .25 * p, this._z = (s + l) / p
                        } else {
                            var v = 2 * Math.sqrt(1 + c - n - o);
                            this._w = (a - r) / v, this._x = (i + u) / v, this._y = (s + l) / v, this._z = .25 * v
                        }
                        return this._onChangeCallback(), this
                    }
                }, {
                    key: "setFromUnitVectors",
                    value: function(e, t) {
                        var n = e.dot(t) + 1;
                        return n < Number.EPSILON ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize()
                    }
                }, {
                    key: "angleTo",
                    value: function(e) {
                        return 2 * Math.acos(Math.abs(mn(this.dot(e), -1, 1)))
                    }
                }, {
                    key: "rotateTowards",
                    value: function(e, t) {
                        var n = this.angleTo(e);
                        if (0 === n) return this;
                        var r = Math.min(1, t / n);
                        return this.slerp(e, r), this
                    }
                }, {
                    key: "identity",
                    value: function() {
                        return this.set(0, 0, 0, 1)
                    }
                }, {
                    key: "invert",
                    value: function() {
                        return this.conjugate()
                    }
                }, {
                    key: "conjugate",
                    value: function() {
                        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        var e = this.length();
                        return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this
                    }
                }, {
                    key: "multiply",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
                    }
                }, {
                    key: "premultiply",
                    value: function(e) {
                        return this.multiplyQuaternions(e, this)
                    }
                }, {
                    key: "multiplyQuaternions",
                    value: function(e, t) {
                        var n = e._x,
                            r = e._y,
                            i = e._z,
                            a = e._w,
                            o = t._x,
                            s = t._y,
                            u = t._z,
                            l = t._w;
                        return this._x = n * l + a * o + r * u - i * s, this._y = r * l + a * s + i * o - n * u, this._z = i * l + a * u + n * s - r * o, this._w = a * l - n * o - r * s - i * u, this._onChangeCallback(), this
                    }
                }, {
                    key: "slerp",
                    value: function(e, t) {
                        if (0 === t) return this;
                        if (1 === t) return this.copy(e);
                        var n = this._x,
                            r = this._y,
                            i = this._z,
                            a = this._w,
                            o = a * e._w + n * e._x + r * e._y + i * e._z;
                        if (o < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, o = -o) : this.copy(e), o >= 1) return this._w = a, this._x = n, this._y = r, this._z = i, this;
                        var s = 1 - o * o;
                        if (s <= Number.EPSILON) {
                            var u = 1 - t;
                            return this._w = u * a + t * this._w, this._x = u * n + t * this._x, this._y = u * r + t * this._y, this._z = u * i + t * this._z, this.normalize(), this._onChangeCallback(), this
                        }
                        var l = Math.sqrt(s),
                            c = Math.atan2(l, o),
                            h = Math.sin((1 - t) * c) / l,
                            d = Math.sin(t * c) / l;
                        return this._w = a * h + this._w * d, this._x = n * h + this._x * d, this._y = r * h + this._y * d, this._z = i * h + this._z * d, this._onChangeCallback(), this
                    }
                }, {
                    key: "slerpQuaternions",
                    value: function(e, t, n) {
                        this.copy(e).slerp(t, n)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t) {
                        return this._x = e.getX(t), this._y = e.getY(t), this._z = e.getZ(t), this._w = e.getW(t), this
                    }
                }, {
                    key: "_onChange",
                    value: function(e) {
                        return this._onChangeCallback = e, this
                    }
                }, {
                    key: "_onChangeCallback",
                    value: function() {}
                }], [{
                    key: "slerp",
                    value: function(e, t, n, r) {
                        return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."), n.slerpQuaternions(e, t, r)
                    }
                }, {
                    key: "slerpFlat",
                    value: function(e, t, n, r, i, a, o) {
                        var s = n[r + 0],
                            u = n[r + 1],
                            l = n[r + 2],
                            c = n[r + 3],
                            h = i[a + 0],
                            d = i[a + 1],
                            f = i[a + 2],
                            p = i[a + 3];
                        if (0 === o) return e[t + 0] = s, e[t + 1] = u, e[t + 2] = l, void(e[t + 3] = c);
                        if (1 === o) return e[t + 0] = h, e[t + 1] = d, e[t + 2] = f, void(e[t + 3] = p);
                        if (c !== p || s !== h || u !== d || l !== f) {
                            var v = 1 - o,
                                m = s * h + u * d + l * f + c * p,
                                g = m >= 0 ? 1 : -1,
                                y = 1 - m * m;
                            if (y > Number.EPSILON) {
                                var _ = Math.sqrt(y),
                                    x = Math.atan2(_, m * g);
                                v = Math.sin(v * x) / _, o = Math.sin(o * x) / _
                            }
                            var b = o * g;
                            if (s = s * v + h * b, u = u * v + d * b, l = l * v + f * b, c = c * v + p * b, v === 1 - o) {
                                var w = 1 / Math.sqrt(s * s + u * u + l * l + c * c);
                                s *= w, u *= w, l *= w, c *= w
                            }
                        }
                        e[t] = s, e[t + 1] = u, e[t + 2] = l, e[t + 3] = c
                    }
                }, {
                    key: "multiplyQuaternionsFlat",
                    value: function(e, t, n, r, i, a) {
                        var o = n[r],
                            s = n[r + 1],
                            u = n[r + 2],
                            l = n[r + 3],
                            c = i[a],
                            h = i[a + 1],
                            d = i[a + 2],
                            f = i[a + 3];
                        return e[t] = o * f + l * c + s * d - u * h, e[t + 1] = s * f + l * h + u * c - o * d, e[t + 2] = u * f + l * d + o * h - s * c, e[t + 3] = l * f - o * c - s * h - u * d, e
                    }
                }]), e
            }();
            In.prototype.isQuaternion = !0;
            var On = function() {
                function e() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                        n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    (0, v.default)(this, e), this.x = t, this.y = n, this.z = r
                }
                return (0, m.default)(e, [{
                    key: "set",
                    value: function(e, t, n) {
                        return void 0 === n && (n = this.z), this.x = e, this.y = t, this.z = n, this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.x = e, this.y = e, this.z = e, this
                    }
                }, {
                    key: "setX",
                    value: function(e) {
                        return this.x = e, this
                    }
                }, {
                    key: "setY",
                    value: function(e) {
                        return this.y = e, this
                    }
                }, {
                    key: "setZ",
                    value: function(e) {
                        return this.z = e, this
                    }
                }, {
                    key: "setComponent",
                    value: function(e, t) {
                        switch (e) {
                            case 0:
                                this.x = t;
                                break;
                            case 1:
                                this.y = t;
                                break;
                            case 2:
                                this.z = t;
                                break;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                        return this
                    }
                }, {
                    key: "getComponent",
                    value: function(e) {
                        switch (e) {
                            case 0:
                                return this.x;
                            case 1:
                                return this.y;
                            case 2:
                                return this.z;
                            default:
                                throw new Error("index is out of range: " + e)
                        }
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.x, this.y, this.z)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.x = e.x, this.y = e.y, this.z = e.z, this
                    }
                }, {
                    key: "add",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.x += e, this.y += e, this.z += e, this
                    }
                }, {
                    key: "addVectors",
                    value: function(e, t) {
                        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
                    }
                }, {
                    key: "addScaledVector",
                    value: function(e, t) {
                        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this
                    }
                }, {
                    key: "sub",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
                    }
                }, {
                    key: "subScalar",
                    value: function(e) {
                        return this.x -= e, this.y -= e, this.z -= e, this
                    }
                }, {
                    key: "subVectors",
                    value: function(e, t) {
                        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
                    }
                }, {
                    key: "multiply",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.x *= e, this.y *= e, this.z *= e, this
                    }
                }, {
                    key: "multiplyVectors",
                    value: function(e, t) {
                        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
                    }
                }, {
                    key: "applyEuler",
                    value: function(e) {
                        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(Fn.setFromEuler(e))
                    }
                }, {
                    key: "applyAxisAngle",
                    value: function(e, t) {
                        return this.applyQuaternion(Fn.setFromAxisAngle(e, t))
                    }
                }, {
                    key: "applyMatrix3",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[3] * n + i[6] * r, this.y = i[1] * t + i[4] * n + i[7] * r, this.z = i[2] * t + i[5] * n + i[8] * r, this
                    }
                }, {
                    key: "applyNormalMatrix",
                    value: function(e) {
                        return this.applyMatrix3(e).normalize()
                    }
                }, {
                    key: "applyMatrix4",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements,
                            a = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
                        return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * a, this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * a, this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * a, this
                    }
                }, {
                    key: "applyQuaternion",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.x,
                            a = e.y,
                            o = e.z,
                            s = e.w,
                            u = s * t + a * r - o * n,
                            l = s * n + o * t - i * r,
                            c = s * r + i * n - a * t,
                            h = -i * t - a * n - o * r;
                        return this.x = u * s + h * -i + l * -o - c * -a, this.y = l * s + h * -a + c * -i - u * -o, this.z = c * s + h * -o + u * -a - l * -i, this
                    }
                }, {
                    key: "project",
                    value: function(e) {
                        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
                    }
                }, {
                    key: "unproject",
                    value: function(e) {
                        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
                    }
                }, {
                    key: "transformDirection",
                    value: function(e) {
                        var t = this.x,
                            n = this.y,
                            r = this.z,
                            i = e.elements;
                        return this.x = i[0] * t + i[4] * n + i[8] * r, this.y = i[1] * t + i[5] * n + i[9] * r, this.z = i[2] * t + i[6] * n + i[10] * r, this.normalize()
                    }
                }, {
                    key: "divide",
                    value: function(e) {
                        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
                    }
                }, {
                    key: "divideScalar",
                    value: function(e) {
                        return this.multiplyScalar(1 / e)
                    }
                }, {
                    key: "min",
                    value: function(e) {
                        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this
                    }
                }, {
                    key: "max",
                    value: function(e) {
                        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this
                    }
                }, {
                    key: "clamp",
                    value: function(e, t) {
                        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this
                    }
                }, {
                    key: "clampScalar",
                    value: function(e, t) {
                        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this
                    }
                }, {
                    key: "clampLength",
                    value: function(e, t) {
                        var n = this.length();
                        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
                    }
                }, {
                    key: "floor",
                    value: function() {
                        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
                    }
                }, {
                    key: "ceil",
                    value: function() {
                        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
                    }
                }, {
                    key: "round",
                    value: function() {
                        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
                    }
                }, {
                    key: "roundToZero",
                    value: function() {
                        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
                    }
                }, {
                    key: "negate",
                    value: function() {
                        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
                    }
                }, {
                    key: "dot",
                    value: function(e) {
                        return this.x * e.x + this.y * e.y + this.z * e.z
                    }
                }, {
                    key: "lengthSq",
                    value: function() {
                        return this.x * this.x + this.y * this.y + this.z * this.z
                    }
                }, {
                    key: "length",
                    value: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                    }
                }, {
                    key: "manhattanLength",
                    value: function() {
                        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                    }
                }, {
                    key: "normalize",
                    value: function() {
                        return this.divideScalar(this.length() || 1)
                    }
                }, {
                    key: "setLength",
                    value: function(e) {
                        return this.normalize().multiplyScalar(e)
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
                    }
                }, {
                    key: "lerpVectors",
                    value: function(e, t, n) {
                        return this.x = e.x + (t.x - e.x) * n, this.y = e.y + (t.y - e.y) * n, this.z = e.z + (t.z - e.z) * n, this
                    }
                }, {
                    key: "cross",
                    value: function(e, t) {
                        return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e)
                    }
                }, {
                    key: "crossVectors",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = t.x,
                            o = t.y,
                            s = t.z;
                        return this.x = r * s - i * o, this.y = i * a - n * s, this.z = n * o - r * a, this
                    }
                }, {
                    key: "projectOnVector",
                    value: function(e) {
                        var t = e.lengthSq();
                        if (0 === t) return this.set(0, 0, 0);
                        var n = e.dot(this) / t;
                        return this.copy(e).multiplyScalar(n)
                    }
                }, {
                    key: "projectOnPlane",
                    value: function(e) {
                        return Nn.copy(this).projectOnVector(e), this.sub(Nn)
                    }
                }, {
                    key: "reflect",
                    value: function(e) {
                        return this.sub(Nn.copy(e).multiplyScalar(2 * this.dot(e)))
                    }
                }, {
                    key: "angleTo",
                    value: function(e) {
                        var t = Math.sqrt(this.lengthSq() * e.lengthSq());
                        if (0 === t) return Math.PI / 2;
                        var n = this.dot(e) / t;
                        return Math.acos(mn(n, -1, 1))
                    }
                }, {
                    key: "distanceTo",
                    value: function(e) {
                        return Math.sqrt(this.distanceToSquared(e))
                    }
                }, {
                    key: "distanceToSquared",
                    value: function(e) {
                        var t = this.x - e.x,
                            n = this.y - e.y,
                            r = this.z - e.z;
                        return t * t + n * n + r * r
                    }
                }, {
                    key: "manhattanDistanceTo",
                    value: function(e) {
                        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
                    }
                }, {
                    key: "setFromSpherical",
                    value: function(e) {
                        return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
                    }
                }, {
                    key: "setFromSphericalCoords",
                    value: function(e, t, n) {
                        var r = Math.sin(t) * e;
                        return this.x = r * Math.sin(n), this.y = Math.cos(t) * e, this.z = r * Math.cos(n), this
                    }
                }, {
                    key: "setFromCylindrical",
                    value: function(e) {
                        return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
                    }
                }, {
                    key: "setFromCylindricalCoords",
                    value: function(e, t, n) {
                        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this
                    }
                }, {
                    key: "setFromMatrixPosition",
                    value: function(e) {
                        var t = e.elements;
                        return this.x = t[12], this.y = t[13], this.z = t[14], this
                    }
                }, {
                    key: "setFromMatrixScale",
                    value: function(e) {
                        var t = this.setFromMatrixColumn(e, 0).length(),
                            n = this.setFromMatrixColumn(e, 1).length(),
                            r = this.setFromMatrixColumn(e, 2).length();
                        return this.x = t, this.y = n, this.z = r, this
                    }
                }, {
                    key: "setFromMatrixColumn",
                    value: function(e, t) {
                        return this.fromArray(e.elements, 4 * t)
                    }
                }, {
                    key: "setFromMatrix3Column",
                    value: function(e, t) {
                        return this.fromArray(e.elements, 3 * t)
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.x === this.x && e.y === this.y && e.z === this.z
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t, n) {
                        return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this
                    }
                }, {
                    key: "random",
                    value: function() {
                        return this.x = Math.random(), this.y = Math.random(), this.z = Math.random(), this
                    }
                }]), e
            }();
            On.prototype.isVector3 = !0;
            var Nn = new On,
                Fn = new In,
                Un = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On(1 / 0, 1 / 0, 1 / 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On(-1 / 0, -1 / 0, -1 / 0);
                        (0, v.default)(this, e), this.min = t, this.max = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.min.copy(e), this.max.copy(t), this
                        }
                    }, {
                        key: "setFromArray",
                        value: function(e) {
                            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, u = e.length; s < u; s += 3) {
                                var l = e[s],
                                    c = e[s + 1],
                                    h = e[s + 2];
                                l < t && (t = l), c < n && (n = c), h < r && (r = h), l > i && (i = l), c > a && (a = c), h > o && (o = h)
                            }
                            return this.min.set(t, n, r), this.max.set(i, a, o), this
                        }
                    }, {
                        key: "setFromBufferAttribute",
                        value: function(e) {
                            for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, a = -1 / 0, o = -1 / 0, s = 0, u = e.count; s < u; s++) {
                                var l = e.getX(s),
                                    c = e.getY(s),
                                    h = e.getZ(s);
                                l < t && (t = l), c < n && (n = c), h < r && (r = h), l > i && (i = l), c > a && (a = c), h > o && (o = h)
                            }
                            return this.min.set(t, n, r), this.max.set(i, a, o), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            this.makeEmpty();
                            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                            return this
                        }
                    }, {
                        key: "setFromCenterAndSize",
                        value: function(e, t) {
                            var n = zn.copy(t).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }, {
                        key: "setFromObject",
                        value: function(e) {
                            return this.makeEmpty(), this.expandByObject(e)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.min.copy(e.min), this.max.copy(e.max), this
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            return this.min.min(e), this.max.max(e), this
                        }
                    }, {
                        key: "expandByVector",
                        value: function(e) {
                            return this.min.sub(e), this.max.add(e), this
                        }
                    }, {
                        key: "expandByScalar",
                        value: function(e) {
                            return this.min.addScalar(-e), this.max.addScalar(e), this
                        }
                    }, {
                        key: "expandByObject",
                        value: function(e) {
                            e.updateWorldMatrix(!1, !1);
                            var t = e.geometry;
                            void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(), Gn.copy(t.boundingBox), Gn.applyMatrix4(e.matrixWorld), this.union(Gn));
                            for (var n = e.children, r = 0, i = n.length; r < i; r++) this.expandByObject(n[r]);
                            return this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
                        }
                    }, {
                        key: "containsBox",
                        value: function(e) {
                            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
                        }
                    }, {
                        key: "getParameter",
                        value: function(e, t) {
                            return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return this.clampPoint(e.center, zn), zn.distanceToSquared(e.center) <= e.radius * e.radius
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            var t, n;
                            return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant
                        }
                    }, {
                        key: "intersectsTriangle",
                        value: function(e) {
                            if (this.isEmpty()) return !1;
                            this.getCenter(Yn), Kn.subVectors(this.max, Yn), Hn.subVectors(e.a, Yn), Vn.subVectors(e.b, Yn), Wn.subVectors(e.c, Yn), jn.subVectors(Vn, Hn), qn.subVectors(Wn, Vn), Xn.subVectors(Hn, Wn);
                            var t = [0, -jn.z, jn.y, 0, -qn.z, qn.y, 0, -Xn.z, Xn.y, jn.z, 0, -jn.x, qn.z, 0, -qn.x, Xn.z, 0, -Xn.x, -jn.y, jn.x, 0, -qn.y, qn.x, 0, -Xn.y, Xn.x, 0];
                            return !!Qn(t, Hn, Vn, Wn, Kn) && !!Qn(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], Hn, Vn, Wn, Kn) && (Zn.crossVectors(jn, qn), Qn(t = [Zn.x, Zn.y, Zn.z], Hn, Vn, Wn, Kn))
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            return t.copy(e).clamp(this.min, this.max)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return zn.copy(e).clamp(this.min, this.max).sub(e).length()
                        }
                    }, {
                        key: "getBoundingSphere",
                        value: function(e) {
                            return this.getCenter(e.center), e.radius = .5 * this.getSize(zn).length(), e
                        }
                    }, {
                        key: "intersect",
                        value: function(e) {
                            return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return this.min.min(e.min), this.max.max(e.max), this
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.isEmpty() || (Bn[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), Bn[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), Bn[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), Bn[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), Bn[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), Bn[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), Bn[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), Bn[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(Bn)), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.min.add(e), this.max.add(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.min.equals(this.min) && e.max.equals(this.max)
                        }
                    }]), e
                }();
            Un.prototype.isBox3 = !0;
            var Bn = [new On, new On, new On, new On, new On, new On, new On, new On],
                zn = new On,
                Gn = new Un,
                Hn = new On,
                Vn = new On,
                Wn = new On,
                jn = new On,
                qn = new On,
                Xn = new On,
                Yn = new On,
                Kn = new On,
                Zn = new On,
                Jn = new On;

            function Qn(e, t, n, r, i) {
                for (var a = 0, o = e.length - 3; a <= o; a += 3) {
                    Jn.fromArray(e, a);
                    var s = i.x * Math.abs(Jn.x) + i.y * Math.abs(Jn.y) + i.z * Math.abs(Jn.z),
                        u = t.dot(Jn),
                        l = n.dot(Jn),
                        c = r.dot(Jn);
                    if (Math.max(-Math.max(u, l, c), Math.min(u, l, c)) > s) return !1
                }
                return !0
            }
            var $n = new Un,
                er = new On,
                tr = new On,
                nr = new On,
                rr = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;
                        (0, v.default)(this, e), this.center = t, this.radius = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.center.copy(e), this.radius = t, this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e, t) {
                            var n = this.center;
                            void 0 !== t ? n.copy(t) : $n.setFromPoints(e).getCenter(n);
                            for (var r = 0, i = 0, a = e.length; i < a; i++) r = Math.max(r, n.distanceToSquared(e[i]));
                            return this.radius = Math.sqrt(r), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.center.copy(e.center), this.radius = e.radius, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.radius < 0
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.center.set(0, 0, 0), this.radius = -1, this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return e.distanceToSquared(this.center) <= this.radius * this.radius
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return e.distanceTo(this.center) - this.radius
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            var t = this.radius + e.radius;
                            return e.center.distanceToSquared(this.center) <= t * t
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsSphere(this)
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            return Math.abs(e.distanceToPoint(this.center)) <= this.radius
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            var n = this.center.distanceToSquared(e);
                            return t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t
                        }
                    }, {
                        key: "getBoundingBox",
                        value: function(e) {
                            return this.isEmpty() ? (e.makeEmpty(), e) : (e.set(this.center, this.center), e.expandByScalar(this.radius), e)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.center.add(e), this
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            nr.subVectors(e, this.center);
                            var t = nr.lengthSq();
                            if (t > this.radius * this.radius) {
                                var n = Math.sqrt(t),
                                    r = .5 * (n - this.radius);
                                this.center.add(nr.multiplyScalar(r / n)), this.radius += r
                            }
                            return this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return tr.subVectors(e.center, this.center).normalize().multiplyScalar(e.radius), this.expandByPoint(er.copy(e.center).add(tr)), this.expandByPoint(er.copy(e.center).sub(tr)), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.center.equals(this.center) && e.radius === this.radius
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                ir = new On,
                ar = new On,
                or = new On,
                sr = new On,
                ur = new On,
                lr = new On,
                cr = new On,
                hr = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On(0, 0, -1);
                        (0, v.default)(this, e), this.origin = t, this.direction = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.origin.copy(e), this.direction.copy(t), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.origin.copy(e.origin), this.direction.copy(e.direction), this
                        }
                    }, {
                        key: "at",
                        value: function(e, t) {
                            return t.copy(this.direction).multiplyScalar(e).add(this.origin)
                        }
                    }, {
                        key: "lookAt",
                        value: function(e) {
                            return this.direction.copy(e).sub(this.origin).normalize(), this
                        }
                    }, {
                        key: "recast",
                        value: function(e) {
                            return this.origin.copy(this.at(e, ir)), this
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t) {
                            t.subVectors(e, this.origin);
                            var n = t.dot(this.direction);
                            return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return Math.sqrt(this.distanceSqToPoint(e))
                        }
                    }, {
                        key: "distanceSqToPoint",
                        value: function(e) {
                            var t = ir.subVectors(e, this.origin).dot(this.direction);
                            return t < 0 ? this.origin.distanceToSquared(e) : (ir.copy(this.direction).multiplyScalar(t).add(this.origin), ir.distanceToSquared(e))
                        }
                    }, {
                        key: "distanceSqToSegment",
                        value: function(e, t, n, r) {
                            ar.copy(e).add(t).multiplyScalar(.5), or.copy(t).sub(e).normalize(), sr.copy(this.origin).sub(ar);
                            var i, a, o, s, u = .5 * e.distanceTo(t),
                                l = -this.direction.dot(or),
                                c = sr.dot(this.direction),
                                h = -sr.dot(or),
                                d = sr.lengthSq(),
                                f = Math.abs(1 - l * l);
                            if (f > 0)
                                if (a = l * c - h, s = u * f, (i = l * h - c) >= 0)
                                    if (a >= -s)
                                        if (a <= s) {
                                            var p = 1 / f;
                                            o = (i *= p) * (i + l * (a *= p) + 2 * c) + a * (l * i + a + 2 * h) + d
                                        } else a = u, o = -(i = Math.max(0, -(l * a + c))) * i + a * (a + 2 * h) + d;
                            else a = -u, o = -(i = Math.max(0, -(l * a + c))) * i + a * (a + 2 * h) + d;
                            else a <= -s ? o = -(i = Math.max(0, -(-l * u + c))) * i + (a = i > 0 ? -u : Math.min(Math.max(-u, -h), u)) * (a + 2 * h) + d : a <= s ? (i = 0, o = (a = Math.min(Math.max(-u, -h), u)) * (a + 2 * h) + d) : o = -(i = Math.max(0, -(l * u + c))) * i + (a = i > 0 ? u : Math.min(Math.max(-u, -h), u)) * (a + 2 * h) + d;
                            else a = l > 0 ? -u : u, o = -(i = Math.max(0, -(l * a + c))) * i + a * (a + 2 * h) + d;
                            return n && n.copy(this.direction).multiplyScalar(i).add(this.origin), r && r.copy(or).multiplyScalar(a).add(ar), o
                        }
                    }, {
                        key: "intersectSphere",
                        value: function(e, t) {
                            ir.subVectors(e.center, this.origin);
                            var n = ir.dot(this.direction),
                                r = ir.dot(ir) - n * n,
                                i = e.radius * e.radius;
                            if (r > i) return null;
                            var a = Math.sqrt(i - r),
                                o = n - a,
                                s = n + a;
                            return o < 0 && s < 0 ? null : o < 0 ? this.at(s, t) : this.at(o, t)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return this.distanceSqToPoint(e.center) <= e.radius * e.radius
                        }
                    }, {
                        key: "distanceToPlane",
                        value: function(e) {
                            var t = e.normal.dot(this.direction);
                            if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
                            var n = -(this.origin.dot(e.normal) + e.constant) / t;
                            return n >= 0 ? n : null
                        }
                    }, {
                        key: "intersectPlane",
                        value: function(e, t) {
                            var n = this.distanceToPlane(e);
                            return null === n ? null : this.at(n, t)
                        }
                    }, {
                        key: "intersectsPlane",
                        value: function(e) {
                            var t = e.distanceToPoint(this.origin);
                            return 0 === t || e.normal.dot(this.direction) * t < 0
                        }
                    }, {
                        key: "intersectBox",
                        value: function(e, t) {
                            var n, r, i, a, o, s, u = 1 / this.direction.x,
                                l = 1 / this.direction.y,
                                c = 1 / this.direction.z,
                                h = this.origin;
                            return u >= 0 ? (n = (e.min.x - h.x) * u, r = (e.max.x - h.x) * u) : (n = (e.max.x - h.x) * u, r = (e.min.x - h.x) * u), l >= 0 ? (i = (e.min.y - h.y) * l, a = (e.max.y - h.y) * l) : (i = (e.max.y - h.y) * l, a = (e.min.y - h.y) * l), n > a || i > r ? null : ((i > n || n != n) && (n = i), (a < r || r != r) && (r = a), c >= 0 ? (o = (e.min.z - h.z) * c, s = (e.max.z - h.z) * c) : (o = (e.max.z - h.z) * c, s = (e.min.z - h.z) * c), n > s || o > r ? null : ((o > n || n != n) && (n = o), (s < r || r != r) && (r = s), r < 0 ? null : this.at(n >= 0 ? n : r, t)))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return null !== this.intersectBox(e, ir)
                        }
                    }, {
                        key: "intersectTriangle",
                        value: function(e, t, n, r, i) {
                            ur.subVectors(t, e), lr.subVectors(n, e), cr.crossVectors(ur, lr);
                            var a, o = this.direction.dot(cr);
                            if (o > 0) {
                                if (r) return null;
                                a = 1
                            } else {
                                if (!(o < 0)) return null;
                                a = -1, o = -o
                            }
                            sr.subVectors(this.origin, e);
                            var s = a * this.direction.dot(lr.crossVectors(sr, lr));
                            if (s < 0) return null;
                            var u = a * this.direction.dot(ur.cross(sr));
                            if (u < 0) return null;
                            if (s + u > o) return null;
                            var l = -a * sr.dot(cr);
                            return l < 0 ? null : this.at(l / o, i)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.origin.equals(this.origin) && e.direction.equals(this.direction)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                dr = function() {
                    function e() {
                        (0, v.default)(this, e), this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t, n, r, i, a, o, s, u, l, c, h, d, f, p, v) {
                            var m = this.elements;
                            return m[0] = e, m[4] = t, m[8] = n, m[12] = r, m[1] = i, m[5] = a, m[9] = o, m[13] = s, m[2] = u, m[6] = l, m[10] = c, m[14] = h, m[3] = d, m[7] = f, m[11] = p, m[15] = v, this
                        }
                    }, {
                        key: "identity",
                        value: function() {
                            return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new e).fromArray(this.elements)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements;
                            return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this
                        }
                    }, {
                        key: "copyPosition",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements;
                            return t[12] = n[12], t[13] = n[13], t[14] = n[14], this
                        }
                    }, {
                        key: "setFromMatrix3",
                        value: function(e) {
                            var t = e.elements;
                            return this.set(t[0], t[3], t[6], 0, t[1], t[4], t[7], 0, t[2], t[5], t[8], 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "extractBasis",
                        value: function(e, t, n) {
                            return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this
                        }
                    }, {
                        key: "makeBasis",
                        value: function(e, t, n) {
                            return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "extractRotation",
                        value: function(e) {
                            var t = this.elements,
                                n = e.elements,
                                r = 1 / fr.setFromMatrixColumn(e, 0).length(),
                                i = 1 / fr.setFromMatrixColumn(e, 1).length(),
                                a = 1 / fr.setFromMatrixColumn(e, 2).length();
                            return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = 0, t[4] = n[4] * i, t[5] = n[5] * i, t[6] = n[6] * i, t[7] = 0, t[8] = n[8] * a, t[9] = n[9] * a, t[10] = n[10] * a, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                        }
                    }, {
                        key: "makeRotationFromEuler",
                        value: function(e) {
                            e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
                            var t = this.elements,
                                n = e.x,
                                r = e.y,
                                i = e.z,
                                a = Math.cos(n),
                                o = Math.sin(n),
                                s = Math.cos(r),
                                u = Math.sin(r),
                                l = Math.cos(i),
                                c = Math.sin(i);
                            if ("XYZ" === e.order) {
                                var h = a * l,
                                    d = a * c,
                                    f = o * l,
                                    p = o * c;
                                t[0] = s * l, t[4] = -s * c, t[8] = u, t[1] = d + f * u, t[5] = h - p * u, t[9] = -o * s, t[2] = p - h * u, t[6] = f + d * u, t[10] = a * s
                            } else if ("YXZ" === e.order) {
                                var v = s * l,
                                    m = s * c,
                                    g = u * l,
                                    y = u * c;
                                t[0] = v + y * o, t[4] = g * o - m, t[8] = a * u, t[1] = a * c, t[5] = a * l, t[9] = -o, t[2] = m * o - g, t[6] = y + v * o, t[10] = a * s
                            } else if ("ZXY" === e.order) {
                                var _ = s * l,
                                    x = s * c,
                                    b = u * l,
                                    w = u * c;
                                t[0] = _ - w * o, t[4] = -a * c, t[8] = b + x * o, t[1] = x + b * o, t[5] = a * l, t[9] = w - _ * o, t[2] = -a * u, t[6] = o, t[10] = a * s
                            } else if ("ZYX" === e.order) {
                                var T = a * l,
                                    M = a * c,
                                    S = o * l,
                                    E = o * c;
                                t[0] = s * l, t[4] = S * u - M, t[8] = T * u + E, t[1] = s * c, t[5] = E * u + T, t[9] = M * u - S, t[2] = -u, t[6] = o * s, t[10] = a * s
                            } else if ("YZX" === e.order) {
                                var A = a * s,
                                    L = a * u,
                                    C = o * s,
                                    R = o * u;
                                t[0] = s * l, t[4] = R - A * c, t[8] = C * c + L, t[1] = c, t[5] = a * l, t[9] = -o * l, t[2] = -u * l, t[6] = L * c + C, t[10] = A - R * c
                            } else if ("XZY" === e.order) {
                                var k = a * s,
                                    P = a * u,
                                    D = o * s,
                                    I = o * u;
                                t[0] = s * l, t[4] = -c, t[8] = u * l, t[1] = k * c + I, t[5] = a * l, t[9] = P * c - D, t[2] = D * c - P, t[6] = o * l, t[10] = I * c + k
                            }
                            return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
                        }
                    }, {
                        key: "makeRotationFromQuaternion",
                        value: function(e) {
                            return this.compose(vr, e, mr)
                        }
                    }, {
                        key: "lookAt",
                        value: function(e, t, n) {
                            var r = this.elements;
                            return _r.subVectors(e, t), 0 === _r.lengthSq() && (_r.z = 1), _r.normalize(), gr.crossVectors(n, _r), 0 === gr.lengthSq() && (1 === Math.abs(n.z) ? _r.x += 1e-4 : _r.z += 1e-4, _r.normalize(), gr.crossVectors(n, _r)), gr.normalize(), yr.crossVectors(_r, gr), r[0] = gr.x, r[4] = yr.x, r[8] = _r.x, r[1] = gr.y, r[5] = yr.y, r[9] = _r.y, r[2] = gr.z, r[6] = yr.z, r[10] = _r.z, this
                        }
                    }, {
                        key: "multiply",
                        value: function(e, t) {
                            return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
                        }
                    }, {
                        key: "premultiply",
                        value: function(e) {
                            return this.multiplyMatrices(e, this)
                        }
                    }, {
                        key: "multiplyMatrices",
                        value: function(e, t) {
                            var n = e.elements,
                                r = t.elements,
                                i = this.elements,
                                a = n[0],
                                o = n[4],
                                s = n[8],
                                u = n[12],
                                l = n[1],
                                c = n[5],
                                h = n[9],
                                d = n[13],
                                f = n[2],
                                p = n[6],
                                v = n[10],
                                m = n[14],
                                g = n[3],
                                y = n[7],
                                _ = n[11],
                                x = n[15],
                                b = r[0],
                                w = r[4],
                                T = r[8],
                                M = r[12],
                                S = r[1],
                                E = r[5],
                                A = r[9],
                                L = r[13],
                                C = r[2],
                                R = r[6],
                                k = r[10],
                                P = r[14],
                                D = r[3],
                                I = r[7],
                                O = r[11],
                                N = r[15];
                            return i[0] = a * b + o * S + s * C + u * D, i[4] = a * w + o * E + s * R + u * I, i[8] = a * T + o * A + s * k + u * O, i[12] = a * M + o * L + s * P + u * N, i[1] = l * b + c * S + h * C + d * D, i[5] = l * w + c * E + h * R + d * I, i[9] = l * T + c * A + h * k + d * O, i[13] = l * M + c * L + h * P + d * N, i[2] = f * b + p * S + v * C + m * D, i[6] = f * w + p * E + v * R + m * I, i[10] = f * T + p * A + v * k + m * O, i[14] = f * M + p * L + v * P + m * N, i[3] = g * b + y * S + _ * C + x * D, i[7] = g * w + y * E + _ * R + x * I, i[11] = g * T + y * A + _ * k + x * O, i[15] = g * M + y * L + _ * P + x * N, this
                        }
                    }, {
                        key: "multiplyScalar",
                        value: function(e) {
                            var t = this.elements;
                            return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
                        }
                    }, {
                        key: "determinant",
                        value: function() {
                            var e = this.elements,
                                t = e[0],
                                n = e[4],
                                r = e[8],
                                i = e[12],
                                a = e[1],
                                o = e[5],
                                s = e[9],
                                u = e[13],
                                l = e[2],
                                c = e[6],
                                h = e[10],
                                d = e[14];
                            return e[3] * (+i * s * c - r * u * c - i * o * h + n * u * h + r * o * d - n * s * d) + e[7] * (+t * s * d - t * u * h + i * a * h - r * a * d + r * u * l - i * s * l) + e[11] * (+t * u * c - t * o * d - i * a * c + n * a * d + i * o * l - n * u * l) + e[15] * (-r * o * l - t * s * c + t * o * h + r * a * c - n * a * h + n * s * l)
                        }
                    }, {
                        key: "transpose",
                        value: function() {
                            var e, t = this.elements;
                            return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
                        }
                    }, {
                        key: "setPosition",
                        value: function(e, t, n) {
                            var r = this.elements;
                            return e.isVector3 ? (r[12] = e.x, r[13] = e.y, r[14] = e.z) : (r[12] = e, r[13] = t, r[14] = n), this
                        }
                    }, {
                        key: "invert",
                        value: function() {
                            var e = this.elements,
                                t = e[0],
                                n = e[1],
                                r = e[2],
                                i = e[3],
                                a = e[4],
                                o = e[5],
                                s = e[6],
                                u = e[7],
                                l = e[8],
                                c = e[9],
                                h = e[10],
                                d = e[11],
                                f = e[12],
                                p = e[13],
                                v = e[14],
                                m = e[15],
                                g = c * v * u - p * h * u + p * s * d - o * v * d - c * s * m + o * h * m,
                                y = f * h * u - l * v * u - f * s * d + a * v * d + l * s * m - a * h * m,
                                _ = l * p * u - f * c * u + f * o * d - a * p * d - l * o * m + a * c * m,
                                x = f * c * s - l * p * s - f * o * h + a * p * h + l * o * v - a * c * v,
                                b = t * g + n * y + r * _ + i * x;
                            if (0 === b) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
                            var w = 1 / b;
                            return e[0] = g * w, e[1] = (p * h * i - c * v * i - p * r * d + n * v * d + c * r * m - n * h * m) * w, e[2] = (o * v * i - p * s * i + p * r * u - n * v * u - o * r * m + n * s * m) * w, e[3] = (c * s * i - o * h * i - c * r * u + n * h * u + o * r * d - n * s * d) * w, e[4] = y * w, e[5] = (l * v * i - f * h * i + f * r * d - t * v * d - l * r * m + t * h * m) * w, e[6] = (f * s * i - a * v * i - f * r * u + t * v * u + a * r * m - t * s * m) * w, e[7] = (a * h * i - l * s * i + l * r * u - t * h * u - a * r * d + t * s * d) * w, e[8] = _ * w, e[9] = (f * c * i - l * p * i - f * n * d + t * p * d + l * n * m - t * c * m) * w, e[10] = (a * p * i - f * o * i + f * n * u - t * p * u - a * n * m + t * o * m) * w, e[11] = (l * o * i - a * c * i - l * n * u + t * c * u + a * n * d - t * o * d) * w, e[12] = x * w, e[13] = (l * p * r - f * c * r + f * n * h - t * p * h - l * n * v + t * c * v) * w, e[14] = (f * o * r - a * p * r - f * n * s + t * p * s + a * n * v - t * o * v) * w, e[15] = (a * c * r - l * o * r + l * n * s - t * c * s - a * n * h + t * o * h) * w, this
                        }
                    }, {
                        key: "scale",
                        value: function(e) {
                            var t = this.elements,
                                n = e.x,
                                r = e.y,
                                i = e.z;
                            return t[0] *= n, t[4] *= r, t[8] *= i, t[1] *= n, t[5] *= r, t[9] *= i, t[2] *= n, t[6] *= r, t[10] *= i, t[3] *= n, t[7] *= r, t[11] *= i, this
                        }
                    }, {
                        key: "getMaxScaleOnAxis",
                        value: function() {
                            var e = this.elements,
                                t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                                n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
                                r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                            return Math.sqrt(Math.max(t, n, r))
                        }
                    }, {
                        key: "makeTranslation",
                        value: function(e, t, n) {
                            return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationX",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationY",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationZ",
                        value: function(e) {
                            var t = Math.cos(e),
                                n = Math.sin(e);
                            return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeRotationAxis",
                        value: function(e, t) {
                            var n = Math.cos(t),
                                r = Math.sin(t),
                                i = 1 - n,
                                a = e.x,
                                o = e.y,
                                s = e.z,
                                u = i * a,
                                l = i * o;
                            return this.set(u * a + n, u * o - r * s, u * s + r * o, 0, u * o + r * s, l * o + n, l * s - r * a, 0, u * s - r * o, l * s + r * a, i * s * s + n, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeScale",
                        value: function(e, t, n) {
                            return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "makeShear",
                        value: function(e, t, n, r, i, a) {
                            return this.set(1, n, i, 0, e, 1, a, 0, t, r, 1, 0, 0, 0, 0, 1), this
                        }
                    }, {
                        key: "compose",
                        value: function(e, t, n) {
                            var r = this.elements,
                                i = t._x,
                                a = t._y,
                                o = t._z,
                                s = t._w,
                                u = i + i,
                                l = a + a,
                                c = o + o,
                                h = i * u,
                                d = i * l,
                                f = i * c,
                                p = a * l,
                                v = a * c,
                                m = o * c,
                                g = s * u,
                                y = s * l,
                                _ = s * c,
                                x = n.x,
                                b = n.y,
                                w = n.z;
                            return r[0] = (1 - (p + m)) * x, r[1] = (d + _) * x, r[2] = (f - y) * x, r[3] = 0, r[4] = (d - _) * b, r[5] = (1 - (h + m)) * b, r[6] = (v + g) * b, r[7] = 0, r[8] = (f + y) * w, r[9] = (v - g) * w, r[10] = (1 - (h + p)) * w, r[11] = 0, r[12] = e.x, r[13] = e.y, r[14] = e.z, r[15] = 1, this
                        }
                    }, {
                        key: "decompose",
                        value: function(e, t, n) {
                            var r = this.elements,
                                i = fr.set(r[0], r[1], r[2]).length(),
                                a = fr.set(r[4], r[5], r[6]).length(),
                                o = fr.set(r[8], r[9], r[10]).length();
                            this.determinant() < 0 && (i = -i), e.x = r[12], e.y = r[13], e.z = r[14], pr.copy(this);
                            var s = 1 / i,
                                u = 1 / a,
                                l = 1 / o;
                            return pr.elements[0] *= s, pr.elements[1] *= s, pr.elements[2] *= s, pr.elements[4] *= u, pr.elements[5] *= u, pr.elements[6] *= u, pr.elements[8] *= l, pr.elements[9] *= l, pr.elements[10] *= l, t.setFromRotationMatrix(pr), n.x = i, n.y = a, n.z = o, this
                        }
                    }, {
                        key: "makePerspective",
                        value: function(e, t, n, r, i, a) {
                            void 0 === a && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
                            var o = this.elements,
                                s = 2 * i / (t - e),
                                u = 2 * i / (n - r),
                                l = (t + e) / (t - e),
                                c = (n + r) / (n - r),
                                h = -(a + i) / (a - i),
                                d = -2 * a * i / (a - i);
                            return o[0] = s, o[4] = 0, o[8] = l, o[12] = 0, o[1] = 0, o[5] = u, o[9] = c, o[13] = 0, o[2] = 0, o[6] = 0, o[10] = h, o[14] = d, o[3] = 0, o[7] = 0, o[11] = -1, o[15] = 0, this
                        }
                    }, {
                        key: "makeOrthographic",
                        value: function(e, t, n, r, i, a) {
                            var o = this.elements,
                                s = 1 / (t - e),
                                u = 1 / (n - r),
                                l = 1 / (a - i),
                                c = (t + e) * s,
                                h = (n + r) * u,
                                d = (a + i) * l;
                            return o[0] = 2 * s, o[4] = 0, o[8] = 0, o[12] = -c, o[1] = 0, o[5] = 2 * u, o[9] = 0, o[13] = -h, o[2] = 0, o[6] = 0, o[10] = -2 * l, o[14] = -d, o[3] = 0, o[7] = 0, o[11] = 0, o[15] = 1, this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
                                if (t[r] !== n[r]) return !1;
                            return !0
                        }
                    }, {
                        key: "fromArray",
                        value: function(e) {
                            for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = 0; n < 16; n++) this.elements[n] = e[n + t];
                            return this
                        }
                    }, {
                        key: "toArray",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                n = this.elements;
                            return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e
                        }
                    }]), e
                }();
            dr.prototype.isMatrix4 = !0;
            var fr = new On,
                pr = new dr,
                vr = new On(0, 0, 0),
                mr = new On(1, 1, 1),
                gr = new On,
                yr = new On,
                _r = new On,
                xr = new dr,
                br = new In,
                wr = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : e.DefaultOrder;
                        (0, v.default)(this, e), this._x = t, this._y = n, this._z = r, this._order = i
                    }
                    return (0, m.default)(e, [{
                        key: "x",
                        get: function() {
                            return this._x
                        },
                        set: function(e) {
                            this._x = e, this._onChangeCallback()
                        }
                    }, {
                        key: "y",
                        get: function() {
                            return this._y
                        },
                        set: function(e) {
                            this._y = e, this._onChangeCallback()
                        }
                    }, {
                        key: "z",
                        get: function() {
                            return this._z
                        },
                        set: function(e) {
                            this._z = e, this._onChangeCallback()
                        }
                    }, {
                        key: "order",
                        get: function() {
                            return this._order
                        },
                        set: function(e) {
                            this._order = e, this._onChangeCallback()
                        }
                    }, {
                        key: "set",
                        value: function(e, t, n) {
                            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this._order;
                            return this._x = e, this._y = t, this._z = n, this._order = r, this._onChangeCallback(), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new this.constructor(this._x, this._y, this._z, this._order)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this
                        }
                    }, {
                        key: "setFromRotationMatrix",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order,
                                n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
                                r = e.elements,
                                i = r[0],
                                a = r[4],
                                o = r[8],
                                s = r[1],
                                u = r[5],
                                l = r[9],
                                c = r[2],
                                h = r[6],
                                d = r[10];
                            switch (t) {
                                case "XYZ":
                                    this._y = Math.asin(mn(o, -1, 1)), Math.abs(o) < .9999999 ? (this._x = Math.atan2(-l, d), this._z = Math.atan2(-a, i)) : (this._x = Math.atan2(h, u), this._z = 0);
                                    break;
                                case "YXZ":
                                    this._x = Math.asin(-mn(l, -1, 1)), Math.abs(l) < .9999999 ? (this._y = Math.atan2(o, d), this._z = Math.atan2(s, u)) : (this._y = Math.atan2(-c, i), this._z = 0);
                                    break;
                                case "ZXY":
                                    this._x = Math.asin(mn(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(-c, d), this._z = Math.atan2(-a, u)) : (this._y = 0, this._z = Math.atan2(s, i));
                                    break;
                                case "ZYX":
                                    this._y = Math.asin(-mn(c, -1, 1)), Math.abs(c) < .9999999 ? (this._x = Math.atan2(h, d), this._z = Math.atan2(s, i)) : (this._x = 0, this._z = Math.atan2(-a, u));
                                    break;
                                case "YZX":
                                    this._z = Math.asin(mn(s, -1, 1)), Math.abs(s) < .9999999 ? (this._x = Math.atan2(-l, u), this._y = Math.atan2(-c, i)) : (this._x = 0, this._y = Math.atan2(o, d));
                                    break;
                                case "XZY":
                                    this._z = Math.asin(-mn(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(h, u), this._y = Math.atan2(o, i)) : (this._x = Math.atan2(-l, d), this._y = 0);
                                    break;
                                default:
                                    console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: " + t)
                            }
                            return this._order = t, !0 === n && this._onChangeCallback(), this
                        }
                    }, {
                        key: "setFromQuaternion",
                        value: function(e, t, n) {
                            return xr.makeRotationFromQuaternion(e), this.setFromRotationMatrix(xr, t, n)
                        }
                    }, {
                        key: "setFromVector3",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._order;
                            return this.set(e.x, e.y, e.z, t)
                        }
                    }, {
                        key: "reorder",
                        value: function(e) {
                            return br.setFromEuler(this), this.setFromQuaternion(br, e)
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
                        }
                    }, {
                        key: "fromArray",
                        value: function(e) {
                            return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this._onChangeCallback(), this
                        }
                    }, {
                        key: "toArray",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
                        }
                    }, {
                        key: "toVector3",
                        value: function(e) {
                            return e ? e.set(this._x, this._y, this._z) : new On(this._x, this._y, this._z)
                        }
                    }, {
                        key: "_onChange",
                        value: function(e) {
                            return this._onChangeCallback = e, this
                        }
                    }, {
                        key: "_onChangeCallback",
                        value: function() {}
                    }]), e
                }();
            wr.prototype.isEuler = !0, wr.DefaultOrder = "XYZ", wr.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"];
            var Tr = function() {
                    function e() {
                        (0, v.default)(this, e), this.mask = 1
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e) {
                            this.mask = 1 << e | 0
                        }
                    }, {
                        key: "enable",
                        value: function(e) {
                            this.mask |= 1 << e | 0
                        }
                    }, {
                        key: "enableAll",
                        value: function() {
                            this.mask = -1
                        }
                    }, {
                        key: "toggle",
                        value: function(e) {
                            this.mask ^= 1 << e | 0
                        }
                    }, {
                        key: "disable",
                        value: function(e) {
                            this.mask &= ~(1 << e | 0)
                        }
                    }, {
                        key: "disableAll",
                        value: function() {
                            this.mask = 0
                        }
                    }, {
                        key: "test",
                        value: function(e) {
                            return 0 != (this.mask & e.mask)
                        }
                    }]), e
                }(),
                Mr = 0,
                Sr = new On,
                Er = new In,
                Ar = new dr,
                Lr = new On,
                Cr = new On,
                Rr = new On,
                kr = new In,
                Pr = new On(1, 0, 0),
                Dr = new On(0, 1, 0),
                Ir = new On(0, 0, 1),
                Or = {
                    type: "added"
                },
                Nr = {
                    type: "removed"
                },
                Fr = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        (0, v.default)(this, n), e = t.call(this), Object.defineProperty((0, h.default)(e), "id", {
                            value: Mr++
                        }), e.uuid = vn(), e.name = "", e.type = "Object3D", e.parent = null, e.children = [], e.up = n.DefaultUp.clone();
                        var r = new On,
                            i = new wr,
                            a = new In,
                            o = new On(1, 1, 1);
                        return i._onChange((function() {
                            a.setFromEuler(i, !1)
                        })), a._onChange((function() {
                            i.setFromQuaternion(a, void 0, !1)
                        })), Object.defineProperties((0, h.default)(e), {
                            position: {
                                configurable: !0,
                                enumerable: !0,
                                value: r
                            },
                            rotation: {
                                configurable: !0,
                                enumerable: !0,
                                value: i
                            },
                            quaternion: {
                                configurable: !0,
                                enumerable: !0,
                                value: a
                            },
                            scale: {
                                configurable: !0,
                                enumerable: !0,
                                value: o
                            },
                            modelViewMatrix: {
                                value: new dr
                            },
                            normalMatrix: {
                                value: new Sn
                            }
                        }), e.matrix = new dr, e.matrixWorld = new dr, e.matrixAutoUpdate = n.DefaultMatrixAutoUpdate, e.matrixWorldNeedsUpdate = !1, e.layers = new Tr, e.visible = !0, e.castShadow = !1, e.receiveShadow = !1, e.frustumCulled = !0, e.renderOrder = 0, e.animations = [], e.userData = {}, e
                    }
                    return (0, m.default)(n, [{
                        key: "onBeforeRender",
                        value: function() {}
                    }, {
                        key: "onAfterRender",
                        value: function() {}
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale)
                        }
                    }, {
                        key: "applyQuaternion",
                        value: function(e) {
                            return this.quaternion.premultiply(e), this
                        }
                    }, {
                        key: "setRotationFromAxisAngle",
                        value: function(e, t) {
                            this.quaternion.setFromAxisAngle(e, t)
                        }
                    }, {
                        key: "setRotationFromEuler",
                        value: function(e) {
                            this.quaternion.setFromEuler(e, !0)
                        }
                    }, {
                        key: "setRotationFromMatrix",
                        value: function(e) {
                            this.quaternion.setFromRotationMatrix(e)
                        }
                    }, {
                        key: "setRotationFromQuaternion",
                        value: function(e) {
                            this.quaternion.copy(e)
                        }
                    }, {
                        key: "rotateOnAxis",
                        value: function(e, t) {
                            return Er.setFromAxisAngle(e, t), this.quaternion.multiply(Er), this
                        }
                    }, {
                        key: "rotateOnWorldAxis",
                        value: function(e, t) {
                            return Er.setFromAxisAngle(e, t), this.quaternion.premultiply(Er), this
                        }
                    }, {
                        key: "rotateX",
                        value: function(e) {
                            return this.rotateOnAxis(Pr, e)
                        }
                    }, {
                        key: "rotateY",
                        value: function(e) {
                            return this.rotateOnAxis(Dr, e)
                        }
                    }, {
                        key: "rotateZ",
                        value: function(e) {
                            return this.rotateOnAxis(Ir, e)
                        }
                    }, {
                        key: "translateOnAxis",
                        value: function(e, t) {
                            return Sr.copy(e).applyQuaternion(this.quaternion), this.position.add(Sr.multiplyScalar(t)), this
                        }
                    }, {
                        key: "translateX",
                        value: function(e) {
                            return this.translateOnAxis(Pr, e)
                        }
                    }, {
                        key: "translateY",
                        value: function(e) {
                            return this.translateOnAxis(Dr, e)
                        }
                    }, {
                        key: "translateZ",
                        value: function(e) {
                            return this.translateOnAxis(Ir, e)
                        }
                    }, {
                        key: "localToWorld",
                        value: function(e) {
                            return e.applyMatrix4(this.matrixWorld)
                        }
                    }, {
                        key: "worldToLocal",
                        value: function(e) {
                            return e.applyMatrix4(Ar.copy(this.matrixWorld).invert())
                        }
                    }, {
                        key: "lookAt",
                        value: function(e, t, n) {
                            e.isVector3 ? Lr.copy(e) : Lr.set(e, t, n);
                            var r = this.parent;
                            this.updateWorldMatrix(!0, !1), Cr.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Ar.lookAt(Cr, Lr, this.up) : Ar.lookAt(Lr, Cr, this.up), this.quaternion.setFromRotationMatrix(Ar), r && (Ar.extractRotation(r.matrixWorld), Er.setFromRotationMatrix(Ar), this.quaternion.premultiply(Er.invert()))
                        }
                    }, {
                        key: "add",
                        value: function(e) {
                            if (arguments.length > 1) {
                                for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
                                return this
                            }
                            return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(Or)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
                        }
                    }, {
                        key: "remove",
                        value: function(e) {
                            if (arguments.length > 1) {
                                for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
                                return this
                            }
                            var n = this.children.indexOf(e);
                            return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(Nr)), this
                        }
                    }, {
                        key: "removeFromParent",
                        value: function() {
                            var e = this.parent;
                            return null !== e && e.remove(this), this
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            for (var e = 0; e < this.children.length; e++) {
                                var t = this.children[e];
                                t.parent = null, t.dispatchEvent(Nr)
                            }
                            return this.children.length = 0, this
                        }
                    }, {
                        key: "attach",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), Ar.copy(this.matrixWorld).invert(), null !== e.parent && (e.parent.updateWorldMatrix(!0, !1), Ar.multiply(e.parent.matrixWorld)), e.applyMatrix4(Ar), this.add(e), e.updateWorldMatrix(!1, !0), this
                        }
                    }, {
                        key: "getObjectById",
                        value: function(e) {
                            return this.getObjectByProperty("id", e)
                        }
                    }, {
                        key: "getObjectByName",
                        value: function(e) {
                            return this.getObjectByProperty("name", e)
                        }
                    }, {
                        key: "getObjectByProperty",
                        value: function(e, t) {
                            if (this[e] === t) return this;
                            for (var n = 0, r = this.children.length; n < r; n++) {
                                var i = this.children[n].getObjectByProperty(e, t);
                                if (void 0 !== i) return i
                            }
                        }
                    }, {
                        key: "getWorldPosition",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), e.setFromMatrixPosition(this.matrixWorld)
                        }
                    }, {
                        key: "getWorldQuaternion",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Cr, e, Rr), e
                        }
                    }, {
                        key: "getWorldScale",
                        value: function(e) {
                            return this.updateWorldMatrix(!0, !1), this.matrixWorld.decompose(Cr, kr, e), e
                        }
                    }, {
                        key: "getWorldDirection",
                        value: function(e) {
                            this.updateWorldMatrix(!0, !1);
                            var t = this.matrixWorld.elements;
                            return e.set(t[8], t[9], t[10]).normalize()
                        }
                    }, {
                        key: "raycast",
                        value: function() {}
                    }, {
                        key: "traverse",
                        value: function(e) {
                            e(this);
                            for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverse(e)
                        }
                    }, {
                        key: "traverseVisible",
                        value: function(e) {
                            if (!1 !== this.visible) {
                                e(this);
                                for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e)
                            }
                        }
                    }, {
                        key: "traverseAncestors",
                        value: function(e) {
                            var t = this.parent;
                            null !== t && (e(t), t.traverseAncestors(e))
                        }
                    }, {
                        key: "updateMatrix",
                        value: function() {
                            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                            for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].updateMatrixWorld(e)
                        }
                    }, {
                        key: "updateWorldMatrix",
                        value: function(e, t) {
                            var n = this.parent;
                            if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === t)
                                for (var r = this.children, i = 0, a = r.length; i < a; i++) r[i].updateWorldMatrix(!1, !0)
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" == typeof e,
                                n = {};
                            t && (e = {
                                geometries: {},
                                materials: {},
                                textures: {},
                                images: {},
                                shapes: {},
                                skeletons: {},
                                animations: {}
                            }, n.metadata = {
                                version: 4.5,
                                type: "Object",
                                generator: "Object3D.toJSON"
                            });
                            var r = {};

                            function i(t, n) {
                                return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
                            }
                            if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), !0 === this.castShadow && (r.castShadow = !0), !0 === this.receiveShadow && (r.receiveShadow = !0), !1 === this.visible && (r.visible = !1), !1 === this.frustumCulled && (r.frustumCulled = !1), 0 !== this.renderOrder && (r.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), r.layers = this.layers.mask, r.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1), this.isInstancedMesh && (r.type = "InstancedMesh", r.count = this.count, r.instanceMatrix = this.instanceMatrix.toJSON(), null !== this.instanceColor && (r.instanceColor = this.instanceColor.toJSON())), this.isScene) this.background && (this.background.isColor ? r.background = this.background.toJSON() : this.background.isTexture && (r.background = this.background.toJSON(e).uuid)), this.environment && this.environment.isTexture && (r.environment = this.environment.toJSON(e).uuid);
                            else if (this.isMesh || this.isLine || this.isPoints) {
                                r.geometry = i(e.geometries, this.geometry);
                                var a = this.geometry.parameters;
                                if (void 0 !== a && void 0 !== a.shapes) {
                                    var o = a.shapes;
                                    if (Array.isArray(o))
                                        for (var s = 0, u = o.length; s < u; s++) {
                                            var l = o[s];
                                            i(e.shapes, l)
                                        } else i(e.shapes, o)
                                }
                            }
                            if (this.isSkinnedMesh && (r.bindMode = this.bindMode, r.bindMatrix = this.bindMatrix.toArray(), void 0 !== this.skeleton && (i(e.skeletons, this.skeleton), r.skeleton = this.skeleton.uuid)), void 0 !== this.material)
                                if (Array.isArray(this.material)) {
                                    for (var c = [], h = 0, d = this.material.length; h < d; h++) c.push(i(e.materials, this.material[h]));
                                    r.material = c
                                } else r.material = i(e.materials, this.material);
                            if (this.children.length > 0) {
                                r.children = [];
                                for (var f = 0; f < this.children.length; f++) r.children.push(this.children[f].toJSON(e).object)
                            }
                            if (this.animations.length > 0) {
                                r.animations = [];
                                for (var p = 0; p < this.animations.length; p++) {
                                    var v = this.animations[p];
                                    r.animations.push(i(e.animations, v))
                                }
                            }
                            if (t) {
                                var m = T(e.geometries),
                                    g = T(e.materials),
                                    y = T(e.textures),
                                    _ = T(e.images),
                                    x = T(e.shapes),
                                    b = T(e.skeletons),
                                    w = T(e.animations);
                                m.length > 0 && (n.geometries = m), g.length > 0 && (n.materials = g), y.length > 0 && (n.textures = y), _.length > 0 && (n.images = _), x.length > 0 && (n.shapes = x), b.length > 0 && (n.skeletons = b), w.length > 0 && (n.animations = w)
                            }
                            return n.object = r, n;

                            function T(e) {
                                var t = [];
                                for (var n in e) {
                                    var r = e[n];
                                    delete r.metadata, t.push(r)
                                }
                                return t
                            }
                        }
                    }, {
                        key: "clone",
                        value: function(e) {
                            return (new this.constructor).copy(this, e)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
                            if (this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.rotation.order = e.rotation.order, this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t)
                                for (var n = 0; n < e.children.length; n++) {
                                    var r = e.children[n];
                                    this.add(r.clone())
                                }
                            return this
                        }
                    }]), n
                }(ln);
            Fr.DefaultUp = new On(0, 1, 0), Fr.DefaultMatrixAutoUpdate = !0, Fr.prototype.isObject3D = !0;
            var Ur = new On,
                Br = new On,
                zr = new On,
                Gr = new On,
                Hr = new On,
                Vr = new On,
                Wr = new On,
                jr = new On,
                qr = new On,
                Xr = new On,
                Yr = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new On;
                        (0, v.default)(this, e), this.a = t, this.b = n, this.c = r
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t, n) {
                            return this.a.copy(e), this.b.copy(t), this.c.copy(n), this
                        }
                    }, {
                        key: "setFromPointsAndIndices",
                        value: function(e, t, n, r) {
                            return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
                        }
                    }, {
                        key: "getArea",
                        value: function() {
                            return Ur.subVectors(this.c, this.b), Br.subVectors(this.a, this.b), .5 * Ur.cross(Br).length()
                        }
                    }, {
                        key: "getMidpoint",
                        value: function(e) {
                            return e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                        }
                    }, {
                        key: "getNormal",
                        value: function(t) {
                            return e.getNormal(this.a, this.b, this.c, t)
                        }
                    }, {
                        key: "getPlane",
                        value: function(e) {
                            return e.setFromCoplanarPoints(this.a, this.b, this.c)
                        }
                    }, {
                        key: "getBarycoord",
                        value: function(t, n) {
                            return e.getBarycoord(t, this.a, this.b, this.c, n)
                        }
                    }, {
                        key: "getUV",
                        value: function(t, n, r, i, a) {
                            return e.getUV(t, this.a, this.b, this.c, n, r, i, a)
                        }
                    }, {
                        key: "containsPoint",
                        value: function(t) {
                            return e.containsPoint(t, this.a, this.b, this.c)
                        }
                    }, {
                        key: "isFrontFacing",
                        value: function(t) {
                            return e.isFrontFacing(this.a, this.b, this.c, t)
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsTriangle(this)
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t) {
                            var n, r, i = this.a,
                                a = this.b,
                                o = this.c;
                            Hr.subVectors(a, i), Vr.subVectors(o, i), jr.subVectors(e, i);
                            var s = Hr.dot(jr),
                                u = Vr.dot(jr);
                            if (s <= 0 && u <= 0) return t.copy(i);
                            qr.subVectors(e, a);
                            var l = Hr.dot(qr),
                                c = Vr.dot(qr);
                            if (l >= 0 && c <= l) return t.copy(a);
                            var h = s * c - l * u;
                            if (h <= 0 && s >= 0 && l <= 0) return n = s / (s - l), t.copy(i).addScaledVector(Hr, n);
                            Xr.subVectors(e, o);
                            var d = Hr.dot(Xr),
                                f = Vr.dot(Xr);
                            if (f >= 0 && d <= f) return t.copy(o);
                            var p = d * u - s * f;
                            if (p <= 0 && u >= 0 && f <= 0) return r = u / (u - f), t.copy(i).addScaledVector(Vr, r);
                            var v = l * f - d * c;
                            if (v <= 0 && c - l >= 0 && d - f >= 0) return Wr.subVectors(o, a), r = (c - l) / (c - l + (d - f)), t.copy(a).addScaledVector(Wr, r);
                            var m = 1 / (v + p + h);
                            return n = p * m, r = h * m, t.copy(i).addScaledVector(Hr, n).addScaledVector(Vr, r)
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
                        }
                    }], [{
                        key: "getNormal",
                        value: function(e, t, n, r) {
                            r.subVectors(n, t), Ur.subVectors(e, t), r.cross(Ur);
                            var i = r.lengthSq();
                            return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
                        }
                    }, {
                        key: "getBarycoord",
                        value: function(e, t, n, r, i) {
                            Ur.subVectors(r, t), Br.subVectors(n, t), zr.subVectors(e, t);
                            var a = Ur.dot(Ur),
                                o = Ur.dot(Br),
                                s = Ur.dot(zr),
                                u = Br.dot(Br),
                                l = Br.dot(zr),
                                c = a * u - o * o;
                            if (0 === c) return i.set(-2, -1, -1);
                            var h = 1 / c,
                                d = (u * s - o * l) * h,
                                f = (a * l - o * s) * h;
                            return i.set(1 - d - f, f, d)
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e, t, n, r) {
                            return this.getBarycoord(e, t, n, r, Gr), Gr.x >= 0 && Gr.y >= 0 && Gr.x + Gr.y <= 1
                        }
                    }, {
                        key: "getUV",
                        value: function(e, t, n, r, i, a, o, s) {
                            return this.getBarycoord(e, t, n, r, Gr), s.set(0, 0), s.addScaledVector(i, Gr.x), s.addScaledVector(a, Gr.y), s.addScaledVector(o, Gr.z), s
                        }
                    }, {
                        key: "isFrontFacing",
                        value: function(e, t, n, r) {
                            return Ur.subVectors(n, t), Br.subVectors(e, t), Ur.cross(Br).dot(r) < 0
                        }
                    }]), e
                }(),
                Kr = 0,
                Zr = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), e = t.call(this), Object.defineProperty((0, h.default)(e), "id", {
                            value: Kr++
                        }), e.uuid = vn(), e.name = "", e.type = "Material", e.fog = !0, e.blending = A, e.side = T, e.vertexColors = !1, e.opacity = 1, e.transparent = !1, e.blendSrc = G, e.blendDst = H, e.blendEquation = P, e.blendSrcAlpha = null, e.blendDstAlpha = null, e.blendEquationAlpha = null, e.depthFunc = J, e.depthTest = !0, e.depthWrite = !0, e.stencilWriteMask = 255, e.stencilFunc = 519, e.stencilRef = 0, e.stencilFuncMask = 255, e.stencilFail = an, e.stencilZFail = an, e.stencilZPass = an, e.stencilWrite = !1, e.clippingPlanes = null, e.clipIntersection = !1, e.clipShadows = !1, e.shadowSide = null, e.colorWrite = !0, e.precision = null, e.polygonOffset = !1, e.polygonOffsetFactor = 0, e.polygonOffsetUnits = 0, e.dithering = !1, e.alphaTest = 0, e.alphaToCoverage = !1, e.premultipliedAlpha = !1, e.visible = !0, e.toneMapped = !0, e.userData = {}, e.version = 0, e
                    }
                    return (0, m.default)(n, [{
                        key: "onBuild",
                        value: function() {}
                    }, {
                        key: "onBeforeCompile",
                        value: function() {}
                    }, {
                        key: "customProgramCacheKey",
                        value: function() {
                            return this.onBeforeCompile.toString()
                        }
                    }, {
                        key: "setValues",
                        value: function(e) {
                            if (void 0 !== e)
                                for (var t in e) {
                                    var n = e[t];
                                    if (void 0 !== n)
                                        if ("shading" !== t) {
                                            var r = this[t];
                                            void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                                        } else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n;
                                    else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                                }
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = void 0 === e || "string" == typeof e;
                            t && (e = {
                                textures: {},
                                images: {}
                            });
                            var n = {
                                metadata: {
                                    version: 4.5,
                                    type: "Material",
                                    generator: "Material.toJSON"
                                }
                            };

                            function r(e) {
                                var t = [];
                                for (var n in e) {
                                    var r = e[n];
                                    delete r.metadata, t.push(r)
                                }
                                return t
                            }
                            if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.specularIntensity && (n.specularIntensity = this.specularIntensity), this.specularTint && this.specularTint.isColor && (n.specularTint = this.specularTint.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatMap && this.clearcoatMap.isTexture && (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid), this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture && (n.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(e).uuid), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid, n.lightMapIntensity = this.lightMapIntensity), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.specularIntensityMap && this.specularIntensityMap.isTexture && (n.specularIntensityMap = this.specularIntensityMap.toJSON(e).uuid), this.specularTintMap && this.specularTintMap.isTexture && (n.specularTintMap = this.specularTintMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, void 0 !== this.combine && (n.combine = this.combine)), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity), void 0 !== this.reflectivity && (n.reflectivity = this.reflectivity), void 0 !== this.refractionRatio && (n.refractionRatio = this.refractionRatio), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.transmission && (n.transmission = this.transmission), this.transmissionMap && this.transmissionMap.isTexture && (n.transmissionMap = this.transmissionMap.toJSON(e).uuid), void 0 !== this.thickness && (n.thickness = this.thickness), this.thicknessMap && this.thicknessMap.isTexture && (n.thicknessMap = this.thicknessMap.toJSON(e).uuid), void 0 !== this.attenuationDistance && (n.attenuationDistance = this.attenuationDistance), void 0 !== this.attenuationTint && (n.attenuationTint = this.attenuationTint.getHex()), void 0 !== this.size && (n.size = this.size), null !== this.shadowSide && (n.shadowSide = this.shadowSide), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== A && (n.blending = this.blending), this.side !== T && (n.side = this.side), this.vertexColors && (n.vertexColors = !0), this.opacity < 1 && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.colorWrite = this.colorWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.alphaToCoverage && (n.alphaToCoverage = this.alphaToCoverage), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.flatShading && (n.flatShading = this.flatShading), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t) {
                                var i = r(e.textures),
                                    a = r(e.images);
                                i.length > 0 && (n.textures = i), a.length > 0 && (n.images = a)
                            }
                            return n
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
                            var t = e.clippingPlanes,
                                n = null;
                            if (null !== t) {
                                var r = t.length;
                                n = new Array(r);
                                for (var i = 0; i !== r; ++i) n[i] = t[i].clone()
                            }
                            return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.alphaToCoverage = e.alphaToCoverage, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }]), n
                }(ln);
            Zr.prototype.isMaterial = !0;
            var Jr = {
                    aliceblue: 15792383,
                    antiquewhite: 16444375,
                    aqua: 65535,
                    aquamarine: 8388564,
                    azure: 15794175,
                    beige: 16119260,
                    bisque: 16770244,
                    black: 0,
                    blanchedalmond: 16772045,
                    blue: 255,
                    blueviolet: 9055202,
                    brown: 10824234,
                    burlywood: 14596231,
                    cadetblue: 6266528,
                    chartreuse: 8388352,
                    chocolate: 13789470,
                    coral: 16744272,
                    cornflowerblue: 6591981,
                    cornsilk: 16775388,
                    crimson: 14423100,
                    cyan: 65535,
                    darkblue: 139,
                    darkcyan: 35723,
                    darkgoldenrod: 12092939,
                    darkgray: 11119017,
                    darkgreen: 25600,
                    darkgrey: 11119017,
                    darkkhaki: 12433259,
                    darkmagenta: 9109643,
                    darkolivegreen: 5597999,
                    darkorange: 16747520,
                    darkorchid: 10040012,
                    darkred: 9109504,
                    darksalmon: 15308410,
                    darkseagreen: 9419919,
                    darkslateblue: 4734347,
                    darkslategray: 3100495,
                    darkslategrey: 3100495,
                    darkturquoise: 52945,
                    darkviolet: 9699539,
                    deeppink: 16716947,
                    deepskyblue: 49151,
                    dimgray: 6908265,
                    dimgrey: 6908265,
                    dodgerblue: 2003199,
                    firebrick: 11674146,
                    floralwhite: 16775920,
                    forestgreen: 2263842,
                    fuchsia: 16711935,
                    gainsboro: 14474460,
                    ghostwhite: 16316671,
                    gold: 16766720,
                    goldenrod: 14329120,
                    gray: 8421504,
                    green: 32768,
                    greenyellow: 11403055,
                    grey: 8421504,
                    honeydew: 15794160,
                    hotpink: 16738740,
                    indianred: 13458524,
                    indigo: 4915330,
                    ivory: 16777200,
                    khaki: 15787660,
                    lavender: 15132410,
                    lavenderblush: 16773365,
                    lawngreen: 8190976,
                    lemonchiffon: 16775885,
                    lightblue: 11393254,
                    lightcoral: 15761536,
                    lightcyan: 14745599,
                    lightgoldenrodyellow: 16448210,
                    lightgray: 13882323,
                    lightgreen: 9498256,
                    lightgrey: 13882323,
                    lightpink: 16758465,
                    lightsalmon: 16752762,
                    lightseagreen: 2142890,
                    lightskyblue: 8900346,
                    lightslategray: 7833753,
                    lightslategrey: 7833753,
                    lightsteelblue: 11584734,
                    lightyellow: 16777184,
                    lime: 65280,
                    limegreen: 3329330,
                    linen: 16445670,
                    magenta: 16711935,
                    maroon: 8388608,
                    mediumaquamarine: 6737322,
                    mediumblue: 205,
                    mediumorchid: 12211667,
                    mediumpurple: 9662683,
                    mediumseagreen: 3978097,
                    mediumslateblue: 8087790,
                    mediumspringgreen: 64154,
                    mediumturquoise: 4772300,
                    mediumvioletred: 13047173,
                    midnightblue: 1644912,
                    mintcream: 16121850,
                    mistyrose: 16770273,
                    moccasin: 16770229,
                    navajowhite: 16768685,
                    navy: 128,
                    oldlace: 16643558,
                    olive: 8421376,
                    olivedrab: 7048739,
                    orange: 16753920,
                    orangered: 16729344,
                    orchid: 14315734,
                    palegoldenrod: 15657130,
                    palegreen: 10025880,
                    paleturquoise: 11529966,
                    palevioletred: 14381203,
                    papayawhip: 16773077,
                    peachpuff: 16767673,
                    peru: 13468991,
                    pink: 16761035,
                    plum: 14524637,
                    powderblue: 11591910,
                    purple: 8388736,
                    rebeccapurple: 6697881,
                    red: 16711680,
                    rosybrown: 12357519,
                    royalblue: 4286945,
                    saddlebrown: 9127187,
                    salmon: 16416882,
                    sandybrown: 16032864,
                    seagreen: 3050327,
                    seashell: 16774638,
                    sienna: 10506797,
                    silver: 12632256,
                    skyblue: 8900331,
                    slateblue: 6970061,
                    slategray: 7372944,
                    slategrey: 7372944,
                    snow: 16775930,
                    springgreen: 65407,
                    steelblue: 4620980,
                    tan: 13808780,
                    teal: 32896,
                    thistle: 14204888,
                    tomato: 16737095,
                    turquoise: 4251856,
                    violet: 15631086,
                    wheat: 16113331,
                    white: 16777215,
                    whitesmoke: 16119285,
                    yellow: 16776960,
                    yellowgreen: 10145074
                },
                Qr = {
                    h: 0,
                    s: 0,
                    l: 0
                },
                $r = {
                    h: 0,
                    s: 0,
                    l: 0
                };

            function ei(e, t, n) {
                return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
            }

            function ti(e) {
                return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
            }

            function ni(e) {
                return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
            }
            var ri = function() {
                function e(t, n, r) {
                    return (0, v.default)(this, e), void 0 === n && void 0 === r ? this.set(t) : this.setRGB(t, n, r)
                }
                return (0, m.default)(e, [{
                    key: "set",
                    value: function(e) {
                        return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this
                    }
                }, {
                    key: "setScalar",
                    value: function(e) {
                        return this.r = e, this.g = e, this.b = e, this
                    }
                }, {
                    key: "setHex",
                    value: function(e) {
                        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
                    }
                }, {
                    key: "setRGB",
                    value: function(e, t, n) {
                        return this.r = e, this.g = t, this.b = n, this
                    }
                }, {
                    key: "setHSL",
                    value: function(e, t, n) {
                        if (e = gn(e, 1), t = mn(t, 0, 1), n = mn(n, 0, 1), 0 === t) this.r = this.g = this.b = n;
                        else {
                            var r = n <= .5 ? n * (1 + t) : n + t - n * t,
                                i = 2 * n - r;
                            this.r = ei(i, r, e + 1 / 3), this.g = ei(i, r, e), this.b = ei(i, r, e - 1 / 3)
                        }
                        return this
                    }
                }, {
                    key: "setStyle",
                    value: function(e) {
                        function t(t) {
                            void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
                        }
                        var n;
                        if (n = /^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)) {
                            var r, i = n[1],
                                a = n[2];
                            switch (i) {
                                case "rgb":
                                case "rgba":
                                    if (r = /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, t(r[4]), this;
                                    if (r = /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, t(r[4]), this;
                                    break;
                                case "hsl":
                                case "hsla":
                                    if (r = /^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)) {
                                        var o = parseFloat(r[1]) / 360,
                                            s = parseInt(r[2], 10) / 100,
                                            u = parseInt(r[3], 10) / 100;
                                        return t(r[4]), this.setHSL(o, s, u)
                                    }
                            }
                        } else if (n = /^\#([A-Fa-f\d]+)$/.exec(e)) {
                            var l = n[1],
                                c = l.length;
                            if (3 === c) return this.r = parseInt(l.charAt(0) + l.charAt(0), 16) / 255, this.g = parseInt(l.charAt(1) + l.charAt(1), 16) / 255, this.b = parseInt(l.charAt(2) + l.charAt(2), 16) / 255, this;
                            if (6 === c) return this.r = parseInt(l.charAt(0) + l.charAt(1), 16) / 255, this.g = parseInt(l.charAt(2) + l.charAt(3), 16) / 255, this.b = parseInt(l.charAt(4) + l.charAt(5), 16) / 255, this
                        }
                        return e && e.length > 0 ? this.setColorName(e) : this
                    }
                }, {
                    key: "setColorName",
                    value: function(e) {
                        var t = Jr[e.toLowerCase()];
                        return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.r, this.g, this.b)
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.r = e.r, this.g = e.g, this.b = e.b, this
                    }
                }, {
                    key: "copyGammaToLinear",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                        return this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
                    }
                }, {
                    key: "copyLinearToGamma",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2,
                            n = t > 0 ? 1 / t : 1;
                        return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this
                    }
                }, {
                    key: "convertGammaToLinear",
                    value: function(e) {
                        return this.copyGammaToLinear(this, e), this
                    }
                }, {
                    key: "convertLinearToGamma",
                    value: function(e) {
                        return this.copyLinearToGamma(this, e), this
                    }
                }, {
                    key: "copySRGBToLinear",
                    value: function(e) {
                        return this.r = ti(e.r), this.g = ti(e.g), this.b = ti(e.b), this
                    }
                }, {
                    key: "copyLinearToSRGB",
                    value: function(e) {
                        return this.r = ni(e.r), this.g = ni(e.g), this.b = ni(e.b), this
                    }
                }, {
                    key: "convertSRGBToLinear",
                    value: function() {
                        return this.copySRGBToLinear(this), this
                    }
                }, {
                    key: "convertLinearToSRGB",
                    value: function() {
                        return this.copyLinearToSRGB(this), this
                    }
                }, {
                    key: "getHex",
                    value: function() {
                        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                    }
                }, {
                    key: "getHexString",
                    value: function() {
                        return ("000000" + this.getHex().toString(16)).slice(-6)
                    }
                }, {
                    key: "getHSL",
                    value: function(e) {
                        var t, n, r = this.r,
                            i = this.g,
                            a = this.b,
                            o = Math.max(r, i, a),
                            s = Math.min(r, i, a),
                            u = (s + o) / 2;
                        if (s === o) t = 0, n = 0;
                        else {
                            var l = o - s;
                            switch (n = u <= .5 ? l / (o + s) : l / (2 - o - s), o) {
                                case r:
                                    t = (i - a) / l + (i < a ? 6 : 0);
                                    break;
                                case i:
                                    t = (a - r) / l + 2;
                                    break;
                                case a:
                                    t = (r - i) / l + 4
                            }
                            t /= 6
                        }
                        return e.h = t, e.s = n, e.l = u, e
                    }
                }, {
                    key: "getStyle",
                    value: function() {
                        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                    }
                }, {
                    key: "offsetHSL",
                    value: function(e, t, n) {
                        return this.getHSL(Qr), Qr.h += e, Qr.s += t, Qr.l += n, this.setHSL(Qr.h, Qr.s, Qr.l), this
                    }
                }, {
                    key: "add",
                    value: function(e) {
                        return this.r += e.r, this.g += e.g, this.b += e.b, this
                    }
                }, {
                    key: "addColors",
                    value: function(e, t) {
                        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
                    }
                }, {
                    key: "addScalar",
                    value: function(e) {
                        return this.r += e, this.g += e, this.b += e, this
                    }
                }, {
                    key: "sub",
                    value: function(e) {
                        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this
                    }
                }, {
                    key: "multiply",
                    value: function(e) {
                        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
                    }
                }, {
                    key: "multiplyScalar",
                    value: function(e) {
                        return this.r *= e, this.g *= e, this.b *= e, this
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
                    }
                }, {
                    key: "lerpColors",
                    value: function(e, t, n) {
                        return this.r = e.r + (t.r - e.r) * n, this.g = e.g + (t.g - e.g) * n, this.b = e.b + (t.b - e.b) * n, this
                    }
                }, {
                    key: "lerpHSL",
                    value: function(e, t) {
                        this.getHSL(Qr), e.getHSL($r);
                        var n = yn(Qr.h, $r.h, t),
                            r = yn(Qr.s, $r.s, t),
                            i = yn(Qr.l, $r.l, t);
                        return this.setHSL(n, r, i), this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        return e.r === this.r && e.g === this.g && e.b === this.b
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
                    }
                }, {
                    key: "fromBufferAttribute",
                    value: function(e, t) {
                        return this.r = e.getX(t), this.g = e.getY(t), this.b = e.getZ(t), !0 === e.normalized && (this.r /= 255, this.g /= 255, this.b /= 255), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.getHex()
                    }
                }]), e
            }();
            ri.NAMES = Jr, ri.prototype.isColor = !0, ri.prototype.r = 1, ri.prototype.g = 1, ri.prototype.b = 1;
            var ii = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshBasicMaterial", r.color = new ri(16777215), r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = ne, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(Zr);
            ii.prototype.isMeshBasicMaterial = !0;
            var ai = new On,
                oi = new Tn,
                si = function() {
                    function e(t, n, r) {
                        if ((0, v.default)(this, e), Array.isArray(t)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                        this.name = "", this.array = t, this.itemSize = n, this.count = void 0 !== t ? t.length / n : 0, this.normalized = !0 === r, this.usage = on, this.updateRange = {
                            offset: 0,
                            count: -1
                        }, this.version = 0
                    }
                    return (0, m.default)(e, [{
                        key: "onUploadCallback",
                        value: function() {}
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            !0 === e && this.version++
                        }
                    }, {
                        key: "setUsage",
                        value: function(e) {
                            return this.usage = e, this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this
                        }
                    }, {
                        key: "copyAt",
                        value: function(e, t, n) {
                            e *= this.itemSize, n *= t.itemSize;
                            for (var r = 0, i = this.itemSize; r < i; r++) this.array[e + r] = t.array[n + r];
                            return this
                        }
                    }, {
                        key: "copyArray",
                        value: function(e) {
                            return this.array.set(e), this
                        }
                    }, {
                        key: "copyColorsArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r), a = new ri), t[n++] = a.r, t[n++] = a.g, t[n++] = a.b
                            }
                            return this
                        }
                    }, {
                        key: "copyVector2sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r), a = new Tn), t[n++] = a.x, t[n++] = a.y
                            }
                            return this
                        }
                    }, {
                        key: "copyVector3sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r), a = new On), t[n++] = a.x, t[n++] = a.y, t[n++] = a.z
                            }
                            return this
                        }
                    }, {
                        key: "copyVector4sArray",
                        value: function(e) {
                            for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++) {
                                var a = e[r];
                                void 0 === a && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r), a = new Rn), t[n++] = a.x, t[n++] = a.y, t[n++] = a.z, t[n++] = a.w
                            }
                            return this
                        }
                    }, {
                        key: "applyMatrix3",
                        value: function(e) {
                            if (2 === this.itemSize)
                                for (var t = 0, n = this.count; t < n; t++) oi.fromBufferAttribute(this, t), oi.applyMatrix3(e), this.setXY(t, oi.x, oi.y);
                            else if (3 === this.itemSize)
                                for (var r = 0, i = this.count; r < i; r++) ai.fromBufferAttribute(this, r), ai.applyMatrix3(e), this.setXYZ(r, ai.x, ai.y, ai.z);
                            return this
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) ai.x = this.getX(t), ai.y = this.getY(t), ai.z = this.getZ(t), ai.applyMatrix4(e), this.setXYZ(t, ai.x, ai.y, ai.z);
                            return this
                        }
                    }, {
                        key: "applyNormalMatrix",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) ai.x = this.getX(t), ai.y = this.getY(t), ai.z = this.getZ(t), ai.applyNormalMatrix(e), this.setXYZ(t, ai.x, ai.y, ai.z);
                            return this
                        }
                    }, {
                        key: "transformDirection",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) ai.x = this.getX(t), ai.y = this.getY(t), ai.z = this.getZ(t), ai.transformDirection(e), this.setXYZ(t, ai.x, ai.y, ai.z);
                            return this
                        }
                    }, {
                        key: "set",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            return this.array.set(e, t), this
                        }
                    }, {
                        key: "getX",
                        value: function(e) {
                            return this.array[e * this.itemSize]
                        }
                    }, {
                        key: "setX",
                        value: function(e, t) {
                            return this.array[e * this.itemSize] = t, this
                        }
                    }, {
                        key: "getY",
                        value: function(e) {
                            return this.array[e * this.itemSize + 1]
                        }
                    }, {
                        key: "setY",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 1] = t, this
                        }
                    }, {
                        key: "getZ",
                        value: function(e) {
                            return this.array[e * this.itemSize + 2]
                        }
                    }, {
                        key: "setZ",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 2] = t, this
                        }
                    }, {
                        key: "getW",
                        value: function(e) {
                            return this.array[e * this.itemSize + 3]
                        }
                    }, {
                        key: "setW",
                        value: function(e, t) {
                            return this.array[e * this.itemSize + 3] = t, this
                        }
                    }, {
                        key: "setXY",
                        value: function(e, t, n) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this
                        }
                    }, {
                        key: "setXYZ",
                        value: function(e, t, n, r) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this
                        }
                    }, {
                        key: "setXYZW",
                        value: function(e, t, n, r, i) {
                            return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this.array[e + 3] = i, this
                        }
                    }, {
                        key: "onUpload",
                        value: function(e) {
                            return this.onUploadCallback = e, this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new this.constructor(this.array, this.itemSize).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                itemSize: this.itemSize,
                                type: this.array.constructor.name,
                                array: Array.prototype.slice.call(this.array),
                                normalized: this.normalized
                            };
                            return "" !== this.name && (e.name = this.name), this.usage !== on && (e.usage = this.usage), 0 === this.updateRange.offset && -1 === this.updateRange.count || (e.updateRange = this.updateRange), e
                        }
                    }]), e
                }();
            si.prototype.isBufferAttribute = !0;
            var ui = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Int8Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                li = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Uint8Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                ci = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Uint8ClampedArray(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                hi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Int16Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                di = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Uint16Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                fi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Int32Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                pi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Uint32Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                vi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Uint16Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si);
            vi.prototype.isFloat16BufferAttribute = !0;
            var mi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Float32Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si),
                gi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        return (0, v.default)(this, n), t.call(this, new Float64Array(e), r, i)
                    }
                    return (0, m.default)(n)
                }(si);

            function yi(e) {
                if (0 === e.length) return -1 / 0;
                for (var t = e[0], n = 1, r = e.length; n < r; ++n) e[n] > t && (t = e[n]);
                return t
            }
            var _i = {
                Int8Array: Int8Array,
                Uint8Array: Uint8Array,
                Uint8ClampedArray: Uint8ClampedArray,
                Int16Array: Int16Array,
                Uint16Array: Uint16Array,
                Int32Array: Int32Array,
                Uint32Array: Uint32Array,
                Float32Array: Float32Array,
                Float64Array: Float64Array
            };

            function xi(e, t) {
                return new _i[e](t)
            }
            var bi = 0,
                wi = new dr,
                Ti = new Fr,
                Mi = new On,
                Si = new Un,
                Ei = new Un,
                Ai = new On,
                Li = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), e = t.call(this), Object.defineProperty((0, h.default)(e), "id", {
                            value: bi++
                        }), e.uuid = vn(), e.name = "", e.type = "BufferGeometry", e.index = null, e.attributes = {}, e.morphAttributes = {}, e.morphTargetsRelative = !1, e.groups = [], e.boundingBox = null, e.boundingSphere = null, e.drawRange = {
                            start: 0,
                            count: 1 / 0
                        }, e.userData = {}, e
                    }
                    return (0, m.default)(n, [{
                        key: "getIndex",
                        value: function() {
                            return this.index
                        }
                    }, {
                        key: "setIndex",
                        value: function(e) {
                            return Array.isArray(e) ? this.index = new(yi(e) > 65535 ? pi : di)(e, 1) : this.index = e, this
                        }
                    }, {
                        key: "getAttribute",
                        value: function(e) {
                            return this.attributes[e]
                        }
                    }, {
                        key: "setAttribute",
                        value: function(e, t) {
                            return this.attributes[e] = t, this
                        }
                    }, {
                        key: "deleteAttribute",
                        value: function(e) {
                            return delete this.attributes[e], this
                        }
                    }, {
                        key: "hasAttribute",
                        value: function(e) {
                            return void 0 !== this.attributes[e]
                        }
                    }, {
                        key: "addGroup",
                        value: function(e, t) {
                            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                            this.groups.push({
                                start: e,
                                count: t,
                                materialIndex: n
                            })
                        }
                    }, {
                        key: "clearGroups",
                        value: function() {
                            this.groups = []
                        }
                    }, {
                        key: "setDrawRange",
                        value: function(e, t) {
                            this.drawRange.start = e, this.drawRange.count = t
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            var t = this.attributes.position;
                            void 0 !== t && (t.applyMatrix4(e), t.needsUpdate = !0);
                            var n = this.attributes.normal;
                            if (void 0 !== n) {
                                var r = (new Sn).getNormalMatrix(e);
                                n.applyNormalMatrix(r), n.needsUpdate = !0
                            }
                            var i = this.attributes.tangent;
                            return void 0 !== i && (i.transformDirection(e), i.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
                        }
                    }, {
                        key: "applyQuaternion",
                        value: function(e) {
                            return wi.makeRotationFromQuaternion(e), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "rotateX",
                        value: function(e) {
                            return wi.makeRotationX(e), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "rotateY",
                        value: function(e) {
                            return wi.makeRotationY(e), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "rotateZ",
                        value: function(e) {
                            return wi.makeRotationZ(e), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "translate",
                        value: function(e, t, n) {
                            return wi.makeTranslation(e, t, n), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "scale",
                        value: function(e, t, n) {
                            return wi.makeScale(e, t, n), this.applyMatrix4(wi), this
                        }
                    }, {
                        key: "lookAt",
                        value: function(e) {
                            return Ti.lookAt(e), Ti.updateMatrix(), this.applyMatrix4(Ti.matrix), this
                        }
                    }, {
                        key: "center",
                        value: function() {
                            return this.computeBoundingBox(), this.boundingBox.getCenter(Mi).negate(), this.translate(Mi.x, Mi.y, Mi.z), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            for (var t = [], n = 0, r = e.length; n < r; n++) {
                                var i = e[n];
                                t.push(i.x, i.y, i.z || 0)
                            }
                            return this.setAttribute("position", new mi(t, 3)), this
                        }
                    }, {
                        key: "computeBoundingBox",
                        value: function() {
                            null === this.boundingBox && (this.boundingBox = new Un);
                            var e = this.attributes.position,
                                t = this.morphAttributes.position;
                            if (e && e.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingBox.set(new On(-1 / 0, -1 / 0, -1 / 0), new On(1 / 0, 1 / 0, 1 / 0));
                            if (void 0 !== e) {
                                if (this.boundingBox.setFromBufferAttribute(e), t)
                                    for (var n = 0, r = t.length; n < r; n++) {
                                        var i = t[n];
                                        Si.setFromBufferAttribute(i), this.morphTargetsRelative ? (Ai.addVectors(this.boundingBox.min, Si.min), this.boundingBox.expandByPoint(Ai), Ai.addVectors(this.boundingBox.max, Si.max), this.boundingBox.expandByPoint(Ai)) : (this.boundingBox.expandByPoint(Si.min), this.boundingBox.expandByPoint(Si.max))
                                    }
                            } else this.boundingBox.makeEmpty();
                            (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
                        }
                    }, {
                        key: "computeBoundingSphere",
                        value: function() {
                            null === this.boundingSphere && (this.boundingSphere = new rr);
                            var e = this.attributes.position,
                                t = this.morphAttributes.position;
                            if (e && e.isGLBufferAttribute) return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".', this), void this.boundingSphere.set(new On, 1 / 0);
                            if (e) {
                                var n = this.boundingSphere.center;
                                if (Si.setFromBufferAttribute(e), t)
                                    for (var r = 0, i = t.length; r < i; r++) {
                                        var a = t[r];
                                        Ei.setFromBufferAttribute(a), this.morphTargetsRelative ? (Ai.addVectors(Si.min, Ei.min), Si.expandByPoint(Ai), Ai.addVectors(Si.max, Ei.max), Si.expandByPoint(Ai)) : (Si.expandByPoint(Ei.min), Si.expandByPoint(Ei.max))
                                    }
                                Si.getCenter(n);
                                for (var o = 0, s = 0, u = e.count; s < u; s++) Ai.fromBufferAttribute(e, s), o = Math.max(o, n.distanceToSquared(Ai));
                                if (t)
                                    for (var l = 0, c = t.length; l < c; l++)
                                        for (var h = t[l], d = this.morphTargetsRelative, f = 0, p = h.count; f < p; f++) Ai.fromBufferAttribute(h, f), d && (Mi.fromBufferAttribute(e, f), Ai.add(Mi)), o = Math.max(o, n.distanceToSquared(Ai));
                                this.boundingSphere.radius = Math.sqrt(o), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
                            }
                        }
                    }, {
                        key: "computeFaceNormals",
                        value: function() {}
                    }, {
                        key: "computeTangents",
                        value: function() {
                            var e = this.index,
                                t = this.attributes;
                            if (null !== e && void 0 !== t.position && void 0 !== t.normal && void 0 !== t.uv) {
                                var n = e.array,
                                    r = t.position.array,
                                    i = t.normal.array,
                                    a = t.uv.array,
                                    o = r.length / 3;
                                void 0 === t.tangent && this.setAttribute("tangent", new si(new Float32Array(4 * o), 4));
                                for (var s = t.tangent.array, u = [], l = [], c = 0; c < o; c++) u[c] = new On, l[c] = new On;
                                var h = new On,
                                    d = new On,
                                    f = new On,
                                    p = new Tn,
                                    v = new Tn,
                                    m = new Tn,
                                    g = new On,
                                    y = new On,
                                    _ = this.groups;
                                0 === _.length && (_ = [{
                                    start: 0,
                                    count: n.length
                                }]);
                                for (var x = 0, b = _.length; x < b; ++x)
                                    for (var w = _[x], T = w.start, M = T, S = T + w.count; M < S; M += 3) N(n[M + 0], n[M + 1], n[M + 2]);
                                for (var E = new On, A = new On, L = new On, C = new On, R = 0, k = _.length; R < k; ++R)
                                    for (var P = _[R], D = P.start, I = D, O = D + P.count; I < O; I += 3) F(n[I + 0]), F(n[I + 1]), F(n[I + 2])
                            } else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");

                            function N(e, t, n) {
                                h.fromArray(r, 3 * e), d.fromArray(r, 3 * t), f.fromArray(r, 3 * n), p.fromArray(a, 2 * e), v.fromArray(a, 2 * t), m.fromArray(a, 2 * n), d.sub(h), f.sub(h), v.sub(p), m.sub(p);
                                var i = 1 / (v.x * m.y - m.x * v.y);
                                isFinite(i) && (g.copy(d).multiplyScalar(m.y).addScaledVector(f, -v.y).multiplyScalar(i), y.copy(f).multiplyScalar(v.x).addScaledVector(d, -m.x).multiplyScalar(i), u[e].add(g), u[t].add(g), u[n].add(g), l[e].add(y), l[t].add(y), l[n].add(y))
                            }

                            function F(e) {
                                L.fromArray(i, 3 * e), C.copy(L);
                                var t = u[e];
                                E.copy(t), E.sub(L.multiplyScalar(L.dot(t))).normalize(), A.crossVectors(C, t);
                                var n = A.dot(l[e]) < 0 ? -1 : 1;
                                s[4 * e] = E.x, s[4 * e + 1] = E.y, s[4 * e + 2] = E.z, s[4 * e + 3] = n
                            }
                        }
                    }, {
                        key: "computeVertexNormals",
                        value: function() {
                            var e = this.index,
                                t = this.getAttribute("position");
                            if (void 0 !== t) {
                                var n = this.getAttribute("normal");
                                if (void 0 === n) n = new si(new Float32Array(3 * t.count), 3), this.setAttribute("normal", n);
                                else
                                    for (var r = 0, i = n.count; r < i; r++) n.setXYZ(r, 0, 0, 0);
                                var a = new On,
                                    o = new On,
                                    s = new On,
                                    u = new On,
                                    l = new On,
                                    c = new On,
                                    h = new On,
                                    d = new On;
                                if (e)
                                    for (var f = 0, p = e.count; f < p; f += 3) {
                                        var v = e.getX(f + 0),
                                            m = e.getX(f + 1),
                                            g = e.getX(f + 2);
                                        a.fromBufferAttribute(t, v), o.fromBufferAttribute(t, m), s.fromBufferAttribute(t, g), h.subVectors(s, o), d.subVectors(a, o), h.cross(d), u.fromBufferAttribute(n, v), l.fromBufferAttribute(n, m), c.fromBufferAttribute(n, g), u.add(h), l.add(h), c.add(h), n.setXYZ(v, u.x, u.y, u.z), n.setXYZ(m, l.x, l.y, l.z), n.setXYZ(g, c.x, c.y, c.z)
                                    } else
                                        for (var y = 0, _ = t.count; y < _; y += 3) a.fromBufferAttribute(t, y + 0), o.fromBufferAttribute(t, y + 1), s.fromBufferAttribute(t, y + 2), h.subVectors(s, o), d.subVectors(a, o), h.cross(d), n.setXYZ(y + 0, h.x, h.y, h.z), n.setXYZ(y + 1, h.x, h.y, h.z), n.setXYZ(y + 2, h.x, h.y, h.z);
                                this.normalizeNormals(), n.needsUpdate = !0
                            }
                        }
                    }, {
                        key: "merge",
                        value: function(e, t) {
                            if (e && e.isBufferGeometry) {
                                void 0 === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
                                var n = this.attributes;
                                for (var r in n)
                                    if (void 0 !== e.attributes[r])
                                        for (var i = n[r].array, a = e.attributes[r], o = a.array, s = a.itemSize * t, u = Math.min(o.length, i.length - s), l = 0, c = s; l < u; l++, c++) i[c] = o[l];
                                return this
                            }
                            console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
                        }
                    }, {
                        key: "normalizeNormals",
                        value: function() {
                            for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) Ai.fromBufferAttribute(e, t), Ai.normalize(), e.setXYZ(t, Ai.x, Ai.y, Ai.z)
                        }
                    }, {
                        key: "toNonIndexed",
                        value: function() {
                            function e(e, t) {
                                for (var n = e.array, r = e.itemSize, i = e.normalized, a = new n.constructor(t.length * r), o = 0, s = 0, u = 0, l = t.length; u < l; u++) {
                                    o = e.isInterleavedBufferAttribute ? t[u] * e.data.stride + e.offset : t[u] * r;
                                    for (var c = 0; c < r; c++) a[s++] = n[o++]
                                }
                                return new si(a, r, i)
                            }
                            if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."), this;
                            var t = new n,
                                r = this.index.array,
                                i = this.attributes;
                            for (var a in i) {
                                var o = e(i[a], r);
                                t.setAttribute(a, o)
                            }
                            var s = this.morphAttributes;
                            for (var u in s) {
                                for (var l = [], c = s[u], h = 0, d = c.length; h < d; h++) {
                                    var f = e(c[h], r);
                                    l.push(f)
                                }
                                t.morphAttributes[u] = l
                            }
                            t.morphTargetsRelative = this.morphTargetsRelative;
                            for (var p = this.groups, v = 0, m = p.length; v < m; v++) {
                                var g = p[v];
                                t.addGroup(g.start, g.count, g.materialIndex)
                            }
                            return t
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                metadata: {
                                    version: 4.5,
                                    type: "BufferGeometry",
                                    generator: "BufferGeometry.toJSON"
                                }
                            };
                            if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), void 0 !== this.parameters) {
                                var t = this.parameters;
                                for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
                                return e
                            }
                            e.data = {
                                attributes: {}
                            };
                            var r = this.index;
                            null !== r && (e.data.index = {
                                type: r.array.constructor.name,
                                array: Array.prototype.slice.call(r.array)
                            });
                            var i = this.attributes;
                            for (var a in i) {
                                var o = i[a];
                                e.data.attributes[a] = o.toJSON(e.data)
                            }
                            var s = {},
                                u = !1;
                            for (var l in this.morphAttributes) {
                                for (var c = this.morphAttributes[l], h = [], d = 0, f = c.length; d < f; d++) {
                                    var p = c[d];
                                    h.push(p.toJSON(e.data))
                                }
                                h.length > 0 && (s[l] = h, u = !0)
                            }
                            u && (e.data.morphAttributes = s, e.data.morphTargetsRelative = this.morphTargetsRelative);
                            var v = this.groups;
                            v.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(v)));
                            var m = this.boundingSphere;
                            return null !== m && (e.data.boundingSphere = {
                                center: m.center.toArray(),
                                radius: m.radius
                            }), e
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new n).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null;
                            var t = {};
                            this.name = e.name;
                            var n = e.index;
                            null !== n && this.setIndex(n.clone(t));
                            var r = e.attributes;
                            for (var i in r) {
                                var a = r[i];
                                this.setAttribute(i, a.clone(t))
                            }
                            var o = e.morphAttributes;
                            for (var s in o) {
                                for (var u = [], l = o[s], c = 0, h = l.length; c < h; c++) u.push(l[c].clone(t));
                                this.morphAttributes[s] = u
                            }
                            this.morphTargetsRelative = e.morphTargetsRelative;
                            for (var d = e.groups, f = 0, p = d.length; f < p; f++) {
                                var v = d[f];
                                this.addGroup(v.start, v.count, v.materialIndex)
                            }
                            var m = e.boundingBox;
                            null !== m && (this.boundingBox = m.clone());
                            var g = e.boundingSphere;
                            return null !== g && (this.boundingSphere = g.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }]), n
                }(ln);
            Li.prototype.isBufferGeometry = !0;
            var Ci = new dr,
                Ri = new hr,
                ki = new rr,
                Pi = new On,
                Di = new On,
                Ii = new On,
                Oi = new On,
                Ni = new On,
                Fi = new On,
                Ui = new On,
                Bi = new On,
                zi = new On,
                Gi = new Tn,
                Hi = new Tn,
                Vi = new Tn,
                Wi = new On,
                ji = new On,
                qi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Li,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new ii;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "Mesh", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign({}, e.morphTargetDictionary)), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n, r = this.geometry,
                                i = this.material,
                                a = this.matrixWorld;
                            if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(), ki.copy(r.boundingSphere), ki.applyMatrix4(a), !1 !== e.ray.intersectsSphere(ki) && (Ci.copy(a).invert(), Ri.copy(e.ray).applyMatrix4(Ci), null === r.boundingBox || !1 !== Ri.intersectsBox(r.boundingBox))))
                                if (r.isBufferGeometry) {
                                    var o = r.index,
                                        s = r.attributes.position,
                                        u = r.morphAttributes.position,
                                        l = r.morphTargetsRelative,
                                        c = r.attributes.uv,
                                        h = r.attributes.uv2,
                                        d = r.groups,
                                        f = r.drawRange;
                                    if (null !== o)
                                        if (Array.isArray(i))
                                            for (var p = 0, v = d.length; p < v; p++)
                                                for (var m = d[p], g = i[m.materialIndex], y = Math.max(m.start, f.start), _ = Math.min(m.start + m.count, f.start + f.count); y < _; y += 3) {
                                                    var x = o.getX(y),
                                                        b = o.getX(y + 1),
                                                        w = o.getX(y + 2);
                                                    (n = Xi(this, g, e, Ri, s, u, l, c, h, x, b, w)) && (n.faceIndex = Math.floor(y / 3), n.face.materialIndex = m.materialIndex, t.push(n))
                                                } else
                                                    for (var T = Math.max(0, f.start), M = Math.min(o.count, f.start + f.count); T < M; T += 3) {
                                                        var S = o.getX(T),
                                                            E = o.getX(T + 1),
                                                            A = o.getX(T + 2);
                                                        (n = Xi(this, i, e, Ri, s, u, l, c, h, S, E, A)) && (n.faceIndex = Math.floor(T / 3), t.push(n))
                                                    } else if (void 0 !== s)
                                                        if (Array.isArray(i))
                                                            for (var L = 0, C = d.length; L < C; L++)
                                                                for (var R = d[L], k = i[R.materialIndex], P = Math.max(R.start, f.start), D = Math.min(R.start + R.count, f.start + f.count); P < D; P += 3)(n = Xi(this, k, e, Ri, s, u, l, c, h, P, P + 1, P + 2)) && (n.faceIndex = Math.floor(P / 3), n.face.materialIndex = R.materialIndex, t.push(n));
                                                        else
                                                            for (var I = Math.max(0, f.start), O = Math.min(s.count, f.start + f.count); I < O; I += 3)(n = Xi(this, i, e, Ri, s, u, l, c, h, I, I + 1, I + 2)) && (n.faceIndex = Math.floor(I / 3), t.push(n))
                                } else r.isGeometry && console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                        }
                    }]), n
                }(Fr);

            function Xi(e, t, n, r, i, a, o, s, u, l, c, h) {
                Pi.fromBufferAttribute(i, l), Di.fromBufferAttribute(i, c), Ii.fromBufferAttribute(i, h);
                var d = e.morphTargetInfluences;
                if (a && d) {
                    Ui.set(0, 0, 0), Bi.set(0, 0, 0), zi.set(0, 0, 0);
                    for (var f = 0, p = a.length; f < p; f++) {
                        var v = d[f],
                            m = a[f];
                        0 !== v && (Oi.fromBufferAttribute(m, l), Ni.fromBufferAttribute(m, c), Fi.fromBufferAttribute(m, h), o ? (Ui.addScaledVector(Oi, v), Bi.addScaledVector(Ni, v), zi.addScaledVector(Fi, v)) : (Ui.addScaledVector(Oi.sub(Pi), v), Bi.addScaledVector(Ni.sub(Di), v), zi.addScaledVector(Fi.sub(Ii), v)))
                    }
                    Pi.add(Ui), Di.add(Bi), Ii.add(zi)
                }
                e.isSkinnedMesh && (e.boneTransform(l, Pi), e.boneTransform(c, Di), e.boneTransform(h, Ii));
                var g = function(e, t, n, r, i, a, o, s) {
                    if (null === (t.side === M ? r.intersectTriangle(o, a, i, !0, s) : r.intersectTriangle(i, a, o, t.side !== S, s))) return null;
                    ji.copy(s), ji.applyMatrix4(e.matrixWorld);
                    var u = n.ray.origin.distanceTo(ji);
                    return u < n.near || u > n.far ? null : {
                        distance: u,
                        point: ji.clone(),
                        object: e
                    }
                }(e, t, n, r, Pi, Di, Ii, Wi);
                if (g) {
                    s && (Gi.fromBufferAttribute(s, l), Hi.fromBufferAttribute(s, c), Vi.fromBufferAttribute(s, h), g.uv = Yr.getUV(Wi, Pi, Di, Ii, Gi, Hi, Vi, new Tn)), u && (Gi.fromBufferAttribute(u, l), Hi.fromBufferAttribute(u, c), Vi.fromBufferAttribute(u, h), g.uv2 = Yr.getUV(Wi, Pi, Di, Ii, Gi, Hi, Vi, new Tn));
                    var y = {
                        a: l,
                        b: c,
                        c: h,
                        normal: new On,
                        materialIndex: 0
                    };
                    Yr.getNormal(Pi, Di, Ii, y.normal), g.face = y
                }
                return g
            }
            qi.prototype.isMesh = !0;
            var Yi = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1,
                        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
                    (0, v.default)(this, n), (e = t.call(this)).type = "BoxGeometry", e.parameters = {
                        width: r,
                        height: i,
                        depth: a,
                        widthSegments: o,
                        heightSegments: s,
                        depthSegments: u
                    };
                    var l = (0, h.default)(e);
                    o = Math.floor(o), s = Math.floor(s), u = Math.floor(u);
                    var c = [],
                        d = [],
                        f = [],
                        p = [],
                        m = 0,
                        g = 0;

                    function y(e, t, n, r, i, a, o, s, u, h, v) {
                        for (var y = a / u, _ = o / h, x = a / 2, b = o / 2, w = s / 2, T = u + 1, M = h + 1, S = 0, E = 0, A = new On, L = 0; L < M; L++)
                            for (var C = L * _ - b, R = 0; R < T; R++) {
                                var k = R * y - x;
                                A[e] = k * r, A[t] = C * i, A[n] = w, d.push(A.x, A.y, A.z), A[e] = 0, A[t] = 0, A[n] = s > 0 ? 1 : -1, f.push(A.x, A.y, A.z), p.push(R / u), p.push(1 - L / h), S += 1
                            }
                        for (var P = 0; P < h; P++)
                            for (var D = 0; D < u; D++) {
                                var I = m + D + T * P,
                                    O = m + D + T * (P + 1),
                                    N = m + (D + 1) + T * (P + 1),
                                    F = m + (D + 1) + T * P;
                                c.push(I, O, F), c.push(O, N, F), E += 6
                            }
                        l.addGroup(g, E, v), g += E, m += S
                    }
                    return y("z", "y", "x", -1, -1, a, i, r, u, s, 0), y("z", "y", "x", 1, -1, a, i, -r, u, s, 1), y("x", "z", "y", 1, 1, r, a, i, o, u, 2), y("x", "z", "y", 1, -1, r, a, -i, o, u, 3), y("x", "y", "z", 1, -1, r, i, a, o, s, 4), y("x", "y", "z", -1, -1, r, i, -a, o, s, 5), e.setIndex(c), e.setAttribute("position", new mi(d, 3)), e.setAttribute("normal", new mi(f, 3)), e.setAttribute("uv", new mi(p, 2)), e
                }
                return (0, m.default)(n, null, [{
                    key: "fromJSON",
                    value: function(e) {
                        return new n(e.width, e.height, e.depth, e.widthSegments, e.heightSegments, e.depthSegments)
                    }
                }]), n
            }(Li);

            function Ki(e) {
                var t = {};
                for (var n in e)
                    for (var r in t[n] = {}, e[n]) {
                        var i = e[n][r];
                        i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture || i.isQuaternion) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
                    }
                return t
            }

            function Zi(e) {
                for (var t = {}, n = 0; n < e.length; n++) {
                    var r = Ki(e[n]);
                    for (var i in r) t[i] = r[i]
                }
                return t
            }
            var Ji = {
                    clone: Ki,
                    merge: Zi
                },
                Qi = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this)).type = "ShaderMaterial", r.defines = {}, r.uniforms = {}, r.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", r.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", r.linewidth = 1, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.lights = !1, r.clipping = !1, r.extensions = {
                            derivatives: !1,
                            fragDepth: !1,
                            drawBuffers: !1,
                            shaderTextureLOD: !1
                        }, r.defaultAttributeValues = {
                            color: [1, 1, 1],
                            uv: [0, 0],
                            uv2: [0, 0]
                        }, r.index0AttributeName = void 0, r.uniformsNeedUpdate = !1, r.glslVersion = null, void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), r.setValues(e)), r
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Ki(e.uniforms), this.defines = Object.assign({}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.extensions = Object.assign({}, e.extensions), this.glslVersion = e.glslVersion, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                            for (var r in t.glslVersion = this.glslVersion, t.uniforms = {}, this.uniforms) {
                                var i = this.uniforms[r].value;
                                i && i.isTexture ? t.uniforms[r] = {
                                    type: "t",
                                    value: i.toJSON(e).uuid
                                } : i && i.isColor ? t.uniforms[r] = {
                                    type: "c",
                                    value: i.getHex()
                                } : i && i.isVector2 ? t.uniforms[r] = {
                                    type: "v2",
                                    value: i.toArray()
                                } : i && i.isVector3 ? t.uniforms[r] = {
                                    type: "v3",
                                    value: i.toArray()
                                } : i && i.isVector4 ? t.uniforms[r] = {
                                    type: "v4",
                                    value: i.toArray()
                                } : i && i.isMatrix3 ? t.uniforms[r] = {
                                    type: "m3",
                                    value: i.toArray()
                                } : i && i.isMatrix4 ? t.uniforms[r] = {
                                    type: "m4",
                                    value: i.toArray()
                                } : t.uniforms[r] = {
                                    value: i
                                }
                            }
                            Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
                            var a = {};
                            for (var o in this.extensions) !0 === this.extensions[o] && (a[o] = !0);
                            return Object.keys(a).length > 0 && (t.extensions = a), t
                        }
                    }]), n
                }(Zr);
            Qi.prototype.isShaderMaterial = !0;
            var $i = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "Camera", e.matrixWorldInverse = new dr, e.projectionMatrix = new dr, e.projectionMatrixInverse = new dr, e
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this
                    }
                }, {
                    key: "getWorldDirection",
                    value: function(e) {
                        this.updateWorldMatrix(!0, !1);
                        var t = this.matrixWorld.elements;
                        return e.set(-t[8], -t[9], -t[10]).normalize()
                    }
                }, {
                    key: "updateMatrixWorld",
                    value: function(e) {
                        (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e), this.matrixWorldInverse.copy(this.matrixWorld).invert()
                    }
                }, {
                    key: "updateWorldMatrix",
                    value: function(e, t) {
                        (0, l.default)((0, p.default)(n.prototype), "updateWorldMatrix", this).call(this, e, t), this.matrixWorldInverse.copy(this.matrixWorld).invert()
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }]), n
            }(Fr);
            $i.prototype.isCamera = !0;
            var ea = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 50,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2e3;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "PerspectiveCamera", e.fov = r, e.zoom = 1, e.near = a, e.far = o, e.focus = 10, e.aspect = i, e.view = null, e.filmGauge = 35, e.filmOffset = 0, e.updateProjectionMatrix(), e
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign({}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this
                    }
                }, {
                    key: "setFocalLength",
                    value: function(e) {
                        var t = .5 * this.getFilmHeight() / e;
                        this.fov = 2 * pn * Math.atan(t), this.updateProjectionMatrix()
                    }
                }, {
                    key: "getFocalLength",
                    value: function() {
                        var e = Math.tan(.5 * fn * this.fov);
                        return .5 * this.getFilmHeight() / e
                    }
                }, {
                    key: "getEffectiveFOV",
                    value: function() {
                        return 2 * pn * Math.atan(Math.tan(.5 * fn * this.fov) / this.zoom)
                    }
                }, {
                    key: "getFilmWidth",
                    value: function() {
                        return this.filmGauge * Math.min(this.aspect, 1)
                    }
                }, {
                    key: "getFilmHeight",
                    value: function() {
                        return this.filmGauge / Math.max(this.aspect, 1)
                    }
                }, {
                    key: "setViewOffset",
                    value: function(e, t, n, r, i, a) {
                        this.aspect = e / t, null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = a, this.updateProjectionMatrix()
                    }
                }, {
                    key: "clearViewOffset",
                    value: function() {
                        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                    }
                }, {
                    key: "updateProjectionMatrix",
                    value: function() {
                        var e = this.near,
                            t = e * Math.tan(.5 * fn * this.fov) / this.zoom,
                            n = 2 * t,
                            r = this.aspect * n,
                            i = -.5 * r,
                            a = this.view;
                        if (null !== this.view && this.view.enabled) {
                            var o = a.fullWidth,
                                s = a.fullHeight;
                            i += a.offsetX * r / o, t -= a.offsetY * n / s, r *= a.width / o, n *= a.height / s
                        }
                        var u = this.filmOffset;
                        0 !== u && (i += e * u / this.getFilmWidth()), this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t
                    }
                }]), n
            }($i);
            ea.prototype.isPerspectiveCamera = !0;
            var ta = 90,
                na = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        if ((0, v.default)(this, n), (a = t.call(this)).type = "CubeCamera", !0 !== i.isWebGLCubeRenderTarget) return console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."), (0, f.default)(a);
                        a.renderTarget = i;
                        var o = new ea(ta, 1, e, r);
                        o.layers = a.layers, o.up.set(0, -1, 0), o.lookAt(new On(1, 0, 0)), a.add(o);
                        var s = new ea(ta, 1, e, r);
                        s.layers = a.layers, s.up.set(0, -1, 0), s.lookAt(new On(-1, 0, 0)), a.add(s);
                        var u = new ea(ta, 1, e, r);
                        u.layers = a.layers, u.up.set(0, 0, 1), u.lookAt(new On(0, 1, 0)), a.add(u);
                        var l = new ea(ta, 1, e, r);
                        l.layers = a.layers, l.up.set(0, 0, -1), l.lookAt(new On(0, -1, 0)), a.add(l);
                        var c = new ea(ta, 1, e, r);
                        c.layers = a.layers, c.up.set(0, -1, 0), c.lookAt(new On(0, 0, 1)), a.add(c);
                        var h = new ea(ta, 1, e, r);
                        return h.layers = a.layers, h.up.set(0, -1, 0), h.lookAt(new On(0, 0, -1)), a.add(h), a
                    }
                    return (0, m.default)(n, [{
                        key: "update",
                        value: function(e, t) {
                            null === this.parent && this.updateMatrixWorld();
                            var n = this.renderTarget,
                                r = (0, u.default)(this.children, 6),
                                i = r[0],
                                a = r[1],
                                o = r[2],
                                s = r[3],
                                l = r[4],
                                c = r[5],
                                h = e.xr.enabled,
                                d = e.getRenderTarget();
                            e.xr.enabled = !1;
                            var f = n.texture.generateMipmaps;
                            n.texture.generateMipmaps = !1, e.setRenderTarget(n, 0), e.render(t, i), e.setRenderTarget(n, 1), e.render(t, a), e.setRenderTarget(n, 2), e.render(t, o), e.setRenderTarget(n, 3), e.render(t, s), e.setRenderTarget(n, 4), e.render(t, l), n.texture.generateMipmaps = f, e.setRenderTarget(n, 5), e.render(t, c), e.setRenderTarget(d), e.xr.enabled = h
                        }
                    }]), n
                }(Fr),
                ra = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i, a, o, s, u, l, c, h) {
                        var d;
                        return (0, v.default)(this, n), e = void 0 !== e ? e : [], r = void 0 !== r ? r : de, u = void 0 !== u ? u : ze, (d = t.call(this, e, r, i, a, o, s, u, l, c, h)).flipY = !1, d
                    }
                    return (0, m.default)(n, [{
                        key: "images",
                        get: function() {
                            return this.image
                        },
                        set: function(e) {
                            this.image = e
                        }
                    }]), n
                }(Ln);
            ra.prototype.isCubeTexture = !0;
            var ia = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return (0, v.default)(this, n), Number.isInteger(r) && (console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"), r = i), a = t.call(this, e, e, r), r = r || {}, a.texture = new ra(void 0, r.mapping, r.wrapS, r.wrapT, r.magFilter, r.minFilter, r.format, r.type, r.anisotropy, r.encoding), a.texture.isRenderTargetTexture = !0, a.texture.generateMipmaps = void 0 !== r.generateMipmaps && r.generateMipmaps, a.texture.minFilter = void 0 !== r.minFilter ? r.minFilter : Me, a.texture._needsFlipEnvMap = !1, a
                }
                return (0, m.default)(n, [{
                    key: "fromEquirectangularTexture",
                    value: function(e, t) {
                        this.texture.type = t.type, this.texture.format = Ge, this.texture.encoding = t.encoding, this.texture.generateMipmaps = t.generateMipmaps, this.texture.minFilter = t.minFilter, this.texture.magFilter = t.magFilter;
                        var n = {
                                tEquirect: {
                                    value: null
                                }
                            },
                            r = "\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",
                            i = "\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",
                            a = new Yi(5, 5, 5),
                            o = new Qi({
                                name: "CubemapFromEquirect",
                                uniforms: Ki(n),
                                vertexShader: r,
                                fragmentShader: i,
                                side: M,
                                blending: E
                            });
                        o.uniforms.tEquirect.value = t;
                        var s = new qi(a, o),
                            u = t.minFilter;
                        return t.minFilter === Ee && (t.minFilter = Me), new na(1, 10, this).update(e, s), t.minFilter = u, s.geometry.dispose(), s.material.dispose(), this
                    }
                }, {
                    key: "clear",
                    value: function(e, t, n, r) {
                        for (var i = e.getRenderTarget(), a = 0; a < 6; a++) e.setRenderTarget(this, a), e.clear(t, n, r);
                        e.setRenderTarget(i)
                    }
                }]), n
            }(kn);
            ia.prototype.isWebGLCubeRenderTarget = !0;
            var aa = new On,
                oa = new On,
                sa = new Sn,
                ua = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On(1, 0, 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        (0, v.default)(this, e), this.normal = t, this.constant = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.normal.copy(e), this.constant = t, this
                        }
                    }, {
                        key: "setComponents",
                        value: function(e, t, n, r) {
                            return this.normal.set(e, t, n), this.constant = r, this
                        }
                    }, {
                        key: "setFromNormalAndCoplanarPoint",
                        value: function(e, t) {
                            return this.normal.copy(e), this.constant = -t.dot(this.normal), this
                        }
                    }, {
                        key: "setFromCoplanarPoints",
                        value: function(e, t, n) {
                            var r = aa.subVectors(n, t).cross(oa.subVectors(e, t)).normalize();
                            return this.setFromNormalAndCoplanarPoint(r, e), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.normal.copy(e.normal), this.constant = e.constant, this
                        }
                    }, {
                        key: "normalize",
                        value: function() {
                            var e = 1 / this.normal.length();
                            return this.normal.multiplyScalar(e), this.constant *= e, this
                        }
                    }, {
                        key: "negate",
                        value: function() {
                            return this.constant *= -1, this.normal.negate(), this
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return this.normal.dot(e) + this.constant
                        }
                    }, {
                        key: "distanceToSphere",
                        value: function(e) {
                            return this.distanceToPoint(e.center) - e.radius
                        }
                    }, {
                        key: "projectPoint",
                        value: function(e, t) {
                            return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
                        }
                    }, {
                        key: "intersectLine",
                        value: function(e, t) {
                            var n = e.delta(aa),
                                r = this.normal.dot(n);
                            if (0 === r) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : null;
                            var i = -(e.start.dot(this.normal) + this.constant) / r;
                            return i < 0 || i > 1 ? null : t.copy(n).multiplyScalar(i).add(e.start)
                        }
                    }, {
                        key: "intersectsLine",
                        value: function(e) {
                            var t = this.distanceToPoint(e.start),
                                n = this.distanceToPoint(e.end);
                            return t < 0 && n > 0 || n < 0 && t > 0
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return e.intersectsPlane(this)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            return e.intersectsPlane(this)
                        }
                    }, {
                        key: "coplanarPoint",
                        value: function(e) {
                            return e.copy(this.normal).multiplyScalar(-this.constant)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e, t) {
                            var n = t || sa.getNormalMatrix(e),
                                r = this.coplanarPoint(aa).applyMatrix4(e),
                                i = this.normal.applyMatrix3(n).normalize();
                            return this.constant = -r.dot(i), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.constant -= e.dot(this.normal), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.normal.equals(this.normal) && e.constant === this.constant
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }();
            ua.prototype.isPlane = !0;
            var la = new rr,
                ca = new On,
                ha = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new ua,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new ua,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new ua,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new ua,
                            a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : new ua,
                            o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : new ua;
                        (0, v.default)(this, e), this.planes = [t, n, r, i, a, o]
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t, n, r, i, a) {
                            var o = this.planes;
                            return o[0].copy(e), o[1].copy(t), o[2].copy(n), o[3].copy(r), o[4].copy(i), o[5].copy(a), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
                            return this
                        }
                    }, {
                        key: "setFromProjectionMatrix",
                        value: function(e) {
                            var t = this.planes,
                                n = e.elements,
                                r = n[0],
                                i = n[1],
                                a = n[2],
                                o = n[3],
                                s = n[4],
                                u = n[5],
                                l = n[6],
                                c = n[7],
                                h = n[8],
                                d = n[9],
                                f = n[10],
                                p = n[11],
                                v = n[12],
                                m = n[13],
                                g = n[14],
                                y = n[15];
                            return t[0].setComponents(o - r, c - s, p - h, y - v).normalize(), t[1].setComponents(o + r, c + s, p + h, y + v).normalize(), t[2].setComponents(o + i, c + u, p + d, y + m).normalize(), t[3].setComponents(o - i, c - u, p - d, y - m).normalize(), t[4].setComponents(o - a, c - l, p - f, y - g).normalize(), t[5].setComponents(o + a, c + l, p + f, y + g).normalize(), this
                        }
                    }, {
                        key: "intersectsObject",
                        value: function(e) {
                            var t = e.geometry;
                            return null === t.boundingSphere && t.computeBoundingSphere(), la.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(la)
                        }
                    }, {
                        key: "intersectsSprite",
                        value: function(e) {
                            return la.center.set(0, 0, 0), la.radius = .7071067811865476, la.applyMatrix4(e.matrixWorld), this.intersectsSphere(la)
                        }
                    }, {
                        key: "intersectsSphere",
                        value: function(e) {
                            for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++)
                                if (t[i].distanceToPoint(n) < r) return !1;
                            return !0
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++) {
                                var r = t[n];
                                if (ca.x = r.normal.x > 0 ? e.max.x : e.min.x, ca.y = r.normal.y > 0 ? e.max.y : e.min.y, ca.z = r.normal.z > 0 ? e.max.z : e.min.z, r.distanceToPoint(ca) < 0) return !1
                            }
                            return !0
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            for (var t = this.planes, n = 0; n < 6; n++)
                                if (t[n].distanceToPoint(e) < 0) return !1;
                            return !0
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }();

            function da() {
                var e = null,
                    t = !1,
                    n = null,
                    r = null;

                function i(t, a) {
                    n(t, a), r = e.requestAnimationFrame(i)
                }
                return {
                    start: function() {
                        !0 !== t && null !== n && (r = e.requestAnimationFrame(i), t = !0)
                    },
                    stop: function() {
                        e.cancelAnimationFrame(r), t = !1
                    },
                    setAnimationLoop: function(e) {
                        n = e
                    },
                    setContext: function(t) {
                        e = t
                    }
                }
            }

            function fa(e, t) {
                var n = t.isWebGL2,
                    r = new WeakMap;
                return {
                    get: function(e) {
                        return e.isInterleavedBufferAttribute && (e = e.data), r.get(e)
                    },
                    remove: function(t) {
                        t.isInterleavedBufferAttribute && (t = t.data);
                        var n = r.get(t);
                        n && (e.deleteBuffer(n.buffer), r.delete(t))
                    },
                    update: function(t, i) {
                        if (t.isGLBufferAttribute) {
                            var a = r.get(t);
                            (!a || a.version < t.version) && r.set(t, {
                                buffer: t.buffer,
                                type: t.type,
                                bytesPerElement: t.elementSize,
                                version: t.version
                            })
                        } else {
                            t.isInterleavedBufferAttribute && (t = t.data);
                            var o = r.get(t);
                            void 0 === o ? r.set(t, function(t, r) {
                                var i = t.array,
                                    a = t.usage,
                                    o = e.createBuffer();
                                e.bindBuffer(r, o), e.bufferData(r, i, a), t.onUploadCallback();
                                var s = e.FLOAT;
                                return i instanceof Float32Array ? s = e.FLOAT : i instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : i instanceof Uint16Array ? t.isFloat16BufferAttribute ? n ? s = e.HALF_FLOAT : console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.") : s = e.UNSIGNED_SHORT : i instanceof Int16Array ? s = e.SHORT : i instanceof Uint32Array ? s = e.UNSIGNED_INT : i instanceof Int32Array ? s = e.INT : i instanceof Int8Array ? s = e.BYTE : (i instanceof Uint8Array || i instanceof Uint8ClampedArray) && (s = e.UNSIGNED_BYTE), {
                                    buffer: o,
                                    type: s,
                                    bytesPerElement: i.BYTES_PER_ELEMENT,
                                    version: t.version
                                }
                            }(t, i)) : o.version < t.version && (function(t, r, i) {
                                var a = r.array,
                                    o = r.updateRange;
                                e.bindBuffer(i, t), -1 === o.count ? e.bufferSubData(i, 0, a) : (n ? e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a, o.offset, o.count) : e.bufferSubData(i, o.offset * a.BYTES_PER_ELEMENT, a.subarray(o.offset, o.offset + o.count)), o.count = -1)
                            }(o.buffer, t, i), o.version = t.version)
                        }
                    }
                }
            }
            var pa = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                        (0, v.default)(this, n), (e = t.call(this)).type = "PlaneGeometry", e.parameters = {
                            width: r,
                            height: i,
                            widthSegments: a,
                            heightSegments: o
                        };
                        for (var s = r / 2, u = i / 2, l = Math.floor(a), c = Math.floor(o), h = l + 1, d = c + 1, f = r / l, p = i / c, m = [], g = [], y = [], _ = [], x = 0; x < d; x++)
                            for (var b = x * p - u, w = 0; w < h; w++) {
                                var T = w * f - s;
                                g.push(T, -b, 0), y.push(0, 0, 1), _.push(w / l), _.push(1 - x / c)
                            }
                        for (var M = 0; M < c; M++)
                            for (var S = 0; S < l; S++) {
                                var E = S + h * M,
                                    A = S + h * (M + 1),
                                    L = S + 1 + h * (M + 1),
                                    C = S + 1 + h * M;
                                m.push(E, A, C), m.push(A, L, C)
                            }
                        return e.setIndex(m), e.setAttribute("position", new mi(g, 3)), e.setAttribute("normal", new mi(y, 3)), e.setAttribute("uv", new mi(_, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.width, e.height, e.widthSegments, e.heightSegments)
                        }
                    }]), n
                }(Li),
                va = {
                    alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
                    alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
                    aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
                    aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                    begin_vertex: "vec3 transformed = vec3( position );",
                    beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
                    bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in vec3 f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn ( f90 - f0 ) * fresnel + f0;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in vec3 f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, vec3( 1.0 ), dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
                    bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
                    clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
                    clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
                    clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",
                    clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",
                    color_fragment: "#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",
                    color_pars_fragment: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",
                    color_pars_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",
                    color_vertex: "#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",
                    common: "#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",
                    cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",
                    defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
                    displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
                    displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
                    emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
                    emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
                    encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
                    encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
                    envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
                    envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
                    envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
                    envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
                    envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
                    envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
                    fog_vertex: "#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",
                    fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
                    fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
                    fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
                    gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
                    lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
                    lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                    lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",
                    lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
                    lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",
                    lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
                    lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
                    lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\t#ifdef SPECULAR\n\t\tvec3 specularIntensityFactor = vec3( specularIntensity );\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularColorF90 = mix( specularIntensityFactor, vec3( 1.0 ), metalnessFactor );\n\t#else\n\t\tvec3 specularIntensityFactor = vec3( 1.0 );\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularColorF90 = vec3( 1.0 );\n\t#endif\n\tmaterial.specularColor = mix( min( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularColorF90 = vec3( 1.0 );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
                    lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n\tvec3 specularColorF90;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), vec3( 1.0 ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularColorF90, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
                    lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
                    lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
                    lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
                    logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
                    logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
                    logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
                    logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
                    map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
                    map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
                    map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
                    map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
                    metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
                    metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                    morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
                    morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                    morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
                    normal_fragment_begin: "float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
                    normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",
                    normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",
                    clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
                    clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",
                    clearcoat_pars_fragment: "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
                    packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
                    premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
                    project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
                    dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
                    dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
                    roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
                    roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                    shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
                    shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
                    shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",
                    shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",
                    skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                    skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
                    skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
                    skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
                    specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                    specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                    tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
                    tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",
                    transmission_fragment: "#ifdef USE_TRANSMISSION\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\n\tvec3 transmission = transmissionFactor * getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission, transmissionFactor );\n#endif",
                    transmission_pars_fragment: "#ifdef USE_TRANSMISSION\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec4 vWorldPosition;\n\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\n\t\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\n\t\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\n\t\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\n\t\treturn normalize(refractionVector) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness(float roughness, float ior) {\n\t\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\n\t}\n\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\n\t\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\n\t\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\n\t}\n\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\n\t\tif (attenuationDistance == 0.0) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\n\t\t\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, float perceptualRoughness, vec3 baseColor, vec3 specularColor,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\n\t\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\n\t\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\n\t}\n#endif",
                    uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
                    uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
                    uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
                    uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                    uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
                    uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
                    worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
                    background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
                    cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
                    depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",
                    depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",
                    distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
                    distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
                    equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
                    equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
                    linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
                    meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t\t#ifdef USE_TANGENT\n\t\t\tvTangent = normalize( transformedTangent );\n\t\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t\t#endif\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
                    meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
                    meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#ifdef USE_TRANSMISSION\n\tvarying vec4 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition;\n#endif\n}",
                    normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
                    normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
                    points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",
                    points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
                    shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    shadow_vert: "#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
                    sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
                    sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
                },
                ma = {
                    common: {
                        diffuse: {
                            value: new ri(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        map: {
                            value: null
                        },
                        uvTransform: {
                            value: new Sn
                        },
                        uv2Transform: {
                            value: new Sn
                        },
                        alphaMap: {
                            value: null
                        }
                    },
                    specularmap: {
                        specularMap: {
                            value: null
                        }
                    },
                    envmap: {
                        envMap: {
                            value: null
                        },
                        flipEnvMap: {
                            value: -1
                        },
                        reflectivity: {
                            value: 1
                        },
                        refractionRatio: {
                            value: .98
                        },
                        maxMipLevel: {
                            value: 0
                        }
                    },
                    aomap: {
                        aoMap: {
                            value: null
                        },
                        aoMapIntensity: {
                            value: 1
                        }
                    },
                    lightmap: {
                        lightMap: {
                            value: null
                        },
                        lightMapIntensity: {
                            value: 1
                        }
                    },
                    emissivemap: {
                        emissiveMap: {
                            value: null
                        }
                    },
                    bumpmap: {
                        bumpMap: {
                            value: null
                        },
                        bumpScale: {
                            value: 1
                        }
                    },
                    normalmap: {
                        normalMap: {
                            value: null
                        },
                        normalScale: {
                            value: new Tn(1, 1)
                        }
                    },
                    displacementmap: {
                        displacementMap: {
                            value: null
                        },
                        displacementScale: {
                            value: 1
                        },
                        displacementBias: {
                            value: 0
                        }
                    },
                    roughnessmap: {
                        roughnessMap: {
                            value: null
                        }
                    },
                    metalnessmap: {
                        metalnessMap: {
                            value: null
                        }
                    },
                    gradientmap: {
                        gradientMap: {
                            value: null
                        }
                    },
                    fog: {
                        fogDensity: {
                            value: 25e-5
                        },
                        fogNear: {
                            value: 1
                        },
                        fogFar: {
                            value: 2e3
                        },
                        fogColor: {
                            value: new ri(16777215)
                        }
                    },
                    lights: {
                        ambientLightColor: {
                            value: []
                        },
                        lightProbe: {
                            value: []
                        },
                        directionalLights: {
                            value: [],
                            properties: {
                                direction: {},
                                color: {}
                            }
                        },
                        directionalLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {}
                            }
                        },
                        directionalShadowMap: {
                            value: []
                        },
                        directionalShadowMatrix: {
                            value: []
                        },
                        spotLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                direction: {},
                                distance: {},
                                coneCos: {},
                                penumbraCos: {},
                                decay: {}
                            }
                        },
                        spotLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {}
                            }
                        },
                        spotShadowMap: {
                            value: []
                        },
                        spotShadowMatrix: {
                            value: []
                        },
                        pointLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                decay: {},
                                distance: {}
                            }
                        },
                        pointLightShadows: {
                            value: [],
                            properties: {
                                shadowBias: {},
                                shadowNormalBias: {},
                                shadowRadius: {},
                                shadowMapSize: {},
                                shadowCameraNear: {},
                                shadowCameraFar: {}
                            }
                        },
                        pointShadowMap: {
                            value: []
                        },
                        pointShadowMatrix: {
                            value: []
                        },
                        hemisphereLights: {
                            value: [],
                            properties: {
                                direction: {},
                                skyColor: {},
                                groundColor: {}
                            }
                        },
                        rectAreaLights: {
                            value: [],
                            properties: {
                                color: {},
                                position: {},
                                width: {},
                                height: {}
                            }
                        },
                        ltc_1: {
                            value: null
                        },
                        ltc_2: {
                            value: null
                        }
                    },
                    points: {
                        diffuse: {
                            value: new ri(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        size: {
                            value: 1
                        },
                        scale: {
                            value: 1
                        },
                        map: {
                            value: null
                        },
                        alphaMap: {
                            value: null
                        },
                        uvTransform: {
                            value: new Sn
                        }
                    },
                    sprite: {
                        diffuse: {
                            value: new ri(16777215)
                        },
                        opacity: {
                            value: 1
                        },
                        center: {
                            value: new Tn(.5, .5)
                        },
                        rotation: {
                            value: 0
                        },
                        map: {
                            value: null
                        },
                        alphaMap: {
                            value: null
                        },
                        uvTransform: {
                            value: new Sn
                        }
                    }
                },
                ga = {
                    basic: {
                        uniforms: Zi([ma.common, ma.specularmap, ma.envmap, ma.aomap, ma.lightmap, ma.fog]),
                        vertexShader: va.meshbasic_vert,
                        fragmentShader: va.meshbasic_frag
                    },
                    lambert: {
                        uniforms: Zi([ma.common, ma.specularmap, ma.envmap, ma.aomap, ma.lightmap, ma.emissivemap, ma.fog, ma.lights, {
                            emissive: {
                                value: new ri(0)
                            }
                        }]),
                        vertexShader: va.meshlambert_vert,
                        fragmentShader: va.meshlambert_frag
                    },
                    phong: {
                        uniforms: Zi([ma.common, ma.specularmap, ma.envmap, ma.aomap, ma.lightmap, ma.emissivemap, ma.bumpmap, ma.normalmap, ma.displacementmap, ma.fog, ma.lights, {
                            emissive: {
                                value: new ri(0)
                            },
                            specular: {
                                value: new ri(1118481)
                            },
                            shininess: {
                                value: 30
                            }
                        }]),
                        vertexShader: va.meshphong_vert,
                        fragmentShader: va.meshphong_frag
                    },
                    standard: {
                        uniforms: Zi([ma.common, ma.envmap, ma.aomap, ma.lightmap, ma.emissivemap, ma.bumpmap, ma.normalmap, ma.displacementmap, ma.roughnessmap, ma.metalnessmap, ma.fog, ma.lights, {
                            emissive: {
                                value: new ri(0)
                            },
                            roughness: {
                                value: 1
                            },
                            metalness: {
                                value: 0
                            },
                            envMapIntensity: {
                                value: 1
                            }
                        }]),
                        vertexShader: va.meshphysical_vert,
                        fragmentShader: va.meshphysical_frag
                    },
                    toon: {
                        uniforms: Zi([ma.common, ma.aomap, ma.lightmap, ma.emissivemap, ma.bumpmap, ma.normalmap, ma.displacementmap, ma.gradientmap, ma.fog, ma.lights, {
                            emissive: {
                                value: new ri(0)
                            }
                        }]),
                        vertexShader: va.meshtoon_vert,
                        fragmentShader: va.meshtoon_frag
                    },
                    matcap: {
                        uniforms: Zi([ma.common, ma.bumpmap, ma.normalmap, ma.displacementmap, ma.fog, {
                            matcap: {
                                value: null
                            }
                        }]),
                        vertexShader: va.meshmatcap_vert,
                        fragmentShader: va.meshmatcap_frag
                    },
                    points: {
                        uniforms: Zi([ma.points, ma.fog]),
                        vertexShader: va.points_vert,
                        fragmentShader: va.points_frag
                    },
                    dashed: {
                        uniforms: Zi([ma.common, ma.fog, {
                            scale: {
                                value: 1
                            },
                            dashSize: {
                                value: 1
                            },
                            totalSize: {
                                value: 2
                            }
                        }]),
                        vertexShader: va.linedashed_vert,
                        fragmentShader: va.linedashed_frag
                    },
                    depth: {
                        uniforms: Zi([ma.common, ma.displacementmap]),
                        vertexShader: va.depth_vert,
                        fragmentShader: va.depth_frag
                    },
                    normal: {
                        uniforms: Zi([ma.common, ma.bumpmap, ma.normalmap, ma.displacementmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: va.normal_vert,
                        fragmentShader: va.normal_frag
                    },
                    sprite: {
                        uniforms: Zi([ma.sprite, ma.fog]),
                        vertexShader: va.sprite_vert,
                        fragmentShader: va.sprite_frag
                    },
                    background: {
                        uniforms: {
                            uvTransform: {
                                value: new Sn
                            },
                            t2D: {
                                value: null
                            }
                        },
                        vertexShader: va.background_vert,
                        fragmentShader: va.background_frag
                    },
                    cube: {
                        uniforms: Zi([ma.envmap, {
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: va.cube_vert,
                        fragmentShader: va.cube_frag
                    },
                    equirect: {
                        uniforms: {
                            tEquirect: {
                                value: null
                            }
                        },
                        vertexShader: va.equirect_vert,
                        fragmentShader: va.equirect_frag
                    },
                    distanceRGBA: {
                        uniforms: Zi([ma.common, ma.displacementmap, {
                            referencePosition: {
                                value: new On
                            },
                            nearDistance: {
                                value: 1
                            },
                            farDistance: {
                                value: 1e3
                            }
                        }]),
                        vertexShader: va.distanceRGBA_vert,
                        fragmentShader: va.distanceRGBA_frag
                    },
                    shadow: {
                        uniforms: Zi([ma.lights, ma.fog, {
                            color: {
                                value: new ri(0)
                            },
                            opacity: {
                                value: 1
                            }
                        }]),
                        vertexShader: va.shadow_vert,
                        fragmentShader: va.shadow_frag
                    }
                };

            function ya(e, t, n, r, i) {
                var a, o, s = new ri(0),
                    u = 0,
                    l = null,
                    c = 0,
                    h = null;

                function d(e, t) {
                    n.buffers.color.setClear(e.r, e.g, e.b, t, i)
                }
                return {
                    getClearColor: function() {
                        return s
                    },
                    setClearColor: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                        s.set(e), d(s, u = t)
                    },
                    getClearAlpha: function() {
                        return u
                    },
                    setClearAlpha: function(e) {
                        d(s, u = e)
                    },
                    render: function(n, i) {
                        var f = !1,
                            p = !0 === i.isScene ? i.background : null;
                        p && p.isTexture && (p = t.get(p));
                        var v = e.xr,
                            m = v.getSession && v.getSession();
                        m && "additive" === m.environmentBlendMode && (p = null), null === p ? d(s, u) : p && p.isColor && (d(p, 1), f = !0), (e.autoClear || f) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), p && (p.isCubeTexture || p.mapping === me) ? (void 0 === o && ((o = new qi(new Yi(1, 1, 1), new Qi({
                            name: "BackgroundCubeMaterial",
                            uniforms: Ki(ga.cube.uniforms),
                            vertexShader: ga.cube.vertexShader,
                            fragmentShader: ga.cube.fragmentShader,
                            side: M,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))).geometry.deleteAttribute("normal"), o.geometry.deleteAttribute("uv"), o.onBeforeRender = function(e, t, n) {
                            this.matrixWorld.copyPosition(n.matrixWorld)
                        }, Object.defineProperty(o.material, "envMap", {
                            get: function() {
                                return this.uniforms.envMap.value
                            }
                        }), r.update(o)), o.material.uniforms.envMap.value = p, o.material.uniforms.flipEnvMap.value = p.isCubeTexture && !1 === p.isRenderTargetTexture ? -1 : 1, l === p && c === p.version && h === e.toneMapping || (o.material.needsUpdate = !0, l = p, c = p.version, h = e.toneMapping), n.unshift(o, o.geometry, o.material, 0, 0, null)) : p && p.isTexture && (void 0 === a && ((a = new qi(new pa(2, 2), new Qi({
                            name: "BackgroundMaterial",
                            uniforms: Ki(ga.background.uniforms),
                            vertexShader: ga.background.vertexShader,
                            fragmentShader: ga.background.fragmentShader,
                            side: T,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))).geometry.deleteAttribute("normal"), Object.defineProperty(a.material, "map", {
                            get: function() {
                                return this.uniforms.t2D.value
                            }
                        }), r.update(a)), a.material.uniforms.t2D.value = p, !0 === p.matrixAutoUpdate && p.updateMatrix(), a.material.uniforms.uvTransform.value.copy(p.matrix), l === p && c === p.version && h === e.toneMapping || (a.material.needsUpdate = !0, l = p, c = p.version, h = e.toneMapping), n.unshift(a, a.geometry, a.material, 0, 0, null))
                    }
                }
            }

            function _a(e, t, n, r) {
                var i = e.getParameter(e.MAX_VERTEX_ATTRIBS),
                    a = r.isWebGL2 ? null : t.get("OES_vertex_array_object"),
                    o = r.isWebGL2 || null !== a,
                    s = {},
                    u = d(null),
                    l = u;

                function c(t) {
                    return r.isWebGL2 ? e.bindVertexArray(t) : a.bindVertexArrayOES(t)
                }

                function h(t) {
                    return r.isWebGL2 ? e.deleteVertexArray(t) : a.deleteVertexArrayOES(t)
                }

                function d(e) {
                    for (var t = [], n = [], r = [], a = 0; a < i; a++) t[a] = 0, n[a] = 0, r[a] = 0;
                    return {
                        geometry: null,
                        program: null,
                        wireframe: !1,
                        newAttributes: t,
                        enabledAttributes: n,
                        attributeDivisors: r,
                        object: e,
                        attributes: {},
                        index: null
                    }
                }

                function f() {
                    for (var e = l.newAttributes, t = 0, n = e.length; t < n; t++) e[t] = 0
                }

                function p(e) {
                    v(e, 0)
                }

                function v(n, i) {
                    var a = l.newAttributes,
                        o = l.enabledAttributes,
                        s = l.attributeDivisors;
                    a[n] = 1, 0 === o[n] && (e.enableVertexAttribArray(n), o[n] = 1), s[n] !== i && ((r.isWebGL2 ? e : t.get("ANGLE_instanced_arrays"))[r.isWebGL2 ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i), s[n] = i)
                }

                function m() {
                    for (var t = l.newAttributes, n = l.enabledAttributes, r = 0, i = n.length; r < i; r++) n[r] !== t[r] && (e.disableVertexAttribArray(r), n[r] = 0)
                }

                function g(t, n, i, a, o, s) {
                    !0 !== r.isWebGL2 || i !== e.INT && i !== e.UNSIGNED_INT ? e.vertexAttribPointer(t, n, i, a, o, s) : e.vertexAttribIPointer(t, n, i, o, s)
                }

                function y() {
                    _(), l !== u && c((l = u).object)
                }

                function _() {
                    u.geometry = null, u.program = null, u.wireframe = !1
                }
                return {
                    setup: function(i, u, h, y, _) {
                        var x = !1;
                        if (o) {
                            var b = function(t, n, i) {
                                var o = !0 === i.wireframe,
                                    u = s[t.id];
                                void 0 === u && (u = {}, s[t.id] = u);
                                var l = u[n.id];
                                void 0 === l && (l = {}, u[n.id] = l);
                                var c = l[o];
                                return void 0 === c && (c = d(r.isWebGL2 ? e.createVertexArray() : a.createVertexArrayOES()), l[o] = c), c
                            }(y, h, u);
                            l !== b && c((l = b).object), x = function(e, t) {
                                var n = l.attributes,
                                    r = e.attributes,
                                    i = 0;
                                for (var a in r) {
                                    var o = n[a],
                                        s = r[a];
                                    if (void 0 === o) return !0;
                                    if (o.attribute !== s) return !0;
                                    if (o.data !== s.data) return !0;
                                    i++
                                }
                                return l.attributesNum !== i || l.index !== t
                            }(y, _), x && function(e, t) {
                                var n = {},
                                    r = e.attributes,
                                    i = 0;
                                for (var a in r) {
                                    var o = r[a],
                                        s = {};
                                    s.attribute = o, o.data && (s.data = o.data), n[a] = s, i++
                                }
                                l.attributes = n, l.attributesNum = i, l.index = t
                            }(y, _)
                        } else {
                            var w = !0 === u.wireframe;
                            l.geometry === y.id && l.program === h.id && l.wireframe === w || (l.geometry = y.id, l.program = h.id, l.wireframe = w, x = !0)
                        }!0 === i.isInstancedMesh && (x = !0), null !== _ && n.update(_, e.ELEMENT_ARRAY_BUFFER), x && (function(i, a, o, s) {
                            if (!1 !== r.isWebGL2 || !i.isInstancedMesh && !s.isInstancedBufferGeometry || null !== t.get("ANGLE_instanced_arrays")) {
                                f();
                                var u = s.attributes,
                                    l = o.getAttributes(),
                                    c = a.defaultAttributeValues;
                                for (var h in l) {
                                    var d = l[h];
                                    if (d >= 0) {
                                        var y = u[h];
                                        if (void 0 !== y) {
                                            var _ = y.normalized,
                                                x = y.itemSize,
                                                b = n.get(y);
                                            if (void 0 === b) continue;
                                            var w = b.buffer,
                                                T = b.type,
                                                M = b.bytesPerElement;
                                            if (y.isInterleavedBufferAttribute) {
                                                var S = y.data,
                                                    E = S.stride,
                                                    A = y.offset;
                                                S && S.isInstancedInterleavedBuffer ? (v(d, S.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = S.meshPerAttribute * S.count)) : p(d), e.bindBuffer(e.ARRAY_BUFFER, w), g(d, x, T, _, E * M, A * M)
                                            } else y.isInstancedBufferAttribute ? (v(d, y.meshPerAttribute), void 0 === s._maxInstanceCount && (s._maxInstanceCount = y.meshPerAttribute * y.count)) : p(d), e.bindBuffer(e.ARRAY_BUFFER, w), g(d, x, T, _, 0, 0)
                                        } else if ("instanceMatrix" === h) {
                                            var L = n.get(i.instanceMatrix);
                                            if (void 0 === L) continue;
                                            var C = L.buffer,
                                                R = L.type;
                                            v(d + 0, 1), v(d + 1, 1), v(d + 2, 1), v(d + 3, 1), e.bindBuffer(e.ARRAY_BUFFER, C), e.vertexAttribPointer(d + 0, 4, R, !1, 64, 0), e.vertexAttribPointer(d + 1, 4, R, !1, 64, 16), e.vertexAttribPointer(d + 2, 4, R, !1, 64, 32), e.vertexAttribPointer(d + 3, 4, R, !1, 64, 48)
                                        } else if ("instanceColor" === h) {
                                            var k = n.get(i.instanceColor);
                                            if (void 0 === k) continue;
                                            var P = k.buffer,
                                                D = k.type;
                                            v(d, 1), e.bindBuffer(e.ARRAY_BUFFER, P), e.vertexAttribPointer(d, 3, D, !1, 12, 0)
                                        } else if (void 0 !== c) {
                                            var I = c[h];
                                            if (void 0 !== I) switch (I.length) {
                                                case 2:
                                                    e.vertexAttrib2fv(d, I);
                                                    break;
                                                case 3:
                                                    e.vertexAttrib3fv(d, I);
                                                    break;
                                                case 4:
                                                    e.vertexAttrib4fv(d, I);
                                                    break;
                                                default:
                                                    e.vertexAttrib1fv(d, I)
                                            }
                                        }
                                    }
                                }
                                m()
                            }
                        }(i, u, h, y), null !== _ && e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n.get(_).buffer))
                    },
                    reset: y,
                    resetDefaultState: _,
                    dispose: function() {
                        for (var e in y(), s) {
                            var t = s[e];
                            for (var n in t) {
                                var r = t[n];
                                for (var i in r) h(r[i].object), delete r[i];
                                delete t[n]
                            }
                            delete s[e]
                        }
                    },
                    releaseStatesOfGeometry: function(e) {
                        if (void 0 !== s[e.id]) {
                            var t = s[e.id];
                            for (var n in t) {
                                var r = t[n];
                                for (var i in r) h(r[i].object), delete r[i];
                                delete t[n]
                            }
                            delete s[e.id]
                        }
                    },
                    releaseStatesOfProgram: function(e) {
                        for (var t in s) {
                            var n = s[t];
                            if (void 0 !== n[e.id]) {
                                var r = n[e.id];
                                for (var i in r) h(r[i].object), delete r[i];
                                delete n[e.id]
                            }
                        }
                    },
                    initAttributes: f,
                    enableAttribute: p,
                    disableUnusedAttributes: m
                }
            }

            function xa(e, t, n, r) {
                var i, a = r.isWebGL2;
                this.setMode = function(e) {
                    i = e
                }, this.render = function(t, r) {
                    e.drawArrays(i, t, r), n.update(r, i, 1)
                }, this.renderInstances = function(r, o, s) {
                    if (0 !== s) {
                        var u, l;
                        if (a) u = e, l = "drawArraysInstanced";
                        else if (l = "drawArraysInstancedANGLE", null === (u = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        u[l](i, r, o, s), n.update(o, i, s)
                    }
                }
            }

            function ba(e, t, n) {
                var r;

                function i(t) {
                    if ("highp" === t) {
                        if (e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.HIGH_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.HIGH_FLOAT).precision > 0) return "highp";
                        t = "mediump"
                    }
                    return "mediump" === t && e.getShaderPrecisionFormat(e.VERTEX_SHADER, e.MEDIUM_FLOAT).precision > 0 && e.getShaderPrecisionFormat(e.FRAGMENT_SHADER, e.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
                }
                var a = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext,
                    o = void 0 !== n.precision ? n.precision : "highp",
                    s = i(o);
                s !== o && (console.warn("THREE.WebGLRenderer:", o, "not supported, using", s, "instead."), o = s);
                var u = a || t.has("WEBGL_draw_buffers"),
                    l = !0 === n.logarithmicDepthBuffer,
                    c = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),
                    h = e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
                    d = e.getParameter(e.MAX_TEXTURE_SIZE),
                    f = e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),
                    p = e.getParameter(e.MAX_VERTEX_ATTRIBS),
                    v = e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),
                    m = e.getParameter(e.MAX_VARYING_VECTORS),
                    g = e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),
                    y = h > 0,
                    _ = a || t.has("OES_texture_float");
                return {
                    isWebGL2: a,
                    drawBuffers: u,
                    getMaxAnisotropy: function() {
                        if (void 0 !== r) return r;
                        if (!0 === t.has("EXT_texture_filter_anisotropic")) {
                            var n = t.get("EXT_texture_filter_anisotropic");
                            r = e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)
                        } else r = 0;
                        return r
                    },
                    getMaxPrecision: i,
                    precision: o,
                    logarithmicDepthBuffer: l,
                    maxTextures: c,
                    maxVertexTextures: h,
                    maxTextureSize: d,
                    maxCubemapSize: f,
                    maxAttributes: p,
                    maxVertexUniforms: v,
                    maxVaryings: m,
                    maxFragmentUniforms: g,
                    vertexTextures: y,
                    floatFragmentTextures: _,
                    floatVertexTextures: y && _,
                    maxSamples: a ? e.getParameter(e.MAX_SAMPLES) : 0
                }
            }

            function wa(e) {
                var t = this,
                    n = null,
                    r = 0,
                    i = !1,
                    a = !1,
                    o = new ua,
                    s = new Sn,
                    u = {
                        value: null,
                        needsUpdate: !1
                    };

                function l() {
                    u.value !== n && (u.value = n, u.needsUpdate = r > 0), t.numPlanes = r, t.numIntersection = 0
                }

                function c(e, n, r, i) {
                    var a = null !== e ? e.length : 0,
                        l = null;
                    if (0 !== a) {
                        if (l = u.value, !0 !== i || null === l) {
                            var c = r + 4 * a,
                                h = n.matrixWorldInverse;
                            s.getNormalMatrix(h), (null === l || l.length < c) && (l = new Float32Array(c));
                            for (var d = 0, f = r; d !== a; ++d, f += 4) o.copy(e[d]).applyMatrix4(h, s), o.normal.toArray(l, f), l[f + 3] = o.constant
                        }
                        u.value = l, u.needsUpdate = !0
                    }
                    return t.numPlanes = a, t.numIntersection = 0, l
                }
                this.uniform = u, this.numPlanes = 0, this.numIntersection = 0, this.init = function(e, t, a) {
                    var o = 0 !== e.length || t || 0 !== r || i;
                    return i = t, n = c(e, a, 0), r = e.length, o
                }, this.beginShadows = function() {
                    a = !0, c(null)
                }, this.endShadows = function() {
                    a = !1, l()
                }, this.setState = function(t, o, s) {
                    var h = t.clippingPlanes,
                        d = t.clipIntersection,
                        f = t.clipShadows,
                        p = e.get(t);
                    if (!i || null === h || 0 === h.length || a && !f) a ? c(null) : l();
                    else {
                        var v = a ? 0 : r,
                            m = 4 * v,
                            g = p.clippingState || null;
                        u.value = g, g = c(h, o, m, s);
                        for (var y = 0; y !== m; ++y) g[y] = n[y];
                        p.clippingState = g, this.numIntersection = d ? this.numPlanes : 0, this.numPlanes += v
                    }
                }
            }

            function Ta(e) {
                var t = new WeakMap;

                function n(e, t) {
                    return t === pe ? e.mapping = de : t === ve && (e.mapping = fe), e
                }

                function r(e) {
                    var n = e.target;
                    n.removeEventListener("dispose", r);
                    var i = t.get(n);
                    void 0 !== i && (t.delete(n), i.dispose())
                }
                return {
                    get: function(i) {
                        if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
                            var a = i.mapping;
                            if (a === pe || a === ve) {
                                if (t.has(i)) return n(t.get(i).texture, i.mapping);
                                var o = i.image;
                                if (o && o.height > 0) {
                                    var s = e.getRenderTarget(),
                                        u = new ia(o.height / 2);
                                    return u.fromEquirectangularTexture(e, i), t.set(i, u), e.setRenderTarget(s), i.addEventListener("dispose", r), n(u.texture, i.mapping)
                                }
                                return null
                            }
                        }
                        return i
                    },
                    dispose: function() {
                        t = new WeakMap
                    }
                }
            }
            ga.physical = {
                uniforms: Zi([ga.standard.uniforms, {
                    clearcoat: {
                        value: 0
                    },
                    clearcoatMap: {
                        value: null
                    },
                    clearcoatRoughness: {
                        value: 0
                    },
                    clearcoatRoughnessMap: {
                        value: null
                    },
                    clearcoatNormalScale: {
                        value: new Tn(1, 1)
                    },
                    clearcoatNormalMap: {
                        value: null
                    },
                    sheen: {
                        value: new ri(0)
                    },
                    transmission: {
                        value: 0
                    },
                    transmissionMap: {
                        value: null
                    },
                    transmissionSamplerSize: {
                        value: new Tn
                    },
                    transmissionSamplerMap: {
                        value: null
                    },
                    thickness: {
                        value: 0
                    },
                    thicknessMap: {
                        value: null
                    },
                    attenuationDistance: {
                        value: 0
                    },
                    attenuationTint: {
                        value: new ri(0)
                    },
                    specularIntensity: {
                        value: 0
                    },
                    specularIntensityMap: {
                        value: null
                    },
                    specularTint: {
                        value: new ri(1, 1, 1)
                    },
                    specularTintMap: {
                        value: null
                    }
                }]),
                vertexShader: va.meshphysical_vert,
                fragmentShader: va.meshphysical_frag
            };
            var Ma = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : -1,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : .1,
                        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2e3;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "OrthographicCamera", e.zoom = 1, e.view = null, e.left = r, e.right = i, e.top = a, e.bottom = o, e.near = s, e.far = u, e.updateProjectionMatrix(), e
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign({}, e.view), this
                    }
                }, {
                    key: "setViewOffset",
                    value: function(e, t, n, r, i, a) {
                        null === this.view && (this.view = {
                            enabled: !0,
                            fullWidth: 1,
                            fullHeight: 1,
                            offsetX: 0,
                            offsetY: 0,
                            width: 1,
                            height: 1
                        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = a, this.updateProjectionMatrix()
                    }
                }, {
                    key: "clearViewOffset",
                    value: function() {
                        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
                    }
                }, {
                    key: "updateProjectionMatrix",
                    value: function() {
                        var e = (this.right - this.left) / (2 * this.zoom),
                            t = (this.top - this.bottom) / (2 * this.zoom),
                            n = (this.right + this.left) / 2,
                            r = (this.top + this.bottom) / 2,
                            i = n - e,
                            a = n + e,
                            o = r + t,
                            s = r - t;
                        if (null !== this.view && this.view.enabled) {
                            var u = (this.right - this.left) / this.view.fullWidth / this.zoom,
                                l = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
                            a = (i += u * this.view.offsetX) + u * this.view.width, s = (o -= l * this.view.offsetY) - l * this.view.height
                        }
                        this.projectionMatrix.makeOrthographic(i, a, o, s, this.near, this.far), this.projectionMatrixInverse.copy(this.projectionMatrix).invert()
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t
                    }
                }]), n
            }($i);
            Ma.prototype.isOrthographicCamera = !0;
            var Sa = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this, e)).type = "RawShaderMaterial", r
                }
                return (0, m.default)(n)
            }(Qi);
            Sa.prototype.isRawShaderMaterial = !0;
            var Ea = Math.pow(2, 8),
                Aa = [.125, .215, .35, .446, .526, .582],
                La = 5 + Aa.length,
                Ca = 20,
                Ra = (t = {}, (0, c.default)(t, Xt, 0), (0, c.default)(t, Yt, 1), (0, c.default)(t, Zt, 2), (0, c.default)(t, Qt, 3), (0, c.default)(t, $t, 4), (0, c.default)(t, en, 5), (0, c.default)(t, Kt, 6), t),
                ka = new ii({
                    side: M,
                    depthWrite: !1,
                    depthTest: !1
                }),
                Pa = new qi(new Yi, ka),
                Da = new Ma,
                Ia = qa(),
                Oa = Ia._lodPlanes,
                Na = Ia._sizeLods,
                Fa = Ia._sigmas,
                Ua = new ri,
                Ba = null,
                za = (1 + Math.sqrt(5)) / 2,
                Ga = 1 / za,
                Ha = [new On(1, 1, 1), new On(-1, 1, 1), new On(1, 1, -1), new On(-1, 1, -1), new On(0, za, Ga), new On(0, za, -Ga), new On(Ga, 0, za), new On(-Ga, 0, za), new On(za, Ga, 0), new On(-za, Ga, 0)];

            function Va(e) {
                var t = Math.max(e.r, e.g, e.b),
                    n = Math.min(Math.max(Math.ceil(Math.log2(t)), -128), 127);
                return e.multiplyScalar(Math.pow(2, -n)), (n + 128) / 255
            }
            var Wa = function() {
                function e(t) {
                    var n, r, i;
                    (0, v.default)(this, e), this._renderer = t, this._pingPongRenderTarget = null, this._blurMaterial = (n = Ca, r = new Float32Array(n), i = new On(0, 1, 0), new Sa({
                        name: "SphericalGaussianBlur",
                        defines: {
                            n: n
                        },
                        uniforms: {
                            envMap: {
                                value: null
                            },
                            samples: {
                                value: 1
                            },
                            weights: {
                                value: r
                            },
                            latitudinal: {
                                value: !1
                            },
                            dTheta: {
                                value: 0
                            },
                            mipInt: {
                                value: 0
                            },
                            poleAxis: {
                                value: i
                            },
                            inputEncoding: {
                                value: Ra[Xt]
                            },
                            outputEncoding: {
                                value: Ra[Xt]
                            }
                        },
                        vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                        fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                        blending: E,
                        depthTest: !1,
                        depthWrite: !1
                    })), this._equirectShader = null, this._cubemapShader = null, this._compileMaterial(this._blurMaterial)
                }
                return (0, m.default)(e, [{
                    key: "fromScene",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1,
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100;
                        Ba = this._renderer.getRenderTarget();
                        var i = this._allocateTargets();
                        return this._sceneToCubeUV(e, n, r, i), t > 0 && this._blur(i, 0, 0, t), this._applyPMREM(i), this._cleanup(i), i
                    }
                }, {
                    key: "fromEquirectangular",
                    value: function(e) {
                        return this._fromTexture(e)
                    }
                }, {
                    key: "fromCubemap",
                    value: function(e) {
                        return this._fromTexture(e)
                    }
                }, {
                    key: "compileCubemapShader",
                    value: function() {
                        null === this._cubemapShader && (this._cubemapShader = Za(), this._compileMaterial(this._cubemapShader))
                    }
                }, {
                    key: "compileEquirectangularShader",
                    value: function() {
                        null === this._equirectShader && (this._equirectShader = Ka(), this._compileMaterial(this._equirectShader))
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this._blurMaterial.dispose(), null !== this._cubemapShader && this._cubemapShader.dispose(), null !== this._equirectShader && this._equirectShader.dispose();
                        for (var e = 0; e < Oa.length; e++) Oa[e].dispose()
                    }
                }, {
                    key: "_cleanup",
                    value: function(e) {
                        this._pingPongRenderTarget.dispose(), this._renderer.setRenderTarget(Ba), e.scissorTest = !1, Ya(e, 0, 0, e.width, e.height)
                    }
                }, {
                    key: "_fromTexture",
                    value: function(e) {
                        Ba = this._renderer.getRenderTarget();
                        var t = this._allocateTargets(e);
                        return this._textureToCubeUV(e, t), this._applyPMREM(t), this._cleanup(t), t
                    }
                }, {
                    key: "_allocateTargets",
                    value: function(e) {
                        var t = {
                                magFilter: be,
                                minFilter: be,
                                generateMipmaps: !1,
                                type: Ae,
                                format: We,
                                encoding: ja(e) ? e.encoding : Zt,
                                depthBuffer: !1
                            },
                            n = Xa(t);
                        return n.depthBuffer = !e, this._pingPongRenderTarget = Xa(t), n
                    }
                }, {
                    key: "_compileMaterial",
                    value: function(e) {
                        var t = new qi(Oa[0], e);
                        this._renderer.compile(t, Da)
                    }
                }, {
                    key: "_sceneToCubeUV",
                    value: function(e, t, n, r) {
                        var i = new ea(90, 1, t, n),
                            a = [1, -1, 1, 1, 1, 1],
                            o = [1, 1, 1, -1, -1, -1],
                            s = this._renderer,
                            u = s.autoClear,
                            l = s.outputEncoding,
                            c = s.toneMapping;
                        s.getClearColor(Ua), s.toneMapping = ae, s.outputEncoding = Xt, s.autoClear = !1;
                        var h = !1,
                            d = e.background;
                        if (d) {
                            if (d.isColor) {
                                ka.color.copy(d).convertSRGBToLinear(), e.background = null;
                                var f = Va(ka.color);
                                ka.opacity = f, h = !0
                            }
                        } else {
                            ka.color.copy(Ua).convertSRGBToLinear();
                            var p = Va(ka.color);
                            ka.opacity = p, h = !0
                        }
                        for (var v = 0; v < 6; v++) {
                            var m = v % 3;
                            0 == m ? (i.up.set(0, a[v], 0), i.lookAt(o[v], 0, 0)) : 1 == m ? (i.up.set(0, 0, a[v]), i.lookAt(0, o[v], 0)) : (i.up.set(0, a[v], 0), i.lookAt(0, 0, o[v])), Ya(r, m * Ea, v > 2 ? Ea : 0, Ea, Ea), s.setRenderTarget(r), h && s.render(Pa, i), s.render(e, i)
                        }
                        s.toneMapping = c, s.outputEncoding = l, s.autoClear = u
                    }
                }, {
                    key: "_textureToCubeUV",
                    value: function(e, t) {
                        var n = this._renderer;
                        e.isCubeTexture ? null == this._cubemapShader && (this._cubemapShader = Za()) : null == this._equirectShader && (this._equirectShader = Ka());
                        var r = e.isCubeTexture ? this._cubemapShader : this._equirectShader,
                            i = new qi(Oa[0], r),
                            a = r.uniforms;
                        a.envMap.value = e, e.isCubeTexture || a.texelSize.value.set(1 / e.image.width, 1 / e.image.height), a.inputEncoding.value = Ra[e.encoding], a.outputEncoding.value = Ra[t.texture.encoding], Ya(t, 0, 0, 3 * Ea, 2 * Ea), n.setRenderTarget(t), n.render(i, Da)
                    }
                }, {
                    key: "_applyPMREM",
                    value: function(e) {
                        var t = this._renderer,
                            n = t.autoClear;
                        t.autoClear = !1;
                        for (var r = 1; r < La; r++) {
                            var i = Math.sqrt(Fa[r] * Fa[r] - Fa[r - 1] * Fa[r - 1]),
                                a = Ha[(r - 1) % Ha.length];
                            this._blur(e, r - 1, r, i, a)
                        }
                        t.autoClear = n
                    }
                }, {
                    key: "_blur",
                    value: function(e, t, n, r, i) {
                        var a = this._pingPongRenderTarget;
                        this._halfBlur(e, a, t, n, r, "latitudinal", i), this._halfBlur(a, e, n, n, r, "longitudinal", i)
                    }
                }, {
                    key: "_halfBlur",
                    value: function(e, t, n, r, i, a, o) {
                        var s = this._renderer,
                            u = this._blurMaterial;
                        "latitudinal" !== a && "longitudinal" !== a && console.error("blur direction must be either latitudinal or longitudinal!");
                        var l = new qi(Oa[r], u),
                            c = u.uniforms,
                            h = Na[n] - 1,
                            d = isFinite(i) ? Math.PI / (2 * h) : 2 * Math.PI / 39,
                            f = i / d,
                            p = isFinite(i) ? 1 + Math.floor(3 * f) : Ca;
                        p > Ca && console.warn("sigmaRadians, ".concat(i, ", is too large and will clip, as it requested ").concat(p, " samples when the maximum is set to ").concat(Ca));
                        for (var v = [], m = 0, g = 0; g < Ca; ++g) {
                            var y = g / f,
                                _ = Math.exp(-y * y / 2);
                            v.push(_), 0 == g ? m += _ : g < p && (m += 2 * _)
                        }
                        for (var x = 0; x < v.length; x++) v[x] = v[x] / m;
                        c.envMap.value = e.texture, c.samples.value = p, c.weights.value = v, c.latitudinal.value = "latitudinal" === a, o && (c.poleAxis.value = o), c.dTheta.value = d, c.mipInt.value = 8 - n, c.inputEncoding.value = Ra[e.texture.encoding], c.outputEncoding.value = Ra[e.texture.encoding];
                        var b = Na[r];
                        Ya(t, 3 * Math.max(0, Ea - 2 * b), (0 === r ? 0 : 2 * Ea) + 2 * b * (r > 4 ? r - 8 + 4 : 0), 3 * b, 2 * b), s.setRenderTarget(t), s.render(l, Da)
                    }
                }]), e
            }();

            function ja(e) {
                return void 0 !== e && e.type === Ae && (e.encoding === Xt || e.encoding === Yt || e.encoding === Kt)
            }

            function qa() {
                for (var e = [], t = [], n = [], r = 8, i = 0; i < La; i++) {
                    var a = Math.pow(2, r);
                    t.push(a);
                    var o = 1 / a;
                    i > 4 ? o = Aa[i - 8 + 4 - 1] : 0 == i && (o = 0), n.push(o);
                    for (var s = 1 / (a - 1), u = -s / 2, l = 1 + s / 2, c = [u, u, l, u, l, l, u, u, l, l, u, l], h = new Float32Array(108), d = new Float32Array(72), f = new Float32Array(36), p = 0; p < 6; p++) {
                        var v = p % 3 * 2 / 3 - 1,
                            m = p > 2 ? 0 : -1,
                            g = [v, m, 0, v + 2 / 3, m, 0, v + 2 / 3, m + 1, 0, v, m, 0, v + 2 / 3, m + 1, 0, v, m + 1, 0];
                        h.set(g, 18 * p), d.set(c, 12 * p);
                        var y = [p, p, p, p, p, p];
                        f.set(y, 6 * p)
                    }
                    var _ = new Li;
                    _.setAttribute("position", new si(h, 3)), _.setAttribute("uv", new si(d, 2)), _.setAttribute("faceIndex", new si(f, 1)), e.push(_), r > 4 && r--
                }
                return {
                    _lodPlanes: e,
                    _sizeLods: t,
                    _sigmas: n
                }
            }

            function Xa(e) {
                var t = new kn(3 * Ea, 3 * Ea, e);
                return t.texture.mapping = me, t.texture.name = "PMREM.cubeUv", t.scissorTest = !0, t
            }

            function Ya(e, t, n, r, i) {
                e.viewport.set(t, n, r, i), e.scissor.set(t, n, r, i)
            }

            function Ka() {
                var e = new Tn(1, 1);
                return new Sa({
                    name: "EquirectangularToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        texelSize: {
                            value: e
                        },
                        inputEncoding: {
                            value: Ra[Xt]
                        },
                        outputEncoding: {
                            value: Ra[Xt]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                    blending: E,
                    depthTest: !1,
                    depthWrite: !1
                })
            }

            function Za() {
                return new Sa({
                    name: "CubemapToCubeUV",
                    uniforms: {
                        envMap: {
                            value: null
                        },
                        inputEncoding: {
                            value: Ra[Xt]
                        },
                        outputEncoding: {
                            value: Ra[Xt]
                        }
                    },
                    vertexShader: "\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",
                    fragmentShader: "\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t", "\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),
                    blending: E,
                    depthTest: !1,
                    depthWrite: !1
                })
            }

            function Ja(e) {
                var t = new WeakMap,
                    n = null;

                function r(e) {
                    var n = e.target;
                    n.removeEventListener("dispose", r);
                    var i = t.get(n);
                    void 0 !== i && (i.delete(n), i.dispose())
                }
                return {
                    get: function(i) {
                        if (i && i.isTexture && !1 === i.isRenderTargetTexture) {
                            var a = i.mapping,
                                o = a === pe || a === ve,
                                s = a === de || a === fe;
                            if (o || s) {
                                if (t.has(i)) return t.get(i).texture;
                                var u = i.image;
                                if (o && u && u.height > 0 || s && u && function(e) {
                                        for (var t = 0, n = 6, r = 0; r < n; r++) void 0 !== e[r] && t++;
                                        return t === n
                                    }(u)) {
                                    var l = e.getRenderTarget();
                                    null === n && (n = new Wa(e));
                                    var c = o ? n.fromEquirectangular(i) : n.fromCubemap(i);
                                    return t.set(i, c), e.setRenderTarget(l), i.addEventListener("dispose", r), c.texture
                                }
                                return null
                            }
                        }
                        return i
                    },
                    dispose: function() {
                        t = new WeakMap, null !== n && (n.dispose(), n = null)
                    }
                }
            }

            function Qa(e) {
                var t = {};

                function n(n) {
                    if (void 0 !== t[n]) return t[n];
                    var r;
                    switch (n) {
                        case "WEBGL_depth_texture":
                            r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        default:
                            r = e.getExtension(n)
                    }
                    return t[n] = r, r
                }
                return {
                    has: function(e) {
                        return null !== n(e)
                    },
                    init: function(e) {
                        e.isWebGL2 ? n("EXT_color_buffer_float") : (n("WEBGL_depth_texture"), n("OES_texture_float"), n("OES_texture_half_float"), n("OES_texture_half_float_linear"), n("OES_standard_derivatives"), n("OES_element_index_uint"), n("OES_vertex_array_object"), n("ANGLE_instanced_arrays")), n("OES_texture_float_linear"), n("EXT_color_buffer_half_float")
                    },
                    get: function(e) {
                        var t = n(e);
                        return null === t && console.warn("THREE.WebGLRenderer: " + e + " extension not supported."), t
                    }
                }
            }

            function $a(e, t, n, r) {
                var i = {},
                    a = new WeakMap;

                function o(e) {
                    var s = e.target;
                    for (var u in null !== s.index && t.remove(s.index), s.attributes) t.remove(s.attributes[u]);
                    s.removeEventListener("dispose", o), delete i[s.id];
                    var l = a.get(s);
                    l && (t.remove(l), a.delete(s)), r.releaseStatesOfGeometry(s), !0 === s.isInstancedBufferGeometry && delete s._maxInstanceCount, n.memory.geometries--
                }

                function s(e) {
                    var n = [],
                        r = e.index,
                        i = e.attributes.position,
                        o = 0;
                    if (null !== r) {
                        var s = r.array;
                        o = r.version;
                        for (var u = 0, l = s.length; u < l; u += 3) {
                            var c = s[u + 0],
                                h = s[u + 1],
                                d = s[u + 2];
                            n.push(c, h, h, d, d, c)
                        }
                    } else {
                        var f = i.array;
                        o = i.version;
                        for (var p = 0, v = f.length / 3 - 1; p < v; p += 3) {
                            var m = p + 0,
                                g = p + 1,
                                y = p + 2;
                            n.push(m, g, g, y, y, m)
                        }
                    }
                    var _ = new(yi(n) > 65535 ? pi : di)(n, 1);
                    _.version = o;
                    var x = a.get(e);
                    x && t.remove(x), a.set(e, _)
                }
                return {
                    get: function(e, t) {
                        return !0 === i[t.id] || (t.addEventListener("dispose", o), i[t.id] = !0, n.memory.geometries++), t
                    },
                    update: function(n) {
                        var r = n.attributes;
                        for (var i in r) t.update(r[i], e.ARRAY_BUFFER);
                        var a = n.morphAttributes;
                        for (var o in a)
                            for (var s = a[o], u = 0, l = s.length; u < l; u++) t.update(s[u], e.ARRAY_BUFFER)
                    },
                    getWireframeAttribute: function(e) {
                        var t = a.get(e);
                        if (t) {
                            var n = e.index;
                            null !== n && t.version < n.version && s(e)
                        } else s(e);
                        return a.get(e)
                    }
                }
            }

            function eo(e, t, n, r) {
                var i, a, o, s = r.isWebGL2;
                this.setMode = function(e) {
                    i = e
                }, this.setIndex = function(e) {
                    a = e.type, o = e.bytesPerElement
                }, this.render = function(t, r) {
                    e.drawElements(i, r, a, t * o), n.update(r, i, 1)
                }, this.renderInstances = function(r, u, l) {
                    if (0 !== l) {
                        var c, h;
                        if (s) c = e, h = "drawElementsInstanced";
                        else if (h = "drawElementsInstancedANGLE", null === (c = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
                        c[h](i, u, a, r * o, l), n.update(u, i, l)
                    }
                }
            }

            function to(e) {
                var t = {
                    frame: 0,
                    calls: 0,
                    triangles: 0,
                    points: 0,
                    lines: 0
                };
                return {
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    render: t,
                    programs: null,
                    autoReset: !0,
                    reset: function() {
                        t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0
                    },
                    update: function(n, r, i) {
                        switch (t.calls++, r) {
                            case e.TRIANGLES:
                                t.triangles += i * (n / 3);
                                break;
                            case e.LINES:
                                t.lines += i * (n / 2);
                                break;
                            case e.LINE_STRIP:
                                t.lines += i * (n - 1);
                                break;
                            case e.LINE_LOOP:
                                t.lines += i * n;
                                break;
                            case e.POINTS:
                                t.points += i * n;
                                break;
                            default:
                                console.error("THREE.WebGLInfo: Unknown draw mode:", r)
                        }
                    }
                }
            }

            function no(e, t) {
                return e[0] - t[0]
            }

            function ro(e, t) {
                return Math.abs(t[1]) - Math.abs(e[1])
            }

            function io(e) {
                for (var t = {}, n = new Float32Array(8), r = [], i = 0; i < 8; i++) r[i] = [i, 0];
                return {
                    update: function(i, a, o, s) {
                        var u = i.morphTargetInfluences,
                            l = void 0 === u ? 0 : u.length,
                            c = t[a.id];
                        if (void 0 === c || c.length !== l) {
                            c = [];
                            for (var h = 0; h < l; h++) c[h] = [h, 0];
                            t[a.id] = c
                        }
                        for (var d = 0; d < l; d++) {
                            var f = c[d];
                            f[0] = d, f[1] = u[d]
                        }
                        c.sort(ro);
                        for (var p = 0; p < 8; p++) p < l && c[p][1] ? (r[p][0] = c[p][0], r[p][1] = c[p][1]) : (r[p][0] = Number.MAX_SAFE_INTEGER, r[p][1] = 0);
                        r.sort(no);
                        for (var v = a.morphAttributes.position, m = a.morphAttributes.normal, g = 0, y = 0; y < 8; y++) {
                            var _ = r[y],
                                x = _[0],
                                b = _[1];
                            x !== Number.MAX_SAFE_INTEGER && b ? (v && a.getAttribute("morphTarget" + y) !== v[x] && a.setAttribute("morphTarget" + y, v[x]), m && a.getAttribute("morphNormal" + y) !== m[x] && a.setAttribute("morphNormal" + y, m[x]), n[y] = b, g += b) : (v && !0 === a.hasAttribute("morphTarget" + y) && a.deleteAttribute("morphTarget" + y), m && !0 === a.hasAttribute("morphNormal" + y) && a.deleteAttribute("morphNormal" + y), n[y] = 0)
                        }
                        var w = a.morphTargetsRelative ? 1 : 1 - g;
                        s.getUniforms().setValue(e, "morphTargetBaseInfluence", w), s.getUniforms().setValue(e, "morphTargetInfluences", n)
                    }
                }
            }

            function ao(e, t, n, r) {
                var i = new WeakMap;

                function a(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", a), n.remove(t.instanceMatrix), null !== t.instanceColor && n.remove(t.instanceColor)
                }
                return {
                    update: function(o) {
                        var s = r.render.frame,
                            u = o.geometry,
                            l = t.get(o, u);
                        return i.get(l) !== s && (t.update(l), i.set(l, s)), o.isInstancedMesh && (!1 === o.hasEventListener("dispose", a) && o.addEventListener("dispose", a), n.update(o.instanceMatrix, e.ARRAY_BUFFER), null !== o.instanceColor && n.update(o.instanceColor, e.ARRAY_BUFFER)), l
                    },
                    dispose: function() {
                        i = new WeakMap
                    }
                }
            }
            var oo = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return (0, v.default)(this, n), (e = t.call(this, null)).image = {
                        data: r,
                        width: i,
                        height: a,
                        depth: o
                    }, e.magFilter = be, e.minFilter = be, e.wrapR = _e, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return (0, m.default)(n)
            }(Ln);
            oo.prototype.isDataTexture2DArray = !0;
            var so = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return (0, v.default)(this, n), (e = t.call(this, null)).image = {
                        data: r,
                        width: i,
                        height: a,
                        depth: o
                    }, e.magFilter = be, e.minFilter = be, e.wrapR = _e, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return (0, m.default)(n)
            }(Ln);
            so.prototype.isDataTexture3D = !0;
            var uo = new Ln,
                lo = new oo,
                co = new so,
                ho = new ra,
                fo = [],
                po = [],
                vo = new Float32Array(16),
                mo = new Float32Array(9),
                go = new Float32Array(4);

            function yo(e, t, n) {
                var r = e[0];
                if (r <= 0 || r > 0) return e;
                var i = t * n,
                    a = fo[i];
                if (void 0 === a && (a = new Float32Array(i), fo[i] = a), 0 !== t) {
                    r.toArray(a, 0);
                    for (var o = 1, s = 0; o !== t; ++o) s += n, e[o].toArray(a, s)
                }
                return a
            }

            function _o(e, t) {
                if (e.length !== t.length) return !1;
                for (var n = 0, r = e.length; n < r; n++)
                    if (e[n] !== t[n]) return !1;
                return !0
            }

            function xo(e, t) {
                for (var n = 0, r = t.length; n < r; n++) e[n] = t[n]
            }

            function bo(e, t) {
                var n = po[t];
                void 0 === n && (n = new Int32Array(t), po[t] = n);
                for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
                return n
            }

            function wo(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t)
            }

            function To(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y);
                else {
                    if (_o(n, t)) return;
                    e.uniform2fv(this.addr, t), xo(n, t)
                }
            }

            function Mo(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z);
                else if (void 0 !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b);
                else {
                    if (_o(n, t)) return;
                    e.uniform3fv(this.addr, t), xo(n, t)
                }
            }

            function So(e, t) {
                var n = this.cache;
                if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w);
                else {
                    if (_o(n, t)) return;
                    e.uniform4fv(this.addr, t), xo(n, t)
                }
            }

            function Eo(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (_o(n, t)) return;
                    e.uniformMatrix2fv(this.addr, !1, t), xo(n, t)
                } else {
                    if (_o(n, r)) return;
                    go.set(r), e.uniformMatrix2fv(this.addr, !1, go), xo(n, r)
                }
            }

            function Ao(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (_o(n, t)) return;
                    e.uniformMatrix3fv(this.addr, !1, t), xo(n, t)
                } else {
                    if (_o(n, r)) return;
                    mo.set(r), e.uniformMatrix3fv(this.addr, !1, mo), xo(n, r)
                }
            }

            function Lo(e, t) {
                var n = this.cache,
                    r = t.elements;
                if (void 0 === r) {
                    if (_o(n, t)) return;
                    e.uniformMatrix4fv(this.addr, !1, t), xo(n, t)
                } else {
                    if (_o(n, r)) return;
                    vo.set(r), e.uniformMatrix4fv(this.addr, !1, vo), xo(n, r)
                }
            }

            function Co(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t)
            }

            function Ro(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform2iv(this.addr, t), xo(n, t))
            }

            function ko(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform3iv(this.addr, t), xo(n, t))
            }

            function Po(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform4iv(this.addr, t), xo(n, t))
            }

            function Do(e, t) {
                var n = this.cache;
                n[0] !== t && (e.uniform1ui(this.addr, t), n[0] = t)
            }

            function Io(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform2uiv(this.addr, t), xo(n, t))
            }

            function Oo(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform3uiv(this.addr, t), xo(n, t))
            }

            function No(e, t) {
                var n = this.cache;
                _o(n, t) || (e.uniform4uiv(this.addr, t), xo(n, t))
            }

            function Fo(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTexture2D(t || uo, i)
            }

            function Uo(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(t || co, i)
            }

            function Bo(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTextureCube(t || ho, i)
            }

            function zo(e, t, n) {
                var r = this.cache,
                    i = n.allocateTextureUnit();
                r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(t || lo, i)
            }

            function Go(e, t) {
                e.uniform1fv(this.addr, t)
            }

            function Ho(e, t) {
                var n = yo(t, this.size, 2);
                e.uniform2fv(this.addr, n)
            }

            function Vo(e, t) {
                var n = yo(t, this.size, 3);
                e.uniform3fv(this.addr, n)
            }

            function Wo(e, t) {
                var n = yo(t, this.size, 4);
                e.uniform4fv(this.addr, n)
            }

            function jo(e, t) {
                var n = yo(t, this.size, 4);
                e.uniformMatrix2fv(this.addr, !1, n)
            }

            function qo(e, t) {
                var n = yo(t, this.size, 9);
                e.uniformMatrix3fv(this.addr, !1, n)
            }

            function Xo(e, t) {
                var n = yo(t, this.size, 16);
                e.uniformMatrix4fv(this.addr, !1, n)
            }

            function Yo(e, t) {
                e.uniform1iv(this.addr, t)
            }

            function Ko(e, t) {
                e.uniform2iv(this.addr, t)
            }

            function Zo(e, t) {
                e.uniform3iv(this.addr, t)
            }

            function Jo(e, t) {
                e.uniform4iv(this.addr, t)
            }

            function Qo(e, t) {
                e.uniform1uiv(this.addr, t)
            }

            function $o(e, t) {
                e.uniform2uiv(this.addr, t)
            }

            function es(e, t) {
                e.uniform3uiv(this.addr, t)
            }

            function ts(e, t) {
                e.uniform4uiv(this.addr, t)
            }

            function ns(e, t, n) {
                var r = t.length,
                    i = bo(n, r);
                e.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a) n.safeSetTexture2D(t[a] || uo, i[a])
            }

            function rs(e, t, n) {
                var r = t.length,
                    i = bo(n, r);
                e.uniform1iv(this.addr, i);
                for (var a = 0; a !== r; ++a) n.safeSetTextureCube(t[a] || ho, i[a])
            }

            function is(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.setValue = function(e) {
                    switch (e) {
                        case 5126:
                            return wo;
                        case 35664:
                            return To;
                        case 35665:
                            return Mo;
                        case 35666:
                            return So;
                        case 35674:
                            return Eo;
                        case 35675:
                            return Ao;
                        case 35676:
                            return Lo;
                        case 5124:
                        case 35670:
                            return Co;
                        case 35667:
                        case 35671:
                            return Ro;
                        case 35668:
                        case 35672:
                            return ko;
                        case 35669:
                        case 35673:
                            return Po;
                        case 5125:
                            return Do;
                        case 36294:
                            return Io;
                        case 36295:
                            return Oo;
                        case 36296:
                            return No;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return Fo;
                        case 35679:
                        case 36299:
                        case 36307:
                            return Uo;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return Bo;
                        case 36289:
                        case 36303:
                        case 36311:
                        case 36292:
                            return zo
                    }
                }(t.type)
            }

            function as(e, t, n) {
                this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function(e) {
                    switch (e) {
                        case 5126:
                            return Go;
                        case 35664:
                            return Ho;
                        case 35665:
                            return Vo;
                        case 35666:
                            return Wo;
                        case 35674:
                            return jo;
                        case 35675:
                            return qo;
                        case 35676:
                            return Xo;
                        case 5124:
                        case 35670:
                            return Yo;
                        case 35667:
                        case 35671:
                            return Ko;
                        case 35668:
                        case 35672:
                            return Zo;
                        case 35669:
                        case 35673:
                            return Jo;
                        case 5125:
                            return Qo;
                        case 36294:
                            return $o;
                        case 36295:
                            return es;
                        case 36296:
                            return ts;
                        case 35678:
                        case 36198:
                        case 36298:
                        case 36306:
                        case 35682:
                            return ns;
                        case 35680:
                        case 36300:
                        case 36308:
                        case 36293:
                            return rs
                    }
                }(t.type)
            }

            function os(e) {
                this.id = e, this.seq = [], this.map = {}
            }
            as.prototype.updateCache = function(e) {
                var t = this.cache;
                e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), xo(t, e)
            }, os.prototype.setValue = function(e, t, n) {
                for (var r = this.seq, i = 0, a = r.length; i !== a; ++i) {
                    var o = r[i];
                    o.setValue(e, t[o.id], n)
                }
            };
            var ss = /(\w+)(\])?(\[|\.)?/g;

            function us(e, t) {
                e.seq.push(t), e.map[t.id] = t
            }

            function ls(e, t, n) {
                var r = e.name,
                    i = r.length;
                for (ss.lastIndex = 0;;) {
                    var a = ss.exec(r),
                        o = ss.lastIndex,
                        s = a[1],
                        u = "]" === a[2],
                        l = a[3];
                    if (u && (s |= 0), void 0 === l || "[" === l && o + 2 === i) {
                        us(n, void 0 === l ? new is(s, e, t) : new as(s, e, t));
                        break
                    }
                    var c = n.map[s];
                    void 0 === c && us(n, c = new os(s)), n = c
                }
            }

            function cs(e, t) {
                this.seq = [], this.map = {};
                for (var n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS), r = 0; r < n; ++r) {
                    var i = e.getActiveUniform(t, r);
                    ls(i, e.getUniformLocation(t, i.name), this)
                }
            }

            function hs(e, t, n) {
                var r = e.createShader(t);
                return e.shaderSource(r, n), e.compileShader(r), r
            }
            cs.prototype.setValue = function(e, t, n, r) {
                var i = this.map[t];
                void 0 !== i && i.setValue(e, n, r)
            }, cs.prototype.setOptional = function(e, t, n) {
                var r = t[n];
                void 0 !== r && this.setValue(e, n, r)
            }, cs.upload = function(e, t, n, r) {
                for (var i = 0, a = t.length; i !== a; ++i) {
                    var o = t[i],
                        s = n[o.id];
                    !1 !== s.needsUpdate && o.setValue(e, s.value, r)
                }
            }, cs.seqWithValue = function(e, t) {
                for (var n = [], r = 0, i = e.length; r !== i; ++r) {
                    var a = e[r];
                    a.id in t && n.push(a)
                }
                return n
            };
            var ds = 0;

            function fs(e) {
                switch (e) {
                    case Xt:
                        return ["Linear", "( value )"];
                    case Yt:
                        return ["sRGB", "( value )"];
                    case Zt:
                        return ["RGBE", "( value )"];
                    case Qt:
                        return ["RGBM", "( value, 7.0 )"];
                    case $t:
                        return ["RGBM", "( value, 16.0 )"];
                    case en:
                        return ["RGBD", "( value, 256.0 )"];
                    case Kt:
                        return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                    case Jt:
                        return ["LogLuv", "( value )"];
                    default:
                        return console.warn("THREE.WebGLProgram: Unsupported encoding:", e), ["Linear", "( value )"]
                }
            }

            function ps(e, t, n) {
                var r = e.getShaderParameter(t, e.COMPILE_STATUS),
                    i = e.getShaderInfoLog(t).trim();
                return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function(e) {
                    for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
                    return t.join("\n")
                }(e.getShaderSource(t))
            }

            function vs(e, t) {
                var n = fs(t);
                return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
            }

            function ms(e, t) {
                var n;
                switch (t) {
                    case oe:
                        n = "Linear";
                        break;
                    case se:
                        n = "Reinhard";
                        break;
                    case ue:
                        n = "OptimizedCineon";
                        break;
                    case le:
                        n = "ACESFilmic";
                        break;
                    case ce:
                        n = "Custom";
                        break;
                    default:
                        console.warn("THREE.WebGLProgram: Unsupported toneMapping:", t), n = "Linear"
                }
                return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
            }

            function gs(e) {
                return "" !== e
            }

            function ys(e, t) {
                return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
            }

            function _s(e, t) {
                return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
            }
            var xs = /^[ \t]*#include +<([\w\d./]+)>/gm;

            function bs(e) {
                return e.replace(xs, ws)
            }

            function ws(e, t) {
                var n = va[t];
                if (void 0 === n) throw new Error("Can not resolve #include <" + t + ">");
                return bs(n)
            }
            var Ts = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,
                Ms = /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;

            function Ss(e) {
                return e.replace(Ms, As).replace(Ts, Es)
            }

            function Es(e, t, n, r) {
                return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."), As(0, t, n, r)
            }

            function As(e, t, n, r) {
                for (var i = "", a = parseInt(t); a < parseInt(n); a++) i += r.replace(/\[\s*i\s*\]/g, "[ " + a + " ]").replace(/UNROLLED_LOOP_INDEX/g, a);
                return i
            }

            function Ls(e) {
                var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
                return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"), t
            }

            function Cs(e, t, n, r) {
                var i, a, s, u, l, c = e.getContext(),
                    h = n.defines,
                    d = n.vertexShader,
                    f = n.fragmentShader,
                    p = function(e) {
                        var t = "SHADOWMAP_TYPE_BASIC";
                        return e.shadowMapType === o ? t = "SHADOWMAP_TYPE_PCF" : e.shadowMapType === g ? t = "SHADOWMAP_TYPE_PCF_SOFT" : e.shadowMapType === x && (t = "SHADOWMAP_TYPE_VSM"), t
                    }(n),
                    v = function(e) {
                        var t = "ENVMAP_TYPE_CUBE";
                        if (e.envMap) switch (e.envMapMode) {
                            case de:
                            case fe:
                                t = "ENVMAP_TYPE_CUBE";
                                break;
                            case me:
                            case ge:
                                t = "ENVMAP_TYPE_CUBE_UV"
                        }
                        return t
                    }(n),
                    m = function(e) {
                        var t = "ENVMAP_MODE_REFLECTION";
                        if (e.envMap) switch (e.envMapMode) {
                            case fe:
                            case ge:
                                t = "ENVMAP_MODE_REFRACTION"
                        }
                        return t
                    }(n),
                    y = function(e) {
                        var t = "ENVMAP_BLENDING_NONE";
                        if (e.envMap) switch (e.combine) {
                            case ne:
                                t = "ENVMAP_BLENDING_MULTIPLY";
                                break;
                            case re:
                                t = "ENVMAP_BLENDING_MIX";
                                break;
                            case ie:
                                t = "ENVMAP_BLENDING_ADD"
                        }
                        return t
                    }(n),
                    _ = e.gammaFactor > 0 ? e.gammaFactor : 1,
                    b = n.isWebGL2 ? "" : function(e) {
                        return [e.extensionDerivatives || e.envMapCubeUV || e.bumpMap || e.tangentSpaceNormalMap || e.clearcoatNormalMap || e.flatShading || "physical" === e.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.extensionFragDepth || e.logarithmicDepthBuffer) && e.rendererExtensionFragDepth ? "#extension GL_EXT_frag_depth : enable" : "", e.extensionDrawBuffers && e.rendererExtensionDrawBuffers ? "#extension GL_EXT_draw_buffers : require" : "", (e.extensionShaderTextureLOD || e.envMap || e.transmission > 0) && e.rendererExtensionShaderTextureLod ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(gs).join("\n")
                    }(n),
                    w = function(e) {
                        var t = [];
                        for (var n in e) {
                            var r = e[n];
                            !1 !== r && t.push("#define " + n + " " + r)
                        }
                        return t.join("\n")
                    }(h),
                    T = c.createProgram(),
                    M = n.glslVersion ? "#version " + n.glslVersion + "\n" : "";
                n.isRawShaderMaterial ? ((i = [w].filter(gs).join("\n")).length > 0 && (i += "\n"), (a = [b, w].filter(gs).join("\n")).length > 0 && (a += "\n")) : (i = [Ls(n), "#define SHADER_NAME " + n.shaderName, w, n.instancing ? "#define USE_INSTANCING" : "", n.instancingColor ? "#define USE_INSTANCING_COLOR" : "", n.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + _, "#define MAX_BONES " + n.maxBones, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + m : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.displacementMap && n.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularTintMap ? "#define USE_SPECULARTINTMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.skinning ? "#define USE_SKINNING" : "", n.useVertexTexture ? "#define BONE_TEXTURE" : "", n.morphTargets ? "#define USE_MORPHTARGETS" : "", n.morphNormals && !1 === n.flatShading ? "#define USE_MORPHNORMALS" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", "\tattribute mat4 instanceMatrix;", "#endif", "#ifdef USE_INSTANCING_COLOR", "\tattribute vec3 instanceColor;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#if defined( USE_COLOR_ALPHA )", "\tattribute vec4 color;", "#elif defined( USE_COLOR )", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(gs).join("\n"), a = [b, Ls(n), "#define SHADER_NAME " + n.shaderName, w, n.alphaTest ? "#define ALPHATEST " + n.alphaTest + (n.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + _, n.useFog && n.fog ? "#define USE_FOG" : "", n.useFog && n.fogExp2 ? "#define FOG_EXP2" : "", n.map ? "#define USE_MAP" : "", n.matcap ? "#define USE_MATCAP" : "", n.envMap ? "#define USE_ENVMAP" : "", n.envMap ? "#define " + v : "", n.envMap ? "#define " + m : "", n.envMap ? "#define " + y : "", n.lightMap ? "#define USE_LIGHTMAP" : "", n.aoMap ? "#define USE_AOMAP" : "", n.emissiveMap ? "#define USE_EMISSIVEMAP" : "", n.bumpMap ? "#define USE_BUMPMAP" : "", n.normalMap ? "#define USE_NORMALMAP" : "", n.normalMap && n.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", n.normalMap && n.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", n.clearcoatMap ? "#define USE_CLEARCOATMAP" : "", n.clearcoatRoughnessMap ? "#define USE_CLEARCOAT_ROUGHNESSMAP" : "", n.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", n.specularMap ? "#define USE_SPECULARMAP" : "", n.specularIntensityMap ? "#define USE_SPECULARINTENSITYMAP" : "", n.specularTintMap ? "#define USE_SPECULARTINTMAP" : "", n.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", n.metalnessMap ? "#define USE_METALNESSMAP" : "", n.alphaMap ? "#define USE_ALPHAMAP" : "", n.sheen ? "#define USE_SHEEN" : "", n.transmission ? "#define USE_TRANSMISSION" : "", n.transmissionMap ? "#define USE_TRANSMISSIONMAP" : "", n.thicknessMap ? "#define USE_THICKNESSMAP" : "", n.vertexTangents ? "#define USE_TANGENT" : "", n.vertexColors || n.instancingColor ? "#define USE_COLOR" : "", n.vertexAlphas ? "#define USE_COLOR_ALPHA" : "", n.vertexUvs ? "#define USE_UV" : "", n.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", n.gradientMap ? "#define USE_GRADIENTMAP" : "", n.flatShading ? "#define FLAT_SHADED" : "", n.doubleSided ? "#define DOUBLE_SIDED" : "", n.flipSided ? "#define FLIP_SIDED" : "", n.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", n.shadowMapEnabled ? "#define " + p : "", n.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", n.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", n.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", n.logarithmicDepthBuffer && n.rendererExtensionFragDepth ? "#define USE_LOGDEPTHBUF_EXT" : "", (n.extensionShaderTextureLOD || n.envMap) && n.rendererExtensionShaderTextureLod ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", n.toneMapping !== ae ? "#define TONE_MAPPING" : "", n.toneMapping !== ae ? va.tonemapping_pars_fragment : "", n.toneMapping !== ae ? ms("toneMapping", n.toneMapping) : "", n.dithering ? "#define DITHERING" : "", va.encodings_pars_fragment, n.map ? vs("mapTexelToLinear", n.mapEncoding) : "", n.matcap ? vs("matcapTexelToLinear", n.matcapEncoding) : "", n.envMap ? vs("envMapTexelToLinear", n.envMapEncoding) : "", n.emissiveMap ? vs("emissiveMapTexelToLinear", n.emissiveMapEncoding) : "", n.specularTintMap ? vs("specularTintMapTexelToLinear", n.specularTintMapEncoding) : "", n.lightMap ? vs("lightMapTexelToLinear", n.lightMapEncoding) : "", (s = "linearToOutputTexel", u = n.outputEncoding, l = fs(u), "vec4 " + s + "( vec4 value ) { return LinearTo" + l[0] + l[1] + "; }"), n.depthPacking ? "#define DEPTH_PACKING " + n.depthPacking : "", "\n"].filter(gs).join("\n")), d = _s(d = ys(d = bs(d), n), n), f = _s(f = ys(f = bs(f), n), n), d = Ss(d), f = Ss(f), n.isWebGL2 && !0 !== n.isRawShaderMaterial && (M = "#version 300 es\n", i = ["#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + i, a = ["#define varying in", n.glslVersion === un ? "" : "out highp vec4 pc_fragColor;", n.glslVersion === un ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + a);
                var S, E, A = M + i + d,
                    L = M + a + f,
                    C = hs(c, c.VERTEX_SHADER, A),
                    R = hs(c, c.FRAGMENT_SHADER, L);
                if (c.attachShader(T, C), c.attachShader(T, R), void 0 !== n.index0AttributeName ? c.bindAttribLocation(T, 0, n.index0AttributeName) : !0 === n.morphTargets && c.bindAttribLocation(T, 0, "position"), c.linkProgram(T), e.debug.checkShaderErrors) {
                    var k = c.getProgramInfoLog(T).trim(),
                        P = c.getShaderInfoLog(C).trim(),
                        D = c.getShaderInfoLog(R).trim(),
                        I = !0,
                        O = !0;
                    if (!1 === c.getProgramParameter(T, c.LINK_STATUS)) {
                        I = !1;
                        var N = ps(c, C, "vertex"),
                            F = ps(c, R, "fragment");
                        console.error("THREE.WebGLProgram: shader error: ", c.getError(), "gl.VALIDATE_STATUS", c.getProgramParameter(T, c.VALIDATE_STATUS), "gl.getProgramInfoLog", k, N, F)
                    } else "" !== k ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", k) : "" !== P && "" !== D || (O = !1);
                    O && (this.diagnostics = {
                        runnable: I,
                        programLog: k,
                        vertexShader: {
                            log: P,
                            prefix: i
                        },
                        fragmentShader: {
                            log: D,
                            prefix: a
                        }
                    })
                }
                return c.deleteShader(C), c.deleteShader(R), this.getUniforms = function() {
                    return void 0 === S && (S = new cs(c, T)), S
                }, this.getAttributes = function() {
                    return void 0 === E && (E = function(e, t) {
                        for (var n = {}, r = e.getProgramParameter(t, e.ACTIVE_ATTRIBUTES), i = 0; i < r; i++) {
                            var a = e.getActiveAttrib(t, i).name;
                            n[a] = e.getAttribLocation(t, a)
                        }
                        return n
                    }(c, T)), E
                }, this.destroy = function() {
                    r.releaseStatesOfProgram(this), c.deleteProgram(T), this.program = void 0
                }, this.name = n.shaderName, this.id = ds++, this.cacheKey = t, this.usedTimes = 1, this.program = T, this.vertexShader = C, this.fragmentShader = R, this
            }

            function Rs(e, t, n, r, i, a, o) {
                var s = [],
                    u = i.isWebGL2,
                    l = i.logarithmicDepthBuffer,
                    c = i.floatVertexTextures,
                    h = i.maxVertexUniforms,
                    d = i.vertexTextures,
                    f = i.precision,
                    p = {
                        MeshDepthMaterial: "depth",
                        MeshDistanceMaterial: "distanceRGBA",
                        MeshNormalMaterial: "normal",
                        MeshBasicMaterial: "basic",
                        MeshLambertMaterial: "lambert",
                        MeshPhongMaterial: "phong",
                        MeshToonMaterial: "toon",
                        MeshStandardMaterial: "physical",
                        MeshPhysicalMaterial: "physical",
                        MeshMatcapMaterial: "matcap",
                        LineBasicMaterial: "basic",
                        LineDashedMaterial: "dashed",
                        PointsMaterial: "points",
                        ShadowMaterial: "shadow",
                        SpriteMaterial: "sprite"
                    },
                    v = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "instancingColor", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap", "specularIntensityMap", "specularTintMap", "specularTintMapEncoding", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexAlphas", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen", "transmission", "transmissionMap", "thicknessMap"];

                function m(e) {
                    var t;
                    return e && e.isTexture ? t = e.encoding : e && e.isWebGLRenderTarget ? (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), t = e.texture.encoding) : t = Xt, t
                }
                return {
                    getParameters: function(a, s, v, g, y) {
                        var _, x, b = g.fog,
                            w = a.isMeshStandardMaterial ? g.environment : null,
                            T = (a.isMeshStandardMaterial ? n : t).get(a.envMap || w),
                            E = p[a.type],
                            A = y.isSkinnedMesh ? function(e) {
                                var t = e.skeleton.bones;
                                if (c) return 1024;
                                var n = h,
                                    r = Math.floor((n - 20) / 4),
                                    i = Math.min(r, t.length);
                                return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."), 0) : i
                            }(y) : 0;
                        if (null !== a.precision && (f = i.getMaxPrecision(a.precision)) !== a.precision && console.warn("THREE.WebGLProgram.getParameters:", a.precision, "not supported, using", f, "instead."), E) {
                            var L = ga[E];
                            _ = L.vertexShader, x = L.fragmentShader
                        } else _ = a.vertexShader, x = a.fragmentShader;
                        var C = e.getRenderTarget();
                        return {
                            isWebGL2: u,
                            shaderID: E,
                            shaderName: a.type,
                            vertexShader: _,
                            fragmentShader: x,
                            defines: a.defines,
                            isRawShaderMaterial: !0 === a.isRawShaderMaterial,
                            glslVersion: a.glslVersion,
                            precision: f,
                            instancing: !0 === y.isInstancedMesh,
                            instancingColor: !0 === y.isInstancedMesh && null !== y.instanceColor,
                            supportsVertexTextures: d,
                            outputEncoding: null !== C ? m(C.texture) : e.outputEncoding,
                            map: !!a.map,
                            mapEncoding: m(a.map),
                            matcap: !!a.matcap,
                            matcapEncoding: m(a.matcap),
                            envMap: !!T,
                            envMapMode: T && T.mapping,
                            envMapEncoding: m(T),
                            envMapCubeUV: !!T && (T.mapping === me || T.mapping === ge),
                            lightMap: !!a.lightMap,
                            lightMapEncoding: m(a.lightMap),
                            aoMap: !!a.aoMap,
                            emissiveMap: !!a.emissiveMap,
                            emissiveMapEncoding: m(a.emissiveMap),
                            bumpMap: !!a.bumpMap,
                            normalMap: !!a.normalMap,
                            objectSpaceNormalMap: a.normalMapType === rn,
                            tangentSpaceNormalMap: a.normalMapType === nn,
                            clearcoatMap: !!a.clearcoatMap,
                            clearcoatRoughnessMap: !!a.clearcoatRoughnessMap,
                            clearcoatNormalMap: !!a.clearcoatNormalMap,
                            displacementMap: !!a.displacementMap,
                            roughnessMap: !!a.roughnessMap,
                            metalnessMap: !!a.metalnessMap,
                            specularMap: !!a.specularMap,
                            specularIntensityMap: !!a.specularIntensityMap,
                            specularTintMap: !!a.specularTintMap,
                            specularTintMapEncoding: m(a.specularTintMap),
                            alphaMap: !!a.alphaMap,
                            gradientMap: !!a.gradientMap,
                            sheen: !!a.sheen,
                            transmission: !!a.transmission,
                            transmissionMap: !!a.transmissionMap,
                            thicknessMap: !!a.thicknessMap,
                            combine: a.combine,
                            vertexTangents: !!a.normalMap && !!y.geometry && !!y.geometry.attributes.tangent,
                            vertexColors: a.vertexColors,
                            vertexAlphas: !0 === a.vertexColors && !!y.geometry && !!y.geometry.attributes.color && 4 === y.geometry.attributes.color.itemSize,
                            vertexUvs: !!(a.map || a.bumpMap || a.normalMap || a.specularMap || a.alphaMap || a.emissiveMap || a.roughnessMap || a.metalnessMap || a.clearcoatMap || a.clearcoatRoughnessMap || a.clearcoatNormalMap || a.displacementMap || a.transmissionMap || a.thicknessMap || a.specularIntensityMap || a.specularTintMap),
                            uvsVertexOnly: !(a.map || a.bumpMap || a.normalMap || a.specularMap || a.alphaMap || a.emissiveMap || a.roughnessMap || a.metalnessMap || a.clearcoatNormalMap || a.transmission || a.transmissionMap || a.thicknessMap || a.specularIntensityMap || a.specularTintMap || !a.displacementMap),
                            fog: !!b,
                            useFog: a.fog,
                            fogExp2: b && b.isFogExp2,
                            flatShading: !!a.flatShading,
                            sizeAttenuation: a.sizeAttenuation,
                            logarithmicDepthBuffer: l,
                            skinning: !0 === y.isSkinnedMesh && A > 0,
                            maxBones: A,
                            useVertexTexture: c,
                            morphTargets: !!y.geometry && !!y.geometry.morphAttributes.position,
                            morphNormals: !!y.geometry && !!y.geometry.morphAttributes.normal,
                            numDirLights: s.directional.length,
                            numPointLights: s.point.length,
                            numSpotLights: s.spot.length,
                            numRectAreaLights: s.rectArea.length,
                            numHemiLights: s.hemi.length,
                            numDirLightShadows: s.directionalShadowMap.length,
                            numPointLightShadows: s.pointShadowMap.length,
                            numSpotLightShadows: s.spotShadowMap.length,
                            numClippingPlanes: o.numPlanes,
                            numClipIntersection: o.numIntersection,
                            dithering: a.dithering,
                            shadowMapEnabled: e.shadowMap.enabled && v.length > 0,
                            shadowMapType: e.shadowMap.type,
                            toneMapping: a.toneMapped ? e.toneMapping : ae,
                            physicallyCorrectLights: e.physicallyCorrectLights,
                            premultipliedAlpha: a.premultipliedAlpha,
                            alphaTest: a.alphaTest,
                            doubleSided: a.side === S,
                            flipSided: a.side === M,
                            depthPacking: void 0 !== a.depthPacking && a.depthPacking,
                            index0AttributeName: a.index0AttributeName,
                            extensionDerivatives: a.extensions && a.extensions.derivatives,
                            extensionFragDepth: a.extensions && a.extensions.fragDepth,
                            extensionDrawBuffers: a.extensions && a.extensions.drawBuffers,
                            extensionShaderTextureLOD: a.extensions && a.extensions.shaderTextureLOD,
                            rendererExtensionFragDepth: u || r.has("EXT_frag_depth"),
                            rendererExtensionDrawBuffers: u || r.has("WEBGL_draw_buffers"),
                            rendererExtensionShaderTextureLod: u || r.has("EXT_shader_texture_lod"),
                            customProgramCacheKey: a.customProgramCacheKey()
                        }
                    },
                    getProgramCacheKey: function(t) {
                        var n = [];
                        if (t.shaderID ? n.push(t.shaderID) : (n.push(t.fragmentShader), n.push(t.vertexShader)), void 0 !== t.defines)
                            for (var r in t.defines) n.push(r), n.push(t.defines[r]);
                        if (!1 === t.isRawShaderMaterial) {
                            for (var i = 0; i < v.length; i++) n.push(t[v[i]]);
                            n.push(e.outputEncoding), n.push(e.gammaFactor)
                        }
                        return n.push(t.customProgramCacheKey), n.join()
                    },
                    getUniforms: function(e) {
                        var t, n = p[e.type];
                        if (n) {
                            var r = ga[n];
                            t = Ji.clone(r.uniforms)
                        } else t = e.uniforms;
                        return t
                    },
                    acquireProgram: function(t, n) {
                        for (var r, i = 0, o = s.length; i < o; i++) {
                            var u = s[i];
                            if (u.cacheKey === n) {
                                ++(r = u).usedTimes;
                                break
                            }
                        }
                        return void 0 === r && (r = new Cs(e, n, t, a), s.push(r)), r
                    },
                    releaseProgram: function(e) {
                        if (0 == --e.usedTimes) {
                            var t = s.indexOf(e);
                            s[t] = s[s.length - 1], s.pop(), e.destroy()
                        }
                    },
                    programs: s
                }
            }

            function ks() {
                var e = new WeakMap;
                return {
                    get: function(t) {
                        var n = e.get(t);
                        return void 0 === n && (n = {}, e.set(t, n)), n
                    },
                    remove: function(t) {
                        e.delete(t)
                    },
                    update: function(t, n, r) {
                        e.get(t)[n] = r
                    },
                    dispose: function() {
                        e = new WeakMap
                    }
                }
            }

            function Ps(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
            }

            function Ds(e, t) {
                return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
            }

            function Is(e) {
                var t = [],
                    n = 0,
                    r = [],
                    i = [],
                    a = [],
                    o = {
                        id: -1
                    };

                function s(r, i, a, s, u, l) {
                    var c = t[n],
                        h = e.get(a);
                    return void 0 === c ? (c = {
                        id: r.id,
                        object: r,
                        geometry: i,
                        material: a,
                        program: h.program || o,
                        groupOrder: s,
                        renderOrder: r.renderOrder,
                        z: u,
                        group: l
                    }, t[n] = c) : (c.id = r.id, c.object = r, c.geometry = i, c.material = a, c.program = h.program || o, c.groupOrder = s, c.renderOrder = r.renderOrder, c.z = u, c.group = l), n++, c
                }
                return {
                    opaque: r,
                    transmissive: i,
                    transparent: a,
                    init: function() {
                        n = 0, r.length = 0, i.length = 0, a.length = 0
                    },
                    push: function(e, t, n, o, u, l) {
                        var c = s(e, t, n, o, u, l);
                        n.transmission > 0 ? i.push(c) : !0 === n.transparent ? a.push(c) : r.push(c)
                    },
                    unshift: function(e, t, n, o, u, l) {
                        var c = s(e, t, n, o, u, l);
                        n.transmission > 0 ? i.unshift(c) : !0 === n.transparent ? a.unshift(c) : r.unshift(c)
                    },
                    finish: function() {
                        for (var e = n, r = t.length; e < r; e++) {
                            var i = t[e];
                            if (null === i.id) break;
                            i.id = null, i.object = null, i.geometry = null, i.material = null, i.program = null, i.group = null
                        }
                    },
                    sort: function(e, t) {
                        r.length > 1 && r.sort(e || Ps), i.length > 1 && i.sort(t || Ds), a.length > 1 && a.sort(t || Ds)
                    }
                }
            }

            function Os(e) {
                var t = new WeakMap;
                return {
                    get: function(n, r) {
                        var i;
                        return !1 === t.has(n) ? (i = new Is(e), t.set(n, [i])) : r >= t.get(n).length ? (i = new Is(e), t.get(n).push(i)) : i = t.get(n)[r], i
                    },
                    dispose: function() {
                        t = new WeakMap
                    }
                }
            }

            function Ns() {
                var e = {};
                return {
                    get: function(t) {
                        if (void 0 !== e[t.id]) return e[t.id];
                        var n;
                        switch (t.type) {
                            case "DirectionalLight":
                                n = {
                                    direction: new On,
                                    color: new ri
                                };
                                break;
                            case "SpotLight":
                                n = {
                                    position: new On,
                                    direction: new On,
                                    color: new ri,
                                    distance: 0,
                                    coneCos: 0,
                                    penumbraCos: 0,
                                    decay: 0
                                };
                                break;
                            case "PointLight":
                                n = {
                                    position: new On,
                                    color: new ri,
                                    distance: 0,
                                    decay: 0
                                };
                                break;
                            case "HemisphereLight":
                                n = {
                                    direction: new On,
                                    skyColor: new ri,
                                    groundColor: new ri
                                };
                                break;
                            case "RectAreaLight":
                                n = {
                                    color: new ri,
                                    position: new On,
                                    halfWidth: new On,
                                    halfHeight: new On
                                }
                        }
                        return e[t.id] = n, n
                    }
                }
            }
            var Fs = 0;

            function Us(e, t) {
                return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
            }

            function Bs(e, t) {
                for (var n, r = new Ns, i = (n = {}, {
                        get: function(e) {
                            if (void 0 !== n[e.id]) return n[e.id];
                            var t;
                            switch (e.type) {
                                case "DirectionalLight":
                                case "SpotLight":
                                    t = {
                                        shadowBias: 0,
                                        shadowNormalBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new Tn
                                    };
                                    break;
                                case "PointLight":
                                    t = {
                                        shadowBias: 0,
                                        shadowNormalBias: 0,
                                        shadowRadius: 1,
                                        shadowMapSize: new Tn,
                                        shadowCameraNear: 1,
                                        shadowCameraFar: 1e3
                                    }
                            }
                            return n[e.id] = t, t
                        }
                    }), a = {
                        version: 0,
                        hash: {
                            directionalLength: -1,
                            pointLength: -1,
                            spotLength: -1,
                            rectAreaLength: -1,
                            hemiLength: -1,
                            numDirectionalShadows: -1,
                            numPointShadows: -1,
                            numSpotShadows: -1
                        },
                        ambient: [0, 0, 0],
                        probe: [],
                        directional: [],
                        directionalShadow: [],
                        directionalShadowMap: [],
                        directionalShadowMatrix: [],
                        spot: [],
                        spotShadow: [],
                        spotShadowMap: [],
                        spotShadowMatrix: [],
                        rectArea: [],
                        rectAreaLTC1: null,
                        rectAreaLTC2: null,
                        point: [],
                        pointShadow: [],
                        pointShadowMap: [],
                        pointShadowMatrix: [],
                        hemi: []
                    }, o = 0; o < 9; o++) a.probe.push(new On);
                var s = new On,
                    u = new dr,
                    l = new dr;
                return {
                    setup: function(n) {
                        for (var o = 0, s = 0, u = 0, l = 0; l < 9; l++) a.probe[l].set(0, 0, 0);
                        var c = 0,
                            h = 0,
                            d = 0,
                            f = 0,
                            p = 0,
                            v = 0,
                            m = 0,
                            g = 0;
                        n.sort(Us);
                        for (var y = 0, _ = n.length; y < _; y++) {
                            var x = n[y],
                                b = x.color,
                                w = x.intensity,
                                T = x.distance,
                                M = x.shadow && x.shadow.map ? x.shadow.map.texture : null;
                            if (x.isAmbientLight) o += b.r * w, s += b.g * w, u += b.b * w;
                            else if (x.isLightProbe)
                                for (var S = 0; S < 9; S++) a.probe[S].addScaledVector(x.sh.coefficients[S], w);
                            else if (x.isDirectionalLight) {
                                var E = r.get(x);
                                if (E.color.copy(x.color).multiplyScalar(x.intensity), x.castShadow) {
                                    var A = x.shadow,
                                        L = i.get(x);
                                    L.shadowBias = A.bias, L.shadowNormalBias = A.normalBias, L.shadowRadius = A.radius, L.shadowMapSize = A.mapSize, a.directionalShadow[c] = L, a.directionalShadowMap[c] = M, a.directionalShadowMatrix[c] = x.shadow.matrix, v++
                                }
                                a.directional[c] = E, c++
                            } else if (x.isSpotLight) {
                                var C = r.get(x);
                                if (C.position.setFromMatrixPosition(x.matrixWorld), C.color.copy(b).multiplyScalar(w), C.distance = T, C.coneCos = Math.cos(x.angle), C.penumbraCos = Math.cos(x.angle * (1 - x.penumbra)), C.decay = x.decay, x.castShadow) {
                                    var R = x.shadow,
                                        k = i.get(x);
                                    k.shadowBias = R.bias, k.shadowNormalBias = R.normalBias, k.shadowRadius = R.radius, k.shadowMapSize = R.mapSize, a.spotShadow[d] = k, a.spotShadowMap[d] = M, a.spotShadowMatrix[d] = x.shadow.matrix, g++
                                }
                                a.spot[d] = C, d++
                            } else if (x.isRectAreaLight) {
                                var P = r.get(x);
                                P.color.copy(b).multiplyScalar(w), P.halfWidth.set(.5 * x.width, 0, 0), P.halfHeight.set(0, .5 * x.height, 0), a.rectArea[f] = P, f++
                            } else if (x.isPointLight) {
                                var D = r.get(x);
                                if (D.color.copy(x.color).multiplyScalar(x.intensity), D.distance = x.distance, D.decay = x.decay, x.castShadow) {
                                    var I = x.shadow,
                                        O = i.get(x);
                                    O.shadowBias = I.bias, O.shadowNormalBias = I.normalBias, O.shadowRadius = I.radius, O.shadowMapSize = I.mapSize, O.shadowCameraNear = I.camera.near, O.shadowCameraFar = I.camera.far, a.pointShadow[h] = O, a.pointShadowMap[h] = M, a.pointShadowMatrix[h] = x.shadow.matrix, m++
                                }
                                a.point[h] = D, h++
                            } else if (x.isHemisphereLight) {
                                var N = r.get(x);
                                N.skyColor.copy(x.color).multiplyScalar(w), N.groundColor.copy(x.groundColor).multiplyScalar(w), a.hemi[p] = N, p++
                            }
                        }
                        f > 0 && (t.isWebGL2 || !0 === e.has("OES_texture_float_linear") ? (a.rectAreaLTC1 = ma.LTC_FLOAT_1, a.rectAreaLTC2 = ma.LTC_FLOAT_2) : !0 === e.has("OES_texture_half_float_linear") ? (a.rectAreaLTC1 = ma.LTC_HALF_1, a.rectAreaLTC2 = ma.LTC_HALF_2) : console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")), a.ambient[0] = o, a.ambient[1] = s, a.ambient[2] = u;
                        var F = a.hash;
                        F.directionalLength === c && F.pointLength === h && F.spotLength === d && F.rectAreaLength === f && F.hemiLength === p && F.numDirectionalShadows === v && F.numPointShadows === m && F.numSpotShadows === g || (a.directional.length = c, a.spot.length = d, a.rectArea.length = f, a.point.length = h, a.hemi.length = p, a.directionalShadow.length = v, a.directionalShadowMap.length = v, a.pointShadow.length = m, a.pointShadowMap.length = m, a.spotShadow.length = g, a.spotShadowMap.length = g, a.directionalShadowMatrix.length = v, a.pointShadowMatrix.length = m, a.spotShadowMatrix.length = g, F.directionalLength = c, F.pointLength = h, F.spotLength = d, F.rectAreaLength = f, F.hemiLength = p, F.numDirectionalShadows = v, F.numPointShadows = m, F.numSpotShadows = g, a.version = Fs++)
                    },
                    setupView: function(e, t) {
                        for (var n = 0, r = 0, i = 0, o = 0, c = 0, h = t.matrixWorldInverse, d = 0, f = e.length; d < f; d++) {
                            var p = e[d];
                            if (p.isDirectionalLight) {
                                var v = a.directional[n];
                                v.direction.setFromMatrixPosition(p.matrixWorld), s.setFromMatrixPosition(p.target.matrixWorld), v.direction.sub(s), v.direction.transformDirection(h), n++
                            } else if (p.isSpotLight) {
                                var m = a.spot[i];
                                m.position.setFromMatrixPosition(p.matrixWorld), m.position.applyMatrix4(h), m.direction.setFromMatrixPosition(p.matrixWorld), s.setFromMatrixPosition(p.target.matrixWorld), m.direction.sub(s), m.direction.transformDirection(h), i++
                            } else if (p.isRectAreaLight) {
                                var g = a.rectArea[o];
                                g.position.setFromMatrixPosition(p.matrixWorld), g.position.applyMatrix4(h), l.identity(), u.copy(p.matrixWorld), u.premultiply(h), l.extractRotation(u), g.halfWidth.set(.5 * p.width, 0, 0), g.halfHeight.set(0, .5 * p.height, 0), g.halfWidth.applyMatrix4(l), g.halfHeight.applyMatrix4(l), o++
                            } else if (p.isPointLight) {
                                var y = a.point[r];
                                y.position.setFromMatrixPosition(p.matrixWorld), y.position.applyMatrix4(h), r++
                            } else if (p.isHemisphereLight) {
                                var _ = a.hemi[c];
                                _.direction.setFromMatrixPosition(p.matrixWorld), _.direction.transformDirection(h), _.direction.normalize(), c++
                            }
                        }
                    },
                    state: a
                }
            }

            function zs(e, t) {
                var n = new Bs(e, t),
                    r = [],
                    i = [];
                return {
                    init: function() {
                        r.length = 0, i.length = 0
                    },
                    state: {
                        lightsArray: r,
                        shadowsArray: i,
                        lights: n
                    },
                    setupLights: function() {
                        n.setup(r)
                    },
                    setupLightsView: function(e) {
                        n.setupView(r, e)
                    },
                    pushLight: function(e) {
                        r.push(e)
                    },
                    pushShadow: function(e) {
                        i.push(e)
                    }
                }
            }

            function Gs(e, t) {
                var n = new WeakMap;
                return {
                    get: function(r) {
                        var i, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return !1 === n.has(r) ? (i = new zs(e, t), n.set(r, [i])) : a >= n.get(r).length ? (i = new zs(e, t), n.get(r).push(i)) : i = n.get(r)[a], i
                    },
                    dispose: function() {
                        n = new WeakMap
                    }
                }
            }
            var Hs = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshDepthMaterial", r.depthPacking = 3200, r.map = null, r.alphaMap = null, r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.depthPacking = e.depthPacking, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
                    }
                }]), n
            }(Zr);
            Hs.prototype.isMeshDepthMaterial = !0;
            var Vs = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshDistanceMaterial", r.referencePosition = new On, r.nearDistance = 1, r.farDistance = 1e3, r.map = null, r.alphaMap = null, r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.fog = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this
                    }
                }]), n
            }(Zr);
            Vs.prototype.isMeshDistanceMaterial = !0;
            var Ws = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",
                js = "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";

            function qs(e, t, n) {
                var r = new ha,
                    i = new Tn,
                    a = new Tn,
                    s = new Rn,
                    u = new Hs({
                        depthPacking: tn
                    }),
                    l = new Vs,
                    c = {},
                    h = n.maxTextureSize,
                    d = {
                        0: M,
                        1: T,
                        2: S
                    },
                    f = new Qi({
                        defines: {
                            SAMPLE_RATE: 2 / 8,
                            HALF_SAMPLE_RATE: 1 / 8
                        },
                        uniforms: {
                            shadow_pass: {
                                value: null
                            },
                            resolution: {
                                value: new Tn
                            },
                            radius: {
                                value: 4
                            }
                        },
                        vertexShader: js,
                        fragmentShader: Ws
                    }),
                    p = f.clone();
                p.defines.HORIZONTAL_PASS = 1;
                var v = new Li;
                v.setAttribute("position", new si(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]), 3));
                var m = new qi(v, f),
                    g = this;

                function y(n, r) {
                    var i = t.update(m);
                    f.uniforms.shadow_pass.value = n.map.texture, f.uniforms.resolution.value = n.mapSize, f.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(r, null, i, f, m, null), p.uniforms.shadow_pass.value = n.mapPass.texture, p.uniforms.resolution.value = n.mapSize, p.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(r, null, i, p, m, null)
                }

                function _(t, n, r, i, a, o, s) {
                    var h = null,
                        f = !0 === i.isPointLight ? t.customDistanceMaterial : t.customDepthMaterial;
                    if (h = void 0 !== f ? f : !0 === i.isPointLight ? l : u, e.localClippingEnabled && !0 === r.clipShadows && 0 !== r.clippingPlanes.length) {
                        var p = h.uuid,
                            v = r.uuid,
                            m = c[p];
                        void 0 === m && (m = {}, c[p] = m);
                        var g = m[v];
                        void 0 === g && (g = h.clone(), m[v] = g), h = g
                    }
                    return h.visible = r.visible, h.wireframe = r.wireframe, h.side = s === x ? null !== r.shadowSide ? r.shadowSide : r.side : null !== r.shadowSide ? r.shadowSide : d[r.side], h.clipShadows = r.clipShadows, h.clippingPlanes = r.clippingPlanes, h.clipIntersection = r.clipIntersection, h.wireframeLinewidth = r.wireframeLinewidth, h.linewidth = r.linewidth, !0 === i.isPointLight && !0 === h.isMeshDistanceMaterial && (h.referencePosition.setFromMatrixPosition(i.matrixWorld), h.nearDistance = a, h.farDistance = o), h
                }

                function b(n, i, a, o, s) {
                    if (!1 !== n.visible) {
                        if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && s === x) && (!n.frustumCulled || r.intersectsObject(n))) {
                            n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse, n.matrixWorld);
                            var u = t.update(n),
                                l = n.material;
                            if (Array.isArray(l))
                                for (var c = u.groups, h = 0, d = c.length; h < d; h++) {
                                    var f = c[h],
                                        p = l[f.materialIndex];
                                    if (p && p.visible) {
                                        var v = _(n, 0, p, o, a.near, a.far, s);
                                        e.renderBufferDirect(a, null, u, v, n, f)
                                    }
                                } else if (l.visible) {
                                    var m = _(n, 0, l, o, a.near, a.far, s);
                                    e.renderBufferDirect(a, null, u, m, n, null)
                                }
                        }
                        for (var g = n.children, y = 0, w = g.length; y < w; y++) b(g[y], i, a, o, s)
                    }
                }
                this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = o, this.render = function(t, n, o) {
                    if (!1 !== g.enabled && (!1 !== g.autoUpdate || !1 !== g.needsUpdate) && 0 !== t.length) {
                        var u = e.getRenderTarget(),
                            l = e.getActiveCubeFace(),
                            c = e.getActiveMipmapLevel(),
                            d = e.state;
                        d.setBlending(E), d.buffers.color.setClear(1, 1, 1, 1), d.buffers.depth.setTest(!0), d.setScissorTest(!1);
                        for (var f = 0, p = t.length; f < p; f++) {
                            var v = t[f],
                                m = v.shadow;
                            if (void 0 !== m) {
                                if (!1 !== m.autoUpdate || !1 !== m.needsUpdate) {
                                    i.copy(m.mapSize);
                                    var _ = m.getFrameExtents();
                                    if (i.multiply(_), a.copy(m.mapSize), (i.x > h || i.y > h) && (i.x > h && (a.x = Math.floor(h / _.x), i.x = a.x * _.x, m.mapSize.x = a.x), i.y > h && (a.y = Math.floor(h / _.y), i.y = a.y * _.y, m.mapSize.y = a.y)), null === m.map && !m.isPointLightShadow && this.type === x) {
                                        var w = {
                                            minFilter: Me,
                                            magFilter: Me,
                                            format: Ge
                                        };
                                        m.map = new kn(i.x, i.y, w), m.map.texture.name = v.name + ".shadowMap", m.mapPass = new kn(i.x, i.y, w), m.camera.updateProjectionMatrix()
                                    }
                                    if (null === m.map) {
                                        var T = {
                                            minFilter: be,
                                            magFilter: be,
                                            format: Ge
                                        };
                                        m.map = new kn(i.x, i.y, T), m.map.texture.name = v.name + ".shadowMap", m.camera.updateProjectionMatrix()
                                    }
                                    e.setRenderTarget(m.map), e.clear();
                                    for (var M = m.getViewportCount(), S = 0; S < M; S++) {
                                        var A = m.getViewport(S);
                                        s.set(a.x * A.x, a.y * A.y, a.x * A.z, a.y * A.w), d.viewport(s), m.updateMatrices(v, S), r = m.getFrustum(), b(n, o, m.camera, v, this.type)
                                    }
                                    m.isPointLightShadow || this.type !== x || y(m, o), m.needsUpdate = !1
                                }
                            } else console.warn("THREE.WebGLShadowMap:", v, "has no shadow.")
                        }
                        g.needsUpdate = !1, e.setRenderTarget(u, l, c)
                    }
                }
            }

            function Xs(e, t, n) {
                var o, s, u = n.isWebGL2,
                    l = new function() {
                        var t = !1,
                            n = new Rn,
                            r = null,
                            i = new Rn(0, 0, 0, 0);
                        return {
                            setMask: function(n) {
                                r === n || t || (e.colorMask(n, n, n, n), r = n)
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t, r, a, o, s) {
                                !0 === s && (t *= o, r *= o, a *= o), n.set(t, r, a, o), !1 === i.equals(n) && (e.clearColor(t, r, a, o), i.copy(n))
                            },
                            reset: function() {
                                t = !1, r = null, i.set(-1, 0, 0, 0)
                            }
                        }
                    },
                    h = new function() {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null;
                        return {
                            setTest: function(t) {
                                t ? be(e.DEPTH_TEST) : we(e.DEPTH_TEST)
                            },
                            setMask: function(r) {
                                n === r || t || (e.depthMask(r), n = r)
                            },
                            setFunc: function(t) {
                                if (r !== t) {
                                    if (t) switch (t) {
                                        case Y:
                                            e.depthFunc(e.NEVER);
                                            break;
                                        case K:
                                            e.depthFunc(e.ALWAYS);
                                            break;
                                        case Z:
                                            e.depthFunc(e.LESS);
                                            break;
                                        case J:
                                            e.depthFunc(e.LEQUAL);
                                            break;
                                        case Q:
                                            e.depthFunc(e.EQUAL);
                                            break;
                                        case $:
                                            e.depthFunc(e.GEQUAL);
                                            break;
                                        case ee:
                                            e.depthFunc(e.GREATER);
                                            break;
                                        case te:
                                            e.depthFunc(e.NOTEQUAL);
                                            break;
                                        default:
                                            e.depthFunc(e.LEQUAL)
                                    } else e.depthFunc(e.LEQUAL);
                                    r = t
                                }
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t) {
                                i !== t && (e.clearDepth(t), i = t)
                            },
                            reset: function() {
                                t = !1, n = null, r = null, i = null
                            }
                        }
                    },
                    d = new function() {
                        var t = !1,
                            n = null,
                            r = null,
                            i = null,
                            a = null,
                            o = null,
                            s = null,
                            u = null,
                            l = null;
                        return {
                            setTest: function(n) {
                                t || (n ? be(e.STENCIL_TEST) : we(e.STENCIL_TEST))
                            },
                            setMask: function(r) {
                                n === r || t || (e.stencilMask(r), n = r)
                            },
                            setFunc: function(t, n, o) {
                                r === t && i === n && a === o || (e.stencilFunc(t, n, o), r = t, i = n, a = o)
                            },
                            setOp: function(t, n, r) {
                                o === t && s === n && u === r || (e.stencilOp(t, n, r), o = t, s = n, u = r)
                            },
                            setLocked: function(e) {
                                t = e
                            },
                            setClear: function(t) {
                                l !== t && (e.clearStencil(t), l = t)
                            },
                            reset: function() {
                                t = !1, n = null, r = null, i = null, a = null, o = null, s = null, u = null, l = null
                            }
                        }
                    },
                    f = {},
                    p = null,
                    v = {},
                    m = null,
                    g = !1,
                    y = null,
                    _ = null,
                    x = null,
                    b = null,
                    w = null,
                    T = null,
                    ne = null,
                    re = !1,
                    ie = null,
                    ae = null,
                    oe = null,
                    se = null,
                    ue = null,
                    le = e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS),
                    ce = !1,
                    he = 0,
                    de = e.getParameter(e.VERSION); - 1 !== de.indexOf("WebGL") ? (he = parseFloat(/^WebGL (\d)/.exec(de)[1]), ce = he >= 1) : -1 !== de.indexOf("OpenGL ES") && (he = parseFloat(/^OpenGL ES (\d)/.exec(de)[1]), ce = he >= 2);
                var fe = null,
                    pe = {},
                    ve = e.getParameter(e.SCISSOR_BOX),
                    me = e.getParameter(e.VIEWPORT),
                    ge = (new Rn).fromArray(ve),
                    ye = (new Rn).fromArray(me);

                function _e(t, n, r) {
                    var i = new Uint8Array(4),
                        a = e.createTexture();
                    e.bindTexture(t, a), e.texParameteri(t, e.TEXTURE_MIN_FILTER, e.NEAREST), e.texParameteri(t, e.TEXTURE_MAG_FILTER, e.NEAREST);
                    for (var o = 0; o < r; o++) e.texImage2D(n + o, 0, e.RGBA, 1, 1, 0, e.RGBA, e.UNSIGNED_BYTE, i);
                    return a
                }
                var xe = {};

                function be(t) {
                    !0 !== f[t] && (e.enable(t), f[t] = !0)
                }

                function we(t) {
                    !1 !== f[t] && (e.disable(t), f[t] = !1)
                }
                xe[e.TEXTURE_2D] = _e(e.TEXTURE_2D, e.TEXTURE_2D, 1), xe[e.TEXTURE_CUBE_MAP] = _e(e.TEXTURE_CUBE_MAP, e.TEXTURE_CUBE_MAP_POSITIVE_X, 6), l.setClear(0, 0, 0, 1), h.setClear(1), d.setClear(0), be(e.DEPTH_TEST), h.setFunc(J), Ae(!1), Le(i), be(e.CULL_FACE), Ee(E);
                var Te = (o = {}, (0, c.default)(o, P, e.FUNC_ADD), (0, c.default)(o, D, e.FUNC_SUBTRACT), (0, c.default)(o, I, e.FUNC_REVERSE_SUBTRACT), o);
                if (u) Te[O] = e.MIN, Te[N] = e.MAX;
                else {
                    var Me = t.get("EXT_blend_minmax");
                    null !== Me && (Te[O] = Me.MIN_EXT, Te[N] = Me.MAX_EXT)
                }
                var Se = (s = {}, (0, c.default)(s, F, e.ZERO), (0, c.default)(s, U, e.ONE), (0, c.default)(s, B, e.SRC_COLOR), (0, c.default)(s, G, e.SRC_ALPHA), (0, c.default)(s, X, e.SRC_ALPHA_SATURATE), (0, c.default)(s, j, e.DST_COLOR), (0, c.default)(s, V, e.DST_ALPHA), (0, c.default)(s, z, e.ONE_MINUS_SRC_COLOR), (0, c.default)(s, H, e.ONE_MINUS_SRC_ALPHA), (0, c.default)(s, q, e.ONE_MINUS_DST_COLOR), (0, c.default)(s, W, e.ONE_MINUS_DST_ALPHA), s);

                function Ee(t, n, r, i, a, o, s, u) {
                    if (t !== E) {
                        if (!1 === g && (be(e.BLEND), g = !0), t === k) a = a || n, o = o || r, s = s || i, n === _ && a === w || (e.blendEquationSeparate(Te[n], Te[a]), _ = n, w = a), r === x && i === b && o === T && s === ne || (e.blendFuncSeparate(Se[r], Se[i], Se[o], Se[s]), x = r, b = i, T = o, ne = s), y = t, re = null;
                        else if (t !== y || u !== re) {
                            if (_ === P && w === P || (e.blendEquation(e.FUNC_ADD), _ = P, w = P), u) switch (t) {
                                case A:
                                    e.blendFuncSeparate(e.ONE, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
                                    break;
                                case L:
                                    e.blendFunc(e.ONE, e.ONE);
                                    break;
                                case C:
                                    e.blendFuncSeparate(e.ZERO, e.ZERO, e.ONE_MINUS_SRC_COLOR, e.ONE_MINUS_SRC_ALPHA);
                                    break;
                                case R:
                                    e.blendFuncSeparate(e.ZERO, e.SRC_COLOR, e.ZERO, e.SRC_ALPHA);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            } else switch (t) {
                                case A:
                                    e.blendFuncSeparate(e.SRC_ALPHA, e.ONE_MINUS_SRC_ALPHA, e.ONE, e.ONE_MINUS_SRC_ALPHA);
                                    break;
                                case L:
                                    e.blendFunc(e.SRC_ALPHA, e.ONE);
                                    break;
                                case C:
                                    e.blendFunc(e.ZERO, e.ONE_MINUS_SRC_COLOR);
                                    break;
                                case R:
                                    e.blendFunc(e.ZERO, e.SRC_COLOR);
                                    break;
                                default:
                                    console.error("THREE.WebGLState: Invalid blending: ", t)
                            }
                            x = null, b = null, T = null, ne = null, y = t, re = u
                        }
                    } else !0 === g && (we(e.BLEND), g = !1)
                }

                function Ae(t) {
                    ie !== t && (t ? e.frontFace(e.CW) : e.frontFace(e.CCW), ie = t)
                }

                function Le(t) {
                    t !== r ? (be(e.CULL_FACE), t !== ae && (t === i ? e.cullFace(e.BACK) : t === a ? e.cullFace(e.FRONT) : e.cullFace(e.FRONT_AND_BACK))) : we(e.CULL_FACE), ae = t
                }

                function Ce(t, n, r) {
                    t ? (be(e.POLYGON_OFFSET_FILL), se === n && ue === r || (e.polygonOffset(n, r), se = n, ue = r)) : we(e.POLYGON_OFFSET_FILL)
                }

                function Re(t) {
                    void 0 === t && (t = e.TEXTURE0 + le - 1), fe !== t && (e.activeTexture(t), fe = t)
                }
                return {
                    buffers: {
                        color: l,
                        depth: h,
                        stencil: d
                    },
                    enable: be,
                    disable: we,
                    bindFramebuffer: function(t, n) {
                        return null === n && null !== p && (n = p), v[t] !== n && (e.bindFramebuffer(t, n), v[t] = n, u && (t === e.DRAW_FRAMEBUFFER && (v[e.FRAMEBUFFER] = n), t === e.FRAMEBUFFER && (v[e.DRAW_FRAMEBUFFER] = n)), !0)
                    },
                    bindXRFramebuffer: function(t) {
                        t !== p && (e.bindFramebuffer(e.FRAMEBUFFER, t), p = t)
                    },
                    useProgram: function(t) {
                        return m !== t && (e.useProgram(t), m = t, !0)
                    },
                    setBlending: Ee,
                    setMaterial: function(t, n) {
                        t.side === S ? we(e.CULL_FACE) : be(e.CULL_FACE);
                        var r = t.side === M;
                        n && (r = !r), Ae(r), t.blending === A && !1 === t.transparent ? Ee(E) : Ee(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha), h.setFunc(t.depthFunc), h.setTest(t.depthTest), h.setMask(t.depthWrite), l.setMask(t.colorWrite);
                        var i = t.stencilWrite;
                        d.setTest(i), i && (d.setMask(t.stencilWriteMask), d.setFunc(t.stencilFunc, t.stencilRef, t.stencilFuncMask), d.setOp(t.stencilFail, t.stencilZFail, t.stencilZPass)), Ce(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits), !0 === t.alphaToCoverage ? be(e.SAMPLE_ALPHA_TO_COVERAGE) : we(e.SAMPLE_ALPHA_TO_COVERAGE)
                    },
                    setFlipSided: Ae,
                    setCullFace: Le,
                    setLineWidth: function(t) {
                        t !== oe && (ce && e.lineWidth(t), oe = t)
                    },
                    setPolygonOffset: Ce,
                    setScissorTest: function(t) {
                        t ? be(e.SCISSOR_TEST) : we(e.SCISSOR_TEST)
                    },
                    activeTexture: Re,
                    bindTexture: function(t, n) {
                        null === fe && Re();
                        var r = pe[fe];
                        void 0 === r && (r = {
                            type: void 0,
                            texture: void 0
                        }, pe[fe] = r), r.type === t && r.texture === n || (e.bindTexture(t, n || xe[t]), r.type = t, r.texture = n)
                    },
                    unbindTexture: function() {
                        var t = pe[fe];
                        void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null), t.type = void 0, t.texture = void 0)
                    },
                    compressedTexImage2D: function() {
                        try {
                            e.compressedTexImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage2D: function() {
                        try {
                            e.texImage2D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    texImage3D: function() {
                        try {
                            e.texImage3D.apply(e, arguments)
                        } catch (e) {
                            console.error("THREE.WebGLState:", e)
                        }
                    },
                    scissor: function(t) {
                        !1 === ge.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), ge.copy(t))
                    },
                    viewport: function(t) {
                        !1 === ye.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), ye.copy(t))
                    },
                    reset: function() {
                        e.disable(e.BLEND), e.disable(e.CULL_FACE), e.disable(e.DEPTH_TEST), e.disable(e.POLYGON_OFFSET_FILL), e.disable(e.SCISSOR_TEST), e.disable(e.STENCIL_TEST), e.disable(e.SAMPLE_ALPHA_TO_COVERAGE), e.blendEquation(e.FUNC_ADD), e.blendFunc(e.ONE, e.ZERO), e.blendFuncSeparate(e.ONE, e.ZERO, e.ONE, e.ZERO), e.colorMask(!0, !0, !0, !0), e.clearColor(0, 0, 0, 0), e.depthMask(!0), e.depthFunc(e.LESS), e.clearDepth(1), e.stencilMask(4294967295), e.stencilFunc(e.ALWAYS, 0, 4294967295), e.stencilOp(e.KEEP, e.KEEP, e.KEEP), e.clearStencil(0), e.cullFace(e.BACK), e.frontFace(e.CCW), e.polygonOffset(0, 0), e.activeTexture(e.TEXTURE0), e.bindFramebuffer(e.FRAMEBUFFER, null), !0 === u && (e.bindFramebuffer(e.DRAW_FRAMEBUFFER, null), e.bindFramebuffer(e.READ_FRAMEBUFFER, null)), e.useProgram(null), e.lineWidth(1), e.scissor(0, 0, e.canvas.width, e.canvas.height), e.viewport(0, 0, e.canvas.width, e.canvas.height), f = {}, fe = null, pe = {}, p = null, v = {}, m = null, g = !1, y = null, _ = null, x = null, b = null, w = null, T = null, ne = null, re = !1, ie = null, ae = null, oe = null, se = null, ue = null, ge.set(0, 0, e.canvas.width, e.canvas.height), ye.set(0, 0, e.canvas.width, e.canvas.height), l.reset(), h.reset(), d.reset()
                    }
                }
            }

            function Ys(e, t, n, r, i, a, o) {
                var s, u, l, h = i.isWebGL2,
                    d = i.maxTextures,
                    f = i.maxCubemapSize,
                    p = i.maxTextureSize,
                    v = i.maxSamples,
                    m = new WeakMap,
                    g = !1;
                try {
                    g = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d")
                } catch (e) {}

                function y(e, t) {
                    return g ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                }

                function _(e, t, n, r) {
                    var i = 1;
                    if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)), i < 1 || !0 === t) {
                        if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap) {
                            var a = t ? bn : Math.floor,
                                o = a(i * e.width),
                                s = a(i * e.height);
                            void 0 === l && (l = y(o, s));
                            var u = n ? y(o, s) : l;
                            return u.width = o, u.height = s, u.getContext("2d").drawImage(e, 0, 0, o, s), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + o + "x" + s + ")."), u
                        }
                        return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e
                    }
                    return e
                }

                function x(e) {
                    return _n(e.width) && _n(e.height)
                }

                function b(e, t) {
                    return e.generateMipmaps && t && e.minFilter !== be && e.minFilter !== Me
                }

                function w(t, n, i, a) {
                    var o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1;
                    e.generateMipmap(t), r.get(n).__maxMipLevel = Math.log2(Math.max(i, a, o))
                }

                function T(n, r, i) {
                    if (!1 === h) return r;
                    if (null !== n) {
                        if (void 0 !== e[n]) return e[n];
                        console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
                    }
                    var a = r;
                    return r === e.RED && (i === e.FLOAT && (a = e.R32F), i === e.HALF_FLOAT && (a = e.R16F), i === e.UNSIGNED_BYTE && (a = e.R8)), r === e.RGB && (i === e.FLOAT && (a = e.RGB32F), i === e.HALF_FLOAT && (a = e.RGB16F), i === e.UNSIGNED_BYTE && (a = e.RGB8)), r === e.RGBA && (i === e.FLOAT && (a = e.RGBA32F), i === e.HALF_FLOAT && (a = e.RGBA16F), i === e.UNSIGNED_BYTE && (a = e.RGBA8)), a !== e.R16F && a !== e.R32F && a !== e.RGBA16F && a !== e.RGBA32F || t.get("EXT_color_buffer_float"), a
                }

                function M(t) {
                    return t === be || t === we || t === Te ? e.NEAREST : e.LINEAR
                }

                function S(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", S),
                        function(t) {
                            var n = r.get(t);
                            void 0 !== n.__webglInit && (e.deleteTexture(n.__webglTexture), r.remove(t))
                        }(n), n.isVideoTexture && m.delete(n), o.memory.textures--
                }

                function E(t) {
                    var n = t.target;
                    n.removeEventListener("dispose", E),
                        function(t) {
                            var n = t.texture,
                                i = r.get(t),
                                a = r.get(n);
                            if (t) {
                                if (void 0 !== a.__webglTexture && (e.deleteTexture(a.__webglTexture), o.memory.textures--), t.depthTexture && t.depthTexture.dispose(), t.isWebGLCubeRenderTarget)
                                    for (var s = 0; s < 6; s++) e.deleteFramebuffer(i.__webglFramebuffer[s]), i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer[s]);
                                else e.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && e.deleteRenderbuffer(i.__webglDepthbuffer), i.__webglMultisampledFramebuffer && e.deleteFramebuffer(i.__webglMultisampledFramebuffer), i.__webglColorRenderbuffer && e.deleteRenderbuffer(i.__webglColorRenderbuffer), i.__webglDepthRenderbuffer && e.deleteRenderbuffer(i.__webglDepthRenderbuffer);
                                if (t.isWebGLMultipleRenderTargets)
                                    for (var u = 0, l = n.length; u < l; u++) {
                                        var c = r.get(n[u]);
                                        c.__webglTexture && (e.deleteTexture(c.__webglTexture), o.memory.textures--), r.remove(n[u])
                                    }
                                r.remove(n), r.remove(t)
                            }
                        }(n)
                }
                var A = 0;

                function L(t, i) {
                    var a = r.get(t);
                    if (t.isVideoTexture && function(e) {
                            var t = o.render.frame;
                            m.get(e) !== t && (m.set(e, t), e.update())
                        }(t), t.version > 0 && a.__version !== t.version) {
                        var s = t.image;
                        if (void 0 === s) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
                        else {
                            if (!1 !== s.complete) return void I(a, t, i);
                            console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
                        }
                    }
                    n.activeTexture(e.TEXTURE0 + i), n.bindTexture(e.TEXTURE_2D, a.__webglTexture)
                }

                function C(t, i) {
                    var o = r.get(t);
                    t.version > 0 && o.__version !== t.version ? function(t, r, i) {
                        if (6 === r.image.length) {
                            D(t, r), n.activeTexture(e.TEXTURE0 + i), n.bindTexture(e.TEXTURE_CUBE_MAP, t.__webglTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, r.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha), e.pixelStorei(e.UNPACK_ALIGNMENT, r.unpackAlignment), e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, e.NONE);
                            for (var o = r && (r.isCompressedTexture || r.image[0].isCompressedTexture), s = r.image[0] && r.image[0].isDataTexture, u = [], l = 0; l < 6; l++) u[l] = o || s ? s ? r.image[l].image : r.image[l] : _(r.image[l], !1, !0, f);
                            var c, d = u[0],
                                p = x(d) || h,
                                v = a.convert(r.format),
                                m = a.convert(r.type),
                                g = T(r.internalFormat, v, m);
                            if (P(e.TEXTURE_CUBE_MAP, r, p), o) {
                                for (var y = 0; y < 6; y++) {
                                    c = u[y].mipmaps;
                                    for (var M = 0; M < c.length; M++) {
                                        var S = c[M];
                                        r.format !== Ge && r.format !== ze ? null !== v ? n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + y, M, g, S.width, S.height, 0, S.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + y, M, g, S.width, S.height, 0, v, m, S.data)
                                    }
                                }
                                t.__maxMipLevel = c.length - 1
                            } else {
                                c = r.mipmaps;
                                for (var E = 0; E < 6; E++)
                                    if (s) {
                                        n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + E, 0, g, u[E].width, u[E].height, 0, v, m, u[E].data);
                                        for (var A = 0; A < c.length; A++) {
                                            var L = c[A].image[E].image;
                                            n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + E, A + 1, g, L.width, L.height, 0, v, m, L.data)
                                        }
                                    } else {
                                        n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + E, 0, g, v, m, u[E]);
                                        for (var C = 0; C < c.length; C++) {
                                            var R = c[C];
                                            n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X + E, C + 1, g, v, m, R.image[E])
                                        }
                                    }
                                t.__maxMipLevel = c.length
                            }
                            b(r, p) && w(e.TEXTURE_CUBE_MAP, r, d.width, d.height), t.__version = r.version, r.onUpdate && r.onUpdate(r)
                        }
                    }(o, t, i) : (n.activeTexture(e.TEXTURE0 + i), n.bindTexture(e.TEXTURE_CUBE_MAP, o.__webglTexture))
                }
                var R = (s = {}, (0, c.default)(s, ye, e.REPEAT), (0, c.default)(s, _e, e.CLAMP_TO_EDGE), (0, c.default)(s, xe, e.MIRRORED_REPEAT), s),
                    k = (u = {}, (0, c.default)(u, be, e.NEAREST), (0, c.default)(u, we, e.NEAREST_MIPMAP_NEAREST), (0, c.default)(u, Te, e.NEAREST_MIPMAP_LINEAR), (0, c.default)(u, Me, e.LINEAR), (0, c.default)(u, Se, e.LINEAR_MIPMAP_NEAREST), (0, c.default)(u, Ee, e.LINEAR_MIPMAP_LINEAR), u);

                function P(n, a, o) {
                    if (o ? (e.texParameteri(n, e.TEXTURE_WRAP_S, R[a.wrapS]), e.texParameteri(n, e.TEXTURE_WRAP_T, R[a.wrapT]), n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY || e.texParameteri(n, e.TEXTURE_WRAP_R, R[a.wrapR]), e.texParameteri(n, e.TEXTURE_MAG_FILTER, k[a.magFilter]), e.texParameteri(n, e.TEXTURE_MIN_FILTER, k[a.minFilter])) : (e.texParameteri(n, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(n, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), n !== e.TEXTURE_3D && n !== e.TEXTURE_2D_ARRAY || e.texParameteri(n, e.TEXTURE_WRAP_R, e.CLAMP_TO_EDGE), a.wrapS === _e && a.wrapT === _e || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, e.TEXTURE_MAG_FILTER, M(a.magFilter)), e.texParameteri(n, e.TEXTURE_MIN_FILTER, M(a.minFilter)), a.minFilter !== be && a.minFilter !== Me && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")), !0 === t.has("EXT_texture_filter_anisotropic")) {
                        var s = t.get("EXT_texture_filter_anisotropic");
                        if (a.type === De && !1 === t.has("OES_texture_float_linear")) return;
                        if (!1 === h && a.type === Ie && !1 === t.has("OES_texture_half_float_linear")) return;
                        (a.anisotropy > 1 || r.get(a).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, i.getMaxAnisotropy())), r.get(a).__currentAnisotropy = a.anisotropy)
                    }
                }

                function D(t, n) {
                    void 0 === t.__webglInit && (t.__webglInit = !0, n.addEventListener("dispose", S), t.__webglTexture = e.createTexture(), o.memory.textures++)
                }

                function I(t, r, i) {
                    var o = e.TEXTURE_2D;
                    r.isDataTexture2DArray && (o = e.TEXTURE_2D_ARRAY), r.isDataTexture3D && (o = e.TEXTURE_3D), D(t, r), n.activeTexture(e.TEXTURE0 + i), n.bindTexture(o, t.__webglTexture), e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, r.flipY), e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha), e.pixelStorei(e.UNPACK_ALIGNMENT, r.unpackAlignment), e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL, e.NONE);
                    var s, u = function(e) {
                            return !h && (e.wrapS !== _e || e.wrapT !== _e || e.minFilter !== be && e.minFilter !== Me)
                        }(r) && !1 === x(r.image),
                        l = _(r.image, u, !1, p),
                        c = x(l) || h,
                        d = a.convert(r.format),
                        f = a.convert(r.type),
                        v = T(r.internalFormat, d, f);
                    P(o, r, c);
                    var m = r.mipmaps;
                    if (r.isDepthTexture) v = e.DEPTH_COMPONENT, h ? v = r.type === De ? e.DEPTH_COMPONENT32F : r.type === Pe ? e.DEPTH_COMPONENT24 : r.type === Ue ? e.DEPTH24_STENCIL8 : e.DEPTH_COMPONENT16 : r.type === De && console.error("WebGLRenderer: Floating point depth texture requires WebGL2."), r.format === je && v === e.DEPTH_COMPONENT && r.type !== Re && r.type !== Pe && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), r.type = Re, f = a.convert(r.type)), r.format === qe && v === e.DEPTH_COMPONENT && (v = e.DEPTH_STENCIL, r.type !== Ue && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), r.type = Ue, f = a.convert(r.type))), n.texImage2D(e.TEXTURE_2D, 0, v, l.width, l.height, 0, d, f, null);
                    else if (r.isDataTexture)
                        if (m.length > 0 && c) {
                            for (var g = 0, y = m.length; g < y; g++) s = m[g], n.texImage2D(e.TEXTURE_2D, g, v, s.width, s.height, 0, d, f, s.data);
                            r.generateMipmaps = !1, t.__maxMipLevel = m.length - 1
                        } else n.texImage2D(e.TEXTURE_2D, 0, v, l.width, l.height, 0, d, f, l.data), t.__maxMipLevel = 0;
                    else if (r.isCompressedTexture) {
                        for (var M = 0, S = m.length; M < S; M++) s = m[M], r.format !== Ge && r.format !== ze ? null !== d ? n.compressedTexImage2D(e.TEXTURE_2D, M, v, s.width, s.height, 0, s.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(e.TEXTURE_2D, M, v, s.width, s.height, 0, d, f, s.data);
                        t.__maxMipLevel = m.length - 1
                    } else if (r.isDataTexture2DArray) n.texImage3D(e.TEXTURE_2D_ARRAY, 0, v, l.width, l.height, l.depth, 0, d, f, l.data), t.__maxMipLevel = 0;
                    else if (r.isDataTexture3D) n.texImage3D(e.TEXTURE_3D, 0, v, l.width, l.height, l.depth, 0, d, f, l.data), t.__maxMipLevel = 0;
                    else if (m.length > 0 && c) {
                        for (var E = 0, A = m.length; E < A; E++) s = m[E], n.texImage2D(e.TEXTURE_2D, E, v, d, f, s);
                        r.generateMipmaps = !1, t.__maxMipLevel = m.length - 1
                    } else n.texImage2D(e.TEXTURE_2D, 0, v, d, f, l), t.__maxMipLevel = 0;
                    b(r, c) && w(o, r, l.width, l.height), t.__version = r.version, r.onUpdate && r.onUpdate(r)
                }

                function O(t, i, o, s, u) {
                    var l = a.convert(o.format),
                        c = a.convert(o.type),
                        h = T(o.internalFormat, l, c);
                    u === e.TEXTURE_3D || u === e.TEXTURE_2D_ARRAY ? n.texImage3D(u, 0, h, i.width, i.height, i.depth, 0, l, c, null) : n.texImage2D(u, 0, h, i.width, i.height, 0, l, c, null), n.bindFramebuffer(e.FRAMEBUFFER, t), e.framebufferTexture2D(e.FRAMEBUFFER, s, u, r.get(o).__webglTexture, 0), n.bindFramebuffer(e.FRAMEBUFFER, null)
                }

                function N(t, n, r) {
                    if (e.bindRenderbuffer(e.RENDERBUFFER, t), n.depthBuffer && !n.stencilBuffer) {
                        var i = e.DEPTH_COMPONENT16;
                        if (r) {
                            var o = n.depthTexture;
                            o && o.isDepthTexture && (o.type === De ? i = e.DEPTH_COMPONENT32F : o.type === Pe && (i = e.DEPTH_COMPONENT24));
                            var s = U(n);
                            e.renderbufferStorageMultisample(e.RENDERBUFFER, s, i, n.width, n.height)
                        } else e.renderbufferStorage(e.RENDERBUFFER, i, n.width, n.height);
                        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.RENDERBUFFER, t)
                    } else if (n.depthBuffer && n.stencilBuffer) {
                        if (r) {
                            var u = U(n);
                            e.renderbufferStorageMultisample(e.RENDERBUFFER, u, e.DEPTH24_STENCIL8, n.width, n.height)
                        } else e.renderbufferStorage(e.RENDERBUFFER, e.DEPTH_STENCIL, n.width, n.height);
                        e.framebufferRenderbuffer(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.RENDERBUFFER, t)
                    } else {
                        var l = !0 === n.isWebGLMultipleRenderTargets ? n.texture[0] : n.texture,
                            c = a.convert(l.format),
                            h = a.convert(l.type),
                            d = T(l.internalFormat, c, h);
                        if (r) {
                            var f = U(n);
                            e.renderbufferStorageMultisample(e.RENDERBUFFER, f, d, n.width, n.height)
                        } else e.renderbufferStorage(e.RENDERBUFFER, d, n.width, n.height)
                    }
                    e.bindRenderbuffer(e.RENDERBUFFER, null)
                }

                function F(t) {
                    var i = r.get(t),
                        a = !0 === t.isWebGLCubeRenderTarget;
                    if (t.depthTexture) {
                        if (a) throw new Error("target.depthTexture not supported in Cube render targets");
                        ! function(t, i) {
                            if (i && i.isWebGLCubeRenderTarget) throw new Error("Depth Texture with cube render targets is not supported");
                            if (n.bindFramebuffer(e.FRAMEBUFFER, t), !i.depthTexture || !i.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                            r.get(i.depthTexture).__webglTexture && i.depthTexture.image.width === i.width && i.depthTexture.image.height === i.height || (i.depthTexture.image.width = i.width, i.depthTexture.image.height = i.height, i.depthTexture.needsUpdate = !0), L(i.depthTexture, 0);
                            var a = r.get(i.depthTexture).__webglTexture;
                            if (i.depthTexture.format === je) e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_ATTACHMENT, e.TEXTURE_2D, a, 0);
                            else {
                                if (i.depthTexture.format !== qe) throw new Error("Unknown depthTexture format");
                                e.framebufferTexture2D(e.FRAMEBUFFER, e.DEPTH_STENCIL_ATTACHMENT, e.TEXTURE_2D, a, 0)
                            }
                        }(i.__webglFramebuffer, t)
                    } else if (a) {
                        i.__webglDepthbuffer = [];
                        for (var o = 0; o < 6; o++) n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer[o]), i.__webglDepthbuffer[o] = e.createRenderbuffer(), N(i.__webglDepthbuffer[o], t, !1)
                    } else n.bindFramebuffer(e.FRAMEBUFFER, i.__webglFramebuffer), i.__webglDepthbuffer = e.createRenderbuffer(), N(i.__webglDepthbuffer, t, !1);
                    n.bindFramebuffer(e.FRAMEBUFFER, null)
                }

                function U(e) {
                    return h && e.isWebGLMultisampleRenderTarget ? Math.min(v, e.samples) : 0
                }
                var B = !1,
                    z = !1;
                this.allocateTextureUnit = function() {
                    var e = A;
                    return e >= d && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + d), A += 1, e
                }, this.resetTextureUnits = function() {
                    A = 0
                }, this.setTexture2D = L, this.setTexture2DArray = function(t, i) {
                    var a = r.get(t);
                    t.version > 0 && a.__version !== t.version ? I(a, t, i) : (n.activeTexture(e.TEXTURE0 + i), n.bindTexture(e.TEXTURE_2D_ARRAY, a.__webglTexture))
                }, this.setTexture3D = function(t, i) {
                    var a = r.get(t);
                    t.version > 0 && a.__version !== t.version ? I(a, t, i) : (n.activeTexture(e.TEXTURE0 + i), n.bindTexture(e.TEXTURE_3D, a.__webglTexture))
                }, this.setTextureCube = C, this.setupRenderTarget = function(t) {
                    var s = t.texture,
                        u = r.get(t),
                        l = r.get(s);
                    t.addEventListener("dispose", E), !0 !== t.isWebGLMultipleRenderTargets && (l.__webglTexture = e.createTexture(), l.__version = s.version, o.memory.textures++);
                    var c = !0 === t.isWebGLCubeRenderTarget,
                        d = !0 === t.isWebGLMultipleRenderTargets,
                        f = !0 === t.isWebGLMultisampleRenderTarget,
                        p = s.isDataTexture3D || s.isDataTexture2DArray,
                        v = x(t) || h;
                    if (!h || s.format !== ze || s.type !== De && s.type !== Ie || (s.format = Ge, console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")), c) {
                        u.__webglFramebuffer = [];
                        for (var m = 0; m < 6; m++) u.__webglFramebuffer[m] = e.createFramebuffer()
                    } else if (u.__webglFramebuffer = e.createFramebuffer(), d)
                        if (i.drawBuffers)
                            for (var g = t.texture, y = 0, _ = g.length; y < _; y++) {
                                var M = r.get(g[y]);
                                void 0 === M.__webglTexture && (M.__webglTexture = e.createTexture(), o.memory.textures++)
                            } else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");
                        else if (f)
                        if (h) {
                            u.__webglMultisampledFramebuffer = e.createFramebuffer(), u.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(e.RENDERBUFFER, u.__webglColorRenderbuffer);
                            var S = a.convert(s.format),
                                A = a.convert(s.type),
                                L = T(s.internalFormat, S, A),
                                C = U(t);
                            e.renderbufferStorageMultisample(e.RENDERBUFFER, C, L, t.width, t.height), n.bindFramebuffer(e.FRAMEBUFFER, u.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(e.FRAMEBUFFER, e.COLOR_ATTACHMENT0, e.RENDERBUFFER, u.__webglColorRenderbuffer), e.bindRenderbuffer(e.RENDERBUFFER, null), t.depthBuffer && (u.__webglDepthRenderbuffer = e.createRenderbuffer(), N(u.__webglDepthRenderbuffer, t, !0)), n.bindFramebuffer(e.FRAMEBUFFER, null)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
                    if (c) {
                        n.bindTexture(e.TEXTURE_CUBE_MAP, l.__webglTexture), P(e.TEXTURE_CUBE_MAP, s, v);
                        for (var R = 0; R < 6; R++) O(u.__webglFramebuffer[R], t, s, e.COLOR_ATTACHMENT0, e.TEXTURE_CUBE_MAP_POSITIVE_X + R);
                        b(s, v) && w(e.TEXTURE_CUBE_MAP, s, t.width, t.height), n.bindTexture(e.TEXTURE_CUBE_MAP, null)
                    } else if (d) {
                        for (var k = t.texture, D = 0, I = k.length; D < I; D++) {
                            var B = k[D],
                                z = r.get(B);
                            n.bindTexture(e.TEXTURE_2D, z.__webglTexture), P(e.TEXTURE_2D, B, v), O(u.__webglFramebuffer, t, B, e.COLOR_ATTACHMENT0 + D, e.TEXTURE_2D), b(B, v) && w(e.TEXTURE_2D, B, t.width, t.height)
                        }
                        n.bindTexture(e.TEXTURE_2D, null)
                    } else {
                        var G = e.TEXTURE_2D;
                        p && (h ? G = s.isDataTexture3D ? e.TEXTURE_3D : e.TEXTURE_2D_ARRAY : console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")), n.bindTexture(G, l.__webglTexture), P(G, s, v), O(u.__webglFramebuffer, t, s, e.COLOR_ATTACHMENT0, G), b(s, v) && w(G, s, t.width, t.height, t.depth), n.bindTexture(G, null)
                    }
                    t.depthBuffer && F(t)
                }, this.updateRenderTargetMipmap = function(t) {
                    for (var i = x(t) || h, a = !0 === t.isWebGLMultipleRenderTargets ? t.texture : [t.texture], o = 0, s = a.length; o < s; o++) {
                        var u = a[o];
                        if (b(u, i)) {
                            var l = t.isWebGLCubeRenderTarget ? e.TEXTURE_CUBE_MAP : e.TEXTURE_2D,
                                c = r.get(u).__webglTexture;
                            n.bindTexture(l, c), w(l, u, t.width, t.height), n.bindTexture(l, null)
                        }
                    }
                }, this.updateMultisampleRenderTarget = function(t) {
                    if (t.isWebGLMultisampleRenderTarget)
                        if (h) {
                            var i = t.width,
                                a = t.height,
                                o = e.COLOR_BUFFER_BIT;
                            t.depthBuffer && (o |= e.DEPTH_BUFFER_BIT), t.stencilBuffer && (o |= e.STENCIL_BUFFER_BIT);
                            var s = r.get(t);
                            n.bindFramebuffer(e.READ_FRAMEBUFFER, s.__webglMultisampledFramebuffer), n.bindFramebuffer(e.DRAW_FRAMEBUFFER, s.__webglFramebuffer), e.blitFramebuffer(0, 0, i, a, 0, 0, i, a, o, e.NEAREST), n.bindFramebuffer(e.READ_FRAMEBUFFER, null), n.bindFramebuffer(e.DRAW_FRAMEBUFFER, s.__webglMultisampledFramebuffer)
                        } else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
                }, this.safeSetTexture2D = function(e, t) {
                    e && e.isWebGLRenderTarget && (!1 === B && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), B = !0), e = e.texture), L(e, t)
                }, this.safeSetTextureCube = function(e, t) {
                    e && e.isWebGLCubeRenderTarget && (!1 === z && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), z = !0), e = e.texture), C(e, t)
                }
            }

            function Ks(e, t, n) {
                var r = n.isWebGL2;
                return {
                    convert: function(n) {
                        var i;
                        if (n === Ae) return e.UNSIGNED_BYTE;
                        if (n === Oe) return e.UNSIGNED_SHORT_4_4_4_4;
                        if (n === Ne) return e.UNSIGNED_SHORT_5_5_5_1;
                        if (n === Fe) return e.UNSIGNED_SHORT_5_6_5;
                        if (n === Le) return e.BYTE;
                        if (n === Ce) return e.SHORT;
                        if (n === Re) return e.UNSIGNED_SHORT;
                        if (n === ke) return e.INT;
                        if (n === Pe) return e.UNSIGNED_INT;
                        if (n === De) return e.FLOAT;
                        if (n === Ie) return r ? e.HALF_FLOAT : null !== (i = t.get("OES_texture_half_float")) ? i.HALF_FLOAT_OES : null;
                        if (n === Be) return e.ALPHA;
                        if (n === ze) return e.RGB;
                        if (n === Ge) return e.RGBA;
                        if (n === He) return e.LUMINANCE;
                        if (n === Ve) return e.LUMINANCE_ALPHA;
                        if (n === je) return e.DEPTH_COMPONENT;
                        if (n === qe) return e.DEPTH_STENCIL;
                        if (n === Xe) return e.RED;
                        if (n === Ye) return e.RED_INTEGER;
                        if (n === Ke) return e.RG;
                        if (n === Ze) return e.RG_INTEGER;
                        if (n === Je) return e.RGB_INTEGER;
                        if (n === Qe) return e.RGBA_INTEGER;
                        if (n === $e || n === et || n === tt || n === nt) {
                            if (null === (i = t.get("WEBGL_compressed_texture_s3tc"))) return null;
                            if (n === $e) return i.COMPRESSED_RGB_S3TC_DXT1_EXT;
                            if (n === et) return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                            if (n === tt) return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                            if (n === nt) return i.COMPRESSED_RGBA_S3TC_DXT5_EXT
                        }
                        if (n === rt || n === it || n === at || n === ot) {
                            if (null === (i = t.get("WEBGL_compressed_texture_pvrtc"))) return null;
                            if (n === rt) return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                            if (n === it) return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                            if (n === at) return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                            if (n === ot) return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                        }
                        if (n === st) return null !== (i = t.get("WEBGL_compressed_texture_etc1")) ? i.COMPRESSED_RGB_ETC1_WEBGL : null;
                        if ((n === ut || n === lt) && null !== (i = t.get("WEBGL_compressed_texture_etc"))) {
                            if (n === ut) return i.COMPRESSED_RGB8_ETC2;
                            if (n === lt) return i.COMPRESSED_RGBA8_ETC2_EAC
                        }
                        return n === ct || n === ht || n === dt || n === ft || n === pt || n === vt || n === mt || n === gt || n === yt || n === _t || n === xt || n === bt || n === wt || n === Tt || n === St || n === Et || n === At || n === Lt || n === Ct || n === Rt || n === kt || n === Pt || n === Dt || n === It || n === Ot || n === Nt || n === Ft || n === Ut ? null !== (i = t.get("WEBGL_compressed_texture_astc")) ? n : null : n === Mt ? null !== (i = t.get("EXT_texture_compression_bptc")) ? n : null : n === Ue ? r ? e.UNSIGNED_INT_24_8 : null !== (i = t.get("WEBGL_depth_texture")) ? i.UNSIGNED_INT_24_8_WEBGL : null : void 0
                    }
                }
            }
            var Zs = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    return (0, v.default)(this, n), (e = t.call(this)).cameras = r, e
                }
                return (0, m.default)(n)
            }(ea);
            Zs.prototype.isArrayCamera = !0;
            var Js = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "Group", e
                }
                return (0, m.default)(n)
            }(Fr);
            Js.prototype.isGroup = !0;
            var Qs = {
                    type: "move"
                },
                $s = function() {
                    function e() {
                        (0, v.default)(this, e), this._targetRay = null, this._grip = null, this._hand = null
                    }
                    return (0, m.default)(e, [{
                        key: "getHandSpace",
                        value: function() {
                            return null === this._hand && (this._hand = new Js, this._hand.matrixAutoUpdate = !1, this._hand.visible = !1, this._hand.joints = {}, this._hand.inputState = {
                                pinching: !1
                            }), this._hand
                        }
                    }, {
                        key: "getTargetRaySpace",
                        value: function() {
                            return null === this._targetRay && (this._targetRay = new Js, this._targetRay.matrixAutoUpdate = !1, this._targetRay.visible = !1, this._targetRay.hasLinearVelocity = !1, this._targetRay.linearVelocity = new On, this._targetRay.hasAngularVelocity = !1, this._targetRay.angularVelocity = new On), this._targetRay
                        }
                    }, {
                        key: "getGripSpace",
                        value: function() {
                            return null === this._grip && (this._grip = new Js, this._grip.matrixAutoUpdate = !1, this._grip.visible = !1, this._grip.hasLinearVelocity = !1, this._grip.linearVelocity = new On, this._grip.hasAngularVelocity = !1, this._grip.angularVelocity = new On), this._grip
                        }
                    }, {
                        key: "dispatchEvent",
                        value: function(e) {
                            return null !== this._targetRay && this._targetRay.dispatchEvent(e), null !== this._grip && this._grip.dispatchEvent(e), null !== this._hand && this._hand.dispatchEvent(e), this
                        }
                    }, {
                        key: "disconnect",
                        value: function(e) {
                            return this.dispatchEvent({
                                type: "disconnected",
                                data: e
                            }), null !== this._targetRay && (this._targetRay.visible = !1), null !== this._grip && (this._grip.visible = !1), null !== this._hand && (this._hand.visible = !1), this
                        }
                    }, {
                        key: "update",
                        value: function(e, t, n) {
                            var r = null,
                                i = null,
                                a = null,
                                o = this._targetRay,
                                s = this._grip,
                                u = this._hand;
                            if (e && "visible-blurred" !== t.session.visibilityState)
                                if (null !== o && null !== (r = t.getPose(e.targetRaySpace, n)) && (o.matrix.fromArray(r.transform.matrix), o.matrix.decompose(o.position, o.rotation, o.scale), r.linearVelocity ? (o.hasLinearVelocity = !0, o.linearVelocity.copy(r.linearVelocity)) : o.hasLinearVelocity = !1, r.angularVelocity ? (o.hasAngularVelocity = !0, o.angularVelocity.copy(r.angularVelocity)) : o.hasAngularVelocity = !1, this.dispatchEvent(Qs)), u && e.hand) {
                                    a = !0;
                                    var l, c = _(e.hand.values());
                                    try {
                                        for (c.s(); !(l = c.n()).done;) {
                                            var h = l.value,
                                                d = t.getJointPose(h, n);
                                            if (void 0 === u.joints[h.jointName]) {
                                                var f = new Js;
                                                f.matrixAutoUpdate = !1, f.visible = !1, u.joints[h.jointName] = f, u.add(f)
                                            }
                                            var p = u.joints[h.jointName];
                                            null !== d && (p.matrix.fromArray(d.transform.matrix), p.matrix.decompose(p.position, p.rotation, p.scale), p.jointRadius = d.radius), p.visible = null !== d
                                        }
                                    } catch (e) {
                                        c.e(e)
                                    } finally {
                                        c.f()
                                    }
                                    var v = u.joints["index-finger-tip"],
                                        m = u.joints["thumb-tip"],
                                        g = v.position.distanceTo(m.position);
                                    u.inputState.pinching && g > .025 ? (u.inputState.pinching = !1, this.dispatchEvent({
                                        type: "pinchend",
                                        handedness: e.handedness,
                                        target: this
                                    })) : !u.inputState.pinching && g <= .015 && (u.inputState.pinching = !0, this.dispatchEvent({
                                        type: "pinchstart",
                                        handedness: e.handedness,
                                        target: this
                                    }))
                                } else null !== s && e.gripSpace && null !== (i = t.getPose(e.gripSpace, n)) && (s.matrix.fromArray(i.transform.matrix), s.matrix.decompose(s.position, s.rotation, s.scale), i.linearVelocity ? (s.hasLinearVelocity = !0, s.linearVelocity.copy(i.linearVelocity)) : s.hasLinearVelocity = !1, i.angularVelocity ? (s.hasAngularVelocity = !0, s.angularVelocity.copy(i.angularVelocity)) : s.hasAngularVelocity = !1);
                            return null !== o && (o.visible = null !== r), null !== s && (s.visible = null !== i), null !== u && (u.visible = null !== a), this
                        }
                    }]), e
                }(),
                eu = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        (0, v.default)(this, n), i = t.call(this);
                        var a = (0, h.default)(i),
                            o = e.state,
                            u = null,
                            l = 1,
                            c = null,
                            d = "local-floor",
                            f = null,
                            p = null,
                            m = null,
                            g = null,
                            _ = null,
                            x = [],
                            b = new Map,
                            w = new ea;
                        w.layers.enable(1), w.viewport = new Rn;
                        var T = new ea;
                        T.layers.enable(2), T.viewport = new Rn;
                        var M = [w, T],
                            S = new Zs;
                        S.layers.enable(1), S.layers.enable(2);
                        var E = null,
                            A = null;

                        function L(e) {
                            var t = b.get(e.inputSource);
                            t && t.dispatchEvent({
                                type: e.type,
                                data: e.inputSource
                            })
                        }

                        function C() {
                            b.forEach((function(e, t) {
                                e.disconnect(t)
                            })), b.clear(), E = null, A = null, o.bindXRFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), O.stop(), a.isPresenting = !1, a.dispatchEvent({
                                type: "sessionend"
                            })
                        }

                        function R(e) {
                            for (var t = u.inputSources, n = 0; n < x.length; n++) b.set(t[n], x[n]);
                            for (var r = 0; r < e.removed.length; r++) {
                                var i = e.removed[r],
                                    a = b.get(i);
                                a && (a.dispatchEvent({
                                    type: "disconnected",
                                    data: i
                                }), b.delete(i))
                            }
                            for (var o = 0; o < e.added.length; o++) {
                                var s = e.added[o],
                                    l = b.get(s);
                                l && l.dispatchEvent({
                                    type: "connected",
                                    data: s
                                })
                            }
                        }
                        i.cameraAutoUpdate = !0, i.enabled = !1, i.isPresenting = !1, i.getController = function(e) {
                            var t = x[e];
                            return void 0 === t && (t = new $s, x[e] = t), t.getTargetRaySpace()
                        }, i.getControllerGrip = function(e) {
                            var t = x[e];
                            return void 0 === t && (t = new $s, x[e] = t), t.getGripSpace()
                        }, i.getHand = function(e) {
                            var t = x[e];
                            return void 0 === t && (t = new $s, x[e] = t), t.getHandSpace()
                        }, i.setFramebufferScaleFactor = function(e) {
                            l = e, !0 === a.isPresenting && console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")
                        }, i.setReferenceSpaceType = function(e) {
                            d = e, !0 === a.isPresenting && console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")
                        }, i.getReferenceSpace = function() {
                            return c
                        }, i.getSession = function() {
                            return u
                        }, i.setSession = function() {
                            var e = (0, s.default)(y().mark((function e(t) {
                                var n, i, o, s, h;
                                return y().wrap((function(e) {
                                    for (;;) switch (e.prev = e.next) {
                                        case 0:
                                            if (null === (u = t)) {
                                                e.next = 22;
                                                break
                                            }
                                            if (u.addEventListener("select", L), u.addEventListener("selectstart", L), u.addEventListener("selectend", L), u.addEventListener("squeeze", L), u.addEventListener("squeezestart", L), u.addEventListener("squeezeend", L), u.addEventListener("end", C), u.addEventListener("inputsourceschange", R), !0 === (n = r.getContextAttributes()).xrCompatible) {
                                                e.next = 14;
                                                break
                                            }
                                            return e.next = 14, r.makeXRCompatible();
                                        case 14:
                                            return void 0 === u.renderState.layers ? (i = {
                                                antialias: n.antialias,
                                                alpha: n.alpha,
                                                depth: n.depth,
                                                stencil: n.stencil,
                                                framebufferScaleFactor: l
                                            }, _ = new XRWebGLLayer(u, r, i), u.updateRenderState({
                                                baseLayer: _
                                            })) : (o = 0, n.antialias ? (s = {
                                                antialias: !0,
                                                alpha: n.alpha,
                                                depth: n.depth,
                                                stencil: n.stencil,
                                                framebufferScaleFactor: l
                                            }, _ = new XRWebGLLayer(u, r, s), u.updateRenderState({
                                                layers: [_]
                                            })) : (n.depth && (o = n.stencil ? r.DEPTH_STENCIL : r.DEPTH_COMPONENT), h = {
                                                colorFormat: n.alpha ? r.RGBA : r.RGB,
                                                depthFormat: o,
                                                scaleFactor: l
                                            }, p = new XRWebGLBinding(u, r), g = p.createProjectionLayer(h), m = r.createFramebuffer(), u.updateRenderState({
                                                layers: [g]
                                            }))), e.next = 17, u.requestReferenceSpace(d);
                                        case 17:
                                            c = e.sent, O.setContext(u), O.start(), a.isPresenting = !0, a.dispatchEvent({
                                                type: "sessionstart"
                                            });
                                        case 22:
                                        case "end":
                                            return e.stop()
                                    }
                                }), e)
                            })));
                            return function(t) {
                                return e.apply(this, arguments)
                            }
                        }();
                        var k = new On,
                            P = new On;

                        function D(e, t) {
                            null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.copy(e.matrixWorld).invert()
                        }
                        i.updateCamera = function(e) {
                            if (null !== u) {
                                S.near = T.near = w.near = e.near, S.far = T.far = w.far = e.far, E === S.near && A === S.far || (u.updateRenderState({
                                    depthNear: S.near,
                                    depthFar: S.far
                                }), E = S.near, A = S.far);
                                var t = e.parent,
                                    n = S.cameras;
                                D(S, t);
                                for (var r = 0; r < n.length; r++) D(n[r], t);
                                S.matrixWorld.decompose(S.position, S.quaternion, S.scale), e.position.copy(S.position), e.quaternion.copy(S.quaternion), e.scale.copy(S.scale), e.matrix.copy(S.matrix), e.matrixWorld.copy(S.matrixWorld);
                                for (var i = e.children, a = 0, o = i.length; a < o; a++) i[a].updateMatrixWorld(!0);
                                2 === n.length ? function(e, t, n) {
                                    k.setFromMatrixPosition(t.matrixWorld), P.setFromMatrixPosition(n.matrixWorld);
                                    var r = k.distanceTo(P),
                                        i = t.projectionMatrix.elements,
                                        a = n.projectionMatrix.elements,
                                        o = i[14] / (i[10] - 1),
                                        s = i[14] / (i[10] + 1),
                                        u = (i[9] + 1) / i[5],
                                        l = (i[9] - 1) / i[5],
                                        c = (i[8] - 1) / i[0],
                                        h = (a[8] + 1) / a[0],
                                        d = o * c,
                                        f = o * h,
                                        p = r / (-c + h),
                                        v = p * -c;
                                    t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(v), e.translateZ(p), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.copy(e.matrixWorld).invert();
                                    var m = o + p,
                                        g = s + p,
                                        y = d - v,
                                        _ = f + (r - v),
                                        x = u * s / g * m,
                                        b = l * s / g * m;
                                    e.projectionMatrix.makePerspective(y, _, x, b, m, g)
                                }(S, w, T) : S.projectionMatrix.copy(w.projectionMatrix)
                            }
                        }, i.getCamera = function() {
                            return S
                        }, i.getFoveation = function() {
                            return null !== g ? g.fixedFoveation : null !== _ ? _.fixedFoveation : void 0
                        }, i.setFoveation = function(e) {
                            null !== g && (g.fixedFoveation = e), null !== _ && void 0 !== _.fixedFoveation && (_.fixedFoveation = e)
                        };
                        var I = null,
                            O = new da;
                        return O.setAnimationLoop((function(e, t) {
                            if (null !== (f = t.getViewerPose(c))) {
                                var n = f.views;
                                null !== _ && o.bindXRFramebuffer(_.framebuffer);
                                var i = !1;
                                n.length !== S.cameras.length && (S.cameras.length = 0, i = !0);
                                for (var a = 0; a < n.length; a++) {
                                    var s = n[a],
                                        l = null;
                                    if (null !== _) l = _.getViewport(s);
                                    else {
                                        var h = p.getViewSubImage(g, s);
                                        o.bindXRFramebuffer(m), void 0 !== h.depthStencilTexture && r.framebufferTexture2D(r.FRAMEBUFFER, r.DEPTH_ATTACHMENT, r.TEXTURE_2D, h.depthStencilTexture, 0), r.framebufferTexture2D(r.FRAMEBUFFER, r.COLOR_ATTACHMENT0, r.TEXTURE_2D, h.colorTexture, 0), l = h.viewport
                                    }
                                    var d = M[a];
                                    d.matrix.fromArray(s.transform.matrix), d.projectionMatrix.fromArray(s.projectionMatrix), d.viewport.set(l.x, l.y, l.width, l.height), 0 === a && S.matrix.copy(d.matrix), !0 === i && S.cameras.push(d)
                                }
                            }
                            for (var v = u.inputSources, y = 0; y < x.length; y++) {
                                var b = x[y],
                                    w = v[y];
                                b.update(w, t, c)
                            }
                            I && I(e, t)
                        })), i.setAnimationLoop = function(e) {
                            I = e
                        }, i.dispose = function() {}, i
                    }
                    return (0, m.default)(n)
                }(ln);

            function tu(e) {
                function t(t, n) {
                    t.opacity.value = n.opacity, n.color && t.diffuse.value.copy(n.color), n.emissive && t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity), n.map && (t.map.value = n.map), n.alphaMap && (t.alphaMap.value = n.alphaMap), n.specularMap && (t.specularMap.value = n.specularMap);
                    var r, i, a = e.get(n).envMap;
                    if (a) {
                        t.envMap.value = a, t.flipEnvMap.value = a.isCubeTexture && !1 === a.isRenderTargetTexture ? -1 : 1, t.reflectivity.value = n.reflectivity, t.refractionRatio.value = n.refractionRatio;
                        var o = e.get(a).__maxMipLevel;
                        void 0 !== o && (t.maxMipLevel.value = o)
                    }
                    n.lightMap && (t.lightMap.value = n.lightMap, t.lightMapIntensity.value = n.lightMapIntensity), n.aoMap && (t.aoMap.value = n.aoMap, t.aoMapIntensity.value = n.aoMapIntensity), n.map ? r = n.map : n.specularMap ? r = n.specularMap : n.displacementMap ? r = n.displacementMap : n.normalMap ? r = n.normalMap : n.bumpMap ? r = n.bumpMap : n.roughnessMap ? r = n.roughnessMap : n.metalnessMap ? r = n.metalnessMap : n.alphaMap ? r = n.alphaMap : n.emissiveMap ? r = n.emissiveMap : n.clearcoatMap ? r = n.clearcoatMap : n.clearcoatNormalMap ? r = n.clearcoatNormalMap : n.clearcoatRoughnessMap ? r = n.clearcoatRoughnessMap : n.specularIntensityMap ? r = n.specularIntensityMap : n.specularTintMap && (r = n.specularTintMap), void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), t.uvTransform.value.copy(r.matrix)), n.aoMap ? i = n.aoMap : n.lightMap && (i = n.lightMap), void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture), !0 === i.matrixAutoUpdate && i.updateMatrix(), t.uv2Transform.value.copy(i.matrix))
                }

                function n(t, n) {
                    t.roughness.value = n.roughness, t.metalness.value = n.metalness, n.roughnessMap && (t.roughnessMap.value = n.roughnessMap), n.metalnessMap && (t.metalnessMap.value = n.metalnessMap), n.emissiveMap && (t.emissiveMap.value = n.emissiveMap), n.bumpMap && (t.bumpMap.value = n.bumpMap, t.bumpScale.value = n.bumpScale, n.side === M && (t.bumpScale.value *= -1)), n.normalMap && (t.normalMap.value = n.normalMap, t.normalScale.value.copy(n.normalScale), n.side === M && t.normalScale.value.negate()), n.displacementMap && (t.displacementMap.value = n.displacementMap, t.displacementScale.value = n.displacementScale, t.displacementBias.value = n.displacementBias), e.get(n).envMap && (t.envMapIntensity.value = n.envMapIntensity)
                }
                return {
                    refreshFogUniforms: function(e, t) {
                        e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
                    },
                    refreshMaterialUniforms: function(e, r, i, a, o) {
                        r.isMeshBasicMaterial ? t(e, r) : r.isMeshLambertMaterial ? (t(e, r), function(e, t) {
                            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
                        }(e, r)) : r.isMeshToonMaterial ? (t(e, r), function(e, t) {
                            t.gradientMap && (e.gradientMap.value = t.gradientMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === M && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === M && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshPhongMaterial ? (t(e, r), function(e, t) {
                            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === M && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === M && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshStandardMaterial ? (t(e, r), r.isMeshPhysicalMaterial ? function(e, t, r) {
                            n(e, t), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen), t.clearcoatMap && (e.clearcoatMap.value = t.clearcoatMap), t.clearcoatRoughnessMap && (e.clearcoatRoughnessMap.value = t.clearcoatRoughnessMap), t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, t.side === M && e.clearcoatNormalScale.value.negate()), e.transmission.value = t.transmission, t.transmissionMap && (e.transmissionMap.value = t.transmissionMap), t.transmission > 0 && (e.transmissionSamplerMap.value = r.texture, e.transmissionSamplerSize.value.set(r.width, r.height)), e.thickness.value = t.thickness, t.thicknessMap && (e.thicknessMap.value = t.thicknessMap), e.attenuationDistance.value = t.attenuationDistance, e.attenuationTint.value.copy(t.attenuationTint), e.specularIntensity.value = t.specularIntensity, e.specularTint.value.copy(t.specularTint), t.specularIntensityMap && (e.specularIntensityMap.value = t.specularIntensityMap), t.specularTintMap && (e.specularTintMap.value = t.specularTintMap)
                        }(e, r, o) : n(e, r)) : r.isMeshMatcapMaterial ? (t(e, r), function(e, t) {
                            t.matcap && (e.matcap.value = t.matcap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === M && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === M && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDepthMaterial ? (t(e, r), function(e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isMeshDistanceMaterial ? (t(e, r), function(e, t) {
                            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance
                        }(e, r)) : r.isMeshNormalMaterial ? (t(e, r), function(e, t) {
                            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, t.side === M && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), t.side === M && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
                        }(e, r)) : r.isLineBasicMaterial ? (function(e, t) {
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity
                        }(e, r), r.isLineDashedMaterial && function(e, t) {
                            e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
                        }(e, r)) : r.isPointsMaterial ? function(e, t, n, r) {
                            var i;
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * n, e.scale.value = .5 * r, t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.map ? i = t.map : t.alphaMap && (i = t.alphaMap), void 0 !== i && (!0 === i.matrixAutoUpdate && i.updateMatrix(), e.uvTransform.value.copy(i.matrix))
                        }(e, r, i, a) : r.isSpriteMaterial ? function(e, t) {
                            var n;
                            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.map ? n = t.map : t.alphaMap && (n = t.alphaMap), void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
                        }(e, r) : r.isShadowMaterial ? (e.color.value.copy(r.color), e.opacity.value = r.opacity) : r.isShaderMaterial && (r.uniformsNeedUpdate = !1)
                    }
                }
            }

            function nu() {
                var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = void 0 !== t.canvas ? t.canvas : ((e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")).style.display = "block", e),
                    r = void 0 !== t.context ? t.context : null,
                    i = void 0 !== t.alpha && t.alpha,
                    a = void 0 === t.depth || t.depth,
                    o = void 0 === t.stencil || t.stencil,
                    s = void 0 !== t.antialias && t.antialias,
                    u = void 0 === t.premultipliedAlpha || t.premultipliedAlpha,
                    l = void 0 !== t.preserveDrawingBuffer && t.preserveDrawingBuffer,
                    c = void 0 !== t.powerPreference ? t.powerPreference : "default",
                    h = void 0 !== t.failIfMajorPerformanceCaveat && t.failIfMajorPerformanceCaveat,
                    d = null,
                    f = null,
                    p = [],
                    v = [];
                this.domElement = n, this.debug = {
                    checkShaderErrors: !0
                }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.outputEncoding = Xt, this.physicallyCorrectLights = !1, this.toneMapping = ae, this.toneMappingExposure = 1;
                var m = this,
                    g = !1,
                    y = 0,
                    _ = 0,
                    x = null,
                    b = -1,
                    w = null,
                    E = new Rn,
                    A = new Rn,
                    L = null,
                    C = n.width,
                    R = n.height,
                    k = 1,
                    P = null,
                    D = null,
                    I = new Rn(0, 0, C, R),
                    O = new Rn(0, 0, C, R),
                    N = !1,
                    F = [],
                    U = new ha,
                    B = !1,
                    z = !1,
                    G = null,
                    H = new dr,
                    V = new On,
                    W = {
                        background: null,
                        fog: null,
                        environment: null,
                        overrideMaterial: null,
                        isScene: !0
                    };

                function j() {
                    return null === x ? k : 1
                }
                var q, X, Y, K, Z, J, Q, $, ee, te, ne, re, ie, oe, se, ue, le, ce, he, de, fe, pe, ve, me = r;

                function ge(e, t) {
                    for (var r = 0; r < e.length; r++) {
                        var i = e[r],
                            a = n.getContext(i, t);
                        if (null !== a) return a
                    }
                    return null
                }
                try {
                    var ye = {
                        alpha: i,
                        depth: a,
                        stencil: o,
                        antialias: s,
                        premultipliedAlpha: u,
                        preserveDrawingBuffer: l,
                        powerPreference: c,
                        failIfMajorPerformanceCaveat: h
                    };
                    if (n.addEventListener("webglcontextlost", Me, !1), n.addEventListener("webglcontextrestored", Se, !1), null === me) {
                        var xe = ["webgl2", "webgl", "experimental-webgl"];
                        if (!0 === m.isWebGL1Renderer && xe.shift(), null === (me = ge(xe, ye))) throw ge(xe) ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.")
                    }
                    void 0 === me.getShaderPrecisionFormat && (me.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    })
                } catch (e) {
                    throw console.error("THREE.WebGLRenderer: " + e.message), e
                }

                function we() {
                    q = new Qa(me), X = new ba(me, q, t), q.init(X), pe = new Ks(me, q, X), Y = new Xs(me, q, X), F[0] = me.BACK, K = new to(me), Z = new ks, J = new Ys(me, q, Y, Z, X, pe, K), Q = new Ta(m), $ = new Ja(m), ee = new fa(me, X), ve = new _a(me, q, ee, X), te = new $a(me, ee, K, ve), ne = new ao(me, te, ee, K), he = new io(me), ue = new wa(Z), re = new Rs(m, Q, $, q, X, ve, ue), ie = new tu(Z), oe = new Os(Z), se = new Gs(q, X), ce = new ya(m, Q, Y, ne, u), le = new qs(m, ne, X), de = new xa(me, q, K, X), fe = new eo(me, q, K, X), K.programs = re.programs, m.capabilities = X, m.extensions = q, m.properties = Z, m.renderLists = oe, m.shadowMap = le, m.state = Y, m.info = K
                }
                we();
                var Te = new eu(m, me);

                function Me(e) {
                    e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), g = !0
                }

                function Se() {
                    console.log("THREE.WebGLRenderer: Context Restored."), g = !1;
                    var e = K.autoReset,
                        t = le.enabled,
                        n = le.autoUpdate,
                        r = le.needsUpdate,
                        i = le.type;
                    we(), K.autoReset = e, le.enabled = t, le.autoUpdate = n, le.needsUpdate = r, le.type = i
                }

                function Le(e) {
                    var t = e.target;
                    t.removeEventListener("dispose", Le),
                        function(e) {
                            (function(e) {
                                var t = Z.get(e).programs;
                                void 0 !== t && t.forEach((function(e) {
                                    re.releaseProgram(e)
                                }))
                            })(e), Z.remove(e)
                        }(t)
                }
                this.xr = Te, this.getContext = function() {
                    return me
                }, this.getContextAttributes = function() {
                    return me.getContextAttributes()
                }, this.forceContextLoss = function() {
                    var e = q.get("WEBGL_lose_context");
                    e && e.loseContext()
                }, this.forceContextRestore = function() {
                    var e = q.get("WEBGL_lose_context");
                    e && e.restoreContext()
                }, this.getPixelRatio = function() {
                    return k
                }, this.setPixelRatio = function(e) {
                    void 0 !== e && (k = e, this.setSize(C, R, !1))
                }, this.getSize = function(e) {
                    return e.set(C, R)
                }, this.setSize = function(e, t, r) {
                    Te.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (C = e, R = t, n.width = Math.floor(e * k), n.height = Math.floor(t * k), !1 !== r && (n.style.width = e + "px", n.style.height = t + "px"), this.setViewport(0, 0, e, t))
                }, this.getDrawingBufferSize = function(e) {
                    return e.set(C * k, R * k).floor()
                }, this.setDrawingBufferSize = function(e, t, r) {
                    C = e, R = t, k = r, n.width = Math.floor(e * r), n.height = Math.floor(t * r), this.setViewport(0, 0, e, t)
                }, this.getCurrentViewport = function(e) {
                    return e.copy(E)
                }, this.getViewport = function(e) {
                    return e.copy(I)
                }, this.setViewport = function(e, t, n, r) {
                    e.isVector4 ? I.set(e.x, e.y, e.z, e.w) : I.set(e, t, n, r), Y.viewport(E.copy(I).multiplyScalar(k).floor())
                }, this.getScissor = function(e) {
                    return e.copy(O)
                }, this.setScissor = function(e, t, n, r) {
                    e.isVector4 ? O.set(e.x, e.y, e.z, e.w) : O.set(e, t, n, r), Y.scissor(A.copy(O).multiplyScalar(k).floor())
                }, this.getScissorTest = function() {
                    return N
                }, this.setScissorTest = function(e) {
                    Y.setScissorTest(N = e)
                }, this.setOpaqueSort = function(e) {
                    P = e
                }, this.setTransparentSort = function(e) {
                    D = e
                }, this.getClearColor = function(e) {
                    return e.copy(ce.getClearColor())
                }, this.setClearColor = function() {
                    ce.setClearColor.apply(ce, arguments)
                }, this.getClearAlpha = function() {
                    return ce.getClearAlpha()
                }, this.setClearAlpha = function() {
                    ce.setClearAlpha.apply(ce, arguments)
                }, this.clear = function(e, t, n) {
                    var r = 0;
                    (void 0 === e || e) && (r |= me.COLOR_BUFFER_BIT), (void 0 === t || t) && (r |= me.DEPTH_BUFFER_BIT), (void 0 === n || n) && (r |= me.STENCIL_BUFFER_BIT), me.clear(r)
                }, this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }, this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }, this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }, this.dispose = function() {
                    n.removeEventListener("webglcontextlost", Me, !1), n.removeEventListener("webglcontextrestored", Se, !1), oe.dispose(), se.dispose(), Z.dispose(), Q.dispose(), $.dispose(), ne.dispose(), ve.dispose(), Te.dispose(), Te.removeEventListener("sessionstart", Re), Te.removeEventListener("sessionend", ke), G && (G.dispose(), G = null), Pe.stop()
                }, this.renderBufferImmediate = function(e, t) {
                    ve.initAttributes();
                    var n = Z.get(e);
                    e.hasPositions && !n.position && (n.position = me.createBuffer()), e.hasNormals && !n.normal && (n.normal = me.createBuffer()), e.hasUvs && !n.uv && (n.uv = me.createBuffer()), e.hasColors && !n.color && (n.color = me.createBuffer());
                    var r = t.getAttributes();
                    e.hasPositions && (me.bindBuffer(me.ARRAY_BUFFER, n.position), me.bufferData(me.ARRAY_BUFFER, e.positionArray, me.DYNAMIC_DRAW), ve.enableAttribute(r.position), me.vertexAttribPointer(r.position, 3, me.FLOAT, !1, 0, 0)), e.hasNormals && (me.bindBuffer(me.ARRAY_BUFFER, n.normal), me.bufferData(me.ARRAY_BUFFER, e.normalArray, me.DYNAMIC_DRAW), ve.enableAttribute(r.normal), me.vertexAttribPointer(r.normal, 3, me.FLOAT, !1, 0, 0)), e.hasUvs && (me.bindBuffer(me.ARRAY_BUFFER, n.uv), me.bufferData(me.ARRAY_BUFFER, e.uvArray, me.DYNAMIC_DRAW), ve.enableAttribute(r.uv), me.vertexAttribPointer(r.uv, 2, me.FLOAT, !1, 0, 0)), e.hasColors && (me.bindBuffer(me.ARRAY_BUFFER, n.color), me.bufferData(me.ARRAY_BUFFER, e.colorArray, me.DYNAMIC_DRAW), ve.enableAttribute(r.color), me.vertexAttribPointer(r.color, 3, me.FLOAT, !1, 0, 0)), ve.disableUnusedAttributes(), me.drawArrays(me.TRIANGLES, 0, e.count), e.count = 0
                }, this.renderBufferDirect = function(e, t, n, r, i, a) {
                    null === t && (t = W);
                    var o = i.isMesh && i.matrixWorld.determinant() < 0,
                        s = ze(e, t, r, i);
                    Y.setMaterial(r, o);
                    var u = n.index,
                        l = n.attributes.position;
                    if (null === u) {
                        if (void 0 === l || 0 === l.count) return
                    } else if (0 === u.count) return;
                    var c, h = 1;
                    !0 === r.wireframe && (u = te.getWireframeAttribute(n), h = 2), void 0 === n.morphAttributes.position && void 0 === n.morphAttributes.normal || he.update(i, n, r, s), ve.setup(i, r, s, n, u);
                    var d = de;
                    null !== u && (c = ee.get(u), (d = fe).setIndex(c));
                    var f = null !== u ? u.count : l.count,
                        p = n.drawRange.start * h,
                        v = n.drawRange.count * h,
                        m = null !== a ? a.start * h : 0,
                        g = null !== a ? a.count * h : 1 / 0,
                        y = Math.max(p, m),
                        _ = Math.min(f, p + v, m + g) - 1,
                        x = Math.max(0, _ - y + 1);
                    if (0 !== x) {
                        if (i.isMesh) !0 === r.wireframe ? (Y.setLineWidth(r.wireframeLinewidth * j()), d.setMode(me.LINES)) : d.setMode(me.TRIANGLES);
                        else if (i.isLine) {
                            var b = r.linewidth;
                            void 0 === b && (b = 1), Y.setLineWidth(b * j()), i.isLineSegments ? d.setMode(me.LINES) : i.isLineLoop ? d.setMode(me.LINE_LOOP) : d.setMode(me.LINE_STRIP)
                        } else i.isPoints ? d.setMode(me.POINTS) : i.isSprite && d.setMode(me.TRIANGLES);
                        if (i.isInstancedMesh) d.renderInstances(y, x, i.count);
                        else if (n.isInstancedBufferGeometry) {
                            var w = Math.min(n.instanceCount, n._maxInstanceCount);
                            d.renderInstances(y, x, w)
                        } else d.render(y, x)
                    }
                }, this.compile = function(e, t) {
                    (f = se.get(e)).init(), v.push(f), e.traverseVisible((function(e) {
                        e.isLight && e.layers.test(t.layers) && (f.pushLight(e), e.castShadow && f.pushShadow(e))
                    })), f.setupLights(), e.traverse((function(t) {
                        var n = t.material;
                        if (n)
                            if (Array.isArray(n))
                                for (var r = 0; r < n.length; r++) Ue(n[r], e, t);
                            else Ue(n, e, t)
                    })), v.pop(), f = null
                };
                var Ce = null;

                function Re() {
                    Pe.stop()
                }

                function ke() {
                    Pe.start()
                }
                var Pe = new da;

                function Oe(e, t, n, r) {
                    if (!1 !== e.visible) {
                        if (e.layers.test(t.layers))
                            if (e.isGroup) n = e.renderOrder;
                            else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
                        else if (e.isLight) f.pushLight(e), e.castShadow && f.pushShadow(e);
                        else if (e.isSprite) {
                            if (!e.frustumCulled || U.intersectsSprite(e)) {
                                r && V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);
                                var i = ne.update(e),
                                    a = e.material;
                                a.visible && d.push(e, i, a, n, V.z, null)
                            }
                        } else if (e.isImmediateRenderObject) r && V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H), d.push(e, null, e.material, n, V.z, null);
                        else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== K.render.frame && (e.skeleton.update(), e.skeleton.frame = K.render.frame), !e.frustumCulled || U.intersectsObject(e))) {
                            r && V.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);
                            var o = ne.update(e),
                                s = e.material;
                            if (Array.isArray(s))
                                for (var u = o.groups, l = 0, c = u.length; l < c; l++) {
                                    var h = u[l],
                                        p = s[h.materialIndex];
                                    p && p.visible && d.push(e, o, p, n, V.z, h)
                                } else s.visible && d.push(e, o, s, n, V.z, null)
                        }
                        for (var v = e.children, m = 0, g = v.length; m < g; m++) Oe(v[m], t, n, r)
                    }
                }

                function Ne(e, t, n) {
                    var r = !0 === t.isScene ? t.overrideMaterial : null;
                    if (n.isArrayCamera)
                        for (var i = n.cameras, a = 0, o = i.length; a < o; a++) {
                            var s = i[a];
                            Y.viewport(E.copy(s.viewport)), f.setupLightsView(s);
                            for (var u = 0, l = e.length; u < l; u++) {
                                var c = e[u],
                                    h = c.object,
                                    d = c.geometry,
                                    p = null === r ? c.material : r,
                                    v = c.group;
                                h.layers.test(s.layers) && Fe(h, t, s, d, p, v)
                            }
                        } else
                            for (var m = 0, g = e.length; m < g; m++) {
                                var y = e[m];
                                Fe(y.object, t, n, y.geometry, null === r ? y.material : r, y.group)
                            }
                }

                function Fe(e, t, n, r, i, a) {
                    if (e.onBeforeRender(m, t, n, r, i, a), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject) {
                        var o = ze(n, t, i, e);
                        Y.setMaterial(i), ve.reset(),
                            function(e, t) {
                                e.render((function(e) {
                                    m.renderBufferImmediate(e, t)
                                }))
                            }(e, o)
                    } else !0 === i.transparent && i.side === S ? (i.side = M, i.needsUpdate = !0, m.renderBufferDirect(n, t, r, i, e, a), i.side = T, i.needsUpdate = !0, m.renderBufferDirect(n, t, r, i, e, a), i.side = S) : m.renderBufferDirect(n, t, r, i, e, a);
                    e.onAfterRender(m, t, n, r, i, a)
                }

                function Ue(e, t, n) {
                    !0 !== t.isScene && (t = W);
                    var r = Z.get(e),
                        i = f.state.lights,
                        a = f.state.shadowsArray,
                        o = i.state.version,
                        s = re.getParameters(e, i.state, a, t, n),
                        u = re.getProgramCacheKey(s),
                        l = r.programs;
                    r.environment = e.isMeshStandardMaterial ? t.environment : null, r.fog = t.fog, r.envMap = (e.isMeshStandardMaterial ? $ : Q).get(e.envMap || r.environment), void 0 === l && (e.addEventListener("dispose", Le), l = new Map, r.programs = l);
                    var c = l.get(u);
                    if (void 0 !== c) {
                        if (r.currentProgram === c && r.lightsStateVersion === o) return Be(e, s), c
                    } else s.uniforms = re.getUniforms(e), e.onBuild(s, m), e.onBeforeCompile(s, m), c = re.acquireProgram(s, u), l.set(u, c), r.uniforms = s.uniforms;
                    var h = r.uniforms;
                    (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (h.clippingPlanes = ue.uniform), Be(e, s), r.needsLights = function(e) {
                        return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
                    }(e), r.lightsStateVersion = o, r.needsLights && (h.ambientLightColor.value = i.state.ambient, h.lightProbe.value = i.state.probe, h.directionalLights.value = i.state.directional, h.directionalLightShadows.value = i.state.directionalShadow, h.spotLights.value = i.state.spot, h.spotLightShadows.value = i.state.spotShadow, h.rectAreaLights.value = i.state.rectArea, h.ltc_1.value = i.state.rectAreaLTC1, h.ltc_2.value = i.state.rectAreaLTC2, h.pointLights.value = i.state.point, h.pointLightShadows.value = i.state.pointShadow, h.hemisphereLights.value = i.state.hemi, h.directionalShadowMap.value = i.state.directionalShadowMap, h.directionalShadowMatrix.value = i.state.directionalShadowMatrix, h.spotShadowMap.value = i.state.spotShadowMap, h.spotShadowMatrix.value = i.state.spotShadowMatrix, h.pointShadowMap.value = i.state.pointShadowMap, h.pointShadowMatrix.value = i.state.pointShadowMatrix);
                    var d = c.getUniforms(),
                        p = cs.seqWithValue(d.seq, h);
                    return r.currentProgram = c, r.uniformsList = p, c
                }

                function Be(e, t) {
                    var n = Z.get(e);
                    n.outputEncoding = t.outputEncoding, n.instancing = t.instancing, n.skinning = t.skinning, n.morphTargets = t.morphTargets, n.morphNormals = t.morphNormals, n.numClippingPlanes = t.numClippingPlanes, n.numIntersection = t.numClipIntersection, n.vertexAlphas = t.vertexAlphas, n.vertexTangents = t.vertexTangents
                }

                function ze(e, t, n, r) {
                    !0 !== t.isScene && (t = W), J.resetTextureUnits();
                    var i = t.fog,
                        a = n.isMeshStandardMaterial ? t.environment : null,
                        o = null === x ? m.outputEncoding : x.texture.encoding,
                        s = (n.isMeshStandardMaterial ? $ : Q).get(n.envMap || a),
                        u = !0 === n.vertexColors && !!r.geometry && !!r.geometry.attributes.color && 4 === r.geometry.attributes.color.itemSize,
                        l = !!r.geometry && !!r.geometry.attributes.tangent,
                        c = !!r.geometry && !!r.geometry.morphAttributes.position,
                        h = !!r.geometry && !!r.geometry.morphAttributes.normal,
                        d = Z.get(n),
                        p = f.state.lights;
                    if (!0 === B && (!0 === z || e !== w)) {
                        var v = e === w && n.id === b;
                        ue.setState(n, e, v)
                    }
                    var g = !1;
                    n.version === d.__version ? d.needsLights && d.lightsStateVersion !== p.state.version || d.outputEncoding !== o || r.isInstancedMesh && !1 === d.instancing ? g = !0 : r.isInstancedMesh || !0 !== d.instancing ? r.isSkinnedMesh && !1 === d.skinning ? g = !0 : r.isSkinnedMesh || !0 !== d.skinning ? d.envMap !== s || n.fog && d.fog !== i ? g = !0 : void 0 === d.numClippingPlanes || d.numClippingPlanes === ue.numPlanes && d.numIntersection === ue.numIntersection ? (d.vertexAlphas !== u || d.vertexTangents !== l || d.morphTargets !== c || d.morphNormals !== h) && (g = !0) : g = !0 : g = !0 : g = !0 : (g = !0, d.__version = n.version);
                    var y = d.currentProgram;
                    !0 === g && (y = Ue(n, t, r));
                    var _, T, M = !1,
                        S = !1,
                        E = !1,
                        A = y.getUniforms(),
                        L = d.uniforms;
                    if (Y.useProgram(y.program) && (M = !0, S = !0, E = !0), n.id !== b && (b = n.id, S = !0), M || w !== e) {
                        if (A.setValue(me, "projectionMatrix", e.projectionMatrix), X.logarithmicDepthBuffer && A.setValue(me, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), w !== e && (w = e, S = !0, E = !0), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap) {
                            var C = A.map.cameraPosition;
                            void 0 !== C && C.setValue(me, V.setFromMatrixPosition(e.matrixWorld))
                        }(n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && A.setValue(me, "isOrthographic", !0 === e.isOrthographicCamera), (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.isShadowMaterial || r.isSkinnedMesh) && A.setValue(me, "viewMatrix", e.matrixWorldInverse)
                    }
                    if (r.isSkinnedMesh) {
                        A.setOptional(me, r, "bindMatrix"), A.setOptional(me, r, "bindMatrixInverse");
                        var P = r.skeleton;
                        P && (X.floatVertexTextures ? (null === P.boneTexture && P.computeBoneTexture(), A.setValue(me, "boneTexture", P.boneTexture, J), A.setValue(me, "boneTextureSize", P.boneTextureSize)) : A.setOptional(me, P, "boneMatrices"))
                    }
                    return (S || d.receiveShadow !== r.receiveShadow) && (d.receiveShadow = r.receiveShadow, A.setValue(me, "receiveShadow", r.receiveShadow)), S && (A.setValue(me, "toneMappingExposure", m.toneMappingExposure), d.needsLights && (T = E, (_ = L).ambientLightColor.needsUpdate = T, _.lightProbe.needsUpdate = T, _.directionalLights.needsUpdate = T, _.directionalLightShadows.needsUpdate = T, _.pointLights.needsUpdate = T, _.pointLightShadows.needsUpdate = T, _.spotLights.needsUpdate = T, _.spotLightShadows.needsUpdate = T, _.rectAreaLights.needsUpdate = T, _.hemisphereLights.needsUpdate = T), i && n.fog && ie.refreshFogUniforms(L, i), ie.refreshMaterialUniforms(L, n, k, R, G), cs.upload(me, d.uniformsList, L, J)), n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (cs.upload(me, d.uniformsList, L, J), n.uniformsNeedUpdate = !1), n.isSpriteMaterial && A.setValue(me, "center", r.center), A.setValue(me, "modelViewMatrix", r.modelViewMatrix), A.setValue(me, "normalMatrix", r.normalMatrix), A.setValue(me, "modelMatrix", r.matrixWorld), y
                }
                Pe.setAnimationLoop((function(e) {
                    Ce && Ce(e)
                })), "undefined" != typeof window && Pe.setContext(window), this.setAnimationLoop = function(e) {
                    Ce = e, Te.setAnimationLoop(e), null === e ? Pe.stop() : Pe.start()
                }, Te.addEventListener("sessionstart", Re), Te.addEventListener("sessionend", ke), this.render = function(e, t) {
                    if (void 0 === t || !0 === t.isCamera) {
                        if (!0 !== g) {
                            !0 === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), !0 === Te.enabled && !0 === Te.isPresenting && (!0 === Te.cameraAutoUpdate && Te.updateCamera(t), t = Te.getCamera()), !0 === e.isScene && e.onBeforeRender(m, e, t, x), (f = se.get(e, v.length)).init(), v.push(f), H.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), U.setFromProjectionMatrix(H), z = this.localClippingEnabled, B = ue.init(this.clippingPlanes, z, t), (d = oe.get(e, p.length)).init(), p.push(d), Oe(e, t, 0, m.sortObjects), d.finish(), !0 === m.sortObjects && d.sort(P, D), !0 === B && ue.beginShadows();
                            var n = f.state.shadowsArray;
                            le.render(n, e, t), f.setupLights(), f.setupLightsView(t), !0 === B && ue.endShadows(), !0 === this.info.autoReset && this.info.reset(), ce.render(d, e);
                            var r = d.opaque,
                                i = d.transmissive,
                                a = d.transparent;
                            r.length > 0 && Ne(r, e, t), i.length > 0 && function(e, t, n, r) {
                                if (null === G) {
                                    var i = !0 === s && !0 === X.isWebGL2;
                                    G = new(i ? Dn : kn)(1024, 1024, {
                                        generateMipmaps: !0,
                                        type: null !== pe.convert(Ie) ? Ie : Ae,
                                        minFilter: Ee,
                                        magFilter: be,
                                        wrapS: _e,
                                        wrapT: _e
                                    })
                                }
                                var a = m.getRenderTarget();
                                m.setRenderTarget(G), m.clear();
                                var o = m.toneMapping;
                                m.toneMapping = ae, Ne(e, n, r), m.toneMapping = o, J.updateMultisampleRenderTarget(G), J.updateRenderTargetMipmap(G), m.setRenderTarget(a), Ne(t, n, r)
                            }(r, i, e, t), a.length > 0 && Ne(a, e, t), null !== x && (J.updateMultisampleRenderTarget(x), J.updateRenderTargetMipmap(x)), !0 === e.isScene && e.onAfterRender(m, e, t), Y.buffers.depth.setTest(!0), Y.buffers.depth.setMask(!0), Y.buffers.color.setMask(!0), Y.setPolygonOffset(!1), ve.resetDefaultState(), b = -1, w = null, v.pop(), f = v.length > 0 ? v[v.length - 1] : null, p.pop(), d = p.length > 0 ? p[p.length - 1] : null
                        }
                    } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
                }, this.getActiveCubeFace = function() {
                    return y
                }, this.getActiveMipmapLevel = function() {
                    return _
                }, this.getRenderTarget = function() {
                    return x
                }, this.setRenderTarget = function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                    x = e, y = t, _ = n, e && void 0 === Z.get(e).__webglFramebuffer && J.setupRenderTarget(e);
                    var r = null,
                        i = !1,
                        a = !1;
                    if (e) {
                        var o = e.texture;
                        (o.isDataTexture3D || o.isDataTexture2DArray) && (a = !0);
                        var s = Z.get(e).__webglFramebuffer;
                        e.isWebGLCubeRenderTarget ? (r = s[t], i = !0) : r = e.isWebGLMultisampleRenderTarget ? Z.get(e).__webglMultisampledFramebuffer : s, E.copy(e.viewport), A.copy(e.scissor), L = e.scissorTest
                    } else E.copy(I).multiplyScalar(k).floor(), A.copy(O).multiplyScalar(k).floor(), L = N;
                    if (Y.bindFramebuffer(me.FRAMEBUFFER, r) && X.drawBuffers) {
                        var u = !1;
                        if (e)
                            if (e.isWebGLMultipleRenderTargets) {
                                var l = e.texture;
                                if (F.length !== l.length || F[0] !== me.COLOR_ATTACHMENT0) {
                                    for (var c = 0, h = l.length; c < h; c++) F[c] = me.COLOR_ATTACHMENT0 + c;
                                    F.length = l.length, u = !0
                                }
                            } else 1 === F.length && F[0] === me.COLOR_ATTACHMENT0 || (F[0] = me.COLOR_ATTACHMENT0, F.length = 1, u = !0);
                        else 1 === F.length && F[0] === me.BACK || (F[0] = me.BACK, F.length = 1, u = !0);
                        u && (X.isWebGL2 ? me.drawBuffers(F) : q.get("WEBGL_draw_buffers").drawBuffersWEBGL(F))
                    }
                    if (Y.viewport(E), Y.scissor(A), Y.setScissorTest(L), i) {
                        var d = Z.get(e.texture);
                        me.framebufferTexture2D(me.FRAMEBUFFER, me.COLOR_ATTACHMENT0, me.TEXTURE_CUBE_MAP_POSITIVE_X + t, d.__webglTexture, n)
                    } else if (a) {
                        var f = Z.get(e.texture),
                            p = t || 0;
                        me.framebufferTextureLayer(me.FRAMEBUFFER, me.COLOR_ATTACHMENT0, f.__webglTexture, n || 0, p)
                    }
                }, this.readRenderTargetPixels = function(e, t, n, r, i, a, o) {
                    if (e && e.isWebGLRenderTarget) {
                        var s = Z.get(e).__webglFramebuffer;
                        if (e.isWebGLCubeRenderTarget && void 0 !== o && (s = s[o]), s) {
                            Y.bindFramebuffer(me.FRAMEBUFFER, s);
                            try {
                                var u = e.texture,
                                    l = u.format,
                                    c = u.type;
                                if (l !== Ge && pe.convert(l) !== me.getParameter(me.IMPLEMENTATION_COLOR_READ_FORMAT)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                                var h = c === Ie && (q.has("EXT_color_buffer_half_float") || X.isWebGL2 && q.has("EXT_color_buffer_float"));
                                if (!(c === Ae || pe.convert(c) === me.getParameter(me.IMPLEMENTATION_COLOR_READ_TYPE) || c === De && (X.isWebGL2 || q.has("OES_texture_float") || q.has("WEBGL_color_buffer_float")) || h)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                                me.checkFramebufferStatus(me.FRAMEBUFFER) === me.FRAMEBUFFER_COMPLETE ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && me.readPixels(t, n, r, i, pe.convert(l), pe.convert(c), a) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                            } finally {
                                var d = null !== x ? Z.get(x).__webglFramebuffer : null;
                                Y.bindFramebuffer(me.FRAMEBUFFER, d)
                            }
                        }
                    } else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
                }, this.copyFramebufferToTexture = function(e, t) {
                    var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        r = Math.pow(2, -n),
                        i = Math.floor(t.image.width * r),
                        a = Math.floor(t.image.height * r),
                        o = pe.convert(t.format);
                    X.isWebGL2 && (o === me.RGB && (o = me.RGB8), o === me.RGBA && (o = me.RGBA8)), J.setTexture2D(t, 0), me.copyTexImage2D(me.TEXTURE_2D, n, o, e.x, e.y, i, a, 0), Y.unbindTexture()
                }, this.copyTextureToTexture = function(e, t, n) {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                        i = t.image.width,
                        a = t.image.height,
                        o = pe.convert(n.format),
                        s = pe.convert(n.type);
                    J.setTexture2D(n, 0), me.pixelStorei(me.UNPACK_FLIP_Y_WEBGL, n.flipY), me.pixelStorei(me.UNPACK_PREMULTIPLY_ALPHA_WEBGL, n.premultiplyAlpha), me.pixelStorei(me.UNPACK_ALIGNMENT, n.unpackAlignment), t.isDataTexture ? me.texSubImage2D(me.TEXTURE_2D, r, e.x, e.y, i, a, o, s, t.image.data) : t.isCompressedTexture ? me.compressedTexSubImage2D(me.TEXTURE_2D, r, e.x, e.y, t.mipmaps[0].width, t.mipmaps[0].height, o, t.mipmaps[0].data) : me.texSubImage2D(me.TEXTURE_2D, r, e.x, e.y, o, s, t.image), 0 === r && n.generateMipmaps && me.generateMipmap(me.TEXTURE_2D), Y.unbindTexture()
                }, this.copyTextureToTexture3D = function(e, t, n, r) {
                    var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
                    if (m.isWebGL1Renderer) console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");
                    else {
                        var a, o = e.max.x - e.min.x + 1,
                            s = e.max.y - e.min.y + 1,
                            u = e.max.z - e.min.z + 1,
                            l = pe.convert(r.format),
                            c = pe.convert(r.type);
                        if (r.isDataTexture3D) J.setTexture3D(r, 0), a = me.TEXTURE_3D;
                        else {
                            if (!r.isDataTexture2DArray) return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");
                            J.setTexture2DArray(r, 0), a = me.TEXTURE_2D_ARRAY
                        }
                        me.pixelStorei(me.UNPACK_FLIP_Y_WEBGL, r.flipY), me.pixelStorei(me.UNPACK_PREMULTIPLY_ALPHA_WEBGL, r.premultiplyAlpha), me.pixelStorei(me.UNPACK_ALIGNMENT, r.unpackAlignment);
                        var h = me.getParameter(me.UNPACK_ROW_LENGTH),
                            d = me.getParameter(me.UNPACK_IMAGE_HEIGHT),
                            f = me.getParameter(me.UNPACK_SKIP_PIXELS),
                            p = me.getParameter(me.UNPACK_SKIP_ROWS),
                            v = me.getParameter(me.UNPACK_SKIP_IMAGES),
                            g = n.isCompressedTexture ? n.mipmaps[0] : n.image;
                        me.pixelStorei(me.UNPACK_ROW_LENGTH, g.width), me.pixelStorei(me.UNPACK_IMAGE_HEIGHT, g.height), me.pixelStorei(me.UNPACK_SKIP_PIXELS, e.min.x), me.pixelStorei(me.UNPACK_SKIP_ROWS, e.min.y), me.pixelStorei(me.UNPACK_SKIP_IMAGES, e.min.z), n.isDataTexture || n.isDataTexture3D ? me.texSubImage3D(a, i, t.x, t.y, t.z, o, s, u, l, c, g.data) : n.isCompressedTexture ? (console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."), me.compressedTexSubImage3D(a, i, t.x, t.y, t.z, o, s, u, l, g.data)) : me.texSubImage3D(a, i, t.x, t.y, t.z, o, s, u, l, c, g), me.pixelStorei(me.UNPACK_ROW_LENGTH, h), me.pixelStorei(me.UNPACK_IMAGE_HEIGHT, d), me.pixelStorei(me.UNPACK_SKIP_PIXELS, f), me.pixelStorei(me.UNPACK_SKIP_ROWS, p), me.pixelStorei(me.UNPACK_SKIP_IMAGES, v), 0 === i && r.generateMipmaps && me.generateMipmap(a), Y.unbindTexture()
                    }
                }, this.initTexture = function(e) {
                    J.setTexture2D(e, 0), Y.unbindTexture()
                }, this.resetState = function() {
                    y = 0, _ = 0, x = null, Y.reset(), ve.reset()
                }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                    detail: this
                }))
            }
            var ru = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(nu);
            ru.prototype.isWebGL1Renderer = !0;
            var iu = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 25e-5;
                    (0, v.default)(this, e), this.name = "", this.color = new ri(t), this.density = n
                }
                return (0, m.default)(e, [{
                    key: "clone",
                    value: function() {
                        return new e(this.color, this.density)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            type: "FogExp2",
                            color: this.color.getHex(),
                            density: this.density
                        }
                    }
                }]), e
            }();
            iu.prototype.isFogExp2 = !0;
            var au = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e3;
                    (0, v.default)(this, e), this.name = "", this.color = new ri(t), this.near = n, this.far = r
                }
                return (0, m.default)(e, [{
                    key: "clone",
                    value: function() {
                        return new e(this.color, this.near, this.far)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return {
                            type: "Fog",
                            color: this.color.getHex(),
                            near: this.near,
                            far: this.far
                        }
                    }
                }]), e
            }();
            au.prototype.isFog = !0;
            var ou = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "Scene", e.background = null, e.environment = null, e.fog = null, e.overrideMaterial = null, e.autoUpdate = !0, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe", {
                        detail: (0, h.default)(e)
                    })), e
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e, t) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.environment && (this.environment = e.environment.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                        return null !== this.fog && (t.object.fog = this.fog.toJSON()), t
                    }
                }]), n
            }(Fr);
            ou.prototype.isScene = !0;
            var su = function() {
                function e(t, n) {
                    (0, v.default)(this, e), this.array = t, this.stride = n, this.count = void 0 !== t ? t.length / n : 0, this.usage = on, this.updateRange = {
                        offset: 0,
                        count: -1
                    }, this.version = 0, this.uuid = vn()
                }
                return (0, m.default)(e, [{
                    key: "onUploadCallback",
                    value: function() {}
                }, {
                    key: "needsUpdate",
                    set: function(e) {
                        !0 === e && this.version++
                    }
                }, {
                    key: "setUsage",
                    value: function(e) {
                        return this.usage = e, this
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this
                    }
                }, {
                    key: "copyAt",
                    value: function(e, t, n) {
                        e *= this.stride, n *= t.stride;
                        for (var r = 0, i = this.stride; r < i; r++) this.array[e + r] = t.array[n + r];
                        return this
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return this.array.set(e, t), this
                    }
                }, {
                    key: "clone",
                    value: function(e) {
                        void 0 === e.arrayBuffers && (e.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = vn()), void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer);
                        var t = new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),
                            n = new this.constructor(t, this.stride);
                        return n.setUsage(this.usage), n
                    }
                }, {
                    key: "onUpload",
                    value: function(e) {
                        return this.onUploadCallback = e, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        return void 0 === e.arrayBuffers && (e.arrayBuffers = {}), void 0 === this.array.buffer._uuid && (this.array.buffer._uuid = vn()), void 0 === e.arrayBuffers[this.array.buffer._uuid] && (e.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer))), {
                            uuid: this.uuid,
                            buffer: this.array.buffer._uuid,
                            type: this.array.constructor.name,
                            stride: this.stride
                        }
                    }
                }]), e
            }();
            su.prototype.isInterleavedBuffer = !0;
            var uu = new On,
                lu = function() {
                    function e(t, n, r) {
                        var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                        (0, v.default)(this, e), this.name = "", this.data = t, this.itemSize = n, this.offset = r, this.normalized = !0 === i
                    }
                    return (0, m.default)(e, [{
                        key: "count",
                        get: function() {
                            return this.data.count
                        }
                    }, {
                        key: "array",
                        get: function() {
                            return this.data.array
                        }
                    }, {
                        key: "needsUpdate",
                        set: function(e) {
                            this.data.needsUpdate = e
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            for (var t = 0, n = this.data.count; t < n; t++) uu.x = this.getX(t), uu.y = this.getY(t), uu.z = this.getZ(t), uu.applyMatrix4(e), this.setXYZ(t, uu.x, uu.y, uu.z);
                            return this
                        }
                    }, {
                        key: "applyNormalMatrix",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) uu.x = this.getX(t), uu.y = this.getY(t), uu.z = this.getZ(t), uu.applyNormalMatrix(e), this.setXYZ(t, uu.x, uu.y, uu.z);
                            return this
                        }
                    }, {
                        key: "transformDirection",
                        value: function(e) {
                            for (var t = 0, n = this.count; t < n; t++) uu.x = this.getX(t), uu.y = this.getY(t), uu.z = this.getZ(t), uu.transformDirection(e), this.setXYZ(t, uu.x, uu.y, uu.z);
                            return this
                        }
                    }, {
                        key: "setX",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset] = t, this
                        }
                    }, {
                        key: "setY",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 1] = t, this
                        }
                    }, {
                        key: "setZ",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 2] = t, this
                        }
                    }, {
                        key: "setW",
                        value: function(e, t) {
                            return this.data.array[e * this.data.stride + this.offset + 3] = t, this
                        }
                    }, {
                        key: "getX",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset]
                        }
                    }, {
                        key: "getY",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 1]
                        }
                    }, {
                        key: "getZ",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 2]
                        }
                    }, {
                        key: "getW",
                        value: function(e) {
                            return this.data.array[e * this.data.stride + this.offset + 3]
                        }
                    }, {
                        key: "setXY",
                        value: function(e, t, n) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this
                        }
                    }, {
                        key: "setXYZ",
                        value: function(e, t, n, r) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this
                        }
                    }, {
                        key: "setXYZW",
                        value: function(e, t, n, r, i) {
                            return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this.data.array[e + 3] = i, this
                        }
                    }, {
                        key: "clone",
                        value: function(t) {
                            if (void 0 === t) {
                                console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");
                                for (var n = [], r = 0; r < this.count; r++)
                                    for (var i = r * this.data.stride + this.offset, a = 0; a < this.itemSize; a++) n.push(this.data.array[i + a]);
                                return new si(new this.array.constructor(n), this.itemSize, this.normalized)
                            }
                            return void 0 === t.interleavedBuffers && (t.interleavedBuffers = {}), void 0 === t.interleavedBuffers[this.data.uuid] && (t.interleavedBuffers[this.data.uuid] = this.data.clone(t)), new e(t.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized)
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            if (void 0 === e) {
                                console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");
                                for (var t = [], n = 0; n < this.count; n++)
                                    for (var r = n * this.data.stride + this.offset, i = 0; i < this.itemSize; i++) t.push(this.data.array[r + i]);
                                return {
                                    itemSize: this.itemSize,
                                    type: this.array.constructor.name,
                                    array: t,
                                    normalized: this.normalized
                                }
                            }
                            return void 0 === e.interleavedBuffers && (e.interleavedBuffers = {}), void 0 === e.interleavedBuffers[this.data.uuid] && (e.interleavedBuffers[this.data.uuid] = this.data.toJSON(e)), {
                                isInterleavedBufferAttribute: !0,
                                itemSize: this.itemSize,
                                data: this.data.uuid,
                                offset: this.offset,
                                normalized: this.normalized
                            }
                        }
                    }]), e
                }();
            lu.prototype.isInterleavedBufferAttribute = !0;
            var cu, hu = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "SpriteMaterial", r.color = new ri(16777215), r.map = null, r.alphaMap = null, r.rotation = 0, r.sizeAttenuation = !0, r.transparent = !0, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this
                    }
                }]), n
            }(Zr);
            hu.prototype.isSpriteMaterial = !0;
            var du = new On,
                fu = new On,
                pu = new On,
                vu = new Tn,
                mu = new Tn,
                gu = new dr,
                yu = new On,
                _u = new On,
                xu = new On,
                bu = new Tn,
                wu = new Tn,
                Tu = new Tn,
                Mu = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        if ((0, v.default)(this, n), (r = t.call(this)).type = "Sprite", void 0 === cu) {
                            cu = new Li;
                            var i = new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]),
                                a = new su(i, 5);
                            cu.setIndex([0, 1, 2, 0, 2, 3]), cu.setAttribute("position", new lu(a, 3, 0, !1)), cu.setAttribute("uv", new lu(a, 2, 3, !1))
                        }
                        return r.geometry = cu, r.material = void 0 !== e ? e : new hu, r.center = new Tn(.5, .5), r
                    }
                    return (0, m.default)(n, [{
                        key: "raycast",
                        value: function(e, t) {
                            null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), fu.setFromMatrixScale(this.matrixWorld), gu.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), pu.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && fu.multiplyScalar(-pu.z);
                            var n, r, i = this.material.rotation;
                            0 !== i && (r = Math.cos(i), n = Math.sin(i));
                            var a = this.center;
                            Su(yu.set(-.5, -.5, 0), pu, a, fu, n, r), Su(_u.set(.5, -.5, 0), pu, a, fu, n, r), Su(xu.set(.5, .5, 0), pu, a, fu, n, r), bu.set(0, 0), wu.set(1, 0), Tu.set(1, 1);
                            var o = e.ray.intersectTriangle(yu, _u, xu, !1, du);
                            if (null !== o || (Su(_u.set(-.5, .5, 0), pu, a, fu, n, r), wu.set(0, 1), null !== (o = e.ray.intersectTriangle(yu, xu, _u, !1, du)))) {
                                var s = e.ray.origin.distanceTo(du);
                                s < e.near || s > e.far || t.push({
                                    distance: s,
                                    point: du.clone(),
                                    uv: Yr.getUV(du, yu, _u, xu, bu, wu, Tu, new Tn),
                                    face: null,
                                    object: this
                                })
                            }
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), void 0 !== e.center && this.center.copy(e.center), this.material = e.material, this
                        }
                    }]), n
                }(Fr);

            function Su(e, t, n, r, i, a) {
                vu.subVectors(e, n).addScalar(.5).multiply(r), void 0 !== i ? (mu.x = a * vu.x - i * vu.y, mu.y = i * vu.x + a * vu.y) : mu.copy(vu), e.copy(t), e.x += mu.x, e.y += mu.y, e.applyMatrix4(gu)
            }
            Mu.prototype.isSprite = !0;
            var Eu = new On,
                Au = new On,
                Lu = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this))._currentLevel = 0, e.type = "LOD", Object.defineProperties((0, h.default)(e), {
                            levels: {
                                enumerable: !0,
                                value: []
                            },
                            isLOD: {
                                value: !0
                            }
                        }), e.autoUpdate = !0, e
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, !1);
                            for (var t = e.levels, r = 0, i = t.length; r < i; r++) {
                                var a = t[r];
                                this.addLevel(a.object.clone(), a.distance)
                            }
                            return this.autoUpdate = e.autoUpdate, this
                        }
                    }, {
                        key: "addLevel",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                            t = Math.abs(t);
                            var n, r = this.levels;
                            for (n = 0; n < r.length && !(t < r[n].distance); n++);
                            return r.splice(n, 0, {
                                distance: t,
                                object: e
                            }), this.add(e), this
                        }
                    }, {
                        key: "getCurrentLevel",
                        value: function() {
                            return this._currentLevel
                        }
                    }, {
                        key: "getObjectForDistance",
                        value: function(e) {
                            var t = this.levels;
                            if (t.length > 0) {
                                var n, r;
                                for (n = 1, r = t.length; n < r && !(e < t[n].distance); n++);
                                return t[n - 1].object
                            }
                            return null
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            if (this.levels.length > 0) {
                                Eu.setFromMatrixPosition(this.matrixWorld);
                                var n = e.ray.origin.distanceTo(Eu);
                                this.getObjectForDistance(n).raycast(e, t)
                            }
                        }
                    }, {
                        key: "update",
                        value: function(e) {
                            var t = this.levels;
                            if (t.length > 1) {
                                Eu.setFromMatrixPosition(e.matrixWorld), Au.setFromMatrixPosition(this.matrixWorld);
                                var n, r, i = Eu.distanceTo(Au) / e.zoom;
                                for (t[0].object.visible = !0, n = 1, r = t.length; n < r && i >= t[n].distance; n++) t[n - 1].object.visible = !1, t[n].object.visible = !0;
                                for (this._currentLevel = n - 1; n < r; n++) t[n].object.visible = !1
                            }
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                            !1 === this.autoUpdate && (t.object.autoUpdate = !1), t.object.levels = [];
                            for (var r = this.levels, i = 0, a = r.length; i < a; i++) {
                                var o = r[i];
                                t.object.levels.push({
                                    object: o.object.uuid,
                                    distance: o.distance
                                })
                            }
                            return t
                        }
                    }]), n
                }(Fr),
                Cu = new On,
                Ru = new Rn,
                ku = new Rn,
                Pu = new On,
                Du = new dr,
                Iu = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "SkinnedMesh", i.bindMode = "attached", i.bindMatrix = new dr, i.bindMatrixInverse = new dr, i
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.bindMode = e.bindMode, this.bindMatrix.copy(e.bindMatrix), this.bindMatrixInverse.copy(e.bindMatrixInverse), this.skeleton = e.skeleton, this
                        }
                    }, {
                        key: "bind",
                        value: function(e, t) {
                            this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.copy(t).invert()
                        }
                    }, {
                        key: "pose",
                        value: function() {
                            this.skeleton.pose()
                        }
                    }, {
                        key: "normalizeSkinWeights",
                        value: function() {
                            for (var e = new Rn, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++) {
                                e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
                                var i = 1 / e.manhattanLength();
                                i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w)
                            }
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.copy(this.matrixWorld).invert() : "detached" === this.bindMode ? this.bindMatrixInverse.copy(this.bindMatrix).invert() : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
                        }
                    }, {
                        key: "boneTransform",
                        value: function(e, t) {
                            var n = this.skeleton,
                                r = this.geometry;
                            Ru.fromBufferAttribute(r.attributes.skinIndex, e), ku.fromBufferAttribute(r.attributes.skinWeight, e), Cu.fromBufferAttribute(r.attributes.position, e).applyMatrix4(this.bindMatrix), t.set(0, 0, 0);
                            for (var i = 0; i < 4; i++) {
                                var a = ku.getComponent(i);
                                if (0 !== a) {
                                    var o = Ru.getComponent(i);
                                    Du.multiplyMatrices(n.bones[o].matrixWorld, n.boneInverses[o]), t.addScaledVector(Pu.copy(Cu).applyMatrix4(Du), a)
                                }
                            }
                            return t.applyMatrix4(this.bindMatrixInverse)
                        }
                    }]), n
                }(qi);
            Iu.prototype.isSkinnedMesh = !0;
            var Ou = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "Bone", e
                }
                return (0, m.default)(n)
            }(Fr);
            Ou.prototype.isBone = !0;
            var Nu = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                        o = arguments.length > 3 ? arguments[3] : void 0,
                        s = arguments.length > 4 ? arguments[4] : void 0,
                        u = arguments.length > 5 ? arguments[5] : void 0,
                        l = arguments.length > 6 ? arguments[6] : void 0,
                        c = arguments.length > 7 ? arguments[7] : void 0,
                        h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : be,
                        d = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : be,
                        f = arguments.length > 10 ? arguments[10] : void 0,
                        p = arguments.length > 11 ? arguments[11] : void 0;
                    return (0, v.default)(this, n), (e = t.call(this, null, u, l, c, h, d, o, s, f, p)).image = {
                        data: r,
                        width: i,
                        height: a
                    }, e.magFilter = h, e.minFilter = d, e.generateMipmaps = !1, e.flipY = !1, e.unpackAlignment = 1, e.needsUpdate = !0, e
                }
                return (0, m.default)(n)
            }(Ln);
            Nu.prototype.isDataTexture = !0;
            var Fu = new dr,
                Uu = new dr,
                Bu = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                        (0, v.default)(this, e), this.uuid = vn(), this.bones = t.slice(0), this.boneInverses = n, this.boneMatrices = null, this.boneTexture = null, this.boneTextureSize = 0, this.frame = -1, this.init()
                    }
                    return (0, m.default)(e, [{
                        key: "init",
                        value: function() {
                            var e = this.bones,
                                t = this.boneInverses;
                            if (this.boneMatrices = new Float32Array(16 * e.length), 0 === t.length) this.calculateInverses();
                            else if (e.length !== t.length) {
                                console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."), this.boneInverses = [];
                                for (var n = 0, r = this.bones.length; n < r; n++) this.boneInverses.push(new dr)
                            }
                        }
                    }, {
                        key: "calculateInverses",
                        value: function() {
                            this.boneInverses.length = 0;
                            for (var e = 0, t = this.bones.length; e < t; e++) {
                                var n = new dr;
                                this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(), this.boneInverses.push(n)
                            }
                        }
                    }, {
                        key: "pose",
                        value: function() {
                            for (var e = 0, t = this.bones.length; e < t; e++) {
                                var n = this.bones[e];
                                n && n.matrixWorld.copy(this.boneInverses[e]).invert()
                            }
                            for (var r = 0, i = this.bones.length; r < i; r++) {
                                var a = this.bones[r];
                                a && (a.parent && a.parent.isBone ? (a.matrix.copy(a.parent.matrixWorld).invert(), a.matrix.multiply(a.matrixWorld)) : a.matrix.copy(a.matrixWorld), a.matrix.decompose(a.position, a.quaternion, a.scale))
                            }
                        }
                    }, {
                        key: "update",
                        value: function() {
                            for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, r = this.boneTexture, i = 0, a = e.length; i < a; i++) {
                                var o = e[i] ? e[i].matrixWorld : Uu;
                                Fu.multiplyMatrices(o, t[i]), Fu.toArray(n, 16 * i)
                            }
                            null !== r && (r.needsUpdate = !0)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return new e(this.bones, this.boneInverses)
                        }
                    }, {
                        key: "computeBoneTexture",
                        value: function() {
                            var e = Math.sqrt(4 * this.bones.length);
                            e = xn(e), e = Math.max(e, 4);
                            var t = new Float32Array(e * e * 4);
                            t.set(this.boneMatrices);
                            var n = new Nu(t, e, e, Ge, De);
                            return this.boneMatrices = t, this.boneTexture = n, this.boneTextureSize = e, this
                        }
                    }, {
                        key: "getBoneByName",
                        value: function(e) {
                            for (var t = 0, n = this.bones.length; t < n; t++) {
                                var r = this.bones[t];
                                if (r.name === e) return r
                            }
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            null !== this.boneTexture && (this.boneTexture.dispose(), this.boneTexture = null)
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e, t) {
                            this.uuid = e.uuid;
                            for (var n = 0, r = e.bones.length; n < r; n++) {
                                var i = e.bones[n],
                                    a = t[i];
                                void 0 === a && (console.warn("THREE.Skeleton: No bone found with UUID:", i), a = new Ou), this.bones.push(a), this.boneInverses.push((new dr).fromArray(e.boneInverses[n]))
                            }
                            return this.init(), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                metadata: {
                                    version: 4.5,
                                    type: "Skeleton",
                                    generator: "Skeleton.toJSON"
                                },
                                bones: [],
                                boneInverses: []
                            };
                            e.uuid = this.uuid;
                            for (var t = this.bones, n = this.boneInverses, r = 0, i = t.length; r < i; r++) {
                                var a = t[r];
                                e.bones.push(a.uuid);
                                var o = n[r];
                                e.boneInverses.push(o.toArray())
                            }
                            return e
                        }
                    }]), e
                }(),
                zu = new dr,
                Gu = new dr,
                Hu = [],
                Vu = new qi,
                Wu = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        return (0, v.default)(this, n), (a = t.call(this, e, r)).instanceMatrix = new si(new Float32Array(16 * i), 16), a.instanceColor = null, a.count = i, a.frustumCulled = !1, a
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.instanceMatrix.copy(e.instanceMatrix), null !== e.instanceColor && (this.instanceColor = e.instanceColor.clone()), this.count = e.count, this
                        }
                    }, {
                        key: "getColorAt",
                        value: function(e, t) {
                            t.fromArray(this.instanceColor.array, 3 * e)
                        }
                    }, {
                        key: "getMatrixAt",
                        value: function(e, t) {
                            t.fromArray(this.instanceMatrix.array, 16 * e)
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.matrixWorld,
                                r = this.count;
                            if (Vu.geometry = this.geometry, Vu.material = this.material, void 0 !== Vu.material)
                                for (var i = 0; i < r; i++) {
                                    this.getMatrixAt(i, zu), Gu.multiplyMatrices(n, zu), Vu.matrixWorld = Gu, Vu.raycast(e, Hu);
                                    for (var a = 0, o = Hu.length; a < o; a++) {
                                        var s = Hu[a];
                                        s.instanceId = i, s.object = this, t.push(s)
                                    }
                                    Hu.length = 0
                                }
                        }
                    }, {
                        key: "setColorAt",
                        value: function(e, t) {
                            null === this.instanceColor && (this.instanceColor = new si(new Float32Array(3 * this.instanceMatrix.count), 3)), t.toArray(this.instanceColor.array, 3 * e)
                        }
                    }, {
                        key: "setMatrixAt",
                        value: function(e, t) {
                            t.toArray(this.instanceMatrix.array, 16 * e)
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {}
                    }, {
                        key: "dispose",
                        value: function() {
                            this.dispatchEvent({
                                type: "dispose"
                            })
                        }
                    }]), n
                }(qi);
            Wu.prototype.isInstancedMesh = !0;
            var ju = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "LineBasicMaterial", r.color = new ri(16777215), r.linewidth = 1, r.linecap = "round", r.linejoin = "round", r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this
                    }
                }]), n
            }(Zr);
            ju.prototype.isLineBasicMaterial = !0;
            var qu = new On,
                Xu = new On,
                Yu = new dr,
                Ku = new hr,
                Zu = new rr,
                Ju = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Li,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new ju;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "Line", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "computeLineDistances",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry)
                                if (null === e.index) {
                                    for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++) qu.fromBufferAttribute(t, r - 1), Xu.fromBufferAttribute(t, r), n[r] = n[r - 1], n[r] += qu.distanceTo(Xu);
                                    e.setAttribute("lineDistance", new mi(n, 1))
                                } else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                            else e.isGeometry && console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
                            return this
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.geometry,
                                r = this.matrixWorld,
                                i = e.params.Line.threshold,
                                a = n.drawRange;
                            if (null === n.boundingSphere && n.computeBoundingSphere(), Zu.copy(n.boundingSphere), Zu.applyMatrix4(r), Zu.radius += i, !1 !== e.ray.intersectsSphere(Zu)) {
                                Yu.copy(r).invert(), Ku.copy(e.ray).applyMatrix4(Yu);
                                var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                    s = o * o,
                                    u = new On,
                                    l = new On,
                                    c = new On,
                                    h = new On,
                                    d = this.isLineSegments ? 2 : 1;
                                if (n.isBufferGeometry) {
                                    var f = n.index,
                                        p = n.attributes.position;
                                    if (null !== f)
                                        for (var v = Math.max(0, a.start), m = Math.min(f.count, a.start + a.count) - 1; v < m; v += d) {
                                            var g = f.getX(v),
                                                y = f.getX(v + 1);
                                            if (u.fromBufferAttribute(p, g), l.fromBufferAttribute(p, y), !(Ku.distanceSqToSegment(u, l, h, c) > s)) {
                                                h.applyMatrix4(this.matrixWorld);
                                                var _ = e.ray.origin.distanceTo(h);
                                                _ < e.near || _ > e.far || t.push({
                                                    distance: _,
                                                    point: c.clone().applyMatrix4(this.matrixWorld),
                                                    index: v,
                                                    face: null,
                                                    faceIndex: null,
                                                    object: this
                                                })
                                            }
                                        } else
                                            for (var x = Math.max(0, a.start), b = Math.min(p.count, a.start + a.count) - 1; x < b; x += d)
                                                if (u.fromBufferAttribute(p, x), l.fromBufferAttribute(p, x + 1), !(Ku.distanceSqToSegment(u, l, h, c) > s)) {
                                                    h.applyMatrix4(this.matrixWorld);
                                                    var w = e.ray.origin.distanceTo(h);
                                                    w < e.near || w > e.far || t.push({
                                                        distance: w,
                                                        point: c.clone().applyMatrix4(this.matrixWorld),
                                                        index: x,
                                                        face: null,
                                                        faceIndex: null,
                                                        object: this
                                                    })
                                                }
                                } else n.isGeometry && console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }]), n
                }(Fr);
            Ju.prototype.isLine = !0;
            var Qu = new On,
                $u = new On,
                el = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "LineSegments", i
                    }
                    return (0, m.default)(n, [{
                        key: "computeLineDistances",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry)
                                if (null === e.index) {
                                    for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2) Qu.fromBufferAttribute(t, r), $u.fromBufferAttribute(t, r + 1), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + Qu.distanceTo($u);
                                    e.setAttribute("lineDistance", new mi(n, 1))
                                } else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
                            else e.isGeometry && console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");
                            return this
                        }
                    }]), n
                }(Ju);
            el.prototype.isLineSegments = !0;
            var tl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "LineLoop", i
                }
                return (0, m.default)(n)
            }(Ju);
            tl.prototype.isLineLoop = !0;
            var nl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "PointsMaterial", r.color = new ri(16777215), r.map = null, r.alphaMap = null, r.size = 1, r.sizeAttenuation = !0, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this
                    }
                }]), n
            }(Zr);
            nl.prototype.isPointsMaterial = !0;
            var rl = new dr,
                il = new hr,
                al = new rr,
                ol = new On,
                sl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Li,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new nl;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "Points", e.geometry = r, e.material = i, e.updateMorphTargets(), e
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.material = e.material, this.geometry = e.geometry, this
                        }
                    }, {
                        key: "raycast",
                        value: function(e, t) {
                            var n = this.geometry,
                                r = this.matrixWorld,
                                i = e.params.Points.threshold,
                                a = n.drawRange;
                            if (null === n.boundingSphere && n.computeBoundingSphere(), al.copy(n.boundingSphere), al.applyMatrix4(r), al.radius += i, !1 !== e.ray.intersectsSphere(al)) {
                                rl.copy(r).invert(), il.copy(e.ray).applyMatrix4(rl);
                                var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                                    s = o * o;
                                if (n.isBufferGeometry) {
                                    var u = n.index,
                                        l = n.attributes.position;
                                    if (null !== u)
                                        for (var c = Math.max(0, a.start), h = Math.min(u.count, a.start + a.count); c < h; c++) {
                                            var d = u.getX(c);
                                            ol.fromBufferAttribute(l, d), ul(ol, d, s, r, e, t, this)
                                        } else
                                            for (var f = Math.max(0, a.start), p = Math.min(l.count, a.start + a.count); f < p; f++) ol.fromBufferAttribute(l, f), ul(ol, f, s, r, e, t, this)
                                } else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }, {
                        key: "updateMorphTargets",
                        value: function() {
                            var e = this.geometry;
                            if (e.isBufferGeometry) {
                                var t = e.morphAttributes,
                                    n = Object.keys(t);
                                if (n.length > 0) {
                                    var r = t[n[0]];
                                    if (void 0 !== r) {
                                        this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                                        for (var i = 0, a = r.length; i < a; i++) {
                                            var o = r[i].name || String(i);
                                            this.morphTargetInfluences.push(0), this.morphTargetDictionary[o] = i
                                        }
                                    }
                                }
                            } else {
                                var s = e.morphTargets;
                                void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
                            }
                        }
                    }]), n
                }(Fr);

            function ul(e, t, n, r, i, a, o) {
                var s = il.distanceSqToPoint(e);
                if (s < n) {
                    var u = new On;
                    il.closestPointToPoint(e, u), u.applyMatrix4(r);
                    var l = i.ray.origin.distanceTo(u);
                    if (l < i.near || l > i.far) return;
                    a.push({
                        distance: l,
                        distanceToRay: Math.sqrt(s),
                        point: u,
                        index: t,
                        face: null,
                        object: o
                    })
                }
            }
            sl.prototype.isPoints = !0;
            var ll = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, u, l, c) {
                    var d;
                    (0, v.default)(this, n), (d = t.call(this, e, r, i, a, o, s, u, l, c)).format = void 0 !== u ? u : ze, d.minFilter = void 0 !== s ? s : Me, d.magFilter = void 0 !== o ? o : Me, d.generateMipmaps = !1;
                    var f = (0, h.default)(d);
                    return "requestVideoFrameCallback" in e && e.requestVideoFrameCallback((function t() {
                        f.needsUpdate = !0, e.requestVideoFrameCallback(t)
                    })), d
                }
                return (0, m.default)(n, [{
                    key: "clone",
                    value: function() {
                        return new this.constructor(this.image).copy(this)
                    }
                }, {
                    key: "update",
                    value: function() {
                        var e = this.image;
                        !1 == "requestVideoFrameCallback" in e && e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
                    }
                }]), n
            }(Ln);
            ll.prototype.isVideoTexture = !0;
            var cl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, u, l, c, h, d, f) {
                    var p;
                    return (0, v.default)(this, n), (p = t.call(this, null, s, u, l, c, h, a, o, d, f)).image = {
                        width: r,
                        height: i
                    }, p.mipmaps = e, p.flipY = !1, p.generateMipmaps = !1, p
                }
                return (0, m.default)(n)
            }(Ln);
            cl.prototype.isCompressedTexture = !0;
            var hl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, u, l, c) {
                    var h;
                    return (0, v.default)(this, n), (h = t.call(this, e, r, i, a, o, s, u, l, c)).needsUpdate = !0, h
                }
                return (0, m.default)(n)
            }(Ln);
            hl.prototype.isCanvasTexture = !0;
            var dl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s, u, l, c, h) {
                    var d;
                    if ((0, v.default)(this, n), (h = void 0 !== h ? h : je) !== je && h !== qe) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                    return void 0 === i && h === je && (i = Re), void 0 === i && h === qe && (i = Ue), (d = t.call(this, null, a, o, s, u, l, h, i, c)).image = {
                        width: e,
                        height: r
                    }, d.magFilter = void 0 !== u ? u : be, d.minFilter = void 0 !== l ? l : be, d.flipY = !1, d.generateMipmaps = !1, d
                }
                return (0, m.default)(n)
            }(Ln);
            dl.prototype.isDepthTexture = !0;
            var fl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 8,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2 * Math.PI;
                        (0, v.default)(this, n), (e = t.call(this)).type = "CircleGeometry", e.parameters = {
                            radius: r,
                            segments: i,
                            thetaStart: a,
                            thetaLength: o
                        }, i = Math.max(3, i);
                        var s = [],
                            u = [],
                            l = [],
                            c = [],
                            h = new On,
                            d = new Tn;
                        u.push(0, 0, 0), l.push(0, 0, 1), c.push(.5, .5);
                        for (var f = 0, p = 3; f <= i; f++, p += 3) {
                            var m = a + f / i * o;
                            h.x = r * Math.cos(m), h.y = r * Math.sin(m), u.push(h.x, h.y, h.z), l.push(0, 0, 1), d.x = (u[p] / r + 1) / 2, d.y = (u[p + 1] / r + 1) / 2, c.push(d.x, d.y)
                        }
                        for (var g = 1; g <= i; g++) s.push(g, g + 1, 0);
                        return e.setIndex(s), e.setAttribute("position", new mi(u, 3)), e.setAttribute("normal", new mi(l, 3)), e.setAttribute("uv", new mi(c, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.segments, e.thetaStart, e.thetaLength)
                        }
                    }]), n
                }(Li),
                pl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 8,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1,
                            u = arguments.length > 5 && void 0 !== arguments[5] && arguments[5],
                            l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 0,
                            c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 2 * Math.PI;
                        (0, v.default)(this, n), (e = t.call(this)).type = "CylinderGeometry", e.parameters = {
                            radiusTop: r,
                            radiusBottom: i,
                            height: a,
                            radialSegments: o,
                            heightSegments: s,
                            openEnded: u,
                            thetaStart: l,
                            thetaLength: c
                        };
                        var d = (0, h.default)(e);
                        o = Math.floor(o), s = Math.floor(s);
                        var f = [],
                            p = [],
                            m = [],
                            g = [],
                            y = 0,
                            _ = [],
                            x = a / 2,
                            b = 0;

                        function w(e) {
                            for (var t = y, n = new Tn, a = new On, s = 0, u = !0 === e ? r : i, h = !0 === e ? 1 : -1, v = 1; v <= o; v++) p.push(0, x * h, 0), m.push(0, h, 0), g.push(.5, .5), y++;
                            for (var _ = y, w = 0; w <= o; w++) {
                                var T = w / o * c + l,
                                    M = Math.cos(T),
                                    S = Math.sin(T);
                                a.x = u * S, a.y = x * h, a.z = u * M, p.push(a.x, a.y, a.z), m.push(0, h, 0), n.x = .5 * M + .5, n.y = .5 * S * h + .5, g.push(n.x, n.y), y++
                            }
                            for (var E = 0; E < o; E++) {
                                var A = t + E,
                                    L = _ + E;
                                !0 === e ? f.push(L, L + 1, A) : f.push(L + 1, L, A), s += 3
                            }
                            d.addGroup(b, s, !0 === e ? 1 : 2), b += s
                        }
                        return function() {
                            for (var e = new On, t = new On, n = 0, u = (i - r) / a, h = 0; h <= s; h++) {
                                for (var v = [], w = h / s, T = w * (i - r) + r, M = 0; M <= o; M++) {
                                    var S = M / o,
                                        E = S * c + l,
                                        A = Math.sin(E),
                                        L = Math.cos(E);
                                    t.x = T * A, t.y = -w * a + x, t.z = T * L, p.push(t.x, t.y, t.z), e.set(A, u, L).normalize(), m.push(e.x, e.y, e.z), g.push(S, 1 - w), v.push(y++)
                                }
                                _.push(v)
                            }
                            for (var C = 0; C < o; C++)
                                for (var R = 0; R < s; R++) {
                                    var k = _[R][C],
                                        P = _[R + 1][C],
                                        D = _[R + 1][C + 1],
                                        I = _[R][C + 1];
                                    f.push(k, P, I), f.push(P, D, I), n += 6
                                }
                            d.addGroup(b, n, 0), b += n
                        }(), !1 === u && (r > 0 && w(!0), i > 0 && w(!1)), e.setIndex(f), e.setAttribute("position", new mi(p, 3)), e.setAttribute("normal", new mi(m, 3)), e.setAttribute("uv", new mi(g, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radiusTop, e.radiusBottom, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength)
                        }
                    }]), n
                }(Li),
                vl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 8,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                            s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                            l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 2 * Math.PI;
                        return (0, v.default)(this, n), (e = t.call(this, 0, r, i, a, o, s, u, l)).type = "ConeGeometry", e.parameters = {
                            radius: r,
                            height: i,
                            radialSegments: a,
                            heightSegments: o,
                            openEnded: s,
                            thetaStart: u,
                            thetaLength: l
                        }, e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.height, e.radialSegments, e.heightSegments, e.openEnded, e.thetaStart, e.thetaLength)
                        }
                    }]), n
                }(pl),
                ml = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
                        (0, v.default)(this, n), (i = t.call(this)).type = "PolyhedronGeometry", i.parameters = {
                            vertices: e,
                            indices: r,
                            radius: a,
                            detail: o
                        };
                        var s = [],
                            u = [];

                        function l(e, t, n, r) {
                            for (var i = r + 1, a = [], o = 0; o <= i; o++) {
                                a[o] = [];
                                for (var s = e.clone().lerp(n, o / i), u = t.clone().lerp(n, o / i), l = i - o, h = 0; h <= l; h++) a[o][h] = 0 === h && o === i ? s : s.clone().lerp(u, h / l)
                            }
                            for (var d = 0; d < i; d++)
                                for (var f = 0; f < 2 * (i - d) - 1; f++) {
                                    var p = Math.floor(f / 2);
                                    f % 2 == 0 ? (c(a[d][p + 1]), c(a[d + 1][p]), c(a[d][p])) : (c(a[d][p + 1]), c(a[d + 1][p + 1]), c(a[d + 1][p]))
                                }
                        }

                        function c(e) {
                            s.push(e.x, e.y, e.z)
                        }

                        function h(t, n) {
                            var r = 3 * t;
                            n.x = e[r + 0], n.y = e[r + 1], n.z = e[r + 2]
                        }

                        function d(e, t, n, r) {
                            r < 0 && 1 === e.x && (u[t] = e.x - 1), 0 === n.x && 0 === n.z && (u[t] = r / 2 / Math.PI + .5)
                        }

                        function f(e) {
                            return Math.atan2(e.z, -e.x)
                        }
                        return function(e) {
                                for (var t = new On, n = new On, i = new On, a = 0; a < r.length; a += 3) h(r[a + 0], t), h(r[a + 1], n), h(r[a + 2], i), l(t, n, i, e)
                            }(o),
                            function(e) {
                                for (var t = new On, n = 0; n < s.length; n += 3) t.x = s[n + 0], t.y = s[n + 1], t.z = s[n + 2], t.normalize().multiplyScalar(e), s[n + 0] = t.x, s[n + 1] = t.y, s[n + 2] = t.z
                            }(a),
                            function() {
                                for (var e = new On, t = 0; t < s.length; t += 3) {
                                    e.x = s[t + 0], e.y = s[t + 1], e.z = s[t + 2];
                                    var n = f(e) / 2 / Math.PI + .5,
                                        r = (i = e, Math.atan2(-i.y, Math.sqrt(i.x * i.x + i.z * i.z)) / Math.PI + .5);
                                    u.push(n, 1 - r)
                                }
                                var i;
                                (function() {
                                    for (var e = new On, t = new On, n = new On, r = new On, i = new Tn, a = new Tn, o = new Tn, l = 0, c = 0; l < s.length; l += 9, c += 6) {
                                        e.set(s[l + 0], s[l + 1], s[l + 2]), t.set(s[l + 3], s[l + 4], s[l + 5]), n.set(s[l + 6], s[l + 7], s[l + 8]), i.set(u[c + 0], u[c + 1]), a.set(u[c + 2], u[c + 3]), o.set(u[c + 4], u[c + 5]), r.copy(e).add(t).add(n).divideScalar(3);
                                        var h = f(r);
                                        d(i, c + 0, e, h), d(a, c + 2, t, h), d(o, c + 4, n, h)
                                    }
                                })(),
                                function() {
                                    for (var e = 0; e < u.length; e += 6) {
                                        var t = u[e + 0],
                                            n = u[e + 2],
                                            r = u[e + 4],
                                            i = Math.max(t, n, r),
                                            a = Math.min(t, n, r);
                                        i > .9 && a < .1 && (t < .2 && (u[e + 0] += 1), n < .2 && (u[e + 2] += 1), r < .2 && (u[e + 4] += 1))
                                    }
                                }()
                            }(), i.setAttribute("position", new mi(s, 3)), i.setAttribute("normal", new mi(s.slice(), 3)), i.setAttribute("uv", new mi(u, 2)), 0 === o ? i.computeVertexNormals() : i.normalizeNormals(), i
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.vertices, e.indices, e.radius, e.details)
                        }
                    }]), n
                }(Li),
                gl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        (0, v.default)(this, n);
                        var a = (1 + Math.sqrt(5)) / 2,
                            o = 1 / a,
                            s = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -o, -a, 0, -o, a, 0, o, -a, 0, o, a, -o, -a, 0, -o, a, 0, o, -a, 0, o, a, 0, -a, 0, -o, a, 0, -o, -a, 0, o, a, 0, o];
                        return (e = t.call(this, s, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], r, i)).type = "DodecahedronGeometry", e.parameters = {
                            radius: r,
                            detail: i
                        }, e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.detail)
                        }
                    }]), n
                }(ml),
                yl = new On,
                _l = new On,
                xl = new On,
                bl = new Yr,
                wl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        if ((0, v.default)(this, n), (i = t.call(this)).type = "EdgesGeometry", i.parameters = {
                                thresholdAngle: r
                            }, r = void 0 !== r ? r : 1, !0 === e.isGeometry) return console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), (0, f.default)(i);
                        for (var a = Math.cos(fn * r), o = e.getIndex(), s = e.getAttribute("position"), u = o ? o.count : s.count, l = [0, 0, 0], c = ["a", "b", "c"], h = new Array(3), d = {}, p = [], m = 0; m < u; m += 3) {
                            o ? (l[0] = o.getX(m), l[1] = o.getX(m + 1), l[2] = o.getX(m + 2)) : (l[0] = m, l[1] = m + 1, l[2] = m + 2);
                            var g = bl.a,
                                y = bl.b,
                                _ = bl.c;
                            if (g.fromBufferAttribute(s, l[0]), y.fromBufferAttribute(s, l[1]), _.fromBufferAttribute(s, l[2]), bl.getNormal(xl), h[0] = "".concat(g.x, ",").concat(g.y, ",").concat(g.z), h[1] = "".concat(y.x, ",").concat(y.y, ",").concat(y.z), h[2] = "".concat(_.x, ",").concat(_.y, ",").concat(_.z), h[0] !== h[1] && h[1] !== h[2] && h[2] !== h[0])
                                for (var x = 0; x < 3; x++) {
                                    var b = (x + 1) % 3,
                                        w = h[x],
                                        T = h[b],
                                        M = bl[c[x]],
                                        S = bl[c[b]],
                                        E = "".concat(w, "_").concat(T),
                                        A = "".concat(T, "_").concat(w);
                                    A in d && d[A] ? (xl.dot(d[A].normal) <= a && (p.push(M.x, M.y, M.z), p.push(S.x, S.y, S.z)), d[A] = null) : E in d || (d[E] = {
                                        index0: l[x],
                                        index1: l[b],
                                        normal: xl.clone()
                                    })
                                }
                        }
                        for (var L in d)
                            if (d[L]) {
                                var C = d[L],
                                    R = C.index0,
                                    k = C.index1;
                                yl.fromBufferAttribute(s, R), _l.fromBufferAttribute(s, k), p.push(yl.x, yl.y, yl.z), p.push(_l.x, _l.y, _l.z)
                            }
                        return i.setAttribute("position", new mi(p, 3)), i
                    }
                    return (0, m.default)(n)
                }(Li),
                Tl = function() {
                    function e() {
                        (0, v.default)(this, e), this.type = "Curve", this.arcLengthDivisions = 200
                    }
                    return (0, m.default)(e, [{
                        key: "getPoint",
                        value: function() {
                            return console.warn("THREE.Curve: .getPoint() not implemented."), null
                        }
                    }, {
                        key: "getPointAt",
                        value: function(e, t) {
                            var n = this.getUtoTmapping(e);
                            return this.getPoint(n, t)
                        }
                    }, {
                        key: "getPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5, t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                            return t
                        }
                    }, {
                        key: "getSpacedPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5, t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
                            return t
                        }
                    }, {
                        key: "getLength",
                        value: function() {
                            var e = this.getLengths();
                            return e[e.length - 1]
                        }
                    }, {
                        key: "getLengths",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.arcLengthDivisions;
                            if (this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
                            this.needsUpdate = !1;
                            var t, n = [],
                                r = this.getPoint(0),
                                i = 0;
                            n.push(0);
                            for (var a = 1; a <= e; a++) i += (t = this.getPoint(a / e)).distanceTo(r), n.push(i), r = t;
                            return this.cacheArcLengths = n, n
                        }
                    }, {
                        key: "updateArcLengths",
                        value: function() {
                            this.needsUpdate = !0, this.getLengths()
                        }
                    }, {
                        key: "getUtoTmapping",
                        value: function(e, t) {
                            var n, r = this.getLengths(),
                                i = 0,
                                a = r.length;
                            n = t || e * r[a - 1];
                            for (var o, s = 0, u = a - 1; s <= u;)
                                if ((o = r[i = Math.floor(s + (u - s) / 2)] - n) < 0) s = i + 1;
                                else {
                                    if (!(o > 0)) {
                                        u = i;
                                        break
                                    }
                                    u = i - 1
                                }
                            if (r[i = u] === n) return i / (a - 1);
                            var l = r[i];
                            return (i + (n - l) / (r[i + 1] - l)) / (a - 1)
                        }
                    }, {
                        key: "getTangent",
                        value: function(e, t) {
                            var n = 1e-4,
                                r = e - n,
                                i = e + n;
                            r < 0 && (r = 0), i > 1 && (i = 1);
                            var a = this.getPoint(r),
                                o = this.getPoint(i),
                                s = t || (a.isVector2 ? new Tn : new On);
                            return s.copy(o).sub(a).normalize(), s
                        }
                    }, {
                        key: "getTangentAt",
                        value: function(e, t) {
                            var n = this.getUtoTmapping(e);
                            return this.getTangent(n, t)
                        }
                    }, {
                        key: "computeFrenetFrames",
                        value: function(e, t) {
                            for (var n = new On, r = [], i = [], a = [], o = new On, s = new dr, u = 0; u <= e; u++) {
                                var l = u / e;
                                r[u] = this.getTangentAt(l, new On), r[u].normalize()
                            }
                            i[0] = new On, a[0] = new On;
                            var c = Number.MAX_VALUE,
                                h = Math.abs(r[0].x),
                                d = Math.abs(r[0].y),
                                f = Math.abs(r[0].z);
                            h <= c && (c = h, n.set(1, 0, 0)), d <= c && (c = d, n.set(0, 1, 0)), f <= c && n.set(0, 0, 1), o.crossVectors(r[0], n).normalize(), i[0].crossVectors(r[0], o), a[0].crossVectors(r[0], i[0]);
                            for (var p = 1; p <= e; p++) {
                                if (i[p] = i[p - 1].clone(), a[p] = a[p - 1].clone(), o.crossVectors(r[p - 1], r[p]), o.length() > Number.EPSILON) {
                                    o.normalize();
                                    var v = Math.acos(mn(r[p - 1].dot(r[p]), -1, 1));
                                    i[p].applyMatrix4(s.makeRotationAxis(o, v))
                                }
                                a[p].crossVectors(r[p], i[p])
                            }
                            if (!0 === t) {
                                var m = Math.acos(mn(i[0].dot(i[e]), -1, 1));
                                m /= e, r[0].dot(o.crossVectors(i[0], i[e])) > 0 && (m = -m);
                                for (var g = 1; g <= e; g++) i[g].applyMatrix4(s.makeRotationAxis(r[g], m * g)), a[g].crossVectors(r[g], i[g])
                            }
                            return {
                                tangents: r,
                                normals: i,
                                binormals: a
                            }
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.arcLengthDivisions = e.arcLengthDivisions, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {
                                metadata: {
                                    version: 4.5,
                                    type: "Curve",
                                    generator: "Curve.toJSON"
                                }
                            };
                            return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return this.arcLengthDivisions = e.arcLengthDivisions, this
                        }
                    }]), e
                }(),
                Ml = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2 * Math.PI,
                            l = arguments.length > 6 && void 0 !== arguments[6] && arguments[6],
                            c = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 0;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "EllipseCurve", e.aX = r, e.aY = i, e.xRadius = a, e.yRadius = o, e.aStartAngle = s, e.aEndAngle = u, e.aClockwise = l, e.aRotation = c, e
                    }
                    return (0, m.default)(n, [{
                        key: "getPoint",
                        value: function(e, t) {
                            for (var n = t || new Tn, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, a = Math.abs(i) < Number.EPSILON; i < 0;) i += r;
                            for (; i > r;) i -= r;
                            i < Number.EPSILON && (i = a ? 0 : r), !0 !== this.aClockwise || a || (i === r ? i = -r : i -= r);
                            var o = this.aStartAngle + e * i,
                                s = this.aX + this.xRadius * Math.cos(o),
                                u = this.aY + this.yRadius * Math.sin(o);
                            if (0 !== this.aRotation) {
                                var l = Math.cos(this.aRotation),
                                    c = Math.sin(this.aRotation),
                                    h = s - this.aX,
                                    d = u - this.aY;
                                s = h * l - d * c + this.aX, u = h * c + d * l + this.aY
                            }
                            return n.set(s, u)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
                        }
                    }]), n
                }(Tl);
            Ml.prototype.isEllipseCurve = !0;
            var Sl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i, a, o, s) {
                    var u;
                    return (0, v.default)(this, n), (u = t.call(this, e, r, i, i, a, o, s)).type = "ArcCurve", u
                }
                return (0, m.default)(n)
            }(Ml);

            function El() {
                var e = 0,
                    t = 0,
                    n = 0,
                    r = 0;

                function i(i, a, o, s) {
                    e = i, t = o, n = -3 * i + 3 * a - 2 * o - s, r = 2 * i - 2 * a + o + s
                }
                return {
                    initCatmullRom: function(e, t, n, r, a) {
                        i(t, n, a * (n - e), a * (r - t))
                    },
                    initNonuniformCatmullRom: function(e, t, n, r, a, o, s) {
                        var u = (t - e) / a - (n - e) / (a + o) + (n - t) / o,
                            l = (n - t) / o - (r - t) / (o + s) + (r - n) / s;
                        i(t, n, u *= o, l *= o)
                    },
                    calc: function(i) {
                        var a = i * i;
                        return e + t * i + n * a + r * (a * i)
                    }
                }
            }
            Sl.prototype.isArcCurve = !0;
            var Al = new On,
                Ll = new El,
                Cl = new El,
                Rl = new El,
                kl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                            i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "centripetal",
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "CatmullRomCurve3", e.points = r, e.closed = i, e.curveType = a, e.tension = o, e
                    }
                    return (0, m.default)(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t, n, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                                i = this.points,
                                a = i.length,
                                o = (a - (this.closed ? 0 : 1)) * e,
                                s = Math.floor(o),
                                u = o - s;
                            this.closed ? s += s > 0 ? 0 : (Math.floor(Math.abs(s) / a) + 1) * a : 0 === u && s === a - 1 && (s = a - 2, u = 1), this.closed || s > 0 ? t = i[(s - 1) % a] : (Al.subVectors(i[0], i[1]).add(i[0]), t = Al);
                            var l = i[s % a],
                                c = i[(s + 1) % a];
                            if (this.closed || s + 2 < a ? n = i[(s + 2) % a] : (Al.subVectors(i[a - 1], i[a - 2]).add(i[a - 1]), n = Al), "centripetal" === this.curveType || "chordal" === this.curveType) {
                                var h = "chordal" === this.curveType ? .5 : .25,
                                    d = Math.pow(t.distanceToSquared(l), h),
                                    f = Math.pow(l.distanceToSquared(c), h),
                                    p = Math.pow(c.distanceToSquared(n), h);
                                f < 1e-4 && (f = 1), d < 1e-4 && (d = f), p < 1e-4 && (p = f), Ll.initNonuniformCatmullRom(t.x, l.x, c.x, n.x, d, f, p), Cl.initNonuniformCatmullRom(t.y, l.y, c.y, n.y, d, f, p), Rl.initNonuniformCatmullRom(t.z, l.z, c.z, n.z, d, f, p)
                            } else "catmullrom" === this.curveType && (Ll.initCatmullRom(t.x, l.x, c.x, n.x, this.tension), Cl.initCatmullRom(t.y, l.y, c.y, n.y, this.tension), Rl.initCatmullRom(t.z, l.z, c.z, n.z, this.tension));
                            return r.set(Ll.calc(u), Cl.calc(u), Rl.calc(u)), r
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.points = [];
                            for (var t = 0, r = e.points.length; t < r; t++) {
                                var i = e.points[t];
                                this.points.push(i.clone())
                            }
                            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            e.points = [];
                            for (var t = 0, r = this.points.length; t < r; t++) {
                                var i = this.points[t];
                                e.points.push(i.toArray())
                            }
                            return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.points = [];
                            for (var t = 0, r = e.points.length; t < r; t++) {
                                var i = e.points[t];
                                this.points.push((new On).fromArray(i))
                            }
                            return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
                        }
                    }]), n
                }(Tl);

            function Pl(e, t, n, r, i) {
                var a = .5 * (r - t),
                    o = .5 * (i - n),
                    s = e * e;
                return (2 * n - 2 * r + a + o) * (e * s) + (-3 * n + 3 * r - 2 * a - o) * s + a * e + n
            }

            function Dl(e, t, n, r) {
                return function(e, t) {
                    var n = 1 - e;
                    return n * n * t
                }(e, t) + function(e, t) {
                    return 2 * (1 - e) * e * t
                }(e, n) + function(e, t) {
                    return e * e * t
                }(e, r)
            }

            function Il(e, t, n, r, i) {
                return function(e, t) {
                    var n = 1 - e;
                    return n * n * n * t
                }(e, t) + function(e, t) {
                    var n = 1 - e;
                    return 3 * n * n * e * t
                }(e, n) + function(e, t) {
                    return 3 * (1 - e) * e * e * t
                }(e, r) + function(e, t) {
                    return e * e * e * t
                }(e, i)
            }
            kl.prototype.isCatmullRomCurve3 = !0;
            var Ol = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Tn,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Tn,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new Tn;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "CubicBezierCurve", e.v0 = r, e.v1 = i, e.v2 = a, e.v3 = o, e
                }
                return (0, m.default)(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn,
                            n = this.v0,
                            r = this.v1,
                            i = this.v2,
                            a = this.v3;
                        return t.set(Il(e, n.x, r.x, i.x, a.x), Il(e, n.y, r.y, i.y, a.y)), t
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
                    }
                }]), n
            }(Tl);
            Ol.prototype.isCubicBezierCurve = !0;
            var Nl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new On,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : new On;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "CubicBezierCurve3", e.v0 = r, e.v1 = i, e.v2 = a, e.v3 = o, e
                }
                return (0, m.default)(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                            n = this.v0,
                            r = this.v1,
                            i = this.v2,
                            a = this.v3;
                        return t.set(Il(e, n.x, r.x, i.x, a.x), Il(e, n.y, r.y, i.y, a.y), Il(e, n.z, r.z, i.z, a.z)), t
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
                    }
                }]), n
            }(Tl);
            Nl.prototype.isCubicBezierCurve3 = !0;
            var Fl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Tn,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "LineCurve", e.v1 = r, e.v2 = i, e
                }
                return (0, m.default)(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn;
                        return 1 === e ? t.copy(this.v2) : (t.copy(this.v2).sub(this.v1), t.multiplyScalar(e).add(this.v1)), t
                    }
                }, {
                    key: "getPointAt",
                    value: function(e, t) {
                        return this.getPoint(e, t)
                    }
                }, {
                    key: "getTangent",
                    value: function(e, t) {
                        var n = t || new Tn;
                        return n.copy(this.v2).sub(this.v1).normalize(), n
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                    }
                }]), n
            }(Tl);
            Fl.prototype.isLineCurve = !0;
            var Ul = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "LineCurve3", e.isLineCurve3 = !0, e.v1 = r, e.v2 = i, e
                    }
                    return (0, m.default)(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On;
                            return 1 === e ? t.copy(this.v2) : (t.copy(this.v2).sub(this.v1), t.multiplyScalar(e).add(this.v1)), t
                        }
                    }, {
                        key: "getPointAt",
                        value: function(e, t) {
                            return this.getPoint(e, t)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                        }
                    }]), n
                }(Tl),
                Bl = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Tn,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new Tn;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "QuadraticBezierCurve", e.v0 = r, e.v1 = i, e.v2 = a, e
                    }
                    return (0, m.default)(n, [{
                        key: "getPoint",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn,
                                n = this.v0,
                                r = this.v1,
                                i = this.v2;
                            return t.set(Dl(e, n.x, r.x, i.x), Dl(e, n.y, r.y, i.y)), t
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                        }
                    }]), n
                }(Tl);
            Bl.prototype.isQuadraticBezierCurve = !0;
            var zl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                        a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : new On;
                    return (0, v.default)(this, n), (e = t.call(this)).type = "QuadraticBezierCurve3", e.v0 = r, e.v1 = i, e.v2 = a, e
                }
                return (0, m.default)(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On,
                            n = this.v0,
                            r = this.v1,
                            i = this.v2;
                        return t.set(Dl(e, n.x, r.x, i.x), Dl(e, n.y, r.y, i.y), Dl(e, n.z, r.z, i.z)), t
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
                    }
                }]), n
            }(Tl);
            zl.prototype.isQuadraticBezierCurve3 = !0;
            var Gl = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                    return (0, v.default)(this, n), (e = t.call(this)).type = "SplineCurve", e.points = r, e
                }
                return (0, m.default)(n, [{
                    key: "getPoint",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn,
                            n = this.points,
                            r = (n.length - 1) * e,
                            i = Math.floor(r),
                            a = r - i,
                            o = n[0 === i ? i : i - 1],
                            s = n[i],
                            u = n[i > n.length - 2 ? n.length - 1 : i + 1],
                            l = n[i > n.length - 3 ? n.length - 1 : i + 2];
                        return t.set(Pl(a, o.x, s.x, u.x, l.x), Pl(a, o.y, s.y, u.y, l.y)), t
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.points = [];
                        for (var t = 0, r = e.points.length; t < r; t++) {
                            var i = e.points[t];
                            this.points.push(i.clone())
                        }
                        return this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        e.points = [];
                        for (var t = 0, r = this.points.length; t < r; t++) {
                            var i = this.points[t];
                            e.points.push(i.toArray())
                        }
                        return e
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.points = [];
                        for (var t = 0, r = e.points.length; t < r; t++) {
                            var i = e.points[t];
                            this.points.push((new Tn).fromArray(i))
                        }
                        return this
                    }
                }]), n
            }(Tl);
            Gl.prototype.isSplineCurve = !0;
            var Hl = Object.freeze({
                    __proto__: null,
                    ArcCurve: Sl,
                    CatmullRomCurve3: kl,
                    CubicBezierCurve: Ol,
                    CubicBezierCurve3: Nl,
                    EllipseCurve: Ml,
                    LineCurve: Fl,
                    LineCurve3: Ul,
                    QuadraticBezierCurve: Bl,
                    QuadraticBezierCurve3: zl,
                    SplineCurve: Gl
                }),
                Vl = function(e, t) {
                    var n, r, i, a, o, s, u, l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 2,
                        c = t && t.length,
                        h = c ? t[0] * l : e.length,
                        d = Wl(e, 0, h, l, !0),
                        f = [];
                    if (!d || d.next === d.prev) return f;
                    if (c && (d = function(e, t, n, r) {
                            var i, a, o, s = [];
                            for (i = 0, a = t.length; i < a; i++)(o = Wl(e, t[i] * r, i < a - 1 ? t[i + 1] * r : e.length, r, !1)) === o.next && (o.steiner = !0), s.push(tc(o));
                            for (s.sort(Jl), i = 0; i < s.length; i++) Ql(s[i], n), n = jl(n, n.next);
                            return n
                        }(e, t, d, l)), e.length > 80 * l) {
                        n = i = e[0], r = a = e[1];
                        for (var p = l; p < h; p += l)(o = e[p]) < n && (n = o), (s = e[p + 1]) < r && (r = s), o > i && (i = o), s > a && (a = s);
                        u = 0 !== (u = Math.max(i - n, a - r)) ? 1 / u : 0
                    }
                    return ql(d, f, l, n, r, u), f
                };

            function Wl(e, t, n, r, i) {
                var a, o;
                if (i === function(e, t, n, r) {
                        for (var i = 0, a = t, o = n - r; a < n; a += r) i += (e[o] - e[a]) * (e[a + 1] + e[o + 1]), o = a;
                        return i
                    }(e, t, n, r) > 0)
                    for (a = t; a < n; a += r) o = hc(a, e[a], e[a + 1], o);
                else
                    for (a = n - r; a >= t; a -= r) o = hc(a, e[a], e[a + 1], o);
                return o && ac(o, o.next) && (dc(o), o = o.next), o
            }

            function jl(e, t) {
                if (!e) return e;
                t || (t = e);
                var n, r = e;
                do {
                    if (n = !1, r.steiner || !ac(r, r.next) && 0 !== ic(r.prev, r, r.next)) r = r.next;
                    else {
                        if (dc(r), (r = t = r.prev) === r.next) break;
                        n = !0
                    }
                } while (n || r !== t);
                return t
            }

            function ql(e, t, n, r, i, a, o) {
                if (e) {
                    !o && a && function(e, t, n, r) {
                        var i = e;
                        do {
                            null === i.z && (i.z = ec(i.x, i.y, t, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next
                        } while (i !== e);
                        i.prevZ.nextZ = null, i.prevZ = null,
                            function(e) {
                                var t, n, r, i, a, o, s, u, l = 1;
                                do {
                                    for (n = e, e = null, a = null, o = 0; n;) {
                                        for (o++, r = n, s = 0, t = 0; t < l && (s++, r = r.nextZ); t++);
                                        for (u = l; s > 0 || u > 0 && r;) 0 !== s && (0 === u || !r || n.z <= r.z) ? (i = n, n = n.nextZ, s--) : (i = r, r = r.nextZ, u--), a ? a.nextZ = i : e = i, i.prevZ = a, a = i;
                                        n = r
                                    }
                                    a.nextZ = null, l *= 2
                                } while (o > 1)
                            }(i)
                    }(e, r, i, a);
                    for (var s, u, l = e; e.prev !== e.next;)
                        if (s = e.prev, u = e.next, a ? Yl(e, r, i, a) : Xl(e)) t.push(s.i / n), t.push(e.i / n), t.push(u.i / n), dc(e), e = u.next, l = u.next;
                        else if ((e = u) === l) {
                        o ? 1 === o ? ql(e = Kl(jl(e), t, n), t, n, r, i, a, 2) : 2 === o && Zl(e, t, n, r, i, a) : ql(jl(e), t, n, r, i, a, 1);
                        break
                    }
                }
            }

            function Xl(e) {
                var t = e.prev,
                    n = e,
                    r = e.next;
                if (ic(t, n, r) >= 0) return !1;
                for (var i = e.next.next; i !== e.prev;) {
                    if (nc(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && ic(i.prev, i, i.next) >= 0) return !1;
                    i = i.next
                }
                return !0
            }

            function Yl(e, t, n, r) {
                var i = e.prev,
                    a = e,
                    o = e.next;
                if (ic(i, a, o) >= 0) return !1;
                for (var s = i.x < a.x ? i.x < o.x ? i.x : o.x : a.x < o.x ? a.x : o.x, u = i.y < a.y ? i.y < o.y ? i.y : o.y : a.y < o.y ? a.y : o.y, l = i.x > a.x ? i.x > o.x ? i.x : o.x : a.x > o.x ? a.x : o.x, c = i.y > a.y ? i.y > o.y ? i.y : o.y : a.y > o.y ? a.y : o.y, h = ec(s, u, t, n, r), d = ec(l, c, t, n, r), f = e.prevZ, p = e.nextZ; f && f.z >= h && p && p.z <= d;) {
                    if (f !== e.prev && f !== e.next && nc(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && ic(f.prev, f, f.next) >= 0) return !1;
                    if (f = f.prevZ, p !== e.prev && p !== e.next && nc(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && ic(p.prev, p, p.next) >= 0) return !1;
                    p = p.nextZ
                }
                for (; f && f.z >= h;) {
                    if (f !== e.prev && f !== e.next && nc(i.x, i.y, a.x, a.y, o.x, o.y, f.x, f.y) && ic(f.prev, f, f.next) >= 0) return !1;
                    f = f.prevZ
                }
                for (; p && p.z <= d;) {
                    if (p !== e.prev && p !== e.next && nc(i.x, i.y, a.x, a.y, o.x, o.y, p.x, p.y) && ic(p.prev, p, p.next) >= 0) return !1;
                    p = p.nextZ
                }
                return !0
            }

            function Kl(e, t, n) {
                var r = e;
                do {
                    var i = r.prev,
                        a = r.next.next;
                    !ac(i, a) && oc(i, r, r.next, a) && lc(i, a) && lc(a, i) && (t.push(i.i / n), t.push(r.i / n), t.push(a.i / n), dc(r), dc(r.next), r = e = a), r = r.next
                } while (r !== e);
                return jl(r)
            }

            function Zl(e, t, n, r, i, a) {
                var o = e;
                do {
                    for (var s = o.next.next; s !== o.prev;) {
                        if (o.i !== s.i && rc(o, s)) {
                            var u = cc(o, s);
                            return o = jl(o, o.next), u = jl(u, u.next), ql(o, t, n, r, i, a), void ql(u, t, n, r, i, a)
                        }
                        s = s.next
                    }
                    o = o.next
                } while (o !== e)
            }

            function Jl(e, t) {
                return e.x - t.x
            }

            function Ql(e, t) {
                if (t = function(e, t) {
                        var n, r = t,
                            i = e.x,
                            a = e.y,
                            o = -1 / 0;
                        do {
                            if (a <= r.y && a >= r.next.y && r.next.y !== r.y) {
                                var s = r.x + (a - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                                if (s <= i && s > o) {
                                    if (o = s, s === i) {
                                        if (a === r.y) return r;
                                        if (a === r.next.y) return r.next
                                    }
                                    n = r.x < r.next.x ? r : r.next
                                }
                            }
                            r = r.next
                        } while (r !== t);
                        if (!n) return null;
                        if (i === o) return n;
                        var u, l = n,
                            c = n.x,
                            h = n.y,
                            d = 1 / 0;
                        r = n;
                        do {
                            i >= r.x && r.x >= c && i !== r.x && nc(a < h ? i : o, a, c, h, a < h ? o : i, a, r.x, r.y) && (u = Math.abs(a - r.y) / (i - r.x), lc(r, e) && (u < d || u === d && (r.x > n.x || r.x === n.x && $l(n, r))) && (n = r, d = u)), r = r.next
                        } while (r !== l);
                        return n
                    }(e, t), t) {
                    var n = cc(t, e);
                    jl(t, t.next), jl(n, n.next)
                }
            }

            function $l(e, t) {
                return ic(e.prev, e, t.prev) < 0 && ic(t.next, e, e.next) < 0
            }

            function ec(e, t, n, r, i) {
                return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
            }

            function tc(e) {
                var t = e,
                    n = e;
                do {
                    (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next
                } while (t !== e);
                return n
            }

            function nc(e, t, n, r, i, a, o, s) {
                return (i - o) * (t - s) - (e - o) * (a - s) >= 0 && (e - o) * (r - s) - (n - o) * (t - s) >= 0 && (n - o) * (a - s) - (i - o) * (r - s) >= 0
            }

            function rc(e, t) {
                return e.next.i !== t.i && e.prev.i !== t.i && ! function(e, t) {
                    var n = e;
                    do {
                        if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && oc(n, n.next, e, t)) return !0;
                        n = n.next
                    } while (n !== e);
                    return !1
                }(e, t) && (lc(e, t) && lc(t, e) && function(e, t) {
                    var n = e,
                        r = !1,
                        i = (e.x + t.x) / 2,
                        a = (e.y + t.y) / 2;
                    do {
                        n.y > a != n.next.y > a && n.next.y !== n.y && i < (n.next.x - n.x) * (a - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next
                    } while (n !== e);
                    return r
                }(e, t) && (ic(e.prev, e, t.prev) || ic(e, t.prev, t)) || ac(e, t) && ic(e.prev, e, e.next) > 0 && ic(t.prev, t, t.next) > 0)
            }

            function ic(e, t, n) {
                return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
            }

            function ac(e, t) {
                return e.x === t.x && e.y === t.y
            }

            function oc(e, t, n, r) {
                var i = uc(ic(e, t, n)),
                    a = uc(ic(e, t, r)),
                    o = uc(ic(n, r, e)),
                    s = uc(ic(n, r, t));
                return i !== a && o !== s || !(0 !== i || !sc(e, n, t)) || !(0 !== a || !sc(e, r, t)) || !(0 !== o || !sc(n, e, r)) || !(0 !== s || !sc(n, t, r))
            }

            function sc(e, t, n) {
                return t.x <= Math.max(e.x, n.x) && t.x >= Math.min(e.x, n.x) && t.y <= Math.max(e.y, n.y) && t.y >= Math.min(e.y, n.y)
            }

            function uc(e) {
                return e > 0 ? 1 : e < 0 ? -1 : 0
            }

            function lc(e, t) {
                return ic(e.prev, e, e.next) < 0 ? ic(e, t, e.next) >= 0 && ic(e, e.prev, t) >= 0 : ic(e, t, e.prev) < 0 || ic(e, e.next, t) < 0
            }

            function cc(e, t) {
                var n = new fc(e.i, e.x, e.y),
                    r = new fc(t.i, t.x, t.y),
                    i = e.next,
                    a = t.prev;
                return e.next = t, t.prev = e, n.next = i, i.prev = n, r.next = n, n.prev = r, a.next = r, r.prev = a, r
            }

            function hc(e, t, n, r) {
                var i = new fc(e, t, n);
                return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i
            }

            function dc(e) {
                e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ)
            }

            function fc(e, t, n) {
                this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
            }
            var pc = function() {
                function e() {
                    (0, v.default)(this, e)
                }
                return (0, m.default)(e, null, [{
                    key: "area",
                    value: function(e) {
                        for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++) n += e[r].x * e[i].y - e[i].x * e[r].y;
                        return .5 * n
                    }
                }, {
                    key: "isClockWise",
                    value: function(t) {
                        return e.area(t) < 0
                    }
                }, {
                    key: "triangulateShape",
                    value: function(e, t) {
                        var n = [],
                            r = [],
                            i = [];
                        vc(e), mc(n, e);
                        var a = e.length;
                        t.forEach(vc);
                        for (var o = 0; o < t.length; o++) r.push(a), a += t[o].length, mc(n, t[o]);
                        for (var s = Vl(n, r), u = 0; u < s.length; u += 3) i.push(s.slice(u, u + 3));
                        return i
                    }
                }]), e
            }();

            function vc(e) {
                var t = e.length;
                t > 2 && e[t - 1].equals(e[0]) && e.pop()
            }

            function mc(e, t) {
                for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y)
            }
            var gc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        (0, v.default)(this, n), (i = t.call(this)).type = "ExtrudeGeometry", i.parameters = {
                            shapes: e,
                            options: r
                        }, e = Array.isArray(e) ? e : [e];
                        for (var a = (0, h.default)(i), o = [], s = [], u = 0, l = e.length; u < l; u++) c(e[u]);

                        function c(e) {
                            var t = [],
                                n = void 0 !== r.curveSegments ? r.curveSegments : 12,
                                i = void 0 !== r.steps ? r.steps : 1,
                                u = void 0 !== r.depth ? r.depth : 100,
                                l = void 0 === r.bevelEnabled || r.bevelEnabled,
                                c = void 0 !== r.bevelThickness ? r.bevelThickness : 6,
                                h = void 0 !== r.bevelSize ? r.bevelSize : c - 2,
                                d = void 0 !== r.bevelOffset ? r.bevelOffset : 0,
                                f = void 0 !== r.bevelSegments ? r.bevelSegments : 3,
                                p = r.extrudePath,
                                v = void 0 !== r.UVGenerator ? r.UVGenerator : yc;
                            void 0 !== r.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), u = r.amount);
                            var m, g, y, _, x, b = !1;
                            p && (m = p.getSpacedPoints(i), b = !0, l = !1, g = p.computeFrenetFrames(i, !1), y = new On, _ = new On, x = new On), l || (f = 0, c = 0, h = 0, d = 0);
                            var w = e.extractPoints(n),
                                T = w.shape,
                                M = w.holes;
                            if (!pc.isClockWise(T)) {
                                T = T.reverse();
                                for (var S = 0, E = M.length; S < E; S++) {
                                    var A = M[S];
                                    pc.isClockWise(A) && (M[S] = A.reverse())
                                }
                            }
                            for (var L = pc.triangulateShape(T, M), C = T, R = 0, k = M.length; R < k; R++) {
                                var P = M[R];
                                T = T.concat(P)
                            }

                            function D(e, t, n) {
                                return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e)
                            }
                            var I = T.length,
                                O = L.length;

                            function N(e, t, n) {
                                var r, i, a, o = e.x - t.x,
                                    s = e.y - t.y,
                                    u = n.x - e.x,
                                    l = n.y - e.y,
                                    c = o * o + s * s,
                                    h = o * l - s * u;
                                if (Math.abs(h) > Number.EPSILON) {
                                    var d = Math.sqrt(c),
                                        f = Math.sqrt(u * u + l * l),
                                        p = t.x - s / d,
                                        v = t.y + o / d,
                                        m = ((n.x - l / f - p) * l - (n.y + u / f - v) * u) / (o * l - s * u),
                                        g = (r = p + o * m - e.x) * r + (i = v + s * m - e.y) * i;
                                    if (g <= 2) return new Tn(r, i);
                                    a = Math.sqrt(g / 2)
                                } else {
                                    var y = !1;
                                    o > Number.EPSILON ? u > Number.EPSILON && (y = !0) : o < -Number.EPSILON ? u < -Number.EPSILON && (y = !0) : Math.sign(s) === Math.sign(l) && (y = !0), y ? (r = -s, i = o, a = Math.sqrt(c)) : (r = o, i = s, a = Math.sqrt(c / 2))
                                }
                                return new Tn(r / a, i / a)
                            }
                            for (var F = [], U = 0, B = C.length, z = B - 1, G = U + 1; U < B; U++, z++, G++) z === B && (z = 0), G === B && (G = 0), F[U] = N(C[U], C[z], C[G]);
                            for (var H, V = [], W = F.concat(), j = 0, q = M.length; j < q; j++) {
                                var X = M[j];
                                H = [];
                                for (var Y = 0, K = X.length, Z = K - 1, J = Y + 1; Y < K; Y++, Z++, J++) Z === K && (Z = 0), J === K && (J = 0), H[Y] = N(X[Y], X[Z], X[J]);
                                V.push(H), W = W.concat(H)
                            }
                            for (var Q = 0; Q < f; Q++) {
                                for (var $ = Q / f, ee = c * Math.cos($ * Math.PI / 2), te = h * Math.sin($ * Math.PI / 2) + d, ne = 0, re = C.length; ne < re; ne++) {
                                    var ie = D(C[ne], F[ne], te);
                                    ke(ie.x, ie.y, -ee)
                                }
                                for (var ae = 0, oe = M.length; ae < oe; ae++) {
                                    var se = M[ae];
                                    H = V[ae];
                                    for (var ue = 0, le = se.length; ue < le; ue++) {
                                        var ce = D(se[ue], H[ue], te);
                                        ke(ce.x, ce.y, -ee)
                                    }
                                }
                            }
                            for (var he = h + d, de = 0; de < I; de++) {
                                var fe = l ? D(T[de], W[de], he) : T[de];
                                b ? (_.copy(g.normals[0]).multiplyScalar(fe.x), y.copy(g.binormals[0]).multiplyScalar(fe.y), x.copy(m[0]).add(_).add(y), ke(x.x, x.y, x.z)) : ke(fe.x, fe.y, 0)
                            }
                            for (var pe = 1; pe <= i; pe++)
                                for (var ve = 0; ve < I; ve++) {
                                    var me = l ? D(T[ve], W[ve], he) : T[ve];
                                    b ? (_.copy(g.normals[pe]).multiplyScalar(me.x), y.copy(g.binormals[pe]).multiplyScalar(me.y), x.copy(m[pe]).add(_).add(y), ke(x.x, x.y, x.z)) : ke(me.x, me.y, u / i * pe)
                                }
                            for (var ge = f - 1; ge >= 0; ge--) {
                                for (var ye = ge / f, _e = c * Math.cos(ye * Math.PI / 2), xe = h * Math.sin(ye * Math.PI / 2) + d, be = 0, we = C.length; be < we; be++) {
                                    var Te = D(C[be], F[be], xe);
                                    ke(Te.x, Te.y, u + _e)
                                }
                                for (var Me = 0, Se = M.length; Me < Se; Me++) {
                                    var Ee = M[Me];
                                    H = V[Me];
                                    for (var Ae = 0, Le = Ee.length; Ae < Le; Ae++) {
                                        var Ce = D(Ee[Ae], H[Ae], xe);
                                        b ? ke(Ce.x, Ce.y + m[i - 1].y, m[i - 1].x + _e) : ke(Ce.x, Ce.y, u + _e)
                                    }
                                }
                            }

                            function Re(e, t) {
                                for (var n = e.length; --n >= 0;) {
                                    var r = n,
                                        a = n - 1;
                                    a < 0 && (a = e.length - 1);
                                    for (var o = 0, s = i + 2 * f; o < s; o++) {
                                        var u = I * o,
                                            l = I * (o + 1);
                                        De(t + r + u, t + a + u, t + a + l, t + r + l)
                                    }
                                }
                            }

                            function ke(e, n, r) {
                                t.push(e), t.push(n), t.push(r)
                            }

                            function Pe(e, t, n) {
                                Ie(e), Ie(t), Ie(n);
                                var r = o.length / 3,
                                    i = v.generateTopUV(a, o, r - 3, r - 2, r - 1);
                                Oe(i[0]), Oe(i[1]), Oe(i[2])
                            }

                            function De(e, t, n, r) {
                                Ie(e), Ie(t), Ie(r), Ie(t), Ie(n), Ie(r);
                                var i = o.length / 3,
                                    s = v.generateSideWallUV(a, o, i - 6, i - 3, i - 2, i - 1);
                                Oe(s[0]), Oe(s[1]), Oe(s[3]), Oe(s[1]), Oe(s[2]), Oe(s[3])
                            }

                            function Ie(e) {
                                o.push(t[3 * e + 0]), o.push(t[3 * e + 1]), o.push(t[3 * e + 2])
                            }

                            function Oe(e) {
                                s.push(e.x), s.push(e.y)
                            }! function() {
                                var e = o.length / 3;
                                if (l) {
                                    for (var t = 0, n = I * t, r = 0; r < O; r++) {
                                        var s = L[r];
                                        Pe(s[2] + n, s[1] + n, s[0] + n)
                                    }
                                    n = I * (t = i + 2 * f);
                                    for (var u = 0; u < O; u++) {
                                        var c = L[u];
                                        Pe(c[0] + n, c[1] + n, c[2] + n)
                                    }
                                } else {
                                    for (var h = 0; h < O; h++) {
                                        var d = L[h];
                                        Pe(d[2], d[1], d[0])
                                    }
                                    for (var p = 0; p < O; p++) {
                                        var v = L[p];
                                        Pe(v[0] + I * i, v[1] + I * i, v[2] + I * i)
                                    }
                                }
                                a.addGroup(e, o.length / 3 - e, 0)
                            }(),
                            function() {
                                var e = o.length / 3,
                                    t = 0;
                                Re(C, t), t += C.length;
                                for (var n = 0, r = M.length; n < r; n++) {
                                    var i = M[n];
                                    Re(i, t), t += i.length
                                }
                                a.addGroup(e, o.length / 3 - e, 1)
                            }()
                        }
                        return i.setAttribute("position", new mi(o, 3)), i.setAttribute("uv", new mi(s, 2)), i.computeVertexNormals(), i
                    }
                    return (0, m.default)(n, [{
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return function(e, t, n) {
                                if (n.shapes = [], Array.isArray(e))
                                    for (var r = 0, i = e.length; r < i; r++) {
                                        var a = e[r];
                                        n.shapes.push(a.uuid)
                                    } else n.shapes.push(e.uuid);
                                return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()), n
                            }(this.parameters.shapes, this.parameters.options, e)
                        }
                    }], [{
                        key: "fromJSON",
                        value: function(e, t) {
                            for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                                var o = t[e.shapes[i]];
                                r.push(o)
                            }
                            var s = e.options.extrudePath;
                            return void 0 !== s && (e.options.extrudePath = (new Hl[s.type]).fromJSON(s)), new n(r, e.options)
                        }
                    }]), n
                }(Li),
                yc = {
                    generateTopUV: function(e, t, n, r, i) {
                        var a = t[3 * n],
                            o = t[3 * n + 1],
                            s = t[3 * r],
                            u = t[3 * r + 1],
                            l = t[3 * i],
                            c = t[3 * i + 1];
                        return [new Tn(a, o), new Tn(s, u), new Tn(l, c)]
                    },
                    generateSideWallUV: function(e, t, n, r, i, a) {
                        var o = t[3 * n],
                            s = t[3 * n + 1],
                            u = t[3 * n + 2],
                            l = t[3 * r],
                            c = t[3 * r + 1],
                            h = t[3 * r + 2],
                            d = t[3 * i],
                            f = t[3 * i + 1],
                            p = t[3 * i + 2],
                            v = t[3 * a],
                            m = t[3 * a + 1],
                            g = t[3 * a + 2];
                        return Math.abs(s - c) < Math.abs(o - l) ? [new Tn(o, 1 - u), new Tn(l, 1 - h), new Tn(d, 1 - p), new Tn(v, 1 - g)] : [new Tn(s, 1 - u), new Tn(c, 1 - h), new Tn(f, 1 - p), new Tn(m, 1 - g)]
                    }
                },
                _c = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        (0, v.default)(this, n);
                        var a = (1 + Math.sqrt(5)) / 2,
                            o = [-1, a, 0, 1, a, 0, -1, -a, 0, 1, -a, 0, 0, -1, a, 0, 1, a, 0, -1, -a, 0, 1, -a, a, 0, -1, a, 0, 1, -a, 0, -1, -a, 0, 1];
                        return (e = t.call(this, o, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], r, i)).type = "IcosahedronGeometry", e.parameters = {
                            radius: r,
                            detail: i
                        }, e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.detail)
                        }
                    }]), n
                }(ml),
                xc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 12,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 2 * Math.PI;
                        (0, v.default)(this, n), (r = t.call(this)).type = "LatheGeometry", r.parameters = {
                            points: e,
                            segments: i,
                            phiStart: a,
                            phiLength: o
                        }, i = Math.floor(i), o = mn(o, 0, 2 * Math.PI);
                        for (var s = [], u = [], l = [], c = 1 / i, h = new On, d = new Tn, f = 0; f <= i; f++)
                            for (var p = a + f * c * o, m = Math.sin(p), g = Math.cos(p), y = 0; y <= e.length - 1; y++) h.x = e[y].x * m, h.y = e[y].y, h.z = e[y].x * g, u.push(h.x, h.y, h.z), d.x = f / i, d.y = y / (e.length - 1), l.push(d.x, d.y);
                        for (var _ = 0; _ < i; _++)
                            for (var x = 0; x < e.length - 1; x++) {
                                var b = x + _ * e.length,
                                    w = b,
                                    T = b + e.length,
                                    M = b + e.length + 1,
                                    S = b + 1;
                                s.push(w, T, S), s.push(T, M, S)
                            }
                        if (r.setIndex(s), r.setAttribute("position", new mi(u, 3)), r.setAttribute("uv", new mi(l, 2)), r.computeVertexNormals(), o === 2 * Math.PI)
                            for (var E = r.attributes.normal.array, A = new On, L = new On, C = new On, R = i * e.length * 3, k = 0, P = 0; k < e.length; k++, P += 3) A.x = E[P + 0], A.y = E[P + 1], A.z = E[P + 2], L.x = E[R + P + 0], L.y = E[R + P + 1], L.z = E[R + P + 2], C.addVectors(A, L).normalize(), E[P + 0] = E[R + P + 0] = C.x, E[P + 1] = E[R + P + 1] = C.y, E[P + 2] = E[R + P + 2] = C.z;
                        return r
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.points, e.segments, e.phiStart, e.phiLength)
                        }
                    }]), n
                }(Li),
                bc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return (0, v.default)(this, n), (e = t.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], r, i)).type = "OctahedronGeometry", e.parameters = {
                            radius: r,
                            detail: i
                        }, e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.detail)
                        }
                    }]), n
                }(ml),
                wc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        (0, v.default)(this, n), (a = t.call(this)).type = "ParametricGeometry", a.parameters = {
                            func: e,
                            slices: r,
                            stacks: i
                        };
                        var o = [],
                            s = [],
                            u = [],
                            l = [],
                            c = 1e-5,
                            h = new On,
                            d = new On,
                            f = new On,
                            p = new On,
                            m = new On;
                        e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
                        for (var g = r + 1, y = 0; y <= i; y++)
                            for (var _ = y / i, x = 0; x <= r; x++) {
                                var b = x / r;
                                e(b, _, d), s.push(d.x, d.y, d.z), b - c >= 0 ? (e(b - c, _, f), p.subVectors(d, f)) : (e(b + c, _, f), p.subVectors(f, d)), _ - c >= 0 ? (e(b, _ - c, f), m.subVectors(d, f)) : (e(b, _ + c, f), m.subVectors(f, d)), h.crossVectors(p, m).normalize(), u.push(h.x, h.y, h.z), l.push(b, _)
                            }
                        for (var w = 0; w < i; w++)
                            for (var T = 0; T < r; T++) {
                                var M = w * g + T,
                                    S = w * g + T + 1,
                                    E = (w + 1) * g + T + 1,
                                    A = (w + 1) * g + T;
                                o.push(M, S, A), o.push(S, E, A)
                            }
                        return a.setIndex(o), a.setAttribute("position", new mi(s, 3)), a.setAttribute("normal", new mi(u, 3)), a.setAttribute("uv", new mi(l, 2)), a
                    }
                    return (0, m.default)(n)
                }(Li),
                Tc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .5,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 8,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 2 * Math.PI;
                        (0, v.default)(this, n), (e = t.call(this)).type = "RingGeometry", e.parameters = {
                            innerRadius: r,
                            outerRadius: i,
                            thetaSegments: a,
                            phiSegments: o,
                            thetaStart: s,
                            thetaLength: u
                        }, a = Math.max(3, a);
                        for (var l = [], c = [], h = [], d = [], f = r, p = (i - r) / (o = Math.max(1, o)), m = new On, g = new Tn, y = 0; y <= o; y++) {
                            for (var _ = 0; _ <= a; _++) {
                                var x = s + _ / a * u;
                                m.x = f * Math.cos(x), m.y = f * Math.sin(x), c.push(m.x, m.y, m.z), h.push(0, 0, 1), g.x = (m.x / i + 1) / 2, g.y = (m.y / i + 1) / 2, d.push(g.x, g.y)
                            }
                            f += p
                        }
                        for (var b = 0; b < o; b++)
                            for (var w = b * (a + 1), T = 0; T < a; T++) {
                                var M = T + w,
                                    S = M,
                                    E = M + a + 1,
                                    A = M + a + 2,
                                    L = M + 1;
                                l.push(S, E, L), l.push(E, A, L)
                            }
                        return e.setIndex(l), e.setAttribute("position", new mi(c, 3)), e.setAttribute("normal", new mi(h, 3)), e.setAttribute("uv", new mi(d, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.innerRadius, e.outerRadius, e.thetaSegments, e.phiSegments, e.thetaStart, e.thetaLength)
                        }
                    }]), n
                }(Li),
                Mc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 12;
                        (0, v.default)(this, n), (r = t.call(this)).type = "ShapeGeometry", r.parameters = {
                            shapes: e,
                            curveSegments: i
                        };
                        var a = [],
                            o = [],
                            s = [],
                            u = [],
                            l = 0,
                            c = 0;
                        if (!1 === Array.isArray(e)) d(e);
                        else
                            for (var h = 0; h < e.length; h++) d(e[h]), r.addGroup(l, c, h), l += c, c = 0;

                        function d(e) {
                            var t = o.length / 3,
                                n = e.extractPoints(i),
                                r = n.shape,
                                l = n.holes;
                            !1 === pc.isClockWise(r) && (r = r.reverse());
                            for (var h = 0, d = l.length; h < d; h++) {
                                var f = l[h];
                                !0 === pc.isClockWise(f) && (l[h] = f.reverse())
                            }
                            for (var p = pc.triangulateShape(r, l), v = 0, m = l.length; v < m; v++) {
                                var g = l[v];
                                r = r.concat(g)
                            }
                            for (var y = 0, _ = r.length; y < _; y++) {
                                var x = r[y];
                                o.push(x.x, x.y, 0), s.push(0, 0, 1), u.push(x.x, x.y)
                            }
                            for (var b = 0, w = p.length; b < w; b++) {
                                var T = p[b],
                                    M = T[0] + t,
                                    S = T[1] + t,
                                    E = T[2] + t;
                                a.push(M, S, E), c += 3
                            }
                        }
                        return r.setIndex(a), r.setAttribute("position", new mi(o, 3)), r.setAttribute("normal", new mi(s, 3)), r.setAttribute("uv", new mi(u, 2)), r
                    }
                    return (0, m.default)(n, [{
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return function(e, t) {
                                if (t.shapes = [], Array.isArray(e))
                                    for (var n = 0, r = e.length; n < r; n++) {
                                        var i = e[n];
                                        t.shapes.push(i.uuid)
                                    } else t.shapes.push(e.uuid);
                                return t
                            }(this.parameters.shapes, e)
                        }
                    }], [{
                        key: "fromJSON",
                        value: function(e, t) {
                            for (var r = [], i = 0, a = e.shapes.length; i < a; i++) {
                                var o = t[e.shapes[i]];
                                r.push(o)
                            }
                            return new n(r, e.curveSegments)
                        }
                    }]), n
                }(Li),
                Sc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 32,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 16,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2 * Math.PI,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
                            l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : Math.PI;
                        (0, v.default)(this, n), (e = t.call(this)).type = "SphereGeometry", e.parameters = {
                            radius: r,
                            widthSegments: i,
                            heightSegments: a,
                            phiStart: o,
                            phiLength: s,
                            thetaStart: u,
                            thetaLength: l
                        }, i = Math.max(3, Math.floor(i)), a = Math.max(2, Math.floor(a));
                        for (var c = Math.min(u + l, Math.PI), h = 0, d = [], f = new On, p = new On, m = [], g = [], y = [], _ = [], x = 0; x <= a; x++) {
                            var b = [],
                                w = x / a,
                                T = 0;
                            0 == x && 0 == u ? T = .5 / i : x == a && c == Math.PI && (T = -.5 / i);
                            for (var M = 0; M <= i; M++) {
                                var S = M / i;
                                f.x = -r * Math.cos(o + S * s) * Math.sin(u + w * l), f.y = r * Math.cos(u + w * l), f.z = r * Math.sin(o + S * s) * Math.sin(u + w * l), g.push(f.x, f.y, f.z), p.copy(f).normalize(), y.push(p.x, p.y, p.z), _.push(S + T, 1 - w), b.push(h++)
                            }
                            d.push(b)
                        }
                        for (var E = 0; E < a; E++)
                            for (var A = 0; A < i; A++) {
                                var L = d[E][A + 1],
                                    C = d[E][A],
                                    R = d[E + 1][A],
                                    k = d[E + 1][A + 1];
                                (0 !== E || u > 0) && m.push(L, C, k), (E !== a - 1 || c < Math.PI) && m.push(C, R, k)
                            }
                        return e.setIndex(m), e.setAttribute("position", new mi(g, 3)), e.setAttribute("normal", new mi(y, 3)), e.setAttribute("uv", new mi(_, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.widthSegments, e.heightSegments, e.phiStart, e.phiLength, e.thetaStart, e.thetaLength)
                        }
                    }]), n
                }(Li),
                Ec = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                        return (0, v.default)(this, n), (e = t.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], r, i)).type = "TetrahedronGeometry", e.parameters = {
                            radius: r,
                            detail: i
                        }, e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.detail)
                        }
                    }]), n
                }(ml),
                Ac = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        (0, v.default)(this, n);
                        var a = i.font;
                        if (!a || !a.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), (0, f.default)(r, new Li);
                        var o = a.generateShapes(e, i.size);
                        return i.depth = void 0 !== i.height ? i.height : 50, void 0 === i.bevelThickness && (i.bevelThickness = 10), void 0 === i.bevelSize && (i.bevelSize = 8), void 0 === i.bevelEnabled && (i.bevelEnabled = !1), (r = t.call(this, o, i)).type = "TextGeometry", r
                    }
                    return (0, m.default)(n)
                }(gc),
                Lc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .4,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 8,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 6,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2 * Math.PI;
                        (0, v.default)(this, n), (e = t.call(this)).type = "TorusGeometry", e.parameters = {
                            radius: r,
                            tube: i,
                            radialSegments: a,
                            tubularSegments: o,
                            arc: s
                        }, a = Math.floor(a), o = Math.floor(o);
                        for (var u = [], l = [], c = [], h = [], d = new On, f = new On, p = new On, m = 0; m <= a; m++)
                            for (var g = 0; g <= o; g++) {
                                var y = g / o * s,
                                    _ = m / a * Math.PI * 2;
                                f.x = (r + i * Math.cos(_)) * Math.cos(y), f.y = (r + i * Math.cos(_)) * Math.sin(y), f.z = i * Math.sin(_), l.push(f.x, f.y, f.z), d.x = r * Math.cos(y), d.y = r * Math.sin(y), p.subVectors(f, d).normalize(), c.push(p.x, p.y, p.z), h.push(g / o), h.push(m / a)
                            }
                        for (var x = 1; x <= a; x++)
                            for (var b = 1; b <= o; b++) {
                                var w = (o + 1) * x + b - 1,
                                    T = (o + 1) * (x - 1) + b - 1,
                                    M = (o + 1) * (x - 1) + b,
                                    S = (o + 1) * x + b;
                                u.push(w, T, S), u.push(T, M, S)
                            }
                        return e.setIndex(u), e.setAttribute("position", new mi(l, 3)), e.setAttribute("normal", new mi(c, 3)), e.setAttribute("uv", new mi(h, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.tube, e.radialSegments, e.tubularSegments, e.arc)
                        }
                    }]), n
                }(Li),
                Cc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .4,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 64,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 8,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 2,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 3;
                        (0, v.default)(this, n), (e = t.call(this)).type = "TorusKnotGeometry", e.parameters = {
                            radius: r,
                            tube: i,
                            tubularSegments: a,
                            radialSegments: o,
                            p: s,
                            q: u
                        }, a = Math.floor(a), o = Math.floor(o);
                        for (var l = [], c = [], h = [], d = [], f = new On, p = new On, m = new On, g = new On, y = new On, _ = new On, x = new On, b = 0; b <= a; ++b) {
                            var w = b / a * s * Math.PI * 2;
                            D(w, s, u, r, m), D(w + .01, s, u, r, g), _.subVectors(g, m), x.addVectors(g, m), y.crossVectors(_, x), x.crossVectors(y, _), y.normalize(), x.normalize();
                            for (var T = 0; T <= o; ++T) {
                                var M = T / o * Math.PI * 2,
                                    S = -i * Math.cos(M),
                                    E = i * Math.sin(M);
                                f.x = m.x + (S * x.x + E * y.x), f.y = m.y + (S * x.y + E * y.y), f.z = m.z + (S * x.z + E * y.z), c.push(f.x, f.y, f.z), p.subVectors(f, m).normalize(), h.push(p.x, p.y, p.z), d.push(b / a), d.push(T / o)
                            }
                        }
                        for (var A = 1; A <= a; A++)
                            for (var L = 1; L <= o; L++) {
                                var C = (o + 1) * (A - 1) + (L - 1),
                                    R = (o + 1) * A + (L - 1),
                                    k = (o + 1) * A + L,
                                    P = (o + 1) * (A - 1) + L;
                                l.push(C, R, P), l.push(R, k, P)
                            }

                        function D(e, t, n, r, i) {
                            var a = Math.cos(e),
                                o = Math.sin(e),
                                s = n / t * e,
                                u = Math.cos(s);
                            i.x = r * (2 + u) * .5 * a, i.y = r * (2 + u) * o * .5, i.z = r * Math.sin(s) * .5
                        }
                        return e.setIndex(l), e.setAttribute("position", new mi(c, 3)), e.setAttribute("normal", new mi(h, 3)), e.setAttribute("uv", new mi(d, 2)), e
                    }
                    return (0, m.default)(n, null, [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n(e.radius, e.tube, e.tubularSegments, e.radialSegments, e.p, e.q)
                        }
                    }]), n
                }(Li),
                Rc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 64,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 8,
                            s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
                        (0, v.default)(this, n), (r = t.call(this)).type = "TubeGeometry", r.parameters = {
                            path: e,
                            tubularSegments: i,
                            radius: a,
                            radialSegments: o,
                            closed: s
                        };
                        var u = e.computeFrenetFrames(i, s);
                        r.tangents = u.tangents, r.normals = u.normals, r.binormals = u.binormals;
                        var l = new On,
                            c = new On,
                            h = new Tn,
                            d = new On,
                            f = [],
                            p = [],
                            m = [],
                            g = [];

                        function y(t) {
                            d = e.getPointAt(t / i, d);
                            for (var n = u.normals[t], r = u.binormals[t], s = 0; s <= o; s++) {
                                var h = s / o * Math.PI * 2,
                                    v = Math.sin(h),
                                    m = -Math.cos(h);
                                c.x = m * n.x + v * r.x, c.y = m * n.y + v * r.y, c.z = m * n.z + v * r.z, c.normalize(), p.push(c.x, c.y, c.z), l.x = d.x + a * c.x, l.y = d.y + a * c.y, l.z = d.z + a * c.z, f.push(l.x, l.y, l.z)
                            }
                        }
                        return function() {
                            for (var e = 0; e < i; e++) y(e);
                            y(!1 === s ? i : 0),
                                function() {
                                    for (var e = 0; e <= i; e++)
                                        for (var t = 0; t <= o; t++) h.x = e / i, h.y = t / o, m.push(h.x, h.y)
                                }(),
                                function() {
                                    for (var e = 1; e <= i; e++)
                                        for (var t = 1; t <= o; t++) {
                                            var n = (o + 1) * (e - 1) + (t - 1),
                                                r = (o + 1) * e + (t - 1),
                                                a = (o + 1) * e + t,
                                                s = (o + 1) * (e - 1) + t;
                                            g.push(n, r, s), g.push(r, a, s)
                                        }
                                }()
                        }(), r.setIndex(g), r.setAttribute("position", new mi(f, 3)), r.setAttribute("normal", new mi(p, 3)), r.setAttribute("uv", new mi(m, 2)), r
                    }
                    return (0, m.default)(n, [{
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return e.path = this.parameters.path.toJSON(), e
                        }
                    }], [{
                        key: "fromJSON",
                        value: function(e) {
                            return new n((new Hl[e.path.type]).fromJSON(e.path), e.tubularSegments, e.radius, e.radialSegments, e.closed)
                        }
                    }]), n
                }(Li),
                kc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        if ((0, v.default)(this, n), (r = t.call(this)).type = "WireframeGeometry", !0 === e.isGeometry) return console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), (0, f.default)(r);
                        var i = [],
                            a = new Set,
                            o = new On,
                            s = new On;
                        if (null !== e.index) {
                            var u = e.attributes.position,
                                l = e.index,
                                c = e.groups;
                            0 === c.length && (c = [{
                                start: 0,
                                count: l.count,
                                materialIndex: 0
                            }]);
                            for (var h = 0, d = c.length; h < d; ++h)
                                for (var p = c[h], m = p.start, g = m, y = m + p.count; g < y; g += 3)
                                    for (var _ = 0; _ < 3; _++) {
                                        var x = l.getX(g + _),
                                            b = l.getX(g + (_ + 1) % 3);
                                        o.fromBufferAttribute(u, x), s.fromBufferAttribute(u, b), !0 === Pc(o, s, a) && (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z))
                                    }
                        } else
                            for (var w = e.attributes.position, T = 0, M = w.count / 3; T < M; T++)
                                for (var S = 0; S < 3; S++) {
                                    var E = 3 * T + S,
                                        A = 3 * T + (S + 1) % 3;
                                    o.fromBufferAttribute(w, E), s.fromBufferAttribute(w, A), !0 === Pc(o, s, a) && (i.push(o.x, o.y, o.z), i.push(s.x, s.y, s.z))
                                }
                        return r.setAttribute("position", new mi(i, 3)), r
                    }
                    return (0, m.default)(n)
                }(Li);

            function Pc(e, t, n) {
                var r = "".concat(e.x, ",").concat(e.y, ",").concat(e.z, "-").concat(t.x, ",").concat(t.y, ",").concat(t.z),
                    i = "".concat(t.x, ",").concat(t.y, ",").concat(t.z, "-").concat(e.x, ",").concat(e.y, ",").concat(e.z);
                return !0 !== n.has(r) && !0 !== n.has(i) && (n.add(r, i), !0)
            }
            var Dc = Object.freeze({
                    __proto__: null,
                    BoxGeometry: Yi,
                    BoxBufferGeometry: Yi,
                    CircleGeometry: fl,
                    CircleBufferGeometry: fl,
                    ConeGeometry: vl,
                    ConeBufferGeometry: vl,
                    CylinderGeometry: pl,
                    CylinderBufferGeometry: pl,
                    DodecahedronGeometry: gl,
                    DodecahedronBufferGeometry: gl,
                    EdgesGeometry: wl,
                    ExtrudeGeometry: gc,
                    ExtrudeBufferGeometry: gc,
                    IcosahedronGeometry: _c,
                    IcosahedronBufferGeometry: _c,
                    LatheGeometry: xc,
                    LatheBufferGeometry: xc,
                    OctahedronGeometry: bc,
                    OctahedronBufferGeometry: bc,
                    ParametricGeometry: wc,
                    ParametricBufferGeometry: wc,
                    PlaneGeometry: pa,
                    PlaneBufferGeometry: pa,
                    PolyhedronGeometry: ml,
                    PolyhedronBufferGeometry: ml,
                    RingGeometry: Tc,
                    RingBufferGeometry: Tc,
                    ShapeGeometry: Mc,
                    ShapeBufferGeometry: Mc,
                    SphereGeometry: Sc,
                    SphereBufferGeometry: Sc,
                    TetrahedronGeometry: Ec,
                    TetrahedronBufferGeometry: Ec,
                    TextGeometry: Ac,
                    TextBufferGeometry: Ac,
                    TorusGeometry: Lc,
                    TorusBufferGeometry: Lc,
                    TorusKnotGeometry: Cc,
                    TorusKnotBufferGeometry: Cc,
                    TubeGeometry: Rc,
                    TubeBufferGeometry: Rc,
                    WireframeGeometry: kc
                }),
                Ic = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this)).type = "ShadowMaterial", r.color = new ri(0), r.transparent = !0, r.setValues(e), r
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this
                        }
                    }]), n
                }(Zr);
            Ic.prototype.isShadowMaterial = !0;
            var Oc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).defines = {
                        STANDARD: ""
                    }, r.type = "MeshStandardMaterial", r.color = new ri(16777215), r.roughness = 1, r.metalness = 0, r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new ri(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = nn, r.normalScale = new Tn(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.roughnessMap = null, r.metalnessMap = null, r.alphaMap = null, r.envMap = null, r.envMapIntensity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.flatShading = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.defines = {
                            STANDARD: ""
                        }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(Zr);
            Oc.prototype.isMeshStandardMaterial = !0;
            var Nc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).defines = {
                        STANDARD: "",
                        PHYSICAL: ""
                    }, r.type = "MeshPhysicalMaterial", r.clearcoat = 0, r.clearcoatMap = null, r.clearcoatRoughness = 0, r.clearcoatRoughnessMap = null, r.clearcoatNormalScale = new Tn(1, 1), r.clearcoatNormalMap = null, r.reflectivity = .5, Object.defineProperty((0, h.default)(r), "ior", {
                        get: function() {
                            return (1 + .4 * this.reflectivity) / (1 - .4 * this.reflectivity)
                        },
                        set: function(e) {
                            this.reflectivity = mn(2.5 * (e - 1) / (e + 1), 0, 1)
                        }
                    }), r.sheen = null, r.transmission = 0, r.transmissionMap = null, r.thickness = .01, r.thicknessMap = null, r.attenuationDistance = 0, r.attenuationTint = new ri(1, 1, 1), r.specularIntensity = 1, r.specularIntensityMap = null, r.specularTint = new ri(1, 1, 1), r.specularTintMap = null, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.defines = {
                            STANDARD: "",
                            PHYSICAL: ""
                        }, this.clearcoat = e.clearcoat, this.clearcoatMap = e.clearcoatMap, this.clearcoatRoughness = e.clearcoatRoughness, this.clearcoatRoughnessMap = e.clearcoatRoughnessMap, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.reflectivity = e.reflectivity, e.sheen ? this.sheen = (this.sheen || new ri).copy(e.sheen) : this.sheen = null, this.transmission = e.transmission, this.transmissionMap = e.transmissionMap, this.thickness = e.thickness, this.thicknessMap = e.thicknessMap, this.attenuationDistance = e.attenuationDistance, this.attenuationTint.copy(e.attenuationTint), this.specularIntensity = e.specularIntensity, this.specularIntensityMap = e.specularIntensityMap, this.specularTint.copy(e.specularTint), this.specularTintMap = e.specularTintMap, this
                    }
                }]), n
            }(Oc);
            Nc.prototype.isMeshPhysicalMaterial = !0;
            var Fc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshPhongMaterial", r.color = new ri(16777215), r.specular = new ri(1118481), r.shininess = 30, r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new ri(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = nn, r.normalScale = new Tn(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = ne, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.flatShading = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(Zr);
            Fc.prototype.isMeshPhongMaterial = !0;
            var Uc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).defines = {
                        TOON: ""
                    }, r.type = "MeshToonMaterial", r.color = new ri(16777215), r.map = null, r.gradientMap = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new ri(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = nn, r.normalScale = new Tn(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.alphaMap = null, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(Zr);
            Uc.prototype.isMeshToonMaterial = !0;
            var Bc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshNormalMaterial", r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = nn, r.normalScale = new Tn(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.wireframe = !1, r.wireframeLinewidth = 1, r.fog = !1, r.flatShading = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(Zr);
            Bc.prototype.isMeshNormalMaterial = !0;
            var zc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "MeshLambertMaterial", r.color = new ri(16777215), r.map = null, r.lightMap = null, r.lightMapIntensity = 1, r.aoMap = null, r.aoMapIntensity = 1, r.emissive = new ri(0), r.emissiveIntensity = 1, r.emissiveMap = null, r.specularMap = null, r.alphaMap = null, r.envMap = null, r.combine = ne, r.reflectivity = 1, r.refractionRatio = .98, r.wireframe = !1, r.wireframeLinewidth = 1, r.wireframeLinecap = "round", r.wireframeLinejoin = "round", r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this
                    }
                }]), n
            }(Zr);
            zc.prototype.isMeshLambertMaterial = !0;
            var Gc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).defines = {
                        MATCAP: ""
                    }, r.type = "MeshMatcapMaterial", r.color = new ri(16777215), r.matcap = null, r.map = null, r.bumpMap = null, r.bumpScale = 1, r.normalMap = null, r.normalMapType = nn, r.normalScale = new Tn(1, 1), r.displacementMap = null, r.displacementScale = 1, r.displacementBias = 0, r.alphaMap = null, r.flatShading = !1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.defines = {
                            MATCAP: ""
                        }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.flatShading = e.flatShading, this
                    }
                }]), n
            }(Zr);
            Gc.prototype.isMeshMatcapMaterial = !0;
            var Hc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r;
                    return (0, v.default)(this, n), (r = t.call(this)).type = "LineDashedMaterial", r.scale = 1, r.dashSize = 3, r.gapSize = 1, r.setValues(e), r
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this
                    }
                }]), n
            }(ju);
            Hc.prototype.isLineDashedMaterial = !0;
            var Vc = Object.freeze({
                    __proto__: null,
                    ShadowMaterial: Ic,
                    SpriteMaterial: hu,
                    RawShaderMaterial: Sa,
                    ShaderMaterial: Qi,
                    PointsMaterial: nl,
                    MeshPhysicalMaterial: Nc,
                    MeshStandardMaterial: Oc,
                    MeshPhongMaterial: Fc,
                    MeshToonMaterial: Uc,
                    MeshNormalMaterial: Bc,
                    MeshLambertMaterial: zc,
                    MeshDepthMaterial: Hs,
                    MeshDistanceMaterial: Vs,
                    MeshBasicMaterial: ii,
                    MeshMatcapMaterial: Gc,
                    LineDashedMaterial: Hc,
                    LineBasicMaterial: ju,
                    Material: Zr
                }),
                Wc = {
                    arraySlice: function(e, t, n) {
                        return Wc.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
                    },
                    convertArray: function(e, t, n) {
                        return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
                    },
                    isTypedArray: function(e) {
                        return ArrayBuffer.isView(e) && !(e instanceof DataView)
                    },
                    getKeyframeOrder: function(e) {
                        for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
                        return n.sort((function(t, n) {
                            return e[t] - e[n]
                        })), n
                    },
                    sortedArray: function(e, t, n) {
                        for (var r = e.length, i = new e.constructor(r), a = 0, o = 0; o !== r; ++a)
                            for (var s = n[a] * t, u = 0; u !== t; ++u) i[o++] = e[s + u];
                        return i
                    },
                    flattenJSON: function(e, t, n, r) {
                        for (var i = 1, a = e[0]; void 0 !== a && void 0 === a[r];) a = e[i++];
                        if (void 0 !== a) {
                            var o = a[r];
                            if (void 0 !== o)
                                if (Array.isArray(o))
                                    do {
                                        void 0 !== (o = a[r]) && (t.push(a.time), n.push.apply(n, o)), a = e[i++]
                                    } while (void 0 !== a);
                                else if (void 0 !== o.toArray)
                                do {
                                    void 0 !== (o = a[r]) && (t.push(a.time), o.toArray(n, n.length)), a = e[i++]
                                } while (void 0 !== a);
                            else
                                do {
                                    void 0 !== (o = a[r]) && (t.push(a.time), n.push(o)), a = e[i++]
                                } while (void 0 !== a)
                        }
                    },
                    subclip: function(e, t, n, r) {
                        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 30,
                            a = e.clone();
                        a.name = t;
                        for (var o = [], s = 0; s < a.tracks.length; ++s) {
                            for (var u = a.tracks[s], l = u.getValueSize(), c = [], h = [], d = 0; d < u.times.length; ++d) {
                                var f = u.times[d] * i;
                                if (!(f < n || f >= r)) {
                                    c.push(u.times[d]);
                                    for (var p = 0; p < l; ++p) h.push(u.values[d * l + p])
                                }
                            }
                            0 !== c.length && (u.times = Wc.convertArray(c, u.times.constructor), u.values = Wc.convertArray(h, u.values.constructor), o.push(u))
                        }
                        a.tracks = o;
                        for (var v = 1 / 0, m = 0; m < a.tracks.length; ++m) v > a.tracks[m].times[0] && (v = a.tracks[m].times[0]);
                        for (var g = 0; g < a.tracks.length; ++g) a.tracks[g].shift(-1 * v);
                        return a.resetDuration(), a
                    },
                    makeClipAdditive: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e,
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 30;
                        r <= 0 && (r = 30);
                        for (var i = n.tracks.length, a = t / r, o = function() {
                                var t = n.tracks[s],
                                    r = t.ValueTypeName;
                                if ("bool" === r || "string" === r) return "continue";
                                var i = e.tracks.find((function(e) {
                                    return e.name === t.name && e.ValueTypeName === r
                                }));
                                if (void 0 === i) return "continue";
                                var o = 0,
                                    u = t.getValueSize();
                                t.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (o = u / 3);
                                var l = 0,
                                    c = i.getValueSize();
                                i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline && (l = c / 3);
                                var h, d = t.times.length - 1;
                                if (a <= t.times[0]) {
                                    var f = o,
                                        p = u - o;
                                    h = Wc.arraySlice(t.values, f, p)
                                } else if (a >= t.times[d]) {
                                    var v = d * u + o,
                                        m = v + u - o;
                                    h = Wc.arraySlice(t.values, v, m)
                                } else {
                                    var g = t.createInterpolant(),
                                        y = o,
                                        _ = u - o;
                                    g.evaluate(a), h = Wc.arraySlice(g.resultBuffer, y, _)
                                }
                                "quaternion" === r && (new In).fromArray(h).normalize().conjugate().toArray(h);
                                for (var x = i.times.length, b = 0; b < x; ++b) {
                                    var w = b * c + l;
                                    if ("quaternion" === r) In.multiplyQuaternionsFlat(i.values, w, h, 0, i.values, w);
                                    else
                                        for (var T = c - 2 * l, M = 0; M < T; ++M) i.values[w + M] -= h[M]
                                }
                            }, s = 0; s < i; ++s) o();
                        return e.blendMode = qt, e
                    }
                },
                jc = function() {
                    function e(t, n, r, i) {
                        (0, v.default)(this, e), this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== i ? i : new n.constructor(r), this.sampleValues = n, this.valueSize = r, this.settings = null, this.DefaultSettings_ = {}
                    }
                    return (0, m.default)(e, [{
                        key: "evaluate",
                        value: function(e) {
                            var t = this.parameterPositions,
                                n = this._cachedIndex,
                                r = t[n],
                                i = t[n - 1];
                            e: {
                                t: {
                                    var a;n: {
                                        r: if (!(e < r)) {
                                            for (var o = n + 2;;) {
                                                if (void 0 === r) {
                                                    if (e < i) break r;
                                                    return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, i)
                                                }
                                                if (n === o) break;
                                                if (i = r, e < (r = t[++n])) break t
                                            }
                                            a = t.length;
                                            break n
                                        }if (e >= i) break e;
                                        var s = t[1];e < s && (n = 2, i = s);
                                        for (var u = n - 2;;) {
                                            if (void 0 === i) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                                            if (n === u) break;
                                            if (r = i, e >= (i = t[--n - 1])) break t
                                        }
                                        a = n,
                                        n = 0
                                    }
                                    for (; n < a;) {
                                        var l = n + a >>> 1;
                                        e < t[l] ? a = l : n = l + 1
                                    }
                                    if (r = t[n], void 0 === (i = t[n - 1])) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                                    if (void 0 === r) return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, i, e)
                                }
                                this._cachedIndex = n,
                                this.intervalChanged_(n, i, r)
                            }
                            return this.interpolate_(n, i, e, r)
                        }
                    }, {
                        key: "getSettings_",
                        value: function() {
                            return this.settings || this.DefaultSettings_
                        }
                    }, {
                        key: "copySampleValue_",
                        value: function(e) {
                            for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, a = 0; a !== r; ++a) t[a] = n[i + a];
                            return t
                        }
                    }, {
                        key: "interpolate_",
                        value: function() {
                            throw new Error("call to abstract method")
                        }
                    }, {
                        key: "intervalChanged_",
                        value: function() {}
                    }]), e
                }();
            jc.prototype.beforeStart_ = jc.prototype.copySampleValue_, jc.prototype.afterEnd_ = jc.prototype.copySampleValue_;
            var qc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        var o;
                        return (0, v.default)(this, n), (o = t.call(this, e, r, i, a))._weightPrev = -0, o._offsetPrev = -0, o._weightNext = -0, o._offsetNext = -0, o.DefaultSettings_ = {
                            endingStart: Ht,
                            endingEnd: Ht
                        }, o
                    }
                    return (0, m.default)(n, [{
                        key: "intervalChanged_",
                        value: function(e, t, n) {
                            var r = this.parameterPositions,
                                i = e - 2,
                                a = e + 1,
                                o = r[i],
                                s = r[a];
                            if (void 0 === o) switch (this.getSettings_().endingStart) {
                                case Vt:
                                    i = e, o = 2 * t - n;
                                    break;
                                case Wt:
                                    o = t + r[i = r.length - 2] - r[i + 1];
                                    break;
                                default:
                                    i = e, o = n
                            }
                            if (void 0 === s) switch (this.getSettings_().endingEnd) {
                                case Vt:
                                    a = e, s = 2 * n - t;
                                    break;
                                case Wt:
                                    a = 1, s = n + r[1] - r[0];
                                    break;
                                default:
                                    a = e - 1, s = t
                            }
                            var u = .5 * (n - t),
                                l = this.valueSize;
                            this._weightPrev = u / (t - o), this._weightNext = u / (s - n), this._offsetPrev = i * l, this._offsetNext = a * l
                        }
                    }, {
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, u = s - o, l = this._offsetPrev, c = this._offsetNext, h = this._weightPrev, d = this._weightNext, f = (n - t) / (r - t), p = f * f, v = p * f, m = -h * v + 2 * h * p - h * f, g = (1 + h) * v + (-1.5 - 2 * h) * p + (-.5 + h) * f + 1, y = (-1 - d) * v + (1.5 + d) * p + .5 * f, _ = d * v - d * p, x = 0; x !== o; ++x) i[x] = m * a[l + x] + g * a[u + x] + y * a[s + x] + _ * a[c + x];
                            return i
                        }
                    }]), n
                }(jc),
                Xc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return (0, v.default)(this, n), t.call(this, e, r, i, a)
                    }
                    return (0, m.default)(n, [{
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = e * o, u = s - o, l = (n - t) / (r - t), c = 1 - l, h = 0; h !== o; ++h) i[h] = a[u + h] * c + a[s + h] * l;
                            return i
                        }
                    }]), n
                }(jc),
                Yc = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return (0, v.default)(this, n), t.call(this, e, r, i, a)
                    }
                    return (0, m.default)(n, [{
                        key: "interpolate_",
                        value: function(e) {
                            return this.copySampleValue_(e - 1)
                        }
                    }]), n
                }(jc),
                Kc = function() {
                    function e(t, n, r, i) {
                        if ((0, v.default)(this, e), void 0 === t) throw new Error("THREE.KeyframeTrack: track name is undefined");
                        if (void 0 === n || 0 === n.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + t);
                        this.name = t, this.times = Wc.convertArray(n, this.TimeBufferType), this.values = Wc.convertArray(r, this.ValueBufferType), this.setInterpolation(i || this.DefaultInterpolation)
                    }
                    return (0, m.default)(e, [{
                        key: "InterpolantFactoryMethodDiscrete",
                        value: function(e) {
                            return new Yc(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "InterpolantFactoryMethodLinear",
                        value: function(e) {
                            return new Xc(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "InterpolantFactoryMethodSmooth",
                        value: function(e) {
                            return new qc(this.times, this.values, this.getValueSize(), e)
                        }
                    }, {
                        key: "setInterpolation",
                        value: function(e) {
                            var t;
                            switch (e) {
                                case Bt:
                                    t = this.InterpolantFactoryMethodDiscrete;
                                    break;
                                case zt:
                                    t = this.InterpolantFactoryMethodLinear;
                                    break;
                                case Gt:
                                    t = this.InterpolantFactoryMethodSmooth
                            }
                            if (void 0 === t) {
                                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                                if (void 0 === this.createInterpolant) {
                                    if (e === this.DefaultInterpolation) throw new Error(n);
                                    this.setInterpolation(this.DefaultInterpolation)
                                }
                                return console.warn("THREE.KeyframeTrack:", n), this
                            }
                            return this.createInterpolant = t, this
                        }
                    }, {
                        key: "getInterpolation",
                        value: function() {
                            switch (this.createInterpolant) {
                                case this.InterpolantFactoryMethodDiscrete:
                                    return Bt;
                                case this.InterpolantFactoryMethodLinear:
                                    return zt;
                                case this.InterpolantFactoryMethodSmooth:
                                    return Gt
                            }
                        }
                    }, {
                        key: "getValueSize",
                        value: function() {
                            return this.values.length / this.times.length
                        }
                    }, {
                        key: "shift",
                        value: function(e) {
                            if (0 !== e)
                                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] += e;
                            return this
                        }
                    }, {
                        key: "scale",
                        value: function(e) {
                            if (1 !== e)
                                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] *= e;
                            return this
                        }
                    }, {
                        key: "trim",
                        value: function(e, t) {
                            for (var n = this.times, r = n.length, i = 0, a = r - 1; i !== r && n[i] < e;) ++i;
                            for (; - 1 !== a && n[a] > t;) --a;
                            if (++a, 0 !== i || a !== r) {
                                i >= a && (i = (a = Math.max(a, 1)) - 1);
                                var o = this.getValueSize();
                                this.times = Wc.arraySlice(n, i, a), this.values = Wc.arraySlice(this.values, i * o, a * o)
                            }
                            return this
                        }
                    }, {
                        key: "validate",
                        value: function() {
                            var e = !0,
                                t = this.getValueSize();
                            t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
                            var n = this.times,
                                r = this.values,
                                i = n.length;
                            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
                            for (var a = null, o = 0; o !== i; o++) {
                                var s = n[o];
                                if ("number" == typeof s && isNaN(s)) {
                                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, o, s), e = !1;
                                    break
                                }
                                if (null !== a && a > s) {
                                    console.error("THREE.KeyframeTrack: Out of order keys.", this, o, s, a), e = !1;
                                    break
                                }
                                a = s
                            }
                            if (void 0 !== r && Wc.isTypedArray(r))
                                for (var u = 0, l = r.length; u !== l; ++u) {
                                    var c = r[u];
                                    if (isNaN(c)) {
                                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, u, c), e = !1;
                                        break
                                    }
                                }
                            return e
                        }
                    }, {
                        key: "optimize",
                        value: function() {
                            for (var e = Wc.arraySlice(this.times), t = Wc.arraySlice(this.values), n = this.getValueSize(), r = this.getInterpolation() === Gt, i = e.length - 1, a = 1, o = 1; o < i; ++o) {
                                var s = !1,
                                    u = e[o];
                                if (u !== e[o + 1] && (1 !== o || u !== e[0]))
                                    if (r) s = !0;
                                    else
                                        for (var l = o * n, c = l - n, h = l + n, d = 0; d !== n; ++d) {
                                            var f = t[l + d];
                                            if (f !== t[c + d] || f !== t[h + d]) {
                                                s = !0;
                                                break
                                            }
                                        }
                                if (s) {
                                    if (o !== a) {
                                        e[a] = e[o];
                                        for (var p = o * n, v = a * n, m = 0; m !== n; ++m) t[v + m] = t[p + m]
                                    }++a
                                }
                            }
                            if (i > 0) {
                                e[a] = e[i];
                                for (var g = i * n, y = a * n, _ = 0; _ !== n; ++_) t[y + _] = t[g + _];
                                ++a
                            }
                            return a !== e.length ? (this.times = Wc.arraySlice(e, 0, a), this.values = Wc.arraySlice(t, 0, a * n)) : (this.times = e, this.values = t), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            var e = Wc.arraySlice(this.times, 0),
                                t = Wc.arraySlice(this.values, 0),
                                n = new(0, this.constructor)(this.name, e, t);
                            return n.createInterpolant = this.createInterpolant, n
                        }
                    }], [{
                        key: "toJSON",
                        value: function(e) {
                            var t, n = e.constructor;
                            if (n.toJSON !== this.toJSON) t = n.toJSON(e);
                            else {
                                t = {
                                    name: e.name,
                                    times: Wc.convertArray(e.times, Array),
                                    values: Wc.convertArray(e.values, Array)
                                };
                                var r = e.getInterpolation();
                                r !== e.DefaultInterpolation && (t.interpolation = r)
                            }
                            return t.type = e.ValueTypeName, t
                        }
                    }]), e
                }();
            Kc.prototype.TimeBufferType = Float32Array, Kc.prototype.ValueBufferType = Float32Array, Kc.prototype.DefaultInterpolation = zt;
            var Zc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(Kc);
            Zc.prototype.ValueTypeName = "bool", Zc.prototype.ValueBufferType = Array, Zc.prototype.DefaultInterpolation = Bt, Zc.prototype.InterpolantFactoryMethodLinear = void 0, Zc.prototype.InterpolantFactoryMethodSmooth = void 0;
            var Jc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(Kc);
            Jc.prototype.ValueTypeName = "color";
            var Qc = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(Kc);
            Qc.prototype.ValueTypeName = "number";
            var $c = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i, a) {
                        return (0, v.default)(this, n), t.call(this, e, r, i, a)
                    }
                    return (0, m.default)(n, [{
                        key: "interpolate_",
                        value: function(e, t, n, r) {
                            for (var i = this.resultBuffer, a = this.sampleValues, o = this.valueSize, s = (n - t) / (r - t), u = e * o, l = u + o; u !== l; u += 4) In.slerpFlat(i, 0, a, u - o, a, u, s);
                            return i
                        }
                    }]), n
                }(jc),
                eh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        return (0, v.default)(this, n), t.apply(this, arguments)
                    }
                    return (0, m.default)(n, [{
                        key: "InterpolantFactoryMethodLinear",
                        value: function(e) {
                            return new $c(this.times, this.values, this.getValueSize(), e)
                        }
                    }]), n
                }(Kc);
            eh.prototype.ValueTypeName = "quaternion", eh.prototype.DefaultInterpolation = zt, eh.prototype.InterpolantFactoryMethodSmooth = void 0;
            var th = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(Kc);
            th.prototype.ValueTypeName = "string", th.prototype.ValueBufferType = Array, th.prototype.DefaultInterpolation = Bt, th.prototype.InterpolantFactoryMethodLinear = void 0, th.prototype.InterpolantFactoryMethodSmooth = void 0;
            var nh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.apply(this, arguments)
                }
                return (0, m.default)(n)
            }(Kc);
            nh.prototype.ValueTypeName = "vector";
            var rh = function() {
                function e(t) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1,
                        r = arguments.length > 2 ? arguments[2] : void 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : jt;
                    (0, v.default)(this, e), this.name = t, this.tracks = r, this.duration = n, this.blendMode = i, this.uuid = vn(), this.duration < 0 && this.resetDuration()
                }
                return (0, m.default)(e, [{
                    key: "resetDuration",
                    value: function() {
                        for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t) {
                            var r = this.tracks[t];
                            e = Math.max(e, r.times[r.times.length - 1])
                        }
                        return this.duration = e, this
                    }
                }, {
                    key: "trim",
                    value: function() {
                        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
                        return this
                    }
                }, {
                    key: "validate",
                    value: function() {
                        for (var e = !0, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
                        return e
                    }
                }, {
                    key: "optimize",
                    value: function() {
                        for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
                        return this
                    }
                }, {
                    key: "clone",
                    value: function() {
                        for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
                        return new this.constructor(this.name, this.duration, e, this.blendMode)
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        return this.constructor.toJSON(this)
                    }
                }], [{
                    key: "parse",
                    value: function(e) {
                        for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, a = n.length; i !== a; ++i) t.push(ih(n[i]).scale(r));
                        var o = new this(e.name, e.duration, t, e.blendMode);
                        return o.uuid = e.uuid, o
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        for (var t = [], n = e.tracks, r = {
                                name: e.name,
                                duration: e.duration,
                                tracks: t,
                                uuid: e.uuid,
                                blendMode: e.blendMode
                            }, i = 0, a = n.length; i !== a; ++i) t.push(Kc.toJSON(n[i]));
                        return r
                    }
                }, {
                    key: "CreateFromMorphTargetSequence",
                    value: function(e, t, n, r) {
                        for (var i = t.length, a = [], o = 0; o < i; o++) {
                            var s = [],
                                u = [];
                            s.push((o + i - 1) % i, o, (o + 1) % i), u.push(0, 1, 0);
                            var l = Wc.getKeyframeOrder(s);
                            s = Wc.sortedArray(s, 1, l), u = Wc.sortedArray(u, 1, l), r || 0 !== s[0] || (s.push(i), u.push(u[0])), a.push(new Qc(".morphTargetInfluences[" + t[o].name + "]", s, u).scale(1 / n))
                        }
                        return new this(e, -1, a)
                    }
                }, {
                    key: "findByName",
                    value: function(e, t) {
                        var n = e;
                        if (!Array.isArray(e)) {
                            var r = e;
                            n = r.geometry && r.geometry.animations || r.animations
                        }
                        for (var i = 0; i < n.length; i++)
                            if (n[i].name === t) return n[i];
                        return null
                    }
                }, {
                    key: "CreateClipsFromMorphTargetSequences",
                    value: function(e, t, n) {
                        for (var r = {}, i = /^([\w-]*?)([\d]+)$/, a = 0, o = e.length; a < o; a++) {
                            var s = e[a],
                                u = s.name.match(i);
                            if (u && u.length > 1) {
                                var l = u[1],
                                    c = r[l];
                                c || (r[l] = c = []), c.push(s)
                            }
                        }
                        var h = [];
                        for (var d in r) h.push(this.CreateFromMorphTargetSequence(d, r[d], t, n));
                        return h
                    }
                }, {
                    key: "parseAnimation",
                    value: function(e, t) {
                        if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
                        for (var n = function(e, t, n, r, i) {
                                if (0 !== n.length) {
                                    var a = [],
                                        o = [];
                                    Wc.flattenJSON(n, a, o, r), 0 !== a.length && i.push(new e(t, a, o))
                                }
                            }, r = [], i = e.name || "default", a = e.fps || 30, o = e.blendMode, s = e.length || -1, u = e.hierarchy || [], l = 0; l < u.length; l++) {
                            var c = u[l].keys;
                            if (c && 0 !== c.length)
                                if (c[0].morphTargets) {
                                    var h = {},
                                        d = void 0;
                                    for (d = 0; d < c.length; d++)
                                        if (c[d].morphTargets)
                                            for (var f = 0; f < c[d].morphTargets.length; f++) h[c[d].morphTargets[f]] = -1;
                                    for (var p in h) {
                                        for (var v = [], m = [], g = 0; g !== c[d].morphTargets.length; ++g) {
                                            var y = c[d];
                                            v.push(y.time), m.push(y.morphTarget === p ? 1 : 0)
                                        }
                                        r.push(new Qc(".morphTargetInfluence[" + p + "]", v, m))
                                    }
                                    s = h.length * (a || 1)
                                } else {
                                    var _ = ".bones[" + t[l].name + "]";
                                    n(nh, _ + ".position", c, "pos", r), n(eh, _ + ".quaternion", c, "rot", r), n(nh, _ + ".scale", c, "scl", r)
                                }
                        }
                        return 0 === r.length ? null : new this(i, s, r, o)
                    }
                }]), e
            }();

            function ih(e) {
                if (void 0 === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
                var t = function(e) {
                    switch (e.toLowerCase()) {
                        case "scalar":
                        case "double":
                        case "float":
                        case "number":
                        case "integer":
                            return Qc;
                        case "vector":
                        case "vector2":
                        case "vector3":
                        case "vector4":
                            return nh;
                        case "color":
                            return Jc;
                        case "quaternion":
                            return eh;
                        case "bool":
                        case "boolean":
                            return Zc;
                        case "string":
                            return th
                    }
                    throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
                }(e.type);
                if (void 0 === e.times) {
                    var n = [],
                        r = [];
                    Wc.flattenJSON(e.keys, n, r, "value"), e.times = n, e.values = r
                }
                return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation)
            }
            var ah = {
                    enabled: !1,
                    files: {},
                    add: function(e, t) {
                        !1 !== this.enabled && (this.files[e] = t)
                    },
                    get: function(e) {
                        if (!1 !== this.enabled) return this.files[e]
                    },
                    remove: function(e) {
                        delete this.files[e]
                    },
                    clear: function() {
                        this.files = {}
                    }
                },
                oh = (0, m.default)((function e(t, n, r) {
                    (0, v.default)(this, e);
                    var i = this,
                        a = !1,
                        o = 0,
                        s = 0,
                        u = void 0,
                        l = [];
                    this.onStart = void 0, this.onLoad = t, this.onProgress = n, this.onError = r, this.itemStart = function(e) {
                        s++, !1 === a && void 0 !== i.onStart && i.onStart(e, o, s), a = !0
                    }, this.itemEnd = function(e) {
                        o++, void 0 !== i.onProgress && i.onProgress(e, o, s), o === s && (a = !1, void 0 !== i.onLoad && i.onLoad())
                    }, this.itemError = function(e) {
                        void 0 !== i.onError && i.onError(e)
                    }, this.resolveURL = function(e) {
                        return u ? u(e) : e
                    }, this.setURLModifier = function(e) {
                        return u = e, this
                    }, this.addHandler = function(e, t) {
                        return l.push(e, t), this
                    }, this.removeHandler = function(e) {
                        var t = l.indexOf(e);
                        return -1 !== t && l.splice(t, 2), this
                    }, this.getHandler = function(e) {
                        for (var t = 0, n = l.length; t < n; t += 2) {
                            var r = l[t],
                                i = l[t + 1];
                            if (r.global && (r.lastIndex = 0), r.test(e)) return i
                        }
                        return null
                    }
                })),
                sh = new oh,
                uh = function() {
                    function e(t) {
                        (0, v.default)(this, e), this.manager = void 0 !== t ? t : sh, this.crossOrigin = "anonymous", this.withCredentials = !1, this.path = "", this.resourcePath = "", this.requestHeader = {}
                    }
                    return (0, m.default)(e, [{
                        key: "load",
                        value: function() {}
                    }, {
                        key: "loadAsync",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r, i) {
                                n.load(e, r, t, i)
                            }))
                        }
                    }, {
                        key: "parse",
                        value: function() {}
                    }, {
                        key: "setCrossOrigin",
                        value: function(e) {
                            return this.crossOrigin = e, this
                        }
                    }, {
                        key: "setWithCredentials",
                        value: function(e) {
                            return this.withCredentials = e, this
                        }
                    }, {
                        key: "setPath",
                        value: function(e) {
                            return this.path = e, this
                        }
                    }, {
                        key: "setResourcePath",
                        value: function(e) {
                            return this.resourcePath = e, this
                        }
                    }, {
                        key: "setRequestHeader",
                        value: function(e) {
                            return this.requestHeader = e, this
                        }
                    }]), e
                }(),
                lh = {},
                ch = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                            var i = this,
                                a = ah.get(e);
                            if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                                t && t(a), i.manager.itemEnd(e)
                            }), 0), a;
                            if (void 0 === lh[e]) {
                                var o, s = e.match(/^data:(.*?)(;base64)?,(.*)$/);
                                if (s) {
                                    var u = s[1],
                                        l = !!s[2],
                                        c = s[3];
                                    c = decodeURIComponent(c), l && (c = atob(c));
                                    try {
                                        var h, d = (this.responseType || "").toLowerCase();
                                        switch (d) {
                                            case "arraybuffer":
                                            case "blob":
                                                for (var f = new Uint8Array(c.length), p = 0; p < c.length; p++) f[p] = c.charCodeAt(p);
                                                h = "blob" === d ? new Blob([f.buffer], {
                                                    type: u
                                                }) : f.buffer;
                                                break;
                                            case "document":
                                                var v = new DOMParser;
                                                h = v.parseFromString(c, u);
                                                break;
                                            case "json":
                                                h = JSON.parse(c);
                                                break;
                                            default:
                                                h = c
                                        }
                                        setTimeout((function() {
                                            t && t(h), i.manager.itemEnd(e)
                                        }), 0)
                                    } catch (t) {
                                        setTimeout((function() {
                                            r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), 0)
                                    }
                                } else {
                                    for (var m in lh[e] = [], lh[e].push({
                                            onLoad: t,
                                            onProgress: n,
                                            onError: r
                                        }), (o = new XMLHttpRequest).open("GET", e, !0), o.addEventListener("load", (function(t) {
                                            var n = this.response,
                                                r = lh[e];
                                            if (delete lh[e], 200 === this.status || 0 === this.status) {
                                                0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."), ah.add(e, n);
                                                for (var a = 0, o = r.length; a < o; a++) {
                                                    var s = r[a];
                                                    s.onLoad && s.onLoad(n)
                                                }
                                                i.manager.itemEnd(e)
                                            } else {
                                                for (var u = 0, l = r.length; u < l; u++) {
                                                    var c = r[u];
                                                    c.onError && c.onError(t)
                                                }
                                                i.manager.itemError(e), i.manager.itemEnd(e)
                                            }
                                        }), !1), o.addEventListener("progress", (function(t) {
                                            for (var n = lh[e], r = 0, i = n.length; r < i; r++) {
                                                var a = n[r];
                                                a.onProgress && a.onProgress(t)
                                            }
                                        }), !1), o.addEventListener("error", (function(t) {
                                            var n = lh[e];
                                            delete lh[e];
                                            for (var r = 0, a = n.length; r < a; r++) {
                                                var o = n[r];
                                                o.onError && o.onError(t)
                                            }
                                            i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), !1), o.addEventListener("abort", (function(t) {
                                            var n = lh[e];
                                            delete lh[e];
                                            for (var r = 0, a = n.length; r < a; r++) {
                                                var o = n[r];
                                                o.onError && o.onError(t)
                                            }
                                            i.manager.itemError(e), i.manager.itemEnd(e)
                                        }), !1), void 0 !== this.responseType && (o.responseType = this.responseType), void 0 !== this.withCredentials && (o.withCredentials = this.withCredentials), o.overrideMimeType && o.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) o.setRequestHeader(m, this.requestHeader[m]);
                                    o.send(null)
                                }
                                return i.manager.itemStart(e), o
                            }
                            lh[e].push({
                                onLoad: t,
                                onProgress: n,
                                onError: r
                            })
                        }
                    }, {
                        key: "setResponseType",
                        value: function(e) {
                            return this.responseType = e, this
                        }
                    }, {
                        key: "setMimeType",
                        value: function(e) {
                            return this.mimeType = e, this
                        }
                    }]), n
                }(uh),
                hh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new ch(this.manager);
                            a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, (function(n) {
                                try {
                                    t(i.parse(JSON.parse(n)))
                                } catch (t) {
                                    r ? r(t) : console.error(t), i.manager.itemError(e)
                                }
                            }), n, r)
                        }
                    }, {
                        key: "parse",
                        value: function(e) {
                            for (var t = [], n = 0; n < e.length; n++) {
                                var r = rh.parse(e[n]);
                                t.push(r)
                            }
                            return t
                        }
                    }]), n
                }(uh),
                dh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = [],
                                o = new cl,
                                s = new ch(this.manager);
                            s.setPath(this.path), s.setResponseType("arraybuffer"), s.setRequestHeader(this.requestHeader), s.setWithCredentials(i.withCredentials);
                            var u = 0;

                            function l(l) {
                                s.load(e[l], (function(e) {
                                    var n = i.parse(e, !0);
                                    a[l] = {
                                        width: n.width,
                                        height: n.height,
                                        format: n.format,
                                        mipmaps: n.mipmaps
                                    }, 6 === (u += 1) && (1 === n.mipmapCount && (o.minFilter = Me), o.image = a, o.format = n.format, o.needsUpdate = !0, t && t(o))
                                }), n, r)
                            }
                            if (Array.isArray(e))
                                for (var c = 0, h = e.length; c < h; ++c) l(c);
                            else s.load(e, (function(e) {
                                var n = i.parse(e, !0);
                                if (n.isCubemap) {
                                    for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++) {
                                        a[s] = {
                                            mipmaps: []
                                        };
                                        for (var u = 0; u < n.mipmapCount; u++) a[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + u]), a[s].format = n.format, a[s].width = n.width, a[s].height = n.height
                                    }
                                    o.image = a
                                } else o.image.width = n.width, o.image.height = n.height, o.mipmaps = n.mipmaps;
                                1 === n.mipmapCount && (o.minFilter = Me), o.format = n.format, o.needsUpdate = !0, t && t(o)
                            }), n, r);
                            return o
                        }
                    }]), n
                }(uh),
                fh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                            var i = this,
                                a = ah.get(e);
                            if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                                t && t(a), i.manager.itemEnd(e)
                            }), 0), a;
                            var o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");

                            function s() {
                                o.removeEventListener("load", s, !1), o.removeEventListener("error", u, !1), ah.add(e, this), t && t(this), i.manager.itemEnd(e)
                            }

                            function u(t) {
                                o.removeEventListener("load", s, !1), o.removeEventListener("error", u, !1), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                            }
                            return o.addEventListener("load", s, !1), o.addEventListener("error", u, !1), "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (o.crossOrigin = this.crossOrigin), i.manager.itemStart(e), o.src = e, o
                        }
                    }]), n
                }(uh),
                ph = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = new ra,
                                a = new fh(this.manager);
                            a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
                            var o = 0;

                            function s(n) {
                                a.load(e[n], (function(e) {
                                    i.images[n] = e, 6 == ++o && (i.needsUpdate = !0, t && t(i))
                                }), void 0, r)
                            }
                            for (var u = 0; u < e.length; ++u) s(u);
                            return i
                        }
                    }]), n
                }(uh),
                vh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new Nu,
                                o = new ch(this.manager);
                            return o.setResponseType("arraybuffer"), o.setRequestHeader(this.requestHeader), o.setPath(this.path), o.setWithCredentials(i.withCredentials), o.load(e, (function(e) {
                                var n = i.parse(e);
                                n && (void 0 !== n.image ? a.image = n.image : void 0 !== n.data && (a.image.width = n.width, a.image.height = n.height, a.image.data = n.data), a.wrapS = void 0 !== n.wrapS ? n.wrapS : _e, a.wrapT = void 0 !== n.wrapT ? n.wrapT : _e, a.magFilter = void 0 !== n.magFilter ? n.magFilter : Me, a.minFilter = void 0 !== n.minFilter ? n.minFilter : Me, a.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.encoding && (a.encoding = n.encoding), void 0 !== n.flipY && (a.flipY = n.flipY), void 0 !== n.format && (a.format = n.format), void 0 !== n.type && (a.type = n.type), void 0 !== n.mipmaps && (a.mipmaps = n.mipmaps, a.minFilter = Ee), 1 === n.mipmapCount && (a.minFilter = Me), void 0 !== n.generateMipmaps && (a.generateMipmaps = n.generateMipmaps), a.needsUpdate = !0, t && t(a, n))
                            }), n, r), a
                        }
                    }]), n
                }(uh),
                mh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = new Ln,
                                a = new fh(this.manager);
                            return a.setCrossOrigin(this.crossOrigin), a.setPath(this.path), a.load(e, (function(n) {
                                i.image = n;
                                var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
                                i.format = r ? ze : Ge, i.needsUpdate = !0, void 0 !== t && t(i)
                            }), n, r), i
                        }
                    }]), n
                }(uh),
                gh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "CurvePath", e.curves = [], e.autoClose = !1, e
                    }
                    return (0, m.default)(n, [{
                        key: "add",
                        value: function(e) {
                            this.curves.push(e)
                        }
                    }, {
                        key: "closePath",
                        value: function() {
                            var e = this.curves[0].getPoint(0),
                                t = this.curves[this.curves.length - 1].getPoint(1);
                            e.equals(t) || this.curves.push(new Fl(t, e))
                        }
                    }, {
                        key: "getPoint",
                        value: function(e) {
                            for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length;) {
                                if (n[r] >= t) {
                                    var i = n[r] - t,
                                        a = this.curves[r],
                                        o = a.getLength(),
                                        s = 0 === o ? 0 : 1 - i / o;
                                    return a.getPointAt(s)
                                }
                                r++
                            }
                            return null
                        }
                    }, {
                        key: "getLength",
                        value: function() {
                            var e = this.getCurveLengths();
                            return e[e.length - 1]
                        }
                    }, {
                        key: "updateArcLengths",
                        value: function() {
                            this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths()
                        }
                    }, {
                        key: "getCurveLengths",
                        value: function() {
                            if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
                            for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++) t += this.curves[n].getLength(), e.push(t);
                            return this.cacheLengths = e, e
                        }
                    }, {
                        key: "getSpacedPoints",
                        value: function() {
                            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 40, t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
                            return this.autoClose && t.push(t[0]), t
                        }
                    }, {
                        key: "getPoints",
                        value: function() {
                            for (var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 12, n = [], r = 0, i = this.curves; r < i.length; r++)
                                for (var a = i[r], o = a && a.isEllipseCurve ? 2 * t : a && (a.isLineCurve || a.isLineCurve3) ? 1 : a && a.isSplineCurve ? t * a.points.length : t, s = a.getPoints(o), u = 0; u < s.length; u++) {
                                    var l = s[u];
                                    e && e.equals(l) || (n.push(l), e = l)
                                }
                            return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.curves = [];
                            for (var t = 0, r = e.curves.length; t < r; t++) {
                                var i = e.curves[t];
                                this.curves.push(i.clone())
                            }
                            return this.autoClose = e.autoClose, this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            e.autoClose = this.autoClose, e.curves = [];
                            for (var t = 0, r = this.curves.length; t < r; t++) {
                                var i = this.curves[t];
                                e.curves.push(i.toJSON())
                            }
                            return e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.autoClose = e.autoClose, this.curves = [];
                            for (var t = 0, r = e.curves.length; t < r; t++) {
                                var i = e.curves[t];
                                this.curves.push((new Hl[i.type]).fromJSON(i))
                            }
                            return this
                        }
                    }]), n
                }(Tl),
                yh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this)).type = "Path", r.currentPoint = new Tn, e && r.setFromPoints(e), r
                    }
                    return (0, m.default)(n, [{
                        key: "setFromPoints",
                        value: function(e) {
                            this.moveTo(e[0].x, e[0].y);
                            for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
                            return this
                        }
                    }, {
                        key: "moveTo",
                        value: function(e, t) {
                            return this.currentPoint.set(e, t), this
                        }
                    }, {
                        key: "lineTo",
                        value: function(e, t) {
                            var n = new Fl(this.currentPoint.clone(), new Tn(e, t));
                            return this.curves.push(n), this.currentPoint.set(e, t), this
                        }
                    }, {
                        key: "quadraticCurveTo",
                        value: function(e, t, n, r) {
                            var i = new Bl(this.currentPoint.clone(), new Tn(e, t), new Tn(n, r));
                            return this.curves.push(i), this.currentPoint.set(n, r), this
                        }
                    }, {
                        key: "bezierCurveTo",
                        value: function(e, t, n, r, i, a) {
                            var o = new Ol(this.currentPoint.clone(), new Tn(e, t), new Tn(n, r), new Tn(i, a));
                            return this.curves.push(o), this.currentPoint.set(i, a), this
                        }
                    }, {
                        key: "splineThru",
                        value: function(e) {
                            var t = [this.currentPoint.clone()].concat(e),
                                n = new Gl(t);
                            return this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
                        }
                    }, {
                        key: "arc",
                        value: function(e, t, n, r, i, a) {
                            var o = this.currentPoint.x,
                                s = this.currentPoint.y;
                            return this.absarc(e + o, t + s, n, r, i, a), this
                        }
                    }, {
                        key: "absarc",
                        value: function(e, t, n, r, i, a) {
                            return this.absellipse(e, t, n, n, r, i, a), this
                        }
                    }, {
                        key: "ellipse",
                        value: function(e, t, n, r, i, a, o, s) {
                            var u = this.currentPoint.x,
                                l = this.currentPoint.y;
                            return this.absellipse(e + u, t + l, n, r, i, a, o, s), this
                        }
                    }, {
                        key: "absellipse",
                        value: function(e, t, n, r, i, a, o, s) {
                            var u = new Ml(e, t, n, r, i, a, o, s);
                            if (this.curves.length > 0) {
                                var l = u.getPoint(0);
                                l.equals(this.currentPoint) || this.lineTo(l.x, l.y)
                            }
                            this.curves.push(u);
                            var c = u.getPoint(1);
                            return this.currentPoint.copy(c), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.currentPoint.copy(e.currentPoint), this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            return e.currentPoint = this.currentPoint.toArray(), e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.currentPoint.fromArray(e.currentPoint), this
                        }
                    }]), n
                }(gh),
                _h = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this, e)).uuid = vn(), r.type = "Shape", r.holes = [], r
                    }
                    return (0, m.default)(n, [{
                        key: "getPointsHoles",
                        value: function(e) {
                            for (var t = [], n = 0, r = this.holes.length; n < r; n++) t[n] = this.holes[n].getPoints(e);
                            return t
                        }
                    }, {
                        key: "extractPoints",
                        value: function(e) {
                            return {
                                shape: this.getPoints(e),
                                holes: this.getPointsHoles(e)
                            }
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.holes = [];
                            for (var t = 0, r = e.holes.length; t < r; t++) {
                                var i = e.holes[t];
                                this.holes.push(i.clone())
                            }
                            return this
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                            e.uuid = this.uuid, e.holes = [];
                            for (var t = 0, r = this.holes.length; t < r; t++) {
                                var i = this.holes[t];
                                e.holes.push(i.toJSON())
                            }
                            return e
                        }
                    }, {
                        key: "fromJSON",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "fromJSON", this).call(this, e), this.uuid = e.uuid, this.holes = [];
                            for (var t = 0, r = e.holes.length; t < r; t++) {
                                var i = e.holes[t];
                                this.holes.push((new yh).fromJSON(i))
                            }
                            return this
                        }
                    }]), n
                }(yh),
                xh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                        return (0, v.default)(this, n), (r = t.call(this)).type = "Light", r.color = new ri(e), r.intensity = i, r
                    }
                    return (0, m.default)(n, [{
                        key: "dispose",
                        value: function() {}
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                            return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t
                        }
                    }]), n
                }(Fr);
            xh.prototype.isLight = !0;
            var bh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a;
                    return (0, v.default)(this, n), (a = t.call(this, e, i)).type = "HemisphereLight", a.position.copy(Fr.DefaultUp), a.updateMatrix(), a.groundColor = new ri(r), a
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return xh.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this
                    }
                }]), n
            }(xh);
            bh.prototype.isHemisphereLight = !0;
            var wh = new dr,
                Th = new On,
                Mh = new On,
                Sh = function() {
                    function e(t) {
                        (0, v.default)(this, e), this.camera = t, this.bias = 0, this.normalBias = 0, this.radius = 1, this.mapSize = new Tn(512, 512), this.map = null, this.mapPass = null, this.matrix = new dr, this.autoUpdate = !0, this.needsUpdate = !1, this._frustum = new ha, this._frameExtents = new Tn(1, 1), this._viewportCount = 1, this._viewports = [new Rn(0, 0, 1, 1)]
                    }
                    return (0, m.default)(e, [{
                        key: "getViewportCount",
                        value: function() {
                            return this._viewportCount
                        }
                    }, {
                        key: "getFrustum",
                        value: function() {
                            return this._frustum
                        }
                    }, {
                        key: "updateMatrices",
                        value: function(e) {
                            var t = this.camera,
                                n = this.matrix;
                            Th.setFromMatrixPosition(e.matrixWorld), t.position.copy(Th), Mh.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(Mh), t.updateMatrixWorld(), wh.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromProjectionMatrix(wh), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse)
                        }
                    }, {
                        key: "getViewport",
                        value: function(e) {
                            return this._viewports[e]
                        }
                    }, {
                        key: "getFrameExtents",
                        value: function() {
                            return this._frameExtents
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose()
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = {};
                            return 0 !== this.bias && (e.bias = this.bias), 0 !== this.normalBias && (e.normalBias = this.normalBias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e
                        }
                    }]), e
                }(),
                Eh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this, new ea(50, 1, .5, 500))).focus = 1, e
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrices",
                        value: function(e) {
                            var t = this.camera,
                                r = 2 * pn * e.angle * this.focus,
                                i = this.mapSize.width / this.mapSize.height,
                                a = e.distance || t.far;
                            r === t.fov && i === t.aspect && a === t.far || (t.fov = r, t.aspect = i, t.far = a, t.updateProjectionMatrix()), (0, l.default)((0, p.default)(n.prototype), "updateMatrices", this).call(this, e)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.focus = e.focus, this
                        }
                    }]), n
                }(Sh);
            Eh.prototype.isSpotLightShadow = !0;
            var Ah = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Math.PI / 3,
                        s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
                        u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 1;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "SpotLight", i.position.copy(Fr.DefaultUp), i.updateMatrix(), i.target = new Fr, i.distance = a, i.angle = o, i.penumbra = s, i.decay = u, i.shadow = new Eh, i
                }
                return (0, m.default)(n, [{
                    key: "power",
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / Math.PI
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(xh);
            Ah.prototype.isSpotLight = !0;
            var Lh = new dr,
                Ch = new On,
                Rh = new On,
                kh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this, new ea(90, 1, .5, 500)))._frameExtents = new Tn(4, 2), e._viewportCount = 6, e._viewports = [new Rn(2, 1, 1, 1), new Rn(0, 1, 1, 1), new Rn(3, 1, 1, 1), new Rn(1, 1, 1, 1), new Rn(3, 0, 1, 1), new Rn(1, 0, 1, 1)], e._cubeDirections = [new On(1, 0, 0), new On(-1, 0, 0), new On(0, 0, 1), new On(0, 0, -1), new On(0, 1, 0), new On(0, -1, 0)], e._cubeUps = [new On(0, 1, 0), new On(0, 1, 0), new On(0, 1, 0), new On(0, 1, 0), new On(0, 0, 1), new On(0, 0, -1)], e
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrices",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                n = this.camera,
                                r = this.matrix,
                                i = e.distance || n.far;
                            i !== n.far && (n.far = i, n.updateProjectionMatrix()), Ch.setFromMatrixPosition(e.matrixWorld), n.position.copy(Ch), Rh.copy(n.position), Rh.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(Rh), n.updateMatrixWorld(), r.makeTranslation(-Ch.x, -Ch.y, -Ch.z), Lh.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromProjectionMatrix(Lh)
                        }
                    }]), n
                }(Sh);
            kh.prototype.isPointLightShadow = !0;
            var Ph = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "PointLight", i.distance = a, i.decay = o, i.shadow = new kh, i
                }
                return (0, m.default)(n, [{
                    key: "power",
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(e) {
                        this.intensity = e / (4 * Math.PI)
                    }
                }, {
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(xh);
            Ph.prototype.isPointLight = !0;
            var Dh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    return (0, v.default)(this, n), t.call(this, new Ma(-5, 5, 5, -5, .5, 500))
                }
                return (0, m.default)(n)
            }(Sh);
            Dh.prototype.isDirectionalLightShadow = !0;
            var Ih = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "DirectionalLight", i.position.copy(Fr.DefaultUp), i.updateMatrix(), i.target = new Fr, i.shadow = new Dh, i
                }
                return (0, m.default)(n, [{
                    key: "dispose",
                    value: function() {
                        this.shadow.dispose()
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
                    }
                }]), n
            }(xh);
            Ih.prototype.isDirectionalLight = !0;
            var Oh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "AmbientLight", i
                }
                return (0, m.default)(n)
            }(xh);
            Oh.prototype.isAmbientLight = !0;
            var Nh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r) {
                    var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
                        o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 10;
                    return (0, v.default)(this, n), (i = t.call(this, e, r)).type = "RectAreaLight", i.width = a, i.height = o, i
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.width = e.width, this.height = e.height, this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                        return t.object.width = this.width, t.object.height = this.height, t
                    }
                }]), n
            }(xh);
            Nh.prototype.isRectAreaLight = !0;
            var Fh = function() {
                function e() {
                    (0, v.default)(this, e), this.coefficients = [];
                    for (var t = 0; t < 9; t++) this.coefficients.push(new On)
                }
                return (0, m.default)(e, [{
                    key: "set",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
                        return this
                    }
                }, {
                    key: "zero",
                    value: function() {
                        for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
                        return this
                    }
                }, {
                    key: "getAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = this.coefficients;
                        return t.copy(a[0]).multiplyScalar(.282095), t.addScaledVector(a[1], .488603 * r), t.addScaledVector(a[2], .488603 * i), t.addScaledVector(a[3], .488603 * n), t.addScaledVector(a[4], n * r * 1.092548), t.addScaledVector(a[5], r * i * 1.092548), t.addScaledVector(a[6], .315392 * (3 * i * i - 1)), t.addScaledVector(a[7], n * i * 1.092548), t.addScaledVector(a[8], .546274 * (n * n - r * r)), t
                    }
                }, {
                    key: "getIrradianceAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z,
                            a = this.coefficients;
                        return t.copy(a[0]).multiplyScalar(.886227), t.addScaledVector(a[1], 1.023328 * r), t.addScaledVector(a[2], 1.023328 * i), t.addScaledVector(a[3], 1.023328 * n), t.addScaledVector(a[4], .858086 * n * r), t.addScaledVector(a[5], .858086 * r * i), t.addScaledVector(a[6], .743125 * i * i - .247708), t.addScaledVector(a[7], .858086 * n * i), t.addScaledVector(a[8], .429043 * (n * n - r * r)), t
                    }
                }, {
                    key: "add",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
                        return this
                    }
                }, {
                    key: "addScaledSH",
                    value: function(e, t) {
                        for (var n = 0; n < 9; n++) this.coefficients[n].addScaledVector(e.coefficients[n], t);
                        return this
                    }
                }, {
                    key: "scale",
                    value: function(e) {
                        for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
                        return this
                    }
                }, {
                    key: "lerp",
                    value: function(e, t) {
                        for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
                        return this
                    }
                }, {
                    key: "equals",
                    value: function(e) {
                        for (var t = 0; t < 9; t++)
                            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
                        return !0
                    }
                }, {
                    key: "copy",
                    value: function(e) {
                        return this.set(e.coefficients)
                    }
                }, {
                    key: "clone",
                    value: function() {
                        return (new this.constructor).copy(this)
                    }
                }, {
                    key: "fromArray",
                    value: function(e) {
                        for (var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = this.coefficients, r = 0; r < 9; r++) n[r].fromArray(e, t + 3 * r);
                        return this
                    }
                }, {
                    key: "toArray",
                    value: function() {
                        for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = this.coefficients, r = 0; r < 9; r++) n[r].toArray(e, t + 3 * r);
                        return e
                    }
                }], [{
                    key: "getBasisAt",
                    value: function(e, t) {
                        var n = e.x,
                            r = e.y,
                            i = e.z;
                        t[0] = .282095, t[1] = .488603 * r, t[2] = .488603 * i, t[3] = .488603 * n, t[4] = 1.092548 * n * r, t[5] = 1.092548 * r * i, t[6] = .315392 * (3 * i * i - 1), t[7] = 1.092548 * n * i, t[8] = .546274 * (n * n - r * r)
                    }
                }]), e
            }();
            Fh.prototype.isSphericalHarmonics3 = !0;
            var Uh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n() {
                    var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Fh,
                        i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    return (0, v.default)(this, n), (e = t.call(this, void 0, i)).sh = r, e
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.sh.copy(e.sh), this
                    }
                }, {
                    key: "fromJSON",
                    value: function(e) {
                        return this.intensity = e.intensity, this.sh.fromArray(e.sh), this
                    }
                }, {
                    key: "toJSON",
                    value: function(e) {
                        var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                        return t.object.sh = this.sh.toArray(), t
                    }
                }]), n
            }(xh);
            Uh.prototype.isLightProbe = !0;
            var Bh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this, e)).textures = {}, r
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new ch(i.manager);
                            a.setPath(i.path), a.setRequestHeader(i.requestHeader), a.setWithCredentials(i.withCredentials), a.load(e, (function(n) {
                                try {
                                    t(i.parse(JSON.parse(n)))
                                } catch (t) {
                                    r ? r(t) : console.error(t), i.manager.itemError(e)
                                }
                            }), n, r)
                        }
                    }, {
                        key: "parse",
                        value: function(e) {
                            var t = this.textures;

                            function n(e) {
                                return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e]
                            }
                            var r = new Vc[e.type];
                            if (void 0 !== e.uuid && (r.uuid = e.uuid), void 0 !== e.name && (r.name = e.name), void 0 !== e.color && void 0 !== r.color && r.color.setHex(e.color), void 0 !== e.roughness && (r.roughness = e.roughness), void 0 !== e.metalness && (r.metalness = e.metalness), void 0 !== e.sheen && (r.sheen = (new ri).setHex(e.sheen)), void 0 !== e.emissive && void 0 !== r.emissive && r.emissive.setHex(e.emissive), void 0 !== e.specular && void 0 !== r.specular && r.specular.setHex(e.specular), void 0 !== e.specularIntensity && (r.specularIntensity = e.specularIntensity), void 0 !== e.specularTint && void 0 !== r.specularTint && r.specularTint.setHex(e.specularTint), void 0 !== e.shininess && (r.shininess = e.shininess), void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat), void 0 !== e.clearcoatRoughness && (r.clearcoatRoughness = e.clearcoatRoughness), void 0 !== e.transmission && (r.transmission = e.transmission), void 0 !== e.thickness && (r.thickness = e.thickness), void 0 !== e.attenuationDistance && (r.attenuationDistance = e.attenuationDistance), void 0 !== e.attenuationTint && void 0 !== r.attenuationTint && r.attenuationTint.setHex(e.attenuationTint), void 0 !== e.fog && (r.fog = e.fog), void 0 !== e.flatShading && (r.flatShading = e.flatShading), void 0 !== e.blending && (r.blending = e.blending), void 0 !== e.combine && (r.combine = e.combine), void 0 !== e.side && (r.side = e.side), void 0 !== e.shadowSide && (r.shadowSide = e.shadowSide), void 0 !== e.opacity && (r.opacity = e.opacity), void 0 !== e.transparent && (r.transparent = e.transparent), void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest), void 0 !== e.depthTest && (r.depthTest = e.depthTest), void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite), void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite), void 0 !== e.stencilWrite && (r.stencilWrite = e.stencilWrite), void 0 !== e.stencilWriteMask && (r.stencilWriteMask = e.stencilWriteMask), void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc), void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef), void 0 !== e.stencilFuncMask && (r.stencilFuncMask = e.stencilFuncMask), void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail), void 0 !== e.stencilZFail && (r.stencilZFail = e.stencilZFail), void 0 !== e.stencilZPass && (r.stencilZPass = e.stencilZPass), void 0 !== e.wireframe && (r.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap), void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin), void 0 !== e.rotation && (r.rotation = e.rotation), 1 !== e.linewidth && (r.linewidth = e.linewidth), void 0 !== e.dashSize && (r.dashSize = e.dashSize), void 0 !== e.gapSize && (r.gapSize = e.gapSize), void 0 !== e.scale && (r.scale = e.scale), void 0 !== e.polygonOffset && (r.polygonOffset = e.polygonOffset), void 0 !== e.polygonOffsetFactor && (r.polygonOffsetFactor = e.polygonOffsetFactor), void 0 !== e.polygonOffsetUnits && (r.polygonOffsetUnits = e.polygonOffsetUnits), void 0 !== e.dithering && (r.dithering = e.dithering), void 0 !== e.alphaToCoverage && (r.alphaToCoverage = e.alphaToCoverage), void 0 !== e.premultipliedAlpha && (r.premultipliedAlpha = e.premultipliedAlpha), void 0 !== e.visible && (r.visible = e.visible), void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped), void 0 !== e.userData && (r.userData = e.userData), void 0 !== e.vertexColors && ("number" == typeof e.vertexColors ? r.vertexColors = e.vertexColors > 0 : r.vertexColors = e.vertexColors), void 0 !== e.uniforms)
                                for (var i in e.uniforms) {
                                    var a = e.uniforms[i];
                                    switch (r.uniforms[i] = {}, a.type) {
                                        case "t":
                                            r.uniforms[i].value = n(a.value);
                                            break;
                                        case "c":
                                            r.uniforms[i].value = (new ri).setHex(a.value);
                                            break;
                                        case "v2":
                                            r.uniforms[i].value = (new Tn).fromArray(a.value);
                                            break;
                                        case "v3":
                                            r.uniforms[i].value = (new On).fromArray(a.value);
                                            break;
                                        case "v4":
                                            r.uniforms[i].value = (new Rn).fromArray(a.value);
                                            break;
                                        case "m3":
                                            r.uniforms[i].value = (new Sn).fromArray(a.value);
                                            break;
                                        case "m4":
                                            r.uniforms[i].value = (new dr).fromArray(a.value);
                                            break;
                                        default:
                                            r.uniforms[i].value = a.value
                                    }
                                }
                            if (void 0 !== e.defines && (r.defines = e.defines), void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader), void 0 !== e.extensions)
                                for (var o in e.extensions) r.extensions[o] = e.extensions[o];
                            if (void 0 !== e.shading && (r.flatShading = 1 === e.shading), void 0 !== e.size && (r.size = e.size), void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (r.map = n(e.map)), void 0 !== e.matcap && (r.matcap = n(e.matcap)), void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap)), void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)), void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale), void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)), void 0 !== e.normalMapType && (r.normalMapType = e.normalMapType), void 0 !== e.normalScale) {
                                var s = e.normalScale;
                                !1 === Array.isArray(s) && (s = [s, s]), r.normalScale = (new Tn).fromArray(s)
                            }
                            return void 0 !== e.displacementMap && (r.displacementMap = n(e.displacementMap)), void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale), void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias), void 0 !== e.roughnessMap && (r.roughnessMap = n(e.roughnessMap)), void 0 !== e.metalnessMap && (r.metalnessMap = n(e.metalnessMap)), void 0 !== e.emissiveMap && (r.emissiveMap = n(e.emissiveMap)), void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity), void 0 !== e.specularMap && (r.specularMap = n(e.specularMap)), void 0 !== e.specularIntensityMap && (r.specularIntensityMap = n(e.specularIntensityMap)), void 0 !== e.specularTintMap && (r.specularTintMap = n(e.specularTintMap)), void 0 !== e.envMap && (r.envMap = n(e.envMap)), void 0 !== e.envMapIntensity && (r.envMapIntensity = e.envMapIntensity), void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity), void 0 !== e.refractionRatio && (r.refractionRatio = e.refractionRatio), void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)), void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity), void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)), void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity), void 0 !== e.gradientMap && (r.gradientMap = n(e.gradientMap)), void 0 !== e.clearcoatMap && (r.clearcoatMap = n(e.clearcoatMap)), void 0 !== e.clearcoatRoughnessMap && (r.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)), void 0 !== e.clearcoatNormalMap && (r.clearcoatNormalMap = n(e.clearcoatNormalMap)), void 0 !== e.clearcoatNormalScale && (r.clearcoatNormalScale = (new Tn).fromArray(e.clearcoatNormalScale)), void 0 !== e.transmissionMap && (r.transmissionMap = n(e.transmissionMap)), void 0 !== e.thicknessMap && (r.thicknessMap = n(e.thicknessMap)), r
                        }
                    }, {
                        key: "setTextures",
                        value: function(e) {
                            return this.textures = e, this
                        }
                    }]), n
                }(uh),
                zh = function() {
                    function e() {
                        (0, v.default)(this, e)
                    }
                    return (0, m.default)(e, null, [{
                        key: "decodeText",
                        value: function(e) {
                            if ("undefined" != typeof TextDecoder) return (new TextDecoder).decode(e);
                            for (var t = "", n = 0, r = e.length; n < r; n++) t += String.fromCharCode(e[n]);
                            try {
                                return decodeURIComponent(escape(t))
                            } catch (e) {
                                return t
                            }
                        }
                    }, {
                        key: "extractUrlBase",
                        value: function(e) {
                            var t = e.lastIndexOf("/");
                            return -1 === t ? "./" : e.substr(0, t + 1)
                        }
                    }]), e
                }(),
                Gh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "InstancedBufferGeometry", e.instanceCount = 1 / 0, e
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.instanceCount = e.instanceCount, this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "toJSON",
                        value: function() {
                            var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, this);
                            return e.instanceCount = this.instanceCount, e.isInstancedBufferGeometry = !0, e
                        }
                    }]), n
                }(Li);
            Gh.prototype.isInstancedBufferGeometry = !0;
            var Hh = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e, r, i) {
                    var a, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1;
                    return (0, v.default)(this, n), "number" == typeof i && (o = i, i = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), (a = t.call(this, e, r, i)).meshPerAttribute = o, a
                }
                return (0, m.default)(n, [{
                    key: "copy",
                    value: function(e) {
                        return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                    }
                }, {
                    key: "toJSON",
                    value: function() {
                        var e = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this);
                        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e
                    }
                }]), n
            }(si);
            Hh.prototype.isInstancedBufferAttribute = !0;
            var Vh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new ch(i.manager);
                            a.setPath(i.path), a.setRequestHeader(i.requestHeader), a.setWithCredentials(i.withCredentials), a.load(e, (function(n) {
                                try {
                                    t(i.parse(JSON.parse(n)))
                                } catch (t) {
                                    r ? r(t) : console.error(t), i.manager.itemError(e)
                                }
                            }), n, r)
                        }
                    }, {
                        key: "parse",
                        value: function(e) {
                            var t = {},
                                n = {};

                            function r(e, r) {
                                if (void 0 !== t[r]) return t[r];
                                var i = e.interleavedBuffers[r],
                                    a = function(e, t) {
                                        if (void 0 !== n[t]) return n[t];
                                        var r = e.arrayBuffers,
                                            i = r[t],
                                            a = new Uint32Array(i).buffer;
                                        return n[t] = a, a
                                    }(e, i.buffer),
                                    o = xi(i.type, a),
                                    s = new su(o, i.stride);
                                return s.uuid = i.uuid, t[r] = s, s
                            }
                            var i = e.isInstancedBufferGeometry ? new Gh : new Li,
                                a = e.data.index;
                            if (void 0 !== a) {
                                var o = xi(a.type, a.array);
                                i.setIndex(new si(o, 1))
                            }
                            var s = e.data.attributes;
                            for (var u in s) {
                                var l = s[u],
                                    c = void 0;
                                if (l.isInterleavedBufferAttribute) {
                                    var h = r(e.data, l.data);
                                    c = new lu(h, l.itemSize, l.offset, l.normalized)
                                } else {
                                    var d = xi(l.type, l.array);
                                    c = new(l.isInstancedBufferAttribute ? Hh : si)(d, l.itemSize, l.normalized)
                                }
                                void 0 !== l.name && (c.name = l.name), void 0 !== l.usage && c.setUsage(l.usage), void 0 !== l.updateRange && (c.updateRange.offset = l.updateRange.offset, c.updateRange.count = l.updateRange.count), i.setAttribute(u, c)
                            }
                            var f = e.data.morphAttributes;
                            if (f)
                                for (var p in f) {
                                    for (var v = f[p], m = [], g = 0, y = v.length; g < y; g++) {
                                        var _ = v[g],
                                            x = void 0;
                                        if (_.isInterleavedBufferAttribute) {
                                            var b = r(e.data, _.data);
                                            x = new lu(b, _.itemSize, _.offset, _.normalized)
                                        } else {
                                            var w = xi(_.type, _.array);
                                            x = new si(w, _.itemSize, _.normalized)
                                        }
                                        void 0 !== _.name && (x.name = _.name), m.push(x)
                                    }
                                    i.morphAttributes[p] = m
                                }
                            e.data.morphTargetsRelative && (i.morphTargetsRelative = !0);
                            var T = e.data.groups || e.data.drawcalls || e.data.offsets;
                            if (void 0 !== T)
                                for (var M = 0, S = T.length; M !== S; ++M) {
                                    var E = T[M];
                                    i.addGroup(E.start, E.count, E.materialIndex)
                                }
                            var A = e.data.boundingSphere;
                            if (void 0 !== A) {
                                var L = new On;
                                void 0 !== A.center && L.fromArray(A.center), i.boundingSphere = new rr(L, A.radius)
                            }
                            return e.name && (i.name = e.name), e.userData && (i.userData = e.userData), i
                        }
                    }]), n
                }(uh),
                Wh = function(e) {
                    (0, d.default)(a, e);
                    var t, n, r, i = w(a);

                    function a(e) {
                        return (0, v.default)(this, a), i.call(this, e)
                    }
                    return (0, m.default)(a, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = "" === this.path ? zh.extractUrlBase(e) : this.path;
                            this.resourcePath = this.resourcePath || a;
                            var o = new ch(this.manager);
                            o.setPath(this.path), o.setRequestHeader(this.requestHeader), o.setWithCredentials(this.withCredentials), o.load(e, (function(n) {
                                var a = null;
                                try {
                                    a = JSON.parse(n)
                                } catch (t) {
                                    return void 0 !== r && r(t), void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message)
                                }
                                var o = a.metadata;
                                void 0 !== o && void 0 !== o.type && "geometry" !== o.type.toLowerCase() ? i.parse(a, t) : console.error("THREE.ObjectLoader: Can't load " + e)
                            }), n, r)
                        }
                    }, {
                        key: "loadAsync",
                        value: (r = (0, s.default)(y().mark((function e(t, n) {
                            var r, i, a, o, s, u;
                            return y().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return r = this, i = "" === this.path ? zh.extractUrlBase(t) : this.path, this.resourcePath = this.resourcePath || i, (a = new ch(this.manager)).setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), e.next = 9, a.loadAsync(t, n);
                                    case 9:
                                        if (o = e.sent, s = JSON.parse(o), void 0 !== (u = s.metadata) && void 0 !== u.type && "geometry" !== u.type.toLowerCase()) {
                                            e.next = 14;
                                            break
                                        }
                                        throw new Error("THREE.ObjectLoader: Can't load " + t);
                                    case 14:
                                        return e.next = 16, r.parseAsync(s);
                                    case 16:
                                        return e.abrupt("return", e.sent);
                                    case 17:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, this)
                        }))), function(e, t) {
                            return r.apply(this, arguments)
                        })
                    }, {
                        key: "parse",
                        value: function(e, t) {
                            var n = this.parseAnimations(e.animations),
                                r = this.parseShapes(e.shapes),
                                i = this.parseGeometries(e.geometries, r),
                                a = this.parseImages(e.images, (function() {
                                    void 0 !== t && t(u)
                                })),
                                o = this.parseTextures(e.textures, a),
                                s = this.parseMaterials(e.materials, o),
                                u = this.parseObject(e.object, i, s, o, n),
                                l = this.parseSkeletons(e.skeletons, u);
                            if (this.bindSkeletons(u, l), void 0 !== t) {
                                var c = !1;
                                for (var h in a)
                                    if (a[h] instanceof HTMLImageElement) {
                                        c = !0;
                                        break
                                    }!1 === c && t(u)
                            }
                            return u
                        }
                    }, {
                        key: "parseAsync",
                        value: (n = (0, s.default)(y().mark((function e(t) {
                            var n, r, i, a, o, s, u, l;
                            return y().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return n = this.parseAnimations(t.animations), r = this.parseShapes(t.shapes), i = this.parseGeometries(t.geometries, r), e.next = 5, this.parseImagesAsync(t.images);
                                    case 5:
                                        return a = e.sent, o = this.parseTextures(t.textures, a), s = this.parseMaterials(t.materials, o), u = this.parseObject(t.object, i, s, o, n), l = this.parseSkeletons(t.skeletons, u), this.bindSkeletons(u, l), e.abrupt("return", u);
                                    case 12:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, this)
                        }))), function(e) {
                            return n.apply(this, arguments)
                        })
                    }, {
                        key: "parseShapes",
                        value: function(e) {
                            var t = {};
                            if (void 0 !== e)
                                for (var n = 0, r = e.length; n < r; n++) {
                                    var i = (new _h).fromJSON(e[n]);
                                    t[i.uuid] = i
                                }
                            return t
                        }
                    }, {
                        key: "parseSkeletons",
                        value: function(e, t) {
                            var n = {},
                                r = {};
                            if (t.traverse((function(e) {
                                    e.isBone && (r[e.uuid] = e)
                                })), void 0 !== e)
                                for (var i = 0, a = e.length; i < a; i++) {
                                    var o = (new Bu).fromJSON(e[i], r);
                                    n[o.uuid] = o
                                }
                            return n
                        }
                    }, {
                        key: "parseGeometries",
                        value: function(e, t) {
                            var n = {};
                            if (void 0 !== e)
                                for (var r = new Vh, i = 0, a = e.length; i < a; i++) {
                                    var o = void 0,
                                        s = e[i];
                                    switch (s.type) {
                                        case "BufferGeometry":
                                        case "InstancedBufferGeometry":
                                            o = r.parse(s);
                                            break;
                                        case "Geometry":
                                            console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");
                                            break;
                                        default:
                                            s.type in Dc ? o = Dc[s.type].fromJSON(s, t) : console.warn('THREE.ObjectLoader: Unsupported geometry type "'.concat(s.type, '"'))
                                    }
                                    o.uuid = s.uuid, void 0 !== s.name && (o.name = s.name), !0 === o.isBufferGeometry && void 0 !== s.userData && (o.userData = s.userData), n[s.uuid] = o
                                }
                            return n
                        }
                    }, {
                        key: "parseMaterials",
                        value: function(e, t) {
                            var n = {},
                                r = {};
                            if (void 0 !== e) {
                                var i = new Bh;
                                i.setTextures(t);
                                for (var a = 0, o = e.length; a < o; a++) {
                                    var s = e[a];
                                    if ("MultiMaterial" === s.type) {
                                        for (var u = [], l = 0; l < s.materials.length; l++) {
                                            var c = s.materials[l];
                                            void 0 === n[c.uuid] && (n[c.uuid] = i.parse(c)), u.push(n[c.uuid])
                                        }
                                        r[s.uuid] = u
                                    } else void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)), r[s.uuid] = n[s.uuid]
                                }
                            }
                            return r
                        }
                    }, {
                        key: "parseAnimations",
                        value: function(e) {
                            var t = {};
                            if (void 0 !== e)
                                for (var n = 0; n < e.length; n++) {
                                    var r = e[n],
                                        i = rh.parse(r);
                                    t[i.uuid] = i
                                }
                            return t
                        }
                    }, {
                        key: "parseImages",
                        value: function(e, t) {
                            var n, r = this,
                                i = {};

                            function a(e) {
                                if ("string" == typeof e) {
                                    var t = e;
                                    return function(e) {
                                        return r.manager.itemStart(e), n.load(e, (function() {
                                            r.manager.itemEnd(e)
                                        }), void 0, (function() {
                                            r.manager.itemError(e), r.manager.itemEnd(e)
                                        }))
                                    }(/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t) ? t : r.resourcePath + t)
                                }
                                return e.data ? {
                                    data: xi(e.type, e.data),
                                    width: e.width,
                                    height: e.height
                                } : null
                            }
                            if (void 0 !== e && e.length > 0) {
                                var o = new oh(t);
                                (n = new fh(o)).setCrossOrigin(this.crossOrigin);
                                for (var s = 0, u = e.length; s < u; s++) {
                                    var l = e[s],
                                        c = l.url;
                                    if (Array.isArray(c)) {
                                        i[l.uuid] = [];
                                        for (var h = 0, d = c.length; h < d; h++) {
                                            var f = a(c[h]);
                                            null !== f && (f instanceof HTMLImageElement ? i[l.uuid].push(f) : i[l.uuid].push(new Nu(f.data, f.width, f.height)))
                                        }
                                    } else {
                                        var p = a(l.url);
                                        null !== p && (i[l.uuid] = p)
                                    }
                                }
                            }
                            return i
                        }
                    }, {
                        key: "parseImagesAsync",
                        value: (t = (0, s.default)(y().mark((function e(t) {
                            var n, r, i, a, o, u, l, c, h, d, f, p, v, m;
                            return y().wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        if (o = function() {
                                                return o = (0, s.default)(y().mark((function e(t) {
                                                    var r, a;
                                                    return y().wrap((function(e) {
                                                        for (;;) switch (e.prev = e.next) {
                                                            case 0:
                                                                if ("string" != typeof t) {
                                                                    e.next = 8;
                                                                    break
                                                                }
                                                                return a = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(r = t) ? r : n.resourcePath + r, e.next = 5, i.loadAsync(a);
                                                            case 5:
                                                                return e.abrupt("return", e.sent);
                                                            case 8:
                                                                if (!t.data) {
                                                                    e.next = 12;
                                                                    break
                                                                }
                                                                return e.abrupt("return", {
                                                                    data: xi(t.type, t.data),
                                                                    width: t.width,
                                                                    height: t.height
                                                                });
                                                            case 12:
                                                                return e.abrupt("return", null);
                                                            case 13:
                                                            case "end":
                                                                return e.stop()
                                                        }
                                                    }), e)
                                                }))), o.apply(this, arguments)
                                            }, a = function(e) {
                                                return o.apply(this, arguments)
                                            }, n = this, r = {}, !(void 0 !== t && t.length > 0)) {
                                            e.next = 32;
                                            break
                                        }(i = new fh(this.manager)).setCrossOrigin(this.crossOrigin), u = 0, l = t.length;
                                    case 8:
                                        if (!(u < l)) {
                                            e.next = 32;
                                            break
                                        }
                                        if (c = t[u], h = c.url, !Array.isArray(h)) {
                                            e.next = 25;
                                            break
                                        }
                                        r[c.uuid] = [], d = 0, f = h.length;
                                    case 14:
                                        if (!(d < f)) {
                                            e.next = 23;
                                            break
                                        }
                                        return p = h[d], e.next = 18, a(p);
                                    case 18:
                                        null !== (v = e.sent) && (v instanceof HTMLImageElement ? r[c.uuid].push(v) : r[c.uuid].push(new Nu(v.data, v.width, v.height)));
                                    case 20:
                                        d++, e.next = 14;
                                        break;
                                    case 23:
                                        e.next = 29;
                                        break;
                                    case 25:
                                        return e.next = 27, a(c.url);
                                    case 27:
                                        null !== (m = e.sent) && (r[c.uuid] = m);
                                    case 29:
                                        u++, e.next = 8;
                                        break;
                                    case 32:
                                        return e.abrupt("return", r);
                                    case 33:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, this)
                        }))), function(e) {
                            return t.apply(this, arguments)
                        })
                    }, {
                        key: "parseTextures",
                        value: function(e, t) {
                            function n(e, t) {
                                return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e])
                            }
                            var r = {};
                            if (void 0 !== e)
                                for (var i = 0, a = e.length; i < a; i++) {
                                    var o = e[i];
                                    void 0 === o.image && console.warn('THREE.ObjectLoader: No "image" specified for', o.uuid), void 0 === t[o.image] && console.warn("THREE.ObjectLoader: Undefined image", o.image);
                                    var s = void 0,
                                        u = t[o.image];
                                    Array.isArray(u) ? (s = new ra(u), 6 === u.length && (s.needsUpdate = !0)) : (s = u && u.data ? new Nu(u.data, u.width, u.height) : new Ln(u), u && (s.needsUpdate = !0)), s.uuid = o.uuid, void 0 !== o.name && (s.name = o.name), void 0 !== o.mapping && (s.mapping = n(o.mapping, jh)), void 0 !== o.offset && s.offset.fromArray(o.offset), void 0 !== o.repeat && s.repeat.fromArray(o.repeat), void 0 !== o.center && s.center.fromArray(o.center), void 0 !== o.rotation && (s.rotation = o.rotation), void 0 !== o.wrap && (s.wrapS = n(o.wrap[0], qh), s.wrapT = n(o.wrap[1], qh)), void 0 !== o.format && (s.format = o.format), void 0 !== o.type && (s.type = o.type), void 0 !== o.encoding && (s.encoding = o.encoding), void 0 !== o.minFilter && (s.minFilter = n(o.minFilter, Xh)), void 0 !== o.magFilter && (s.magFilter = n(o.magFilter, Xh)), void 0 !== o.anisotropy && (s.anisotropy = o.anisotropy), void 0 !== o.flipY && (s.flipY = o.flipY), void 0 !== o.premultiplyAlpha && (s.premultiplyAlpha = o.premultiplyAlpha), void 0 !== o.unpackAlignment && (s.unpackAlignment = o.unpackAlignment), r[o.uuid] = s
                                }
                            return r
                        }
                    }, {
                        key: "parseObject",
                        value: function(e, t, n, r, i) {
                            var a, o, s;

                            function u(e) {
                                return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), t[e]
                            }

                            function l(e) {
                                if (void 0 !== e) {
                                    if (Array.isArray(e)) {
                                        for (var t = [], r = 0, i = e.length; r < i; r++) {
                                            var a = e[r];
                                            void 0 === n[a] && console.warn("THREE.ObjectLoader: Undefined material", a), t.push(n[a])
                                        }
                                        return t
                                    }
                                    return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e), n[e]
                                }
                            }

                            function c(e) {
                                return void 0 === r[e] && console.warn("THREE.ObjectLoader: Undefined texture", e), r[e]
                            }
                            switch (e.type) {
                                case "Scene":
                                    a = new ou, void 0 !== e.background && (Number.isInteger(e.background) ? a.background = new ri(e.background) : a.background = c(e.background)), void 0 !== e.environment && (a.environment = c(e.environment)), void 0 !== e.fog && ("Fog" === e.fog.type ? a.fog = new au(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (a.fog = new iu(e.fog.color, e.fog.density)));
                                    break;
                                case "PerspectiveCamera":
                                    a = new ea(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (a.focus = e.focus), void 0 !== e.zoom && (a.zoom = e.zoom), void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (a.filmOffset = e.filmOffset), void 0 !== e.view && (a.view = Object.assign({}, e.view));
                                    break;
                                case "OrthographicCamera":
                                    a = new Ma(e.left, e.right, e.top, e.bottom, e.near, e.far), void 0 !== e.zoom && (a.zoom = e.zoom), void 0 !== e.view && (a.view = Object.assign({}, e.view));
                                    break;
                                case "AmbientLight":
                                    a = new Oh(e.color, e.intensity);
                                    break;
                                case "DirectionalLight":
                                    a = new Ih(e.color, e.intensity);
                                    break;
                                case "PointLight":
                                    a = new Ph(e.color, e.intensity, e.distance, e.decay);
                                    break;
                                case "RectAreaLight":
                                    a = new Nh(e.color, e.intensity, e.width, e.height);
                                    break;
                                case "SpotLight":
                                    a = new Ah(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                                    break;
                                case "HemisphereLight":
                                    a = new bh(e.color, e.groundColor, e.intensity);
                                    break;
                                case "LightProbe":
                                    a = (new Uh).fromJSON(e);
                                    break;
                                case "SkinnedMesh":
                                    o = u(e.geometry), s = l(e.material), a = new Iu(o, s), void 0 !== e.bindMode && (a.bindMode = e.bindMode), void 0 !== e.bindMatrix && a.bindMatrix.fromArray(e.bindMatrix), void 0 !== e.skeleton && (a.skeleton = e.skeleton);
                                    break;
                                case "Mesh":
                                    o = u(e.geometry), s = l(e.material), a = new qi(o, s);
                                    break;
                                case "InstancedMesh":
                                    o = u(e.geometry), s = l(e.material);
                                    var h = e.count,
                                        d = e.instanceMatrix,
                                        f = e.instanceColor;
                                    (a = new Wu(o, s, h)).instanceMatrix = new si(new Float32Array(d.array), 16), void 0 !== f && (a.instanceColor = new si(new Float32Array(f.array), f.itemSize));
                                    break;
                                case "LOD":
                                    a = new Lu;
                                    break;
                                case "Line":
                                    a = new Ju(u(e.geometry), l(e.material));
                                    break;
                                case "LineLoop":
                                    a = new tl(u(e.geometry), l(e.material));
                                    break;
                                case "LineSegments":
                                    a = new el(u(e.geometry), l(e.material));
                                    break;
                                case "PointCloud":
                                case "Points":
                                    a = new sl(u(e.geometry), l(e.material));
                                    break;
                                case "Sprite":
                                    a = new Mu(l(e.material));
                                    break;
                                case "Group":
                                    a = new Js;
                                    break;
                                case "Bone":
                                    a = new Ou;
                                    break;
                                default:
                                    a = new Fr
                            }
                            if (a.uuid = e.uuid, void 0 !== e.name && (a.name = e.name), void 0 !== e.matrix ? (a.matrix.fromArray(e.matrix), void 0 !== e.matrixAutoUpdate && (a.matrixAutoUpdate = e.matrixAutoUpdate), a.matrixAutoUpdate && a.matrix.decompose(a.position, a.quaternion, a.scale)) : (void 0 !== e.position && a.position.fromArray(e.position), void 0 !== e.rotation && a.rotation.fromArray(e.rotation), void 0 !== e.quaternion && a.quaternion.fromArray(e.quaternion), void 0 !== e.scale && a.scale.fromArray(e.scale)), void 0 !== e.castShadow && (a.castShadow = e.castShadow), void 0 !== e.receiveShadow && (a.receiveShadow = e.receiveShadow), e.shadow && (void 0 !== e.shadow.bias && (a.shadow.bias = e.shadow.bias), void 0 !== e.shadow.normalBias && (a.shadow.normalBias = e.shadow.normalBias), void 0 !== e.shadow.radius && (a.shadow.radius = e.shadow.radius), void 0 !== e.shadow.mapSize && a.shadow.mapSize.fromArray(e.shadow.mapSize), void 0 !== e.shadow.camera && (a.shadow.camera = this.parseObject(e.shadow.camera))), void 0 !== e.visible && (a.visible = e.visible), void 0 !== e.frustumCulled && (a.frustumCulled = e.frustumCulled), void 0 !== e.renderOrder && (a.renderOrder = e.renderOrder), void 0 !== e.userData && (a.userData = e.userData), void 0 !== e.layers && (a.layers.mask = e.layers), void 0 !== e.children)
                                for (var p = e.children, v = 0; v < p.length; v++) a.add(this.parseObject(p[v], t, n, r, i));
                            if (void 0 !== e.animations)
                                for (var m = e.animations, g = 0; g < m.length; g++) {
                                    var y = m[g];
                                    a.animations.push(i[y])
                                }
                            if ("LOD" === e.type) {
                                void 0 !== e.autoUpdate && (a.autoUpdate = e.autoUpdate);
                                for (var _ = e.levels, x = 0; x < _.length; x++) {
                                    var b = _[x],
                                        w = a.getObjectByProperty("uuid", b.object);
                                    void 0 !== w && a.addLevel(w, b.distance)
                                }
                            }
                            return a
                        }
                    }, {
                        key: "bindSkeletons",
                        value: function(e, t) {
                            0 !== Object.keys(t).length && e.traverse((function(e) {
                                if (!0 === e.isSkinnedMesh && void 0 !== e.skeleton) {
                                    var n = t[e.skeleton];
                                    void 0 === n ? console.warn("THREE.ObjectLoader: No skeleton found with UUID:", e.skeleton) : e.bind(n, e.bindMatrix)
                                }
                            }))
                        }
                    }, {
                        key: "setTexturePath",
                        value: function(e) {
                            return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e)
                        }
                    }]), a
                }(uh),
                jh = {
                    UVMapping: he,
                    CubeReflectionMapping: de,
                    CubeRefractionMapping: fe,
                    EquirectangularReflectionMapping: pe,
                    EquirectangularRefractionMapping: ve,
                    CubeUVReflectionMapping: me,
                    CubeUVRefractionMapping: ge
                },
                qh = {
                    RepeatWrapping: ye,
                    ClampToEdgeWrapping: _e,
                    MirroredRepeatWrapping: xe
                },
                Xh = {
                    NearestFilter: be,
                    NearestMipmapNearestFilter: we,
                    NearestMipmapLinearFilter: Te,
                    LinearFilter: Me,
                    LinearMipmapNearestFilter: Se,
                    LinearMipmapLinearFilter: Ee
                },
                Yh = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), r = t.call(this, e), "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), r.options = {
                            premultiplyAlpha: "none"
                        }, r
                    }
                    return (0, m.default)(n, [{
                        key: "setOptions",
                        value: function(e) {
                            return this.options = e, this
                        }
                    }, {
                        key: "load",
                        value: function(e, t, n, r) {
                            void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
                            var i = this,
                                a = ah.get(e);
                            if (void 0 !== a) return i.manager.itemStart(e), setTimeout((function() {
                                t && t(a), i.manager.itemEnd(e)
                            }), 0), a;
                            var o = {};
                            o.credentials = "anonymous" === this.crossOrigin ? "same-origin" : "include", o.headers = this.requestHeader, fetch(e, o).then((function(e) {
                                return e.blob()
                            })).then((function(e) {
                                return createImageBitmap(e, Object.assign(i.options, {
                                    colorSpaceConversion: "none"
                                }))
                            })).then((function(n) {
                                ah.add(e, n), t && t(n), i.manager.itemEnd(e)
                            })).catch((function(t) {
                                r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                            })), i.manager.itemStart(e)
                        }
                    }]), n
                }(uh);
            Yh.prototype.isImageBitmapLoader = !0;
            var Kh = function() {
                    function e() {
                        (0, v.default)(this, e), this.type = "ShapePath", this.color = new ri, this.subPaths = [], this.currentPath = null
                    }
                    return (0, m.default)(e, [{
                        key: "moveTo",
                        value: function(e, t) {
                            return this.currentPath = new yh, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this
                        }
                    }, {
                        key: "lineTo",
                        value: function(e, t) {
                            return this.currentPath.lineTo(e, t), this
                        }
                    }, {
                        key: "quadraticCurveTo",
                        value: function(e, t, n, r) {
                            return this.currentPath.quadraticCurveTo(e, t, n, r), this
                        }
                    }, {
                        key: "bezierCurveTo",
                        value: function(e, t, n, r, i, a) {
                            return this.currentPath.bezierCurveTo(e, t, n, r, i, a), this
                        }
                    }, {
                        key: "splineThru",
                        value: function(e) {
                            return this.currentPath.splineThru(e), this
                        }
                    }, {
                        key: "toShapes",
                        value: function(e, t) {
                            function n(e) {
                                for (var t = [], n = 0, r = e.length; n < r; n++) {
                                    var i = e[n],
                                        a = new _h;
                                    a.curves = i.curves, t.push(a)
                                }
                                return t
                            }

                            function r(e, t) {
                                for (var n = t.length, r = !1, i = n - 1, a = 0; a < n; i = a++) {
                                    var o = t[i],
                                        s = t[a],
                                        u = s.x - o.x,
                                        l = s.y - o.y;
                                    if (Math.abs(l) > Number.EPSILON) {
                                        if (l < 0 && (o = t[a], u = -u, s = t[i], l = -l), e.y < o.y || e.y > s.y) continue;
                                        if (e.y === o.y) {
                                            if (e.x === o.x) return !0
                                        } else {
                                            var c = l * (e.x - o.x) - u * (e.y - o.y);
                                            if (0 === c) return !0;
                                            if (c < 0) continue;
                                            r = !r
                                        }
                                    } else {
                                        if (e.y !== o.y) continue;
                                        if (s.x <= e.x && e.x <= o.x || o.x <= e.x && e.x <= s.x) return !0
                                    }
                                }
                                return r
                            }
                            var i, a, o, s = pc.isClockWise,
                                u = this.subPaths;
                            if (0 === u.length) return [];
                            if (!0 === t) return n(u);
                            var l = [];
                            if (1 === u.length) return a = u[0], (o = new _h).curves = a.curves, l.push(o), l;
                            var c = !s(u[0].getPoints());
                            c = e ? !c : c;
                            var h, d, f = [],
                                p = [],
                                v = [],
                                m = 0;
                            p[m] = void 0, v[m] = [];
                            for (var g = 0, y = u.length; g < y; g++) i = s(h = (a = u[g]).getPoints()), (i = e ? !i : i) ? (!c && p[m] && m++, p[m] = {
                                s: new _h,
                                p: h
                            }, p[m].s.curves = a.curves, c && m++, v[m] = []) : v[m].push({
                                h: a,
                                p: h[0]
                            });
                            if (!p[0]) return n(u);
                            if (p.length > 1) {
                                for (var _ = !1, x = [], b = 0, w = p.length; b < w; b++) f[b] = [];
                                for (var T = 0, M = p.length; T < M; T++)
                                    for (var S = v[T], E = 0; E < S.length; E++) {
                                        for (var A = S[E], L = !0, C = 0; C < p.length; C++) r(A.p, p[C].p) && (T !== C && x.push({
                                            froms: T,
                                            tos: C,
                                            hole: E
                                        }), L ? (L = !1, f[C].push(A)) : _ = !0);
                                        L && f[T].push(A)
                                    }
                                x.length > 0 && (_ || (v = f))
                            }
                            for (var R = 0, k = p.length; R < k; R++) {
                                o = p[R].s, l.push(o);
                                for (var P = 0, D = (d = v[R]).length; P < D; P++) o.holes.push(d[P].h)
                            }
                            return l
                        }
                    }]), e
                }(),
                Zh = function() {
                    function e(t) {
                        (0, v.default)(this, e), this.type = "Font", this.data = t
                    }
                    return (0, m.default)(e, [{
                        key: "generateShapes",
                        value: function(e) {
                            for (var t = [], n = function(e, t, n) {
                                    for (var r = Array.from(e), i = t / n.resolution, a = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, o = [], s = 0, u = 0, l = 0; l < r.length; l++) {
                                        var c = r[l];
                                        if ("\n" === c) s = 0, u -= a;
                                        else {
                                            var h = Jh(c, i, s, u, n);
                                            s += h.offsetX, o.push(h.path)
                                        }
                                    }
                                    return o
                                }(e, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 100, this.data), r = 0, i = n.length; r < i; r++) Array.prototype.push.apply(t, n[r].toShapes());
                            return t
                        }
                    }]), e
                }();

            function Jh(e, t, n, r, i) {
                var a = i.glyphs[e] || i.glyphs["?"];
                if (a) {
                    var o, s, u, l, c, h, d, f, p = new Kh;
                    if (a.o)
                        for (var v = a._cachedOutline || (a._cachedOutline = a.o.split(" ")), m = 0, g = v.length; m < g;) switch (v[m++]) {
                            case "m":
                                o = v[m++] * t + n, s = v[m++] * t + r, p.moveTo(o, s);
                                break;
                            case "l":
                                o = v[m++] * t + n, s = v[m++] * t + r, p.lineTo(o, s);
                                break;
                            case "q":
                                u = v[m++] * t + n, l = v[m++] * t + r, c = v[m++] * t + n, h = v[m++] * t + r, p.quadraticCurveTo(c, h, u, l);
                                break;
                            case "b":
                                u = v[m++] * t + n, l = v[m++] * t + r, c = v[m++] * t + n, h = v[m++] * t + r, d = v[m++] * t + n, f = v[m++] * t + r, p.bezierCurveTo(c, h, d, f, u, l)
                        }
                    return {
                        offsetX: a.ha * t,
                        path: p
                    }
                }
                console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
            }
            Zh.prototype.isFont = !0;
            var Qh, $h = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new ch(this.manager);
                            a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(i.withCredentials), a.load(e, (function(e) {
                                var n;
                                try {
                                    n = JSON.parse(e)
                                } catch (t) {
                                    console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n = JSON.parse(e.substring(65, e.length - 2))
                                }
                                var r = i.parse(n);
                                t && t(r)
                            }), n, r)
                        }
                    }, {
                        key: "parse",
                        value: function(e) {
                            return new Zh(e)
                        }
                    }]), n
                }(uh),
                ed = {
                    getContext: function() {
                        return void 0 === Qh && (Qh = new(window.AudioContext || window.webkitAudioContext)), Qh
                    },
                    setContext: function(e) {
                        Qh = e
                    }
                },
                td = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        return (0, v.default)(this, n), t.call(this, e)
                    }
                    return (0, m.default)(n, [{
                        key: "load",
                        value: function(e, t, n, r) {
                            var i = this,
                                a = new ch(this.manager);
                            a.setResponseType("arraybuffer"), a.setPath(this.path), a.setRequestHeader(this.requestHeader), a.setWithCredentials(this.withCredentials), a.load(e, (function(n) {
                                try {
                                    var a = n.slice(0);
                                    ed.getContext().decodeAudioData(a, (function(e) {
                                        t(e)
                                    }))
                                } catch (t) {
                                    r ? r(t) : console.error(t), i.manager.itemError(e)
                                }
                            }), n, r)
                        }
                    }]), n
                }(uh),
                nd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        (0, v.default)(this, n), i = t.call(this, void 0, a);
                        var o = (new ri).set(e),
                            s = (new ri).set(r),
                            u = new On(o.r, o.g, o.b),
                            l = new On(s.r, s.g, s.b),
                            c = Math.sqrt(Math.PI),
                            h = c * Math.sqrt(.75);
                        return i.sh.coefficients[0].copy(u).add(l).multiplyScalar(c), i.sh.coefficients[1].copy(u).sub(l).multiplyScalar(h), i
                    }
                    return (0, m.default)(n)
                }(Uh);
            nd.prototype.isHemisphereLightProbe = !0;
            var rd = function(e) {
                (0, d.default)(n, e);
                var t = w(n);

                function n(e) {
                    var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
                    (0, v.default)(this, n), r = t.call(this, void 0, i);
                    var a = (new ri).set(e);
                    return r.sh.coefficients[0].set(a.r, a.g, a.b).multiplyScalar(2 * Math.sqrt(Math.PI)), r
                }
                return (0, m.default)(n)
            }(Uh);
            rd.prototype.isAmbientLightProbe = !0;
            var id = new dr,
                ad = new dr,
                od = function() {
                    function e() {
                        (0, v.default)(this, e), this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new ea, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new ea, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
                            focus: null,
                            fov: null,
                            aspect: null,
                            near: null,
                            far: null,
                            zoom: null,
                            eyeSep: null
                        }
                    }
                    return (0, m.default)(e, [{
                        key: "update",
                        value: function(e) {
                            var t = this._cache;
                            if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep) {
                                t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep;
                                var n, r, i = e.projectionMatrix.clone(),
                                    a = t.eyeSep / 2,
                                    o = a * t.near / t.focus,
                                    s = t.near * Math.tan(fn * t.fov * .5) / t.zoom;
                                ad.elements[12] = -a, id.elements[12] = a, n = -s * t.aspect + o, r = s * t.aspect + o, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraL.projectionMatrix.copy(i), n = -s * t.aspect - o, r = s * t.aspect - o, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraR.projectionMatrix.copy(i)
                            }
                            this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(ad), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(id)
                        }
                    }]), e
                }(),
                sd = function() {
                    function e() {
                        var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                        (0, v.default)(this, e), this.autoStart = t, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
                    }
                    return (0, m.default)(e, [{
                        key: "start",
                        value: function() {
                            this.startTime = ud(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            this.getElapsedTime(), this.running = !1, this.autoStart = !1
                        }
                    }, {
                        key: "getElapsedTime",
                        value: function() {
                            return this.getDelta(), this.elapsedTime
                        }
                    }, {
                        key: "getDelta",
                        value: function() {
                            var e = 0;
                            if (this.autoStart && !this.running) return this.start(), 0;
                            if (this.running) {
                                var t = ud();
                                e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e
                            }
                            return e
                        }
                    }]), e
                }();

            function ud() {
                return ("undefined" == typeof performance ? Date : performance).now()
            }
            var ld = new On,
                cd = new In,
                hd = new On,
                dd = new On,
                fd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "AudioListener", e.context = ed.getContext(), e.gain = e.context.createGain(), e.gain.connect(e.context.destination), e.filter = null, e.timeDelta = 0, e._clock = new sd, e
                    }
                    return (0, m.default)(n, [{
                        key: "getInput",
                        value: function() {
                            return this.gain
                        }
                    }, {
                        key: "removeFilter",
                        value: function() {
                            return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this
                        }
                    }, {
                        key: "getFilter",
                        value: function() {
                            return this.filter
                        }
                    }, {
                        key: "setFilter",
                        value: function(e) {
                            return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this
                        }
                    }, {
                        key: "getMasterVolume",
                        value: function() {
                            return this.gain.gain.value
                        }
                    }, {
                        key: "setMasterVolume",
                        value: function(e) {
                            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e);
                            var t = this.context.listener,
                                r = this.up;
                            if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(ld, cd, hd), dd.set(0, 0, -1).applyQuaternion(cd), t.positionX) {
                                var i = this.context.currentTime + this.timeDelta;
                                t.positionX.linearRampToValueAtTime(ld.x, i), t.positionY.linearRampToValueAtTime(ld.y, i), t.positionZ.linearRampToValueAtTime(ld.z, i), t.forwardX.linearRampToValueAtTime(dd.x, i), t.forwardY.linearRampToValueAtTime(dd.y, i), t.forwardZ.linearRampToValueAtTime(dd.z, i), t.upX.linearRampToValueAtTime(r.x, i), t.upY.linearRampToValueAtTime(r.y, i), t.upZ.linearRampToValueAtTime(r.z, i)
                            } else t.setPosition(ld.x, ld.y, ld.z), t.setOrientation(dd.x, dd.y, dd.z, r.x, r.y, r.z)
                        }
                    }]), n
                }(Fr),
                pd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this)).type = "Audio", r.listener = e, r.context = e.context, r.gain = r.context.createGain(), r.gain.connect(e.getInput()), r.autoplay = !1, r.buffer = null, r.detune = 0, r.loop = !1, r.loopStart = 0, r.loopEnd = 0, r.offset = 0, r.duration = void 0, r.playbackRate = 1, r.isPlaying = !1, r.hasPlaybackControl = !0, r.source = null, r.sourceType = "empty", r._startedAt = 0, r._progress = 0, r._connected = !1, r.filters = [], r
                    }
                    return (0, m.default)(n, [{
                        key: "getOutput",
                        value: function() {
                            return this.gain
                        }
                    }, {
                        key: "setNodeSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this
                        }
                    }, {
                        key: "setMediaElementSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this
                        }
                    }, {
                        key: "setMediaStreamSource",
                        value: function(e) {
                            return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this
                        }
                    }, {
                        key: "setBuffer",
                        value: function(e) {
                            return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this
                        }
                    }, {
                        key: "play",
                        value: function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                            if (!0 !== this.isPlaying) {
                                if (!1 !== this.hasPlaybackControl) {
                                    this._startedAt = this.context.currentTime + e;
                                    var t = this.context.createBufferSource();
                                    return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._progress + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect()
                                }
                                console.warn("THREE.Audio: this Audio has no playback control.")
                            } else console.warn("THREE.Audio: Audio is already playing.")
                        }
                    }, {
                        key: "pause",
                        value: function() {
                            if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate, !0 === this.loop && (this._progress = this._progress % (this.duration || this.buffer.duration)), this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            if (!1 !== this.hasPlaybackControl) return this._progress = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "connect",
                        value: function() {
                            if (this.filters.length > 0) {
                                this.source.connect(this.filters[0]);
                                for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
                                this.filters[this.filters.length - 1].connect(this.getOutput())
                            } else this.source.connect(this.getOutput());
                            return this._connected = !0, this
                        }
                    }, {
                        key: "disconnect",
                        value: function() {
                            if (this.filters.length > 0) {
                                this.source.disconnect(this.filters[0]);
                                for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
                                this.filters[this.filters.length - 1].disconnect(this.getOutput())
                            } else this.source.disconnect(this.getOutput());
                            return this._connected = !1, this
                        }
                    }, {
                        key: "getFilters",
                        value: function() {
                            return this.filters
                        }
                    }, {
                        key: "setFilters",
                        value: function(e) {
                            return e || (e = []), !0 === this._connected ? (this.disconnect(), this.filters = e.slice(), this.connect()) : this.filters = e.slice(), this
                        }
                    }, {
                        key: "setDetune",
                        value: function(e) {
                            if (this.detune = e, void 0 !== this.source.detune) return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this
                        }
                    }, {
                        key: "getDetune",
                        value: function() {
                            return this.detune
                        }
                    }, {
                        key: "getFilter",
                        value: function() {
                            return this.getFilters()[0]
                        }
                    }, {
                        key: "setFilter",
                        value: function(e) {
                            return this.setFilters(e ? [e] : [])
                        }
                    }, {
                        key: "setPlaybackRate",
                        value: function(e) {
                            if (!1 !== this.hasPlaybackControl) return this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "getPlaybackRate",
                        value: function() {
                            return this.playbackRate
                        }
                    }, {
                        key: "onEnded",
                        value: function() {
                            this.isPlaying = !1
                        }
                    }, {
                        key: "getLoop",
                        value: function() {
                            return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
                        }
                    }, {
                        key: "setLoop",
                        value: function(e) {
                            if (!1 !== this.hasPlaybackControl) return this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this;
                            console.warn("THREE.Audio: this Audio has no playback control.")
                        }
                    }, {
                        key: "setLoopStart",
                        value: function(e) {
                            return this.loopStart = e, this
                        }
                    }, {
                        key: "setLoopEnd",
                        value: function(e) {
                            return this.loopEnd = e, this
                        }
                    }, {
                        key: "getVolume",
                        value: function() {
                            return this.gain.gain.value
                        }
                    }, {
                        key: "setVolume",
                        value: function(e) {
                            return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
                        }
                    }]), n
                }(Fr),
                vd = new On,
                md = new In,
                gd = new On,
                yd = new On,
                _d = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this, e)).panner = r.context.createPanner(), r.panner.panningModel = "HRTF", r.panner.connect(r.gain), r
                    }
                    return (0, m.default)(n, [{
                        key: "getOutput",
                        value: function() {
                            return this.panner
                        }
                    }, {
                        key: "getRefDistance",
                        value: function() {
                            return this.panner.refDistance
                        }
                    }, {
                        key: "setRefDistance",
                        value: function(e) {
                            return this.panner.refDistance = e, this
                        }
                    }, {
                        key: "getRolloffFactor",
                        value: function() {
                            return this.panner.rolloffFactor
                        }
                    }, {
                        key: "setRolloffFactor",
                        value: function(e) {
                            return this.panner.rolloffFactor = e, this
                        }
                    }, {
                        key: "getDistanceModel",
                        value: function() {
                            return this.panner.distanceModel
                        }
                    }, {
                        key: "setDistanceModel",
                        value: function(e) {
                            return this.panner.distanceModel = e, this
                        }
                    }, {
                        key: "getMaxDistance",
                        value: function() {
                            return this.panner.maxDistance
                        }
                    }, {
                        key: "setMaxDistance",
                        value: function(e) {
                            return this.panner.maxDistance = e, this
                        }
                    }, {
                        key: "setDirectionalCone",
                        value: function(e, t, n) {
                            return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this
                        }
                    }, {
                        key: "updateMatrixWorld",
                        value: function(e) {
                            if ((0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e), !0 !== this.hasPlaybackControl || !1 !== this.isPlaying) {
                                this.matrixWorld.decompose(vd, md, gd), yd.set(0, 0, 1).applyQuaternion(md);
                                var t = this.panner;
                                if (t.positionX) {
                                    var r = this.context.currentTime + this.listener.timeDelta;
                                    t.positionX.linearRampToValueAtTime(vd.x, r), t.positionY.linearRampToValueAtTime(vd.y, r), t.positionZ.linearRampToValueAtTime(vd.z, r), t.orientationX.linearRampToValueAtTime(yd.x, r), t.orientationY.linearRampToValueAtTime(yd.y, r), t.orientationZ.linearRampToValueAtTime(yd.z, r)
                                } else t.setPosition(vd.x, vd.y, vd.z), t.setOrientation(yd.x, yd.y, yd.z)
                            }
                        }
                    }]), n
                }(pd),
                xd = function() {
                    function e(t) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2048;
                        (0, v.default)(this, e), this.analyser = t.context.createAnalyser(), this.analyser.fftSize = n, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser)
                    }
                    return (0, m.default)(e, [{
                        key: "getFrequencyData",
                        value: function() {
                            return this.analyser.getByteFrequencyData(this.data), this.data
                        }
                    }, {
                        key: "getAverageFrequency",
                        value: function() {
                            for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
                            return e / t.length
                        }
                    }]), e
                }(),
                bd = function() {
                    function e(t, n, r) {
                        var i, a, o;
                        switch ((0, v.default)(this, e), this.binding = t, this.valueSize = r, n) {
                            case "quaternion":
                                i = this._slerp, a = this._slerpAdditive, o = this._setAdditiveIdentityQuaternion, this.buffer = new Float64Array(6 * r), this._workIndex = 5;
                                break;
                            case "string":
                            case "bool":
                                i = this._select, a = this._select, o = this._setAdditiveIdentityOther, this.buffer = new Array(5 * r);
                                break;
                            default:
                                i = this._lerp, a = this._lerpAdditive, o = this._setAdditiveIdentityNumeric, this.buffer = new Float64Array(5 * r)
                        }
                        this._mixBufferRegion = i, this._mixBufferRegionAdditive = a, this._setIdentity = o, this._origIndex = 3, this._addIndex = 4, this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, this.useCount = 0, this.referenceCount = 0
                    }
                    return (0, m.default)(e, [{
                        key: "accumulate",
                        value: function(e, t) {
                            var n = this.buffer,
                                r = this.valueSize,
                                i = e * r + r,
                                a = this.cumulativeWeight;
                            if (0 === a) {
                                for (var o = 0; o !== r; ++o) n[i + o] = n[o];
                                a = t
                            } else {
                                var s = t / (a += t);
                                this._mixBufferRegion(n, i, 0, s, r)
                            }
                            this.cumulativeWeight = a
                        }
                    }, {
                        key: "accumulateAdditive",
                        value: function(e) {
                            var t = this.buffer,
                                n = this.valueSize,
                                r = n * this._addIndex;
                            0 === this.cumulativeWeightAdditive && this._setIdentity(), this._mixBufferRegionAdditive(t, r, 0, e, n), this.cumulativeWeightAdditive += e
                        }
                    }, {
                        key: "apply",
                        value: function(e) {
                            var t = this.valueSize,
                                n = this.buffer,
                                r = e * t + t,
                                i = this.cumulativeWeight,
                                a = this.cumulativeWeightAdditive,
                                o = this.binding;
                            if (this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0, i < 1) {
                                var s = t * this._origIndex;
                                this._mixBufferRegion(n, r, s, 1 - i, t)
                            }
                            a > 0 && this._mixBufferRegionAdditive(n, r, this._addIndex * t, 1, t);
                            for (var u = t, l = t + t; u !== l; ++u)
                                if (n[u] !== n[u + t]) {
                                    o.setValue(n, r);
                                    break
                                }
                        }
                    }, {
                        key: "saveOriginalState",
                        value: function() {
                            var e = this.binding,
                                t = this.buffer,
                                n = this.valueSize,
                                r = n * this._origIndex;
                            e.getValue(t, r);
                            for (var i = n, a = r; i !== a; ++i) t[i] = t[r + i % n];
                            this._setIdentity(), this.cumulativeWeight = 0, this.cumulativeWeightAdditive = 0
                        }
                    }, {
                        key: "restoreOriginalState",
                        value: function() {
                            var e = 3 * this.valueSize;
                            this.binding.setValue(this.buffer, e)
                        }
                    }, {
                        key: "_setAdditiveIdentityNumeric",
                        value: function() {
                            for (var e = this._addIndex * this.valueSize, t = e + this.valueSize, n = e; n < t; n++) this.buffer[n] = 0
                        }
                    }, {
                        key: "_setAdditiveIdentityQuaternion",
                        value: function() {
                            this._setAdditiveIdentityNumeric(), this.buffer[this._addIndex * this.valueSize + 3] = 1
                        }
                    }, {
                        key: "_setAdditiveIdentityOther",
                        value: function() {
                            for (var e = this._origIndex * this.valueSize, t = this._addIndex * this.valueSize, n = 0; n < this.valueSize; n++) this.buffer[t + n] = this.buffer[e + n]
                        }
                    }, {
                        key: "_select",
                        value: function(e, t, n, r, i) {
                            if (r >= .5)
                                for (var a = 0; a !== i; ++a) e[t + a] = e[n + a]
                        }
                    }, {
                        key: "_slerp",
                        value: function(e, t, n, r) {
                            In.slerpFlat(e, t, e, t, e, n, r)
                        }
                    }, {
                        key: "_slerpAdditive",
                        value: function(e, t, n, r, i) {
                            var a = this._workIndex * i;
                            In.multiplyQuaternionsFlat(e, a, e, t, e, n), In.slerpFlat(e, t, e, t, e, a, r)
                        }
                    }, {
                        key: "_lerp",
                        value: function(e, t, n, r, i) {
                            for (var a = 1 - r, o = 0; o !== i; ++o) {
                                var s = t + o;
                                e[s] = e[s] * a + e[n + o] * r
                            }
                        }
                    }, {
                        key: "_lerpAdditive",
                        value: function(e, t, n, r, i) {
                            for (var a = 0; a !== i; ++a) {
                                var o = t + a;
                                e[o] = e[o] + e[n + a] * r
                            }
                        }
                    }]), e
                }(),
                wd = "\\[\\]\\.:\\/",
                Td = new RegExp("[" + wd + "]", "g"),
                Md = "[^" + wd + "]",
                Sd = "[^" + wd.replace("\\.", "") + "]",
                Ed = /((?:WC+[\/:])*)/.source.replace("WC", Md),
                Ad = /(WCOD+)?/.source.replace("WCOD", Sd),
                Ld = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", Md),
                Cd = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", Md),
                Rd = new RegExp("^" + Ed + Ad + Ld + Cd + "$"),
                kd = ["material", "materials", "bones"],
                Pd = function() {
                    function e(t, n, r) {
                        (0, v.default)(this, e);
                        var i = r || Dd.parseTrackName(n);
                        this._targetGroup = t, this._bindings = t.subscribe_(n, i)
                    }
                    return (0, m.default)(e, [{
                        key: "getValue",
                        value: function(e, t) {
                            this.bind();
                            var n = this._targetGroup.nCachedObjects_,
                                r = this._bindings[n];
                            void 0 !== r && r.getValue(e, t)
                        }
                    }, {
                        key: "setValue",
                        value: function(e, t) {
                            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r) n[r].setValue(e, t)
                        }
                    }, {
                        key: "bind",
                        value: function() {
                            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind()
                        }
                    }, {
                        key: "unbind",
                        value: function() {
                            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind()
                        }
                    }]), e
                }(),
                Dd = function() {
                    function e(t, n, r) {
                        (0, v.default)(this, e), this.path = n, this.parsedPath = r || e.parseTrackName(n), this.node = e.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                    }
                    return (0, m.default)(e, [{
                        key: "_getValue_unavailable",
                        value: function() {}
                    }, {
                        key: "_setValue_unavailable",
                        value: function() {}
                    }, {
                        key: "_getValue_direct",
                        value: function(e, t) {
                            e[t] = this.node[this.propertyName]
                        }
                    }, {
                        key: "_getValue_array",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) e[t++] = n[r]
                        }
                    }, {
                        key: "_getValue_arrayElement",
                        value: function(e, t) {
                            e[t] = this.resolvedProperty[this.propertyIndex]
                        }
                    }, {
                        key: "_getValue_toArray",
                        value: function(e, t) {
                            this.resolvedProperty.toArray(e, t)
                        }
                    }, {
                        key: "_setValue_direct",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t]
                        }
                    }, {
                        key: "_setValue_direct_setNeedsUpdate",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_direct_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_array",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++]
                        }
                    }, {
                        key: "_setValue_array_setNeedsUpdate",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                            this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_array_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                            this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_arrayElement",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t]
                        }
                    }, {
                        key: "_setValue_arrayElement_setNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_arrayElement_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_setValue_fromArray",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t)
                        }
                    }, {
                        key: "_setValue_fromArray_setNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0
                        }
                    }, {
                        key: "_setValue_fromArray_setMatrixWorldNeedsUpdate",
                        value: function(e, t) {
                            this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0
                        }
                    }, {
                        key: "_getValue_unbound",
                        value: function(e, t) {
                            this.bind(), this.getValue(e, t)
                        }
                    }, {
                        key: "_setValue_unbound",
                        value: function(e, t) {
                            this.bind(), this.setValue(e, t)
                        }
                    }, {
                        key: "bind",
                        value: function() {
                            var t = this.node,
                                n = this.parsedPath,
                                r = n.objectName,
                                i = n.propertyName,
                                a = n.propertyIndex;
                            if (t || (t = e.findNode(this.rootNode, n.nodeName) || this.rootNode, this.node = t), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
                                if (r) {
                                    var o = n.objectIndex;
                                    switch (r) {
                                        case "materials":
                                            if (!t.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                                            if (!t.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                                            t = t.material.materials;
                                            break;
                                        case "bones":
                                            if (!t.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                                            t = t.skeleton.bones;
                                            for (var s = 0; s < t.length; s++)
                                                if (t[s].name === o) {
                                                    o = s;
                                                    break
                                                }
                                            break;
                                        default:
                                            if (void 0 === t[r]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                                            t = t[r]
                                    }
                                    if (void 0 !== o) {
                                        if (void 0 === t[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, t);
                                        t = t[o]
                                    }
                                }
                                var u = t[i];
                                if (void 0 !== u) {
                                    var l = this.Versioning.None;
                                    this.targetObject = t, void 0 !== t.needsUpdate ? l = this.Versioning.NeedsUpdate : void 0 !== t.matrixWorldNeedsUpdate && (l = this.Versioning.MatrixWorldNeedsUpdate);
                                    var c = this.BindingType.Direct;
                                    if (void 0 !== a) {
                                        if ("morphTargetInfluences" === i) {
                                            if (!t.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                                            if (!t.geometry.isBufferGeometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.", this);
                                            if (!t.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                            void 0 !== t.morphTargetDictionary[a] && (a = t.morphTargetDictionary[a])
                                        }
                                        c = this.BindingType.ArrayElement, this.resolvedProperty = u, this.propertyIndex = a
                                    } else void 0 !== u.fromArray && void 0 !== u.toArray ? (c = this.BindingType.HasFromToArray, this.resolvedProperty = u) : Array.isArray(u) ? (c = this.BindingType.EntireArray, this.resolvedProperty = u) : this.propertyName = i;
                                    this.getValue = this.GetterByBindingType[c], this.setValue = this.SetterByBindingTypeAndVersioning[c][l]
                                } else {
                                    var h = n.nodeName;
                                    console.error("THREE.PropertyBinding: Trying to update property for track: " + h + "." + i + " but it wasn't found.", t)
                                }
                            } else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
                        }
                    }, {
                        key: "unbind",
                        value: function() {
                            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
                        }
                    }], [{
                        key: "create",
                        value: function(t, n, r) {
                            return t && t.isAnimationObjectGroup ? new e.Composite(t, n, r) : new e(t, n, r)
                        }
                    }, {
                        key: "sanitizeNodeName",
                        value: function(e) {
                            return e.replace(/\s/g, "_").replace(Td, "")
                        }
                    }, {
                        key: "parseTrackName",
                        value: function(e) {
                            var t = Rd.exec(e);
                            if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
                            var n = {
                                    nodeName: t[2],
                                    objectName: t[3],
                                    objectIndex: t[4],
                                    propertyName: t[5],
                                    propertyIndex: t[6]
                                },
                                r = n.nodeName && n.nodeName.lastIndexOf(".");
                            if (void 0 !== r && -1 !== r) {
                                var i = n.nodeName.substring(r + 1); - 1 !== kd.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r), n.objectName = i)
                            }
                            if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
                            return n
                        }
                    }, {
                        key: "findNode",
                        value: function(e, t) {
                            if (!t || "" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
                            if (e.skeleton) {
                                var n = e.skeleton.getBoneByName(t);
                                if (void 0 !== n) return n
                            }
                            if (e.children) {
                                var r = function e(n) {
                                    for (var r = 0; r < n.length; r++) {
                                        var i = n[r];
                                        if (i.name === t || i.uuid === t) return i;
                                        var a = e(i.children);
                                        if (a) return a
                                    }
                                    return null
                                }(e.children);
                                if (r) return r
                            }
                            return null
                        }
                    }]), e
                }();
            Dd.Composite = Pd, Dd.prototype.BindingType = {
                Direct: 0,
                EntireArray: 1,
                ArrayElement: 2,
                HasFromToArray: 3
            }, Dd.prototype.Versioning = {
                None: 0,
                NeedsUpdate: 1,
                MatrixWorldNeedsUpdate: 2
            }, Dd.prototype.GetterByBindingType = [Dd.prototype._getValue_direct, Dd.prototype._getValue_array, Dd.prototype._getValue_arrayElement, Dd.prototype._getValue_toArray], Dd.prototype.SetterByBindingTypeAndVersioning = [
                [Dd.prototype._setValue_direct, Dd.prototype._setValue_direct_setNeedsUpdate, Dd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],
                [Dd.prototype._setValue_array, Dd.prototype._setValue_array_setNeedsUpdate, Dd.prototype._setValue_array_setMatrixWorldNeedsUpdate],
                [Dd.prototype._setValue_arrayElement, Dd.prototype._setValue_arrayElement_setNeedsUpdate, Dd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],
                [Dd.prototype._setValue_fromArray, Dd.prototype._setValue_fromArray_setNeedsUpdate, Dd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]
            ];
            var Id = function() {
                function e() {
                    (0, v.default)(this, e), this.uuid = vn(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
                    var t = {};
                    this._indicesByUUID = t;
                    for (var n = 0, r = arguments.length; n !== r; ++n) t[arguments[n].uuid] = n;
                    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
                    var i = this;
                    this.stats = {
                        objects: {
                            get total() {
                                return i._objects.length
                            },
                            get inUse() {
                                return this.total - i.nCachedObjects_
                            }
                        },
                        get bindingsPerObject() {
                            return i._bindings.length
                        }
                    }
                }
                return (0, m.default)(e, [{
                    key: "add",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._paths, r = this._parsedPaths, i = this._bindings, a = i.length, o = void 0, s = e.length, u = this.nCachedObjects_, l = 0, c = arguments.length; l !== c; ++l) {
                            var h = arguments[l],
                                d = h.uuid,
                                f = t[d];
                            if (void 0 === f) {
                                f = s++, t[d] = f, e.push(h);
                                for (var p = 0, v = a; p !== v; ++p) i[p].push(new Dd(h, n[p], r[p]))
                            } else if (f < u) {
                                o = e[f];
                                var m = --u,
                                    g = e[m];
                                t[g.uuid] = f, e[f] = g, t[d] = m, e[m] = h;
                                for (var y = 0, _ = a; y !== _; ++y) {
                                    var x = i[y],
                                        b = x[m],
                                        w = x[f];
                                    x[f] = b, void 0 === w && (w = new Dd(h, n[y], r[y])), x[m] = w
                                }
                            } else e[f] !== o && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
                        }
                        this.nCachedObjects_ = u
                    }
                }, {
                    key: "remove",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = 0, o = arguments.length; a !== o; ++a) {
                            var s = arguments[a],
                                u = s.uuid,
                                l = t[u];
                            if (void 0 !== l && l >= i) {
                                var c = i++,
                                    h = e[c];
                                t[h.uuid] = l, e[l] = h, t[u] = c, e[c] = s;
                                for (var d = 0, f = r; d !== f; ++d) {
                                    var p = n[d],
                                        v = p[c],
                                        m = p[l];
                                    p[l] = v, p[c] = m
                                }
                            }
                        }
                        this.nCachedObjects_ = i
                    }
                }, {
                    key: "uncache",
                    value: function() {
                        for (var e = this._objects, t = this._indicesByUUID, n = this._bindings, r = n.length, i = this.nCachedObjects_, a = e.length, o = 0, s = arguments.length; o !== s; ++o) {
                            var u = arguments[o].uuid,
                                l = t[u];
                            if (void 0 !== l)
                                if (delete t[u], l < i) {
                                    var c = --i,
                                        h = e[c],
                                        d = --a,
                                        f = e[d];
                                    t[h.uuid] = l, e[l] = h, t[f.uuid] = c, e[c] = f, e.pop();
                                    for (var p = 0, v = r; p !== v; ++p) {
                                        var m = n[p],
                                            g = m[c],
                                            y = m[d];
                                        m[l] = g, m[c] = y, m.pop()
                                    }
                                } else {
                                    var _ = --a,
                                        x = e[_];
                                    _ > 0 && (t[x.uuid] = l), e[l] = x, e.pop();
                                    for (var b = 0, w = r; b !== w; ++b) {
                                        var T = n[b];
                                        T[l] = T[_], T.pop()
                                    }
                                }
                        }
                        this.nCachedObjects_ = i
                    }
                }, {
                    key: "subscribe_",
                    value: function(e, t) {
                        var n = this._bindingsIndicesByPath,
                            r = n[e],
                            i = this._bindings;
                        if (void 0 !== r) return i[r];
                        var a = this._paths,
                            o = this._parsedPaths,
                            s = this._objects,
                            u = s.length,
                            l = this.nCachedObjects_,
                            c = new Array(u);
                        r = i.length, n[e] = r, a.push(e), o.push(t), i.push(c);
                        for (var h = l, d = s.length; h !== d; ++h) {
                            var f = s[h];
                            c[h] = new Dd(f, e, t)
                        }
                        return c
                    }
                }, {
                    key: "unsubscribe_",
                    value: function(e) {
                        var t = this._bindingsIndicesByPath,
                            n = t[e];
                        if (void 0 !== n) {
                            var r = this._paths,
                                i = this._parsedPaths,
                                a = this._bindings,
                                o = a.length - 1,
                                s = a[o];
                            t[e[o]] = n, a[n] = s, a.pop(), i[n] = i[o], i.pop(), r[n] = r[o], r.pop()
                        }
                    }
                }]), e
            }();
            Id.prototype.isAnimationObjectGroup = !0;
            var Od = function() {
                    function e(t, n) {
                        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : n.blendMode;
                        (0, v.default)(this, e), this._mixer = t, this._clip = n, this._localRoot = r, this.blendMode = i;
                        for (var a = n.tracks, o = a.length, s = new Array(o), u = {
                                endingStart: Ht,
                                endingEnd: Ht
                            }, l = 0; l !== o; ++l) {
                            var c = a[l].createInterpolant(null);
                            s[l] = c, c.settings = u
                        }
                        this._interpolantSettings = u, this._interpolants = s, this._propertyBindings = new Array(o), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
                    }
                    return (0, m.default)(e, [{
                        key: "play",
                        value: function() {
                            return this._mixer._activateAction(this), this
                        }
                    }, {
                        key: "stop",
                        value: function() {
                            return this._mixer._deactivateAction(this), this.reset()
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
                        }
                    }, {
                        key: "isRunning",
                        value: function() {
                            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                        }
                    }, {
                        key: "isScheduled",
                        value: function() {
                            return this._mixer._isActiveAction(this)
                        }
                    }, {
                        key: "startAt",
                        value: function(e) {
                            return this._startTime = e, this
                        }
                    }, {
                        key: "setLoop",
                        value: function(e, t) {
                            return this.loop = e, this.repetitions = t, this
                        }
                    }, {
                        key: "setEffectiveWeight",
                        value: function(e) {
                            return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading()
                        }
                    }, {
                        key: "getEffectiveWeight",
                        value: function() {
                            return this._effectiveWeight
                        }
                    }, {
                        key: "fadeIn",
                        value: function(e) {
                            return this._scheduleFading(e, 0, 1)
                        }
                    }, {
                        key: "fadeOut",
                        value: function(e) {
                            return this._scheduleFading(e, 1, 0)
                        }
                    }, {
                        key: "crossFadeFrom",
                        value: function(e, t, n) {
                            if (e.fadeOut(t), this.fadeIn(t), n) {
                                var r = this._clip.duration,
                                    i = e._clip.duration,
                                    a = i / r,
                                    o = r / i;
                                e.warp(1, a, t), this.warp(o, 1, t)
                            }
                            return this
                        }
                    }, {
                        key: "crossFadeTo",
                        value: function(e, t, n) {
                            return e.crossFadeFrom(this, t, n)
                        }
                    }, {
                        key: "stopFading",
                        value: function() {
                            var e = this._weightInterpolant;
                            return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                        }
                    }, {
                        key: "setEffectiveTimeScale",
                        value: function(e) {
                            return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping()
                        }
                    }, {
                        key: "getEffectiveTimeScale",
                        value: function() {
                            return this._effectiveTimeScale
                        }
                    }, {
                        key: "setDuration",
                        value: function(e) {
                            return this.timeScale = this._clip.duration / e, this.stopWarping()
                        }
                    }, {
                        key: "syncWith",
                        value: function(e) {
                            return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping()
                        }
                    }, {
                        key: "halt",
                        value: function(e) {
                            return this.warp(this._effectiveTimeScale, 0, e)
                        }
                    }, {
                        key: "warp",
                        value: function(e, t, n) {
                            var r = this._mixer,
                                i = r.time,
                                a = this.timeScale,
                                o = this._timeScaleInterpolant;
                            null === o && (o = r._lendControlInterpolant(), this._timeScaleInterpolant = o);
                            var s = o.parameterPositions,
                                u = o.sampleValues;
                            return s[0] = i, s[1] = i + n, u[0] = e / a, u[1] = t / a, this
                        }
                    }, {
                        key: "stopWarping",
                        value: function() {
                            var e = this._timeScaleInterpolant;
                            return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
                        }
                    }, {
                        key: "getMixer",
                        value: function() {
                            return this._mixer
                        }
                    }, {
                        key: "getClip",
                        value: function() {
                            return this._clip
                        }
                    }, {
                        key: "getRoot",
                        value: function() {
                            return this._localRoot || this._mixer._root
                        }
                    }, {
                        key: "_update",
                        value: function(e, t, n, r) {
                            if (this.enabled) {
                                var i = this._startTime;
                                if (null !== i) {
                                    var a = (e - i) * n;
                                    if (a < 0 || 0 === n) return;
                                    this._startTime = null, t = n * a
                                }
                                t *= this._updateTimeScale(e);
                                var o = this._updateTime(t),
                                    s = this._updateWeight(e);
                                if (s > 0) {
                                    var u = this._interpolants,
                                        l = this._propertyBindings;
                                    if (this.blendMode === qt)
                                        for (var c = 0, h = u.length; c !== h; ++c) u[c].evaluate(o), l[c].accumulateAdditive(s);
                                    else
                                        for (var d = 0, f = u.length; d !== f; ++d) u[d].evaluate(o), l[d].accumulate(r, s)
                                }
                            } else this._updateWeight(e)
                        }
                    }, {
                        key: "_updateWeight",
                        value: function(e) {
                            var t = 0;
                            if (this.enabled) {
                                t = this.weight;
                                var n = this._weightInterpolant;
                                if (null !== n) {
                                    var r = n.evaluate(e)[0];
                                    t *= r, e > n.parameterPositions[1] && (this.stopFading(), 0 === r && (this.enabled = !1))
                                }
                            }
                            return this._effectiveWeight = t, t
                        }
                    }, {
                        key: "_updateTimeScale",
                        value: function(e) {
                            var t = 0;
                            if (!this.paused) {
                                t = this.timeScale;
                                var n = this._timeScaleInterpolant;
                                null !== n && (t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t))
                            }
                            return this._effectiveTimeScale = t, t
                        }
                    }, {
                        key: "_updateTime",
                        value: function(e) {
                            var t = this._clip.duration,
                                n = this.loop,
                                r = this.time + e,
                                i = this._loopCount,
                                a = 2202 === n;
                            if (0 === e) return -1 === i ? r : a && 1 == (1 & i) ? t - r : r;
                            if (2200 === n) {
                                -1 === i && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                                e: {
                                    if (r >= t) r = t;
                                    else {
                                        if (!(r < 0)) {
                                            this.time = r;
                                            break e
                                        }
                                        r = 0
                                    }
                                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                    this.time = r,
                                    this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: e < 0 ? -1 : 1
                                    })
                                }
                            } else {
                                if (-1 === i && (e >= 0 ? (i = 0, this._setEndings(!0, 0 === this.repetitions, a)) : this._setEndings(0 === this.repetitions, !0, a)), r >= t || r < 0) {
                                    var o = Math.floor(r / t);
                                    r -= t * o, i += Math.abs(o);
                                    var s = this.repetitions - i;
                                    if (s <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, r = e > 0 ? t : 0, this.time = r, this._mixer.dispatchEvent({
                                        type: "finished",
                                        action: this,
                                        direction: e > 0 ? 1 : -1
                                    });
                                    else {
                                        if (1 === s) {
                                            var u = e < 0;
                                            this._setEndings(u, !u, a)
                                        } else this._setEndings(!1, !1, a);
                                        this._loopCount = i, this.time = r, this._mixer.dispatchEvent({
                                            type: "loop",
                                            action: this,
                                            loopDelta: o
                                        })
                                    }
                                } else this.time = r;
                                if (a && 1 == (1 & i)) return t - r
                            }
                            return r
                        }
                    }, {
                        key: "_setEndings",
                        value: function(e, t, n) {
                            var r = this._interpolantSettings;
                            n ? (r.endingStart = Vt, r.endingEnd = Vt) : (r.endingStart = e ? this.zeroSlopeAtStart ? Vt : Ht : Wt, r.endingEnd = t ? this.zeroSlopeAtEnd ? Vt : Ht : Wt)
                        }
                    }, {
                        key: "_scheduleFading",
                        value: function(e, t, n) {
                            var r = this._mixer,
                                i = r.time,
                                a = this._weightInterpolant;
                            null === a && (a = r._lendControlInterpolant(), this._weightInterpolant = a);
                            var o = a.parameterPositions,
                                s = a.sampleValues;
                            return o[0] = i, s[0] = t, o[1] = i + e, s[1] = n, this
                        }
                    }]), e
                }(),
                Nd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this))._root = e, r._initMemoryManager(), r._accuIndex = 0, r.time = 0, r.timeScale = 1, r
                    }
                    return (0, m.default)(n, [{
                        key: "_bindAction",
                        value: function(e, t) {
                            var n = e._localRoot || this._root,
                                r = e._clip.tracks,
                                i = r.length,
                                a = e._propertyBindings,
                                o = e._interpolants,
                                s = n.uuid,
                                u = this._bindingsByRootAndName,
                                l = u[s];
                            void 0 === l && (l = {}, u[s] = l);
                            for (var c = 0; c !== i; ++c) {
                                var h = r[c],
                                    d = h.name,
                                    f = l[d];
                                if (void 0 !== f) a[c] = f;
                                else {
                                    if (void 0 !== (f = a[c])) {
                                        null === f._cacheIndex && (++f.referenceCount, this._addInactiveBinding(f, s, d));
                                        continue
                                    }
                                    var p = t && t._propertyBindings[c].binding.parsedPath;
                                    ++(f = new bd(Dd.create(n, d, p), h.ValueTypeName, h.getValueSize())).referenceCount, this._addInactiveBinding(f, s, d), a[c] = f
                                }
                                o[c].resultBuffer = f.buffer
                            }
                        }
                    }, {
                        key: "_activateAction",
                        value: function(e) {
                            if (!this._isActiveAction(e)) {
                                if (null === e._cacheIndex) {
                                    var t = (e._localRoot || this._root).uuid,
                                        n = e._clip.uuid,
                                        r = this._actionsByClip[n];
                                    this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, n, t)
                                }
                                for (var i = e._propertyBindings, a = 0, o = i.length; a !== o; ++a) {
                                    var s = i[a];
                                    0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState())
                                }
                                this._lendAction(e)
                            }
                        }
                    }, {
                        key: "_deactivateAction",
                        value: function(e) {
                            if (this._isActiveAction(e)) {
                                for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                                    var i = t[n];
                                    0 == --i.useCount && (i.restoreOriginalState(), this._takeBackBinding(i))
                                }
                                this._takeBackAction(e)
                            }
                        }
                    }, {
                        key: "_initMemoryManager",
                        value: function() {
                            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
                            var e = this;
                            this.stats = {
                                actions: {
                                    get total() {
                                        return e._actions.length
                                    },
                                    get inUse() {
                                        return e._nActiveActions
                                    }
                                },
                                bindings: {
                                    get total() {
                                        return e._bindings.length
                                    },
                                    get inUse() {
                                        return e._nActiveBindings
                                    }
                                },
                                controlInterpolants: {
                                    get total() {
                                        return e._controlInterpolants.length
                                    },
                                    get inUse() {
                                        return e._nActiveControlInterpolants
                                    }
                                }
                            }
                        }
                    }, {
                        key: "_isActiveAction",
                        value: function(e) {
                            var t = e._cacheIndex;
                            return null !== t && t < this._nActiveActions
                        }
                    }, {
                        key: "_addInactiveAction",
                        value: function(e, t, n) {
                            var r = this._actions,
                                i = this._actionsByClip,
                                a = i[t];
                            if (void 0 === a) a = {
                                knownActions: [e],
                                actionByRoot: {}
                            }, e._byClipCacheIndex = 0, i[t] = a;
                            else {
                                var o = a.knownActions;
                                e._byClipCacheIndex = o.length, o.push(e)
                            }
                            e._cacheIndex = r.length, r.push(e), a.actionByRoot[n] = e
                        }
                    }, {
                        key: "_removeInactiveAction",
                        value: function(e) {
                            var t = this._actions,
                                n = t[t.length - 1],
                                r = e._cacheIndex;
                            n._cacheIndex = r, t[r] = n, t.pop(), e._cacheIndex = null;
                            var i = e._clip.uuid,
                                a = this._actionsByClip,
                                o = a[i],
                                s = o.knownActions,
                                u = s[s.length - 1],
                                l = e._byClipCacheIndex;
                            u._byClipCacheIndex = l, s[l] = u, s.pop(), e._byClipCacheIndex = null, delete o.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete a[i], this._removeInactiveBindingsForAction(e)
                        }
                    }, {
                        key: "_removeInactiveBindingsForAction",
                        value: function(e) {
                            for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n) {
                                var i = t[n];
                                0 == --i.referenceCount && this._removeInactiveBinding(i)
                            }
                        }
                    }, {
                        key: "_lendAction",
                        value: function(e) {
                            var t = this._actions,
                                n = e._cacheIndex,
                                r = this._nActiveActions++,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_takeBackAction",
                        value: function(e) {
                            var t = this._actions,
                                n = e._cacheIndex,
                                r = --this._nActiveActions,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_addInactiveBinding",
                        value: function(e, t, n) {
                            var r = this._bindingsByRootAndName,
                                i = this._bindings,
                                a = r[t];
                            void 0 === a && (a = {}, r[t] = a), a[n] = e, e._cacheIndex = i.length, i.push(e)
                        }
                    }, {
                        key: "_removeInactiveBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e.binding,
                                r = n.rootNode.uuid,
                                i = n.path,
                                a = this._bindingsByRootAndName,
                                o = a[r],
                                s = t[t.length - 1],
                                u = e._cacheIndex;
                            s._cacheIndex = u, t[u] = s, t.pop(), delete o[i], 0 === Object.keys(o).length && delete a[r]
                        }
                    }, {
                        key: "_lendBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e._cacheIndex,
                                r = this._nActiveBindings++,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_takeBackBinding",
                        value: function(e) {
                            var t = this._bindings,
                                n = e._cacheIndex,
                                r = --this._nActiveBindings,
                                i = t[r];
                            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "_lendControlInterpolant",
                        value: function() {
                            var e = this._controlInterpolants,
                                t = this._nActiveControlInterpolants++,
                                n = e[t];
                            return void 0 === n && ((n = new Xc(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n
                        }
                    }, {
                        key: "_takeBackControlInterpolant",
                        value: function(e) {
                            var t = this._controlInterpolants,
                                n = e.__cacheIndex,
                                r = --this._nActiveControlInterpolants,
                                i = t[r];
                            e.__cacheIndex = r, t[r] = e, i.__cacheIndex = n, t[n] = i
                        }
                    }, {
                        key: "clipAction",
                        value: function(e, t, n) {
                            var r = t || this._root,
                                i = r.uuid,
                                a = "string" == typeof e ? rh.findByName(r, e) : e,
                                o = null !== a ? a.uuid : e,
                                s = this._actionsByClip[o],
                                u = null;
                            if (void 0 === n && (n = null !== a ? a.blendMode : jt), void 0 !== s) {
                                var l = s.actionByRoot[i];
                                if (void 0 !== l && l.blendMode === n) return l;
                                u = s.knownActions[0], null === a && (a = u._clip)
                            }
                            if (null === a) return null;
                            var c = new Od(this, a, t, n);
                            return this._bindAction(c, u), this._addInactiveAction(c, o, i), c
                        }
                    }, {
                        key: "existingAction",
                        value: function(e, t) {
                            var n = t || this._root,
                                r = n.uuid,
                                i = "string" == typeof e ? rh.findByName(n, e) : e,
                                a = i ? i.uuid : e,
                                o = this._actionsByClip[a];
                            return void 0 !== o && o.actionByRoot[r] || null
                        }
                    }, {
                        key: "stopAllAction",
                        value: function() {
                            for (var e = this._actions, t = this._nActiveActions - 1; t >= 0; --t) e[t].stop();
                            return this
                        }
                    }, {
                        key: "update",
                        value: function(e) {
                            e *= this.timeScale;
                            for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), a = this._accuIndex ^= 1, o = 0; o !== n; ++o) t[o]._update(r, e, i, a);
                            for (var s = this._bindings, u = this._nActiveBindings, l = 0; l !== u; ++l) s[l].apply(a);
                            return this
                        }
                    }, {
                        key: "setTime",
                        value: function(e) {
                            this.time = 0;
                            for (var t = 0; t < this._actions.length; t++) this._actions[t].time = 0;
                            return this.update(e)
                        }
                    }, {
                        key: "getRoot",
                        value: function() {
                            return this._root
                        }
                    }, {
                        key: "uncacheClip",
                        value: function(e) {
                            var t = this._actions,
                                n = e.uuid,
                                r = this._actionsByClip,
                                i = r[n];
                            if (void 0 !== i) {
                                for (var a = i.knownActions, o = 0, s = a.length; o !== s; ++o) {
                                    var u = a[o];
                                    this._deactivateAction(u);
                                    var l = u._cacheIndex,
                                        c = t[t.length - 1];
                                    u._cacheIndex = null, u._byClipCacheIndex = null, c._cacheIndex = l, t[l] = c, t.pop(), this._removeInactiveBindingsForAction(u)
                                }
                                delete r[n]
                            }
                        }
                    }, {
                        key: "uncacheRoot",
                        value: function(e) {
                            var t = e.uuid,
                                n = this._actionsByClip;
                            for (var r in n) {
                                var i = n[r].actionByRoot[t];
                                void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
                            }
                            var a = this._bindingsByRootAndName[t];
                            if (void 0 !== a)
                                for (var o in a) {
                                    var s = a[o];
                                    s.restoreOriginalState(), this._removeInactiveBinding(s)
                                }
                        }
                    }, {
                        key: "uncacheAction",
                        value: function(e, t) {
                            var n = this.existingAction(e, t);
                            null !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
                        }
                    }]), n
                }(ln);
            Nd.prototype._controlInterpolantsResultBuffer = new Float32Array(1);
            var Fd = function() {
                    function e(t) {
                        (0, v.default)(this, e), "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t = arguments[1]), this.value = t
                    }
                    return (0, m.default)(e, [{
                        key: "clone",
                        value: function() {
                            return new e(void 0 === this.value.clone ? this.value : this.value.clone())
                        }
                    }]), e
                }(),
                Ud = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i, a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
                        return (0, v.default)(this, n), (i = t.call(this, e, r)).meshPerAttribute = a, i
                    }
                    return (0, m.default)(n, [{
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
                        }
                    }, {
                        key: "clone",
                        value: function(e) {
                            var t = (0, l.default)((0, p.default)(n.prototype), "clone", this).call(this, e);
                            return t.meshPerAttribute = this.meshPerAttribute, t
                        }
                    }, {
                        key: "toJSON",
                        value: function(e) {
                            var t = (0, l.default)((0, p.default)(n.prototype), "toJSON", this).call(this, e);
                            return t.isInstancedInterleavedBuffer = !0, t.meshPerAttribute = this.meshPerAttribute, t
                        }
                    }]), n
                }(su);
            Ud.prototype.isInstancedInterleavedBuffer = !0;
            var Bd = function() {
                function e(t, n, r, i, a) {
                    (0, v.default)(this, e), this.buffer = t, this.type = n, this.itemSize = r, this.elementSize = i, this.count = a, this.version = 0
                }
                return (0, m.default)(e, [{
                    key: "needsUpdate",
                    set: function(e) {
                        !0 === e && this.version++
                    }
                }, {
                    key: "setBuffer",
                    value: function(e) {
                        return this.buffer = e, this
                    }
                }, {
                    key: "setType",
                    value: function(e, t) {
                        return this.type = e, this.elementSize = t, this
                    }
                }, {
                    key: "setItemSize",
                    value: function(e) {
                        return this.itemSize = e, this
                    }
                }, {
                    key: "setCount",
                    value: function(e) {
                        return this.count = e, this
                    }
                }]), e
            }();
            Bd.prototype.isGLBufferAttribute = !0;
            var zd = function() {
                function e(t, n) {
                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                        i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1 / 0;
                    (0, v.default)(this, e), this.ray = new hr(t, n), this.near = r, this.far = i, this.camera = null, this.layers = new Tr, this.params = {
                        Mesh: {},
                        Line: {
                            threshold: 1
                        },
                        LOD: {},
                        Points: {
                            threshold: 1
                        },
                        Sprite: {}
                    }
                }
                return (0, m.default)(e, [{
                    key: "set",
                    value: function(e, t) {
                        this.ray.set(e, t)
                    }
                }, {
                    key: "setFromCamera",
                    value: function(e, t) {
                        t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type: " + t.type)
                    }
                }, {
                    key: "intersectObject",
                    value: function(e) {
                        var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];
                        return Hd(e, this, t, arguments.length > 1 && void 0 !== arguments[1] && arguments[1]), t.sort(Gd), t
                    }
                }, {
                    key: "intersectObjects",
                    value: function(e) {
                        for (var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], r = 0, i = e.length; r < i; r++) Hd(e[r], this, n, t);
                        return n.sort(Gd), n
                    }
                }]), e
            }();

            function Gd(e, t) {
                return e.distance - t.distance
            }

            function Hd(e, t, n, r) {
                if (e.layers.test(t.layers) && e.raycast(t, n), !0 === r)
                    for (var i = e.children, a = 0, o = i.length; a < o; a++) Hd(i[a], t, n, !0)
            }
            var Vd = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                        return (0, v.default)(this, e), this.radius = t, this.phi = n, this.theta = r, this
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t, n) {
                            return this.radius = e, this.phi = t, this.theta = n, this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this
                        }
                    }, {
                        key: "makeSafe",
                        value: function() {
                            var e = 1e-6;
                            return this.phi = Math.max(e, Math.min(Math.PI - e, this.phi)), this
                        }
                    }, {
                        key: "setFromVector3",
                        value: function(e) {
                            return this.setFromCartesianCoords(e.x, e.y, e.z)
                        }
                    }, {
                        key: "setFromCartesianCoords",
                        value: function(e, t, n) {
                            return this.radius = Math.sqrt(e * e + t * t + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(mn(t / this.radius, -1, 1))), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                Wd = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                        return (0, v.default)(this, e), this.radius = t, this.theta = n, this.y = r, this
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t, n) {
                            return this.radius = e, this.theta = t, this.y = n, this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this
                        }
                    }, {
                        key: "setFromVector3",
                        value: function(e) {
                            return this.setFromCartesianCoords(e.x, e.y, e.z)
                        }
                    }, {
                        key: "setFromCartesianCoords",
                        value: function(e, t, n) {
                            return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                jd = new Tn,
                qd = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new Tn(1 / 0, 1 / 0),
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Tn(-1 / 0, -1 / 0);
                        (0, v.default)(this, e), this.min = t, this.max = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.min.copy(e), this.max.copy(t), this
                        }
                    }, {
                        key: "setFromPoints",
                        value: function(e) {
                            this.makeEmpty();
                            for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
                            return this
                        }
                    }, {
                        key: "setFromCenterAndSize",
                        value: function(e, t) {
                            var n = jd.copy(t).multiplyScalar(.5);
                            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.min.copy(e.min), this.max.copy(e.max), this
                        }
                    }, {
                        key: "makeEmpty",
                        value: function() {
                            return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return this.max.x < this.min.x || this.max.y < this.min.y
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
                        }
                    }, {
                        key: "getSize",
                        value: function(e) {
                            return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
                        }
                    }, {
                        key: "expandByPoint",
                        value: function(e) {
                            return this.min.min(e), this.max.max(e), this
                        }
                    }, {
                        key: "expandByVector",
                        value: function(e) {
                            return this.min.sub(e), this.max.add(e), this
                        }
                    }, {
                        key: "expandByScalar",
                        value: function(e) {
                            return this.min.addScalar(-e), this.max.addScalar(e), this
                        }
                    }, {
                        key: "containsPoint",
                        value: function(e) {
                            return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
                        }
                    }, {
                        key: "containsBox",
                        value: function(e) {
                            return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
                        }
                    }, {
                        key: "getParameter",
                        value: function(e, t) {
                            return t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
                        }
                    }, {
                        key: "intersectsBox",
                        value: function(e) {
                            return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
                        }
                    }, {
                        key: "clampPoint",
                        value: function(e, t) {
                            return t.copy(e).clamp(this.min, this.max)
                        }
                    }, {
                        key: "distanceToPoint",
                        value: function(e) {
                            return jd.copy(e).clamp(this.min, this.max).sub(e).length()
                        }
                    }, {
                        key: "intersect",
                        value: function(e) {
                            return this.min.max(e.min), this.max.min(e.max), this
                        }
                    }, {
                        key: "union",
                        value: function(e) {
                            return this.min.min(e.min), this.max.max(e.max), this
                        }
                    }, {
                        key: "translate",
                        value: function(e) {
                            return this.min.add(e), this.max.add(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.min.equals(this.min) && e.max.equals(this.max)
                        }
                    }]), e
                }();
            qd.prototype.isBox2 = !0;
            var Xd = new On,
                Yd = new On,
                Kd = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On,
                            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On;
                        (0, v.default)(this, e), this.start = t, this.end = n
                    }
                    return (0, m.default)(e, [{
                        key: "set",
                        value: function(e, t) {
                            return this.start.copy(e), this.end.copy(t), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return this.start.copy(e.start), this.end.copy(e.end), this
                        }
                    }, {
                        key: "getCenter",
                        value: function(e) {
                            return e.addVectors(this.start, this.end).multiplyScalar(.5)
                        }
                    }, {
                        key: "delta",
                        value: function(e) {
                            return e.subVectors(this.end, this.start)
                        }
                    }, {
                        key: "distanceSq",
                        value: function() {
                            return this.start.distanceToSquared(this.end)
                        }
                    }, {
                        key: "distance",
                        value: function() {
                            return this.start.distanceTo(this.end)
                        }
                    }, {
                        key: "at",
                        value: function(e, t) {
                            return this.delta(t).multiplyScalar(e).add(this.start)
                        }
                    }, {
                        key: "closestPointToPointParameter",
                        value: function(e, t) {
                            Xd.subVectors(e, this.start), Yd.subVectors(this.end, this.start);
                            var n = Yd.dot(Yd),
                                r = Yd.dot(Xd) / n;
                            return t && (r = mn(r, 0, 1)), r
                        }
                    }, {
                        key: "closestPointToPoint",
                        value: function(e, t, n) {
                            var r = this.closestPointToPointParameter(e, t);
                            return this.delta(n).multiplyScalar(r).add(this.start)
                        }
                    }, {
                        key: "applyMatrix4",
                        value: function(e) {
                            return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
                        }
                    }, {
                        key: "equals",
                        value: function(e) {
                            return e.start.equals(this.start) && e.end.equals(this.end)
                        }
                    }, {
                        key: "clone",
                        value: function() {
                            return (new this.constructor).copy(this)
                        }
                    }]), e
                }(),
                Zd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        return (0, v.default)(this, n), (r = t.call(this)).material = e, r.render = function() {}, r.hasPositions = !1, r.hasNormals = !1, r.hasColors = !1, r.hasUvs = !1, r.positionArray = null, r.normalArray = null, r.colorArray = null, r.uvArray = null, r.count = 0, r
                    }
                    return (0, m.default)(n)
                }(Fr);
            Zd.prototype.isImmediateRenderObject = !0;
            var Jd = new On,
                Qd = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r) {
                        var i;
                        (0, v.default)(this, n), (i = t.call(this)).light = e, i.light.updateMatrixWorld(), i.matrix = e.matrixWorld, i.matrixAutoUpdate = !1, i.color = r;
                        for (var a = new Li, o = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], s = 0, u = 1; s < 32; s++, u++) {
                            var l = s / 32 * Math.PI * 2,
                                c = u / 32 * Math.PI * 2;
                            o.push(Math.cos(l), Math.sin(l), 1, Math.cos(c), Math.sin(c), 1)
                        }
                        a.setAttribute("position", new mi(o, 3));
                        var h = new ju({
                            fog: !1,
                            toneMapped: !1
                        });
                        return i.cone = new el(a, h), i.add(i.cone), i.update(), i
                    }
                    return (0, m.default)(n, [{
                        key: "dispose",
                        value: function() {
                            this.cone.geometry.dispose(), this.cone.material.dispose()
                        }
                    }, {
                        key: "update",
                        value: function() {
                            this.light.updateMatrixWorld();
                            var e = this.light.distance ? this.light.distance : 1e3,
                                t = e * Math.tan(this.light.angle);
                            this.cone.scale.set(t, t, e), Jd.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Jd), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
                        }
                    }]), n
                }(Fr),
                $d = new On,
                ef = new dr,
                tf = new dr,
                nf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        (0, v.default)(this, n);
                        for (var i = rf(e), a = new Li, o = [], s = [], u = new ri(0, 0, 1), l = new ri(0, 1, 0), c = 0; c < i.length; c++) {
                            var h = i[c];
                            h.parent && h.parent.isBone && (o.push(0, 0, 0), o.push(0, 0, 0), s.push(u.r, u.g, u.b), s.push(l.r, l.g, l.b))
                        }
                        a.setAttribute("position", new mi(o, 3)), a.setAttribute("color", new mi(s, 3));
                        var d = new ju({
                            vertexColors: !0,
                            depthTest: !1,
                            depthWrite: !1,
                            toneMapped: !1,
                            transparent: !0
                        });
                        return (r = t.call(this, a, d)).type = "SkeletonHelper", r.isSkeletonHelper = !0, r.root = e, r.bones = i, r.matrix = e.matrixWorld, r.matrixAutoUpdate = !1, r
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrixWorld",
                        value: function(e) {
                            var t = this.bones,
                                r = this.geometry,
                                i = r.getAttribute("position");
                            tf.copy(this.root.matrixWorld).invert();
                            for (var a = 0, o = 0; a < t.length; a++) {
                                var s = t[a];
                                s.parent && s.parent.isBone && (ef.multiplyMatrices(tf, s.matrixWorld), $d.setFromMatrixPosition(ef), i.setXYZ(o, $d.x, $d.y, $d.z), ef.multiplyMatrices(tf, s.parent.matrixWorld), $d.setFromMatrixPosition(ef), i.setXYZ(o + 1, $d.x, $d.y, $d.z), o += 2)
                            }
                            r.getAttribute("position").needsUpdate = !0, (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e)
                        }
                    }]), n
                }(el);

            function rf(e) {
                var t = [];
                e && e.isBone && t.push(e);
                for (var n = 0; n < e.children.length; n++) t.push.apply(t, rf(e.children[n]));
                return t
            }
            var af = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        (0, v.default)(this, n);
                        var o = new Sc(r, 4, 2),
                            s = new ii({
                                wireframe: !0,
                                fog: !1,
                                toneMapped: !1
                            });
                        return (a = t.call(this, o, s)).light = e, a.light.updateMatrixWorld(), a.color = i, a.type = "PointLightHelper", a.matrix = a.light.matrixWorld, a.matrixAutoUpdate = !1, a.update(), a
                    }
                    return (0, m.default)(n, [{
                        key: "dispose",
                        value: function() {
                            this.geometry.dispose(), this.material.dispose()
                        }
                    }, {
                        key: "update",
                        value: function() {
                            void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
                        }
                    }]), n
                }(qi),
                of = new On,
                sf = new ri,
                uf = new ri,
                lf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        (0, v.default)(this, n), (a = t.call(this)).light = e, a.light.updateMatrixWorld(), a.matrix = e.matrixWorld, a.matrixAutoUpdate = !1, a.color = i;
                        var o = new bc(r);
                        o.rotateY(.5 * Math.PI), a.material = new ii({
                            wireframe: !0,
                            fog: !1,
                            toneMapped: !1
                        }), void 0 === a.color && (a.material.vertexColors = !0);
                        var s = o.getAttribute("position"),
                            u = new Float32Array(3 * s.count);
                        return o.setAttribute("color", new si(u, 3)), a.add(new qi(o, a.material)), a.update(), a
                    }
                    return (0, m.default)(n, [{
                        key: "dispose",
                        value: function() {
                            this.children[0].geometry.dispose(), this.children[0].material.dispose()
                        }
                    }, {
                        key: "update",
                        value: function() {
                            var e = this.children[0];
                            if (void 0 !== this.color) this.material.color.set(this.color);
                            else {
                                var t = e.geometry.getAttribute("color");
                                sf.copy(this.light.color), uf.copy(this.light.groundColor);
                                for (var n = 0, r = t.count; n < r; n++) {
                                    var i = n < r / 2 ? sf : uf;
                                    t.setXYZ(n, i.r, i.g, i.b)
                                }
                                t.needsUpdate = !0
                            }
                            e.lookAt( of .setFromMatrixPosition(this.light.matrixWorld).negate())
                        }
                    }]), n
                }(Fr),
                cf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4473924,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 8947848;
                        (0, v.default)(this, n), a = new ri(a), o = new ri(o);
                        for (var s = i / 2, u = r / i, l = r / 2, c = [], h = [], d = 0, f = 0, p = -l; d <= i; d++, p += u) {
                            c.push(-l, 0, p, l, 0, p), c.push(p, 0, -l, p, 0, l);
                            var m = d === s ? a : o;
                            m.toArray(h, f), f += 3, m.toArray(h, f), f += 3, m.toArray(h, f), f += 3, m.toArray(h, f), f += 3
                        }
                        var g = new Li;
                        g.setAttribute("position", new mi(c, 3)), g.setAttribute("color", new mi(h, 3));
                        var y = new ju({
                            vertexColors: !0,
                            toneMapped: !1
                        });
                        return (e = t.call(this, g, y)).type = "GridHelper", e
                    }
                    return (0, m.default)(n)
                }(el),
                hf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 16,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 8,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 64,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 4473924,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 8947848;
                        (0, v.default)(this, n), s = new ri(s), u = new ri(u);
                        for (var l = [], c = [], h = 0; h <= i; h++) {
                            var d = h / i * (2 * Math.PI),
                                f = Math.sin(d) * r,
                                p = Math.cos(d) * r;
                            l.push(0, 0, 0), l.push(f, 0, p);
                            var m = 1 & h ? s : u;
                            c.push(m.r, m.g, m.b), c.push(m.r, m.g, m.b)
                        }
                        for (var g = 0; g <= a; g++)
                            for (var y = 1 & g ? s : u, _ = r - r / a * g, x = 0; x < o; x++) {
                                var b = x / o * (2 * Math.PI),
                                    w = Math.sin(b) * _,
                                    T = Math.cos(b) * _;
                                l.push(w, 0, T), c.push(y.r, y.g, y.b), b = (x + 1) / o * (2 * Math.PI), w = Math.sin(b) * _, T = Math.cos(b) * _, l.push(w, 0, T), c.push(y.r, y.g, y.b)
                            }
                        var M = new Li;
                        M.setAttribute("position", new mi(l, 3)), M.setAttribute("color", new mi(c, 3));
                        var S = new ju({
                            vertexColors: !0,
                            toneMapped: !1
                        });
                        return (e = t.call(this, M, S)).type = "PolarGridHelper", e
                    }
                    return (0, m.default)(n)
                }(el),
                df = new On,
                ff = new On,
                pf = new On,
                vf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e, r, i) {
                        var a;
                        (0, v.default)(this, n), (a = t.call(this)).light = e, a.light.updateMatrixWorld(), a.matrix = e.matrixWorld, a.matrixAutoUpdate = !1, a.color = i, void 0 === r && (r = 1);
                        var o = new Li;
                        o.setAttribute("position", new mi([-r, r, 0, r, r, 0, r, -r, 0, -r, -r, 0, -r, r, 0], 3));
                        var s = new ju({
                            fog: !1,
                            toneMapped: !1
                        });
                        return a.lightPlane = new Ju(o, s), a.add(a.lightPlane), (o = new Li).setAttribute("position", new mi([0, 0, 0, 0, 0, 1], 3)), a.targetLine = new Ju(o, s), a.add(a.targetLine), a.update(), a
                    }
                    return (0, m.default)(n, [{
                        key: "dispose",
                        value: function() {
                            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
                        }
                    }, {
                        key: "update",
                        value: function() {
                            df.setFromMatrixPosition(this.light.matrixWorld), ff.setFromMatrixPosition(this.light.target.matrixWorld), pf.subVectors(ff, df), this.lightPlane.lookAt(ff), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(ff), this.targetLine.scale.z = pf.length()
                        }
                    }]), n
                }(Fr),
                mf = new On,
                gf = new $i,
                yf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r;
                        (0, v.default)(this, n);
                        var i = new Li,
                            a = new ju({
                                color: 16777215,
                                vertexColors: !0,
                                toneMapped: !1
                            }),
                            o = [],
                            s = [],
                            u = {},
                            l = new ri(16755200),
                            c = new ri(16711680),
                            h = new ri(43775),
                            d = new ri(16777215),
                            f = new ri(3355443);

                        function p(e, t, n) {
                            m(e, n), m(t, n)
                        }

                        function m(e, t) {
                            o.push(0, 0, 0), s.push(t.r, t.g, t.b), void 0 === u[e] && (u[e] = []), u[e].push(o.length / 3 - 1)
                        }
                        return p("n1", "n2", l), p("n2", "n4", l), p("n4", "n3", l), p("n3", "n1", l), p("f1", "f2", l), p("f2", "f4", l), p("f4", "f3", l), p("f3", "f1", l), p("n1", "f1", l), p("n2", "f2", l), p("n3", "f3", l), p("n4", "f4", l), p("p", "n1", c), p("p", "n2", c), p("p", "n3", c), p("p", "n4", c), p("u1", "u2", h), p("u2", "u3", h), p("u3", "u1", h), p("c", "t", d), p("p", "c", f), p("cn1", "cn2", f), p("cn3", "cn4", f), p("cf1", "cf2", f), p("cf3", "cf4", f), i.setAttribute("position", new mi(o, 3)), i.setAttribute("color", new mi(s, 3)), (r = t.call(this, i, a)).type = "CameraHelper", r.camera = e, r.camera.updateProjectionMatrix && r.camera.updateProjectionMatrix(), r.matrix = e.matrixWorld, r.matrixAutoUpdate = !1, r.pointMap = u, r.update(), r
                    }
                    return (0, m.default)(n, [{
                        key: "update",
                        value: function() {
                            var e = this.geometry,
                                t = this.pointMap;
                            gf.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), _f("c", t, e, gf, 0, 0, -1), _f("t", t, e, gf, 0, 0, 1), _f("n1", t, e, gf, -1, -1, -1), _f("n2", t, e, gf, 1, -1, -1), _f("n3", t, e, gf, -1, 1, -1), _f("n4", t, e, gf, 1, 1, -1), _f("f1", t, e, gf, -1, -1, 1), _f("f2", t, e, gf, 1, -1, 1), _f("f3", t, e, gf, -1, 1, 1), _f("f4", t, e, gf, 1, 1, 1), _f("u1", t, e, gf, .7, 1.1, -1), _f("u2", t, e, gf, -.7, 1.1, -1), _f("u3", t, e, gf, 0, 2, -1), _f("cf1", t, e, gf, -1, 0, 1), _f("cf2", t, e, gf, 1, 0, 1), _f("cf3", t, e, gf, 0, -1, 1), _f("cf4", t, e, gf, 0, 1, 1), _f("cn1", t, e, gf, -1, 0, -1), _f("cn2", t, e, gf, 1, 0, -1), _f("cn3", t, e, gf, 0, -1, -1), _f("cn4", t, e, gf, 0, 1, -1), e.getAttribute("position").needsUpdate = !0
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.geometry.dispose(), this.material.dispose()
                        }
                    }]), n
                }(el);

            function _f(e, t, n, r, i, a, o) {
                mf.set(i, a, o).unproject(r);
                var s = t[e];
                if (void 0 !== s)
                    for (var u = n.getAttribute("position"), l = 0, c = s.length; l < c; l++) u.setXYZ(s[l], mf.x, mf.y, mf.z)
            }
            var xf, bf, wf = new Un,
                Tf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 16776960;
                        (0, v.default)(this, n);
                        var a = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                            o = new Float32Array(24),
                            s = new Li;
                        return s.setIndex(new si(a, 1)), s.setAttribute("position", new si(o, 3)), (r = t.call(this, s, new ju({
                            color: i,
                            toneMapped: !1
                        }))).object = e, r.type = "BoxHelper", r.matrixAutoUpdate = !1, r.update(), r
                    }
                    return (0, m.default)(n, [{
                        key: "update",
                        value: function(e) {
                            if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && wf.setFromObject(this.object), !wf.isEmpty()) {
                                var t = wf.min,
                                    n = wf.max,
                                    r = this.geometry.attributes.position,
                                    i = r.array;
                                i[0] = n.x, i[1] = n.y, i[2] = n.z, i[3] = t.x, i[4] = n.y, i[5] = n.z, i[6] = t.x, i[7] = t.y, i[8] = n.z, i[9] = n.x, i[10] = t.y, i[11] = n.z, i[12] = n.x, i[13] = n.y, i[14] = t.z, i[15] = t.x, i[16] = n.y, i[17] = t.z, i[18] = t.x, i[19] = t.y, i[20] = t.z, i[21] = n.x, i[22] = t.y, i[23] = t.z, r.needsUpdate = !0, this.geometry.computeBoundingSphere()
                            }
                        }
                    }, {
                        key: "setFromObject",
                        value: function(e) {
                            return this.object = e, this.update(), this
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return el.prototype.copy.call(this, e), this.object = e.object, this
                        }
                    }]), n
                }(el),
                Mf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 16776960;
                        (0, v.default)(this, n);
                        var a = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
                            o = new Li;
                        return o.setIndex(new si(a, 1)), o.setAttribute("position", new mi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), (r = t.call(this, o, new ju({
                            color: i,
                            toneMapped: !1
                        }))).box = e, r.type = "Box3Helper", r.geometry.computeBoundingSphere(), r
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrixWorld",
                        value: function(e) {
                            var t = this.box;
                            t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e))
                        }
                    }]), n
                }(el),
                Sf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n(e) {
                        var r, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 16776960;
                        (0, v.default)(this, n);
                        var o = a,
                            s = new Li;
                        s.setAttribute("position", new mi([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), s.computeBoundingSphere(), (r = t.call(this, s, new ju({
                            color: o,
                            toneMapped: !1
                        }))).type = "PlaneHelper", r.plane = e, r.size = i;
                        var u = new Li;
                        return u.setAttribute("position", new mi([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), u.computeBoundingSphere(), r.add(new qi(u, new ii({
                            color: o,
                            opacity: .2,
                            transparent: !0,
                            depthWrite: !1,
                            toneMapped: !1
                        }))), r
                    }
                    return (0, m.default)(n, [{
                        key: "updateMatrixWorld",
                        value: function(e) {
                            var t = -this.plane.constant;
                            Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? M : T, this.lookAt(this.plane.normal), (0, l.default)((0, p.default)(n.prototype), "updateMatrixWorld", this).call(this, e)
                        }
                    }]), n
                }(Ju),
                Ef = new On,
                Af = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : new On(0, 0, 1),
                            i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new On(0, 0, 0),
                            a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 16776960,
                            s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : .2 * a,
                            u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : .2 * s;
                        return (0, v.default)(this, n), (e = t.call(this)).type = "ArrowHelper", void 0 === xf && ((xf = new Li).setAttribute("position", new mi([0, 0, 0, 0, 1, 0], 3)), (bf = new pl(0, .5, 1, 5, 1)).translate(0, -.5, 0)), e.position.copy(i), e.line = new Ju(xf, new ju({
                            color: o,
                            toneMapped: !1
                        })), e.line.matrixAutoUpdate = !1, e.add(e.line), e.cone = new qi(bf, new ii({
                            color: o,
                            toneMapped: !1
                        })), e.cone.matrixAutoUpdate = !1, e.add(e.cone), e.setDirection(r), e.setLength(a, s, u), e
                    }
                    return (0, m.default)(n, [{
                        key: "setDirection",
                        value: function(e) {
                            if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
                            else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
                            else {
                                Ef.set(e.z, 0, -e.x).normalize();
                                var t = Math.acos(e.y);
                                this.quaternion.setFromAxisAngle(Ef, t)
                            }
                        }
                    }, {
                        key: "setLength",
                        value: function(e) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .2 * e,
                                n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .2 * t;
                            this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix()
                        }
                    }, {
                        key: "setColor",
                        value: function(e) {
                            this.line.material.color.set(e), this.cone.material.color.set(e)
                        }
                    }, {
                        key: "copy",
                        value: function(e) {
                            return (0, l.default)((0, p.default)(n.prototype), "copy", this).call(this, e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this
                        }
                    }]), n
                }(Fr),
                Lf = function(e) {
                    (0, d.default)(n, e);
                    var t = w(n);

                    function n() {
                        var e, r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1;
                        (0, v.default)(this, n);
                        var i = [0, 0, 0, r, 0, 0, 0, 0, 0, 0, r, 0, 0, 0, 0, 0, 0, r],
                            a = new Li;
                        a.setAttribute("position", new mi(i, 3)), a.setAttribute("color", new mi([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1], 3));
                        var o = new ju({
                            vertexColors: !0,
                            toneMapped: !1
                        });
                        return (e = t.call(this, a, o)).type = "AxesHelper", e
                    }
                    return (0, m.default)(n, [{
                        key: "setColors",
                        value: function(e, t, n) {
                            var r = new ri,
                                i = this.geometry.attributes.color.array;
                            return r.set(e), r.toArray(i, 0), r.toArray(i, 3), r.set(t), r.toArray(i, 6), r.toArray(i, 9), r.set(n), r.toArray(i, 12), r.toArray(i, 15), this.geometry.attributes.color.needsUpdate = !0, this
                        }
                    }, {
                        key: "dispose",
                        value: function() {
                            this.geometry.dispose(), this.material.dispose()
                        }
                    }]), n
                }(el),
                Cf = new Float32Array(1),
                Rf = new Int32Array(Cf.buffer),
                kf = function() {
                    function e() {
                        (0, v.default)(this, e)
                    }
                    return (0, m.default)(e, null, [{
                        key: "toHalfFloat",
                        value: function(e) {
                            Cf[0] = e;
                            var t = Rf[0],
                                n = t >> 16 & 32768,
                                r = t >> 12 & 2047,
                                i = t >> 23 & 255;
                            return i < 103 ? n : i > 142 ? (n |= 31744, n |= (255 == i ? 0 : 1) && 8388607 & t) : i < 113 ? n |= ((r |= 2048) >> 114 - i) + (r >> 113 - i & 1) : (n |= i - 112 << 10 | r >> 1, n += 1 & r)
                        }
                    }]), e
                }();
            Tl.create = function(e, t) {
                return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create(Tl.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e
            }, yh.prototype.fromPoints = function(e) {
                return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e)
            }, cf.prototype.setColors = function() {
                console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
            }, nf.prototype.update = function() {
                console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
            }, uh.prototype.extractUrlBase = function(e) {
                return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), zh.extractUrlBase(e)
            }, uh.Handlers = {
                add: function() {
                    console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
                },
                get: function() {
                    console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
                }
            }, qd.prototype.center = function(e) {
                return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, qd.prototype.empty = function() {
                return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, qd.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, qd.prototype.size = function(e) {
                return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e)
            }, Un.prototype.center = function(e) {
                return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, Un.prototype.empty = function() {
                return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, Un.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, Un.prototype.isIntersectionSphere = function(e) {
                return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
            }, Un.prototype.size = function(e) {
                return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e)
            }, rr.prototype.empty = function() {
                return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."), this.isEmpty()
            }, ha.prototype.setFromMatrix = function(e) {
                return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."), this.setFromProjectionMatrix(e)
            }, Kd.prototype.center = function(e) {
                return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e)
            }, Sn.prototype.flattenToArrayOffset = function(e, t) {
                return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
            }, Sn.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
            }, Sn.prototype.multiplyVector3Array = function() {
                console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
            }, Sn.prototype.applyToBufferAttribute = function(e) {
                return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
            }, Sn.prototype.applyToVector3Array = function() {
                console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
            }, Sn.prototype.getInverse = function(e) {
                return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(e).invert()
            }, dr.prototype.extractPosition = function(e) {
                return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
            }, dr.prototype.flattenToArrayOffset = function(e, t) {
                return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
            }, dr.prototype.getPosition = function() {
                return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new On).setFromMatrixColumn(this, 3)
            }, dr.prototype.setRotationFromQuaternion = function(e) {
                return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e)
            }, dr.prototype.multiplyToArray = function() {
                console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
            }, dr.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, dr.prototype.multiplyVector4 = function(e) {
                return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, dr.prototype.multiplyVector3Array = function() {
                console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
            }, dr.prototype.rotateAxis = function(e) {
                console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
            }, dr.prototype.crossVector = function(e) {
                return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, dr.prototype.translate = function() {
                console.error("THREE.Matrix4: .translate() has been removed.")
            }, dr.prototype.rotateX = function() {
                console.error("THREE.Matrix4: .rotateX() has been removed.")
            }, dr.prototype.rotateY = function() {
                console.error("THREE.Matrix4: .rotateY() has been removed.")
            }, dr.prototype.rotateZ = function() {
                console.error("THREE.Matrix4: .rotateZ() has been removed.")
            }, dr.prototype.rotateByAxis = function() {
                console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
            }, dr.prototype.applyToBufferAttribute = function(e) {
                return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, dr.prototype.applyToVector3Array = function() {
                console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
            }, dr.prototype.makeFrustum = function(e, t, n, r, i, a) {
                return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, r, n, i, a)
            }, dr.prototype.getInverse = function(e) {
                return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."), this.copy(e).invert()
            }, ua.prototype.isIntersectionLine = function(e) {
                return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e)
            }, In.prototype.multiplyVector3 = function(e) {
                return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
            }, In.prototype.inverse = function() {
                return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."), this.invert()
            }, hr.prototype.isIntersectionBox = function(e) {
                return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
            }, hr.prototype.isIntersectionPlane = function(e) {
                return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e)
            }, hr.prototype.isIntersectionSphere = function(e) {
                return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
            }, Yr.prototype.area = function() {
                return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea()
            }, Yr.prototype.barycoordFromPoint = function(e, t) {
                return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t)
            }, Yr.prototype.midpoint = function(e) {
                return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e)
            }, Yr.prototypenormal = function(e) {
                return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e)
            }, Yr.prototype.plane = function(e) {
                return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e)
            }, Yr.barycoordFromPoint = function(e, t, n, r, i) {
                return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), Yr.getBarycoord(e, t, n, r, i)
            }, Yr.normal = function(e, t, n, r) {
                return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), Yr.getNormal(e, t, n, r)
            }, _h.prototype.extractAllPoints = function(e) {
                return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e)
            }, _h.prototype.extrude = function(e) {
                return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new gc(this, e)
            }, _h.prototype.makeGeometry = function(e) {
                return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Mc(this, e)
            }, Tn.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, Tn.prototype.distanceToManhattan = function(e) {
                return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
            }, Tn.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, On.prototype.setEulerFromRotationMatrix = function() {
                console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
            }, On.prototype.setEulerFromQuaternion = function() {
                console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
            }, On.prototype.getPositionFromMatrix = function(e) {
                return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e)
            }, On.prototype.getScaleFromMatrix = function(e) {
                return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e)
            }, On.prototype.getColumnFromMatrix = function(e, t) {
                return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e)
            }, On.prototype.applyProjection = function(e) {
                return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e)
            }, On.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, On.prototype.distanceToManhattan = function(e) {
                return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
            }, On.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, Rn.prototype.fromAttribute = function(e, t, n) {
                return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
            }, Rn.prototype.lengthManhattan = function() {
                return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
            }, Fr.prototype.getChildByName = function(e) {
                return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e)
            }, Fr.prototype.renderDepth = function() {
                console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
            }, Fr.prototype.translate = function(e, t) {
                return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e)
            }, Fr.prototype.getWorldRotation = function() {
                console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
            }, Fr.prototype.applyMatrix = function(e) {
                return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
            }, Object.defineProperties(Fr.prototype, {
                eulerOrder: {
                    get: function() {
                        return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
                    },
                    set: function(e) {
                        console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e
                    }
                },
                useQuaternion: {
                    get: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    },
                    set: function() {
                        console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
                    }
                }
            }), qi.prototype.setDrawMode = function() {
                console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
            }, Object.defineProperties(qi.prototype, {
                drawMode: {
                    get: function() {
                        return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), 0
                    },
                    set: function() {
                        console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
                    }
                }
            }), Iu.prototype.initBones = function() {
                console.error("THREE.SkinnedMesh: initBones() has been removed.")
            }, ea.prototype.setLens = function(e, t) {
                console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== t && (this.filmGauge = t), this.setFocalLength(e)
            }, Object.defineProperties(xh.prototype, {
                onlyShadow: {
                    set: function() {
                        console.warn("THREE.Light: .onlyShadow has been removed.")
                    }
                },
                shadowCameraFov: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e
                    }
                },
                shadowCameraLeft: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e
                    }
                },
                shadowCameraRight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e
                    }
                },
                shadowCameraTop: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e
                    }
                },
                shadowCameraBottom: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e
                    }
                },
                shadowCameraNear: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e
                    }
                },
                shadowCameraFar: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e
                    }
                },
                shadowCameraVisible: {
                    set: function() {
                        console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
                    }
                },
                shadowBias: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e
                    }
                },
                shadowDarkness: {
                    set: function() {
                        console.warn("THREE.Light: .shadowDarkness has been removed.")
                    }
                },
                shadowMapWidth: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e
                    }
                },
                shadowMapHeight: {
                    set: function(e) {
                        console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e
                    }
                }
            }), Object.defineProperties(si.prototype, {
                length: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length
                    }
                },
                dynamic: {
                    get: function() {
                        return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.usage === sn
                    },
                    set: function() {
                        console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(sn)
                    }
                }
            }), si.prototype.setDynamic = function(e) {
                return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? sn : on), this
            }, si.prototype.copyIndicesArray = function() {
                console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
            }, si.prototype.setArray = function() {
                console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
            }, Li.prototype.addIndex = function(e) {
                console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e)
            }, Li.prototype.addAttribute = function(e, t) {
                return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(e, new si(arguments[1], arguments[2])))
            }, Li.prototype.addDrawCall = function(e, t, n) {
                void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t)
            }, Li.prototype.clearDrawCalls = function() {
                console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
            }, Li.prototype.computeOffsets = function() {
                console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
            }, Li.prototype.removeAttribute = function(e) {
                return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(e)
            }, Li.prototype.applyMatrix = function(e) {
                return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."), this.applyMatrix4(e)
            }, Object.defineProperties(Li.prototype, {
                drawcalls: {
                    get: function() {
                        return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
                    }
                }
            }), su.prototype.setDynamic = function(e) {
                return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? sn : on), this
            }, su.prototype.setArray = function() {
                console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
            }, gc.prototype.getArrays = function() {
                console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")
            }, gc.prototype.addShapeList = function() {
                console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")
            }, gc.prototype.addShape = function() {
                console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")
            }, ou.prototype.dispose = function() {
                console.error("THREE.Scene: .dispose() has been removed.")
            }, Fd.prototype.onUpdate = function() {
                return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this
            }, Object.defineProperties(Zr.prototype, {
                wrapAround: {
                    get: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .wrapAround has been removed.")
                    }
                },
                overdraw: {
                    get: function() {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    },
                    set: function() {
                        console.warn("THREE.Material: .overdraw has been removed.")
                    }
                },
                wrapRGB: {
                    get: function() {
                        return console.warn("THREE.Material: .wrapRGB has been removed."), new ri
                    }
                },
                shading: {
                    get: function() {
                        console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
                    },
                    set: function(e) {
                        console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === e
                    }
                },
                stencilMask: {
                    get: function() {
                        return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask
                    },
                    set: function(e) {
                        console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = e
                    }
                },
                vertexTangents: {
                    get: function() {
                        console.warn("THREE." + this.type + ": .vertexTangents has been removed.")
                    },
                    set: function() {
                        console.warn("THREE." + this.type + ": .vertexTangents has been removed.")
                    }
                }
            }), Object.defineProperties(Qi.prototype, {
                derivatives: {
                    get: function() {
                        return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
                    },
                    set: function(e) {
                        console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e
                    }
                }
            }), nu.prototype.clearTarget = function(e, t, n, r) {
                console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, r)
            }, nu.prototype.animate = function(e) {
                console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e)
            }, nu.prototype.getCurrentRenderTarget = function() {
                return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget()
            }, nu.prototype.getMaxAnisotropy = function() {
                return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy()
            }, nu.prototype.getPrecision = function() {
                return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision
            }, nu.prototype.resetGLState = function() {
                return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset()
            }, nu.prototype.supportsFloatTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
            }, nu.prototype.supportsHalfFloatTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
            }, nu.prototype.supportsStandardDerivatives = function() {
                return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
            }, nu.prototype.supportsCompressedTextureS3TC = function() {
                return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
            }, nu.prototype.supportsCompressedTexturePVRTC = function() {
                return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
            }, nu.prototype.supportsBlendMinMax = function() {
                return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
            }, nu.prototype.supportsVertexTextures = function() {
                return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures
            }, nu.prototype.supportsInstancedArrays = function() {
                return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
            }, nu.prototype.enableScissorTest = function(e) {
                console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e)
            }, nu.prototype.initMaterial = function() {
                console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
            }, nu.prototype.addPrePlugin = function() {
                console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
            }, nu.prototype.addPostPlugin = function() {
                console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
            }, nu.prototype.updateShadowMap = function() {
                console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
            }, nu.prototype.setFaceCulling = function() {
                console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
            }, nu.prototype.allocTextureUnit = function() {
                console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
            }, nu.prototype.setTexture = function() {
                console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
            }, nu.prototype.setTexture2D = function() {
                console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
            }, nu.prototype.setTextureCube = function() {
                console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
            }, nu.prototype.getActiveMipMapLevel = function() {
                return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel()
            }, Object.defineProperties(nu.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                context: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext()
                    }
                },
                vr: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr
                    }
                },
                gammaInput: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
                    }
                },
                gammaOutput: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = !0 === e ? Yt : Xt
                    }
                },
                toneMappingWhitePoint: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."), 1
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")
                    }
                }
            }), Object.defineProperties(qs.prototype, {
                cullFace: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderReverseSided: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
                    }
                },
                renderSingleSided: {
                    get: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    },
                    set: function() {
                        console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
                    }
                }
            }), Object.defineProperties(kn.prototype, {
                wrapS: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e
                    }
                },
                wrapT: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e
                    }
                },
                magFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e
                    }
                },
                minFilter: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e
                    }
                },
                anisotropy: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e
                    }
                },
                offset: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e
                    }
                },
                repeat: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e
                    }
                },
                format: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e
                    }
                },
                type: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
                    },
                    set: function(e) {
                        console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e
                    }
                }
            }), pd.prototype.load = function(e) {
                console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
                var t = this;
                return (new td).load(e, (function(e) {
                    t.setBuffer(e)
                })), this
            }, xd.prototype.getData = function() {
                return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
            }, na.prototype.updateCubeMap = function(e, t) {
                return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t)
            }, na.prototype.clear = function(e, t, n, r) {
                return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."), this.renderTarget.clear(e, t, n, r)
            }, En.crossOrigin = void 0, En.loadTexture = function(e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
                var i = new mh;
                i.setCrossOrigin(this.crossOrigin);
                var a = i.load(e, n, void 0, r);
                return t && (a.mapping = t), a
            }, En.loadTextureCube = function(e, t, n, r) {
                console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
                var i = new ph;
                i.setCrossOrigin(this.crossOrigin);
                var a = i.load(e, n, void 0, r);
                return t && (a.mapping = t), a
            }, En.loadCompressedTexture = function() {
                console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
            }, En.loadCompressedTextureCube = function() {
                console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
            };
            var Pf = {
                createMultiMaterialObject: function() {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                },
                detach: function() {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                },
                attach: function() {
                    console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")
                }
            };
            "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", {
                detail: {
                    revision: n
                }
            })), "undefined" != typeof window && (window.__THREE__ ? console.warn("WARNING: Multiple instances of Three.js being imported.") : window.__THREE__ = n), e.ACESFilmicToneMapping = le, e.AddEquation = P, e.AddOperation = ie, e.AdditiveAnimationBlendMode = qt, e.AdditiveBlending = L, e.AlphaFormat = Be, e.AlwaysDepth = K, e.AlwaysStencilFunc = 519, e.AmbientLight = Oh, e.AmbientLightProbe = rd, e.AnimationClip = rh, e.AnimationLoader = hh, e.AnimationMixer = Nd, e.AnimationObjectGroup = Id, e.AnimationUtils = Wc, e.ArcCurve = Sl, e.ArrayCamera = Zs, e.ArrowHelper = Af, e.Audio = pd, e.AudioAnalyser = xd, e.AudioContext = ed, e.AudioListener = fd, e.AudioLoader = td, e.AxesHelper = Lf, e.AxisHelper = function(e) {
                return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."), new Lf(e)
            }, e.BackSide = M, e.BasicDepthPacking = 3200, e.BasicShadowMap = 0, e.BinaryTextureLoader = function(e) {
                return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."), new vh(e)
            }, e.Bone = Ou, e.BooleanKeyframeTrack = Zc, e.BoundingBoxHelper = function(e, t) {
                return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."), new Tf(e, t)
            }, e.Box2 = qd, e.Box3 = Un, e.Box3Helper = Mf, e.BoxBufferGeometry = Yi, e.BoxGeometry = Yi, e.BoxHelper = Tf, e.BufferAttribute = si, e.BufferGeometry = Li, e.BufferGeometryLoader = Vh, e.ByteType = Le, e.Cache = ah, e.Camera = $i, e.CameraHelper = yf, e.CanvasRenderer = function() {
                console.error("THREE.CanvasRenderer has been removed")
            }, e.CanvasTexture = hl, e.CatmullRomCurve3 = kl, e.CineonToneMapping = ue, e.CircleBufferGeometry = fl, e.CircleGeometry = fl, e.ClampToEdgeWrapping = _e, e.Clock = sd, e.Color = ri, e.ColorKeyframeTrack = Jc, e.CompressedTexture = cl, e.CompressedTextureLoader = dh, e.ConeBufferGeometry = vl, e.ConeGeometry = vl, e.CubeCamera = na, e.CubeReflectionMapping = de, e.CubeRefractionMapping = fe, e.CubeTexture = ra, e.CubeTextureLoader = ph, e.CubeUVReflectionMapping = me, e.CubeUVRefractionMapping = ge, e.CubicBezierCurve = Ol, e.CubicBezierCurve3 = Nl, e.CubicInterpolant = qc, e.CullFaceBack = i, e.CullFaceFront = a, e.CullFaceFrontBack = 3, e.CullFaceNone = r, e.Curve = Tl, e.CurvePath = gh, e.CustomBlending = k, e.CustomToneMapping = ce, e.CylinderBufferGeometry = pl, e.CylinderGeometry = pl, e.Cylindrical = Wd, e.DataTexture = Nu, e.DataTexture2DArray = oo, e.DataTexture3D = so, e.DataTextureLoader = vh, e.DataUtils = kf, e.DecrementStencilOp = 7683, e.DecrementWrapStencilOp = 34056, e.DefaultLoadingManager = sh, e.DepthFormat = je, e.DepthStencilFormat = qe, e.DepthTexture = dl, e.DirectionalLight = Ih, e.DirectionalLightHelper = vf, e.DiscreteInterpolant = Yc, e.DodecahedronBufferGeometry = gl, e.DodecahedronGeometry = gl, e.DoubleSide = S, e.DstAlphaFactor = V, e.DstColorFactor = j, e.DynamicBufferAttribute = function(e, t) {
                return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."), new si(e, t).setUsage(sn)
            }, e.DynamicCopyUsage = 35050, e.DynamicDrawUsage = sn, e.DynamicReadUsage = 35049, e.EdgesGeometry = wl, e.EdgesHelper = function(e, t) {
                return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."), new el(new wl(e.geometry), new ju({
                    color: void 0 !== t ? t : 16777215
                }))
            }, e.EllipseCurve = Ml, e.EqualDepth = Q, e.EqualStencilFunc = 514, e.EquirectangularReflectionMapping = pe, e.EquirectangularRefractionMapping = ve, e.Euler = wr, e.EventDispatcher = ln, e.ExtrudeBufferGeometry = gc, e.ExtrudeGeometry = gc, e.FaceColors = 1, e.FileLoader = ch, e.FlatShading = 1, e.Float16BufferAttribute = vi, e.Float32Attribute = function(e, t) {
                return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."), new mi(e, t)
            }, e.Float32BufferAttribute = mi, e.Float64Attribute = function(e, t) {
                return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."), new gi(e, t)
            }, e.Float64BufferAttribute = gi, e.FloatType = De, e.Fog = au, e.FogExp2 = iu, e.Font = Zh, e.FontLoader = $h, e.FrontSide = T, e.Frustum = ha, e.GLBufferAttribute = Bd, e.GLSL1 = "100", e.GLSL3 = un, e.GammaEncoding = Kt, e.GreaterDepth = ee, e.GreaterEqualDepth = $, e.GreaterEqualStencilFunc = 518, e.GreaterStencilFunc = 516, e.GridHelper = cf, e.Group = Js, e.HalfFloatType = Ie, e.HemisphereLight = bh, e.HemisphereLightHelper = lf, e.HemisphereLightProbe = nd, e.IcosahedronBufferGeometry = _c, e.IcosahedronGeometry = _c, e.ImageBitmapLoader = Yh, e.ImageLoader = fh, e.ImageUtils = En, e.ImmediateRenderObject = Zd, e.IncrementStencilOp = 7682, e.IncrementWrapStencilOp = 34055, e.InstancedBufferAttribute = Hh, e.InstancedBufferGeometry = Gh, e.InstancedInterleavedBuffer = Ud, e.InstancedMesh = Wu, e.Int16Attribute = function(e, t) {
                return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."), new hi(e, t)
            }, e.Int16BufferAttribute = hi, e.Int32Attribute = function(e, t) {
                return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."), new fi(e, t)
            }, e.Int32BufferAttribute = fi, e.Int8Attribute = function(e, t) {
                return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."), new ui(e, t)
            }, e.Int8BufferAttribute = ui, e.IntType = ke, e.InterleavedBuffer = su, e.InterleavedBufferAttribute = lu, e.Interpolant = jc, e.InterpolateDiscrete = Bt, e.InterpolateLinear = zt, e.InterpolateSmooth = Gt, e.InvertStencilOp = 5386, e.JSONLoader = function() {
                console.error("THREE.JSONLoader has been removed.")
            }, e.KeepStencilOp = an, e.KeyframeTrack = Kc, e.LOD = Lu, e.LatheBufferGeometry = xc, e.LatheGeometry = xc, e.Layers = Tr, e.LensFlare = function() {
                console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")
            }, e.LessDepth = Z, e.LessEqualDepth = J, e.LessEqualStencilFunc = 515, e.LessStencilFunc = 513, e.Light = xh, e.LightProbe = Uh, e.Line = Ju, e.Line3 = Kd, e.LineBasicMaterial = ju, e.LineCurve = Fl, e.LineCurve3 = Ul, e.LineDashedMaterial = Hc, e.LineLoop = tl, e.LinePieces = 1, e.LineSegments = el, e.LineStrip = 0, e.LinearEncoding = Xt, e.LinearFilter = Me, e.LinearInterpolant = Xc, e.LinearMipMapLinearFilter = 1008, e.LinearMipMapNearestFilter = 1007, e.LinearMipmapLinearFilter = Ee, e.LinearMipmapNearestFilter = Se, e.LinearToneMapping = oe, e.Loader = uh, e.LoaderUtils = zh, e.LoadingManager = oh, e.LogLuvEncoding = Jt, e.LoopOnce = 2200, e.LoopPingPong = 2202, e.LoopRepeat = 2201, e.LuminanceAlphaFormat = Ve, e.LuminanceFormat = He, e.MOUSE = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2
            }, e.Material = Zr, e.MaterialLoader = Bh, e.Math = wn, e.MathUtils = wn, e.Matrix3 = Sn, e.Matrix4 = dr, e.MaxEquation = N, e.Mesh = qi, e.MeshBasicMaterial = ii, e.MeshDepthMaterial = Hs, e.MeshDistanceMaterial = Vs, e.MeshFaceMaterial = function(e) {
                return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."), e
            }, e.MeshLambertMaterial = zc, e.MeshMatcapMaterial = Gc, e.MeshNormalMaterial = Bc, e.MeshPhongMaterial = Fc, e.MeshPhysicalMaterial = Nc, e.MeshStandardMaterial = Oc, e.MeshToonMaterial = Uc, e.MinEquation = O, e.MirroredRepeatWrapping = xe, e.MixOperation = re, e.MultiMaterial = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."), e.isMultiMaterial = !0, e.materials = e, e.clone = function() {
                    return e.slice()
                }, e
            }, e.MultiplyBlending = R, e.MultiplyOperation = ne, e.NearestFilter = be, e.NearestMipMapLinearFilter = 1005, e.NearestMipMapNearestFilter = 1004, e.NearestMipmapLinearFilter = Te, e.NearestMipmapNearestFilter = we, e.NeverDepth = Y, e.NeverStencilFunc = 512, e.NoBlending = E, e.NoColors = 0, e.NoToneMapping = ae, e.NormalAnimationBlendMode = jt, e.NormalBlending = A, e.NotEqualDepth = te, e.NotEqualStencilFunc = 517, e.NumberKeyframeTrack = Qc, e.Object3D = Fr, e.ObjectLoader = Wh, e.ObjectSpaceNormalMap = rn, e.OctahedronBufferGeometry = bc, e.OctahedronGeometry = bc, e.OneFactor = U, e.OneMinusDstAlphaFactor = W, e.OneMinusDstColorFactor = q, e.OneMinusSrcAlphaFactor = H, e.OneMinusSrcColorFactor = z, e.OrthographicCamera = Ma, e.PCFShadowMap = o, e.PCFSoftShadowMap = g, e.PMREMGenerator = Wa, e.ParametricBufferGeometry = wc, e.ParametricGeometry = wc, e.Particle = function(e) {
                return console.warn("THREE.Particle has been renamed to THREE.Sprite."), new Mu(e)
            }, e.ParticleBasicMaterial = function(e) {
                return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new nl(e)
            }, e.ParticleSystem = function(e, t) {
                return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new sl(e, t)
            }, e.ParticleSystemMaterial = function(e) {
                return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new nl(e)
            }, e.Path = yh, e.PerspectiveCamera = ea, e.Plane = ua, e.PlaneBufferGeometry = pa, e.PlaneGeometry = pa, e.PlaneHelper = Sf, e.PointCloud = function(e, t) {
                return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new sl(e, t)
            }, e.PointCloudMaterial = function(e) {
                return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new nl(e)
            }, e.PointLight = Ph, e.PointLightHelper = af, e.Points = sl, e.PointsMaterial = nl, e.PolarGridHelper = hf, e.PolyhedronBufferGeometry = ml, e.PolyhedronGeometry = ml, e.PositionalAudio = _d, e.PropertyBinding = Dd, e.PropertyMixer = bd, e.QuadraticBezierCurve = Bl, e.QuadraticBezierCurve3 = zl, e.Quaternion = In, e.QuaternionKeyframeTrack = eh, e.QuaternionLinearInterpolant = $c, e.REVISION = n, e.RGBADepthPacking = tn, e.RGBAFormat = Ge, e.RGBAIntegerFormat = Qe, e.RGBA_ASTC_10x10_Format = bt, e.RGBA_ASTC_10x5_Format = yt, e.RGBA_ASTC_10x6_Format = _t, e.RGBA_ASTC_10x8_Format = xt, e.RGBA_ASTC_12x10_Format = wt, e.RGBA_ASTC_12x12_Format = Tt, e.RGBA_ASTC_4x4_Format = ct, e.RGBA_ASTC_5x4_Format = ht, e.RGBA_ASTC_5x5_Format = dt, e.RGBA_ASTC_6x5_Format = ft, e.RGBA_ASTC_6x6_Format = pt, e.RGBA_ASTC_8x5_Format = vt, e.RGBA_ASTC_8x6_Format = mt, e.RGBA_ASTC_8x8_Format = gt, e.RGBA_BPTC_Format = Mt, e.RGBA_ETC2_EAC_Format = lt, e.RGBA_PVRTC_2BPPV1_Format = ot, e.RGBA_PVRTC_4BPPV1_Format = at, e.RGBA_S3TC_DXT1_Format = et, e.RGBA_S3TC_DXT3_Format = tt, e.RGBA_S3TC_DXT5_Format = nt, e.RGBDEncoding = en, e.RGBEEncoding = Zt, e.RGBEFormat = We, e.RGBFormat = ze, e.RGBIntegerFormat = Je, e.RGBM16Encoding = $t, e.RGBM7Encoding = Qt, e.RGB_ETC1_Format = st, e.RGB_ETC2_Format = ut, e.RGB_PVRTC_2BPPV1_Format = it, e.RGB_PVRTC_4BPPV1_Format = rt, e.RGB_S3TC_DXT1_Format = $e, e.RGFormat = Ke, e.RGIntegerFormat = Ze, e.RawShaderMaterial = Sa, e.Ray = hr, e.Raycaster = zd, e.RectAreaLight = Nh, e.RedFormat = Xe, e.RedIntegerFormat = Ye, e.ReinhardToneMapping = se, e.RepeatWrapping = ye, e.ReplaceStencilOp = 7681, e.ReverseSubtractEquation = I, e.RingBufferGeometry = Tc, e.RingGeometry = Tc, e.SRGB8_ALPHA8_ASTC_10x10_Format = Nt, e.SRGB8_ALPHA8_ASTC_10x5_Format = Dt, e.SRGB8_ALPHA8_ASTC_10x6_Format = It, e.SRGB8_ALPHA8_ASTC_10x8_Format = Ot, e.SRGB8_ALPHA8_ASTC_12x10_Format = Ft, e.SRGB8_ALPHA8_ASTC_12x12_Format = Ut, e.SRGB8_ALPHA8_ASTC_4x4_Format = St, e.SRGB8_ALPHA8_ASTC_5x4_Format = Et, e.SRGB8_ALPHA8_ASTC_5x5_Format = At, e.SRGB8_ALPHA8_ASTC_6x5_Format = Lt, e.SRGB8_ALPHA8_ASTC_6x6_Format = Ct, e.SRGB8_ALPHA8_ASTC_8x5_Format = Rt, e.SRGB8_ALPHA8_ASTC_8x6_Format = kt, e.SRGB8_ALPHA8_ASTC_8x8_Format = Pt, e.Scene = ou, e.SceneUtils = Pf, e.ShaderChunk = va, e.ShaderLib = ga, e.ShaderMaterial = Qi, e.ShadowMaterial = Ic, e.Shape = _h, e.ShapeBufferGeometry = Mc, e.ShapeGeometry = Mc, e.ShapePath = Kh, e.ShapeUtils = pc, e.ShortType = Ce, e.Skeleton = Bu, e.SkeletonHelper = nf, e.SkinnedMesh = Iu, e.SmoothShading = 2, e.Sphere = rr, e.SphereBufferGeometry = Sc, e.SphereGeometry = Sc, e.Spherical = Vd, e.SphericalHarmonics3 = Fh, e.SplineCurve = Gl, e.SpotLight = Ah, e.SpotLightHelper = Qd, e.Sprite = Mu, e.SpriteMaterial = hu, e.SrcAlphaFactor = G, e.SrcAlphaSaturateFactor = X, e.SrcColorFactor = B, e.StaticCopyUsage = 35046, e.StaticDrawUsage = on, e.StaticReadUsage = 35045, e.StereoCamera = od, e.StreamCopyUsage = 35042, e.StreamDrawUsage = 35040, e.StreamReadUsage = 35041, e.StringKeyframeTrack = th, e.SubtractEquation = D, e.SubtractiveBlending = C, e.TOUCH = {
                ROTATE: 0,
                PAN: 1,
                DOLLY_PAN: 2,
                DOLLY_ROTATE: 3
            }, e.TangentSpaceNormalMap = nn, e.TetrahedronBufferGeometry = Ec, e.TetrahedronGeometry = Ec, e.TextBufferGeometry = Ac, e.TextGeometry = Ac, e.Texture = Ln, e.TextureLoader = mh, e.TorusBufferGeometry = Lc, e.TorusGeometry = Lc, e.TorusKnotBufferGeometry = Cc, e.TorusKnotGeometry = Cc, e.Triangle = Yr, e.TriangleFanDrawMode = 2, e.TriangleStripDrawMode = 1, e.TrianglesDrawMode = 0, e.TubeBufferGeometry = Rc, e.TubeGeometry = Rc, e.UVMapping = he, e.Uint16Attribute = function(e, t) {
                return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."), new di(e, t)
            }, e.Uint16BufferAttribute = di, e.Uint32Attribute = function(e, t) {
                return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."), new pi(e, t)
            }, e.Uint32BufferAttribute = pi, e.Uint8Attribute = function(e, t) {
                return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."), new li(e, t)
            }, e.Uint8BufferAttribute = li, e.Uint8ClampedAttribute = function(e, t) {
                return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."), new ci(e, t)
            }, e.Uint8ClampedBufferAttribute = ci, e.Uniform = Fd, e.UniformsLib = ma, e.UniformsUtils = Ji, e.UnsignedByteType = Ae, e.UnsignedInt248Type = Ue, e.UnsignedIntType = Pe, e.UnsignedShort4444Type = Oe, e.UnsignedShort5551Type = Ne, e.UnsignedShort565Type = Fe, e.UnsignedShortType = Re, e.VSMShadowMap = x, e.Vector2 = Tn, e.Vector3 = On, e.Vector4 = Rn, e.VectorKeyframeTrack = nh, e.Vertex = function(e, t, n) {
                return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new On(e, t, n)
            }, e.VertexColors = 2, e.VideoTexture = ll, e.WebGL1Renderer = ru, e.WebGLCubeRenderTarget = ia, e.WebGLMultipleRenderTargets = Pn, e.WebGLMultisampleRenderTarget = Dn, e.WebGLRenderTarget = kn, e.WebGLRenderTargetCube = function(e, t, n) {
                return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."), new ia(e, n)
            }, e.WebGLRenderer = nu, e.WebGLUtils = Ks, e.WireframeGeometry = kc, e.WireframeHelper = function(e, t) {
                return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."), new el(new kc(e.geometry), new ju({
                    color: void 0 !== t ? t : 16777215
                }))
            }, e.WrapAroundEnding = Wt, e.XHRLoader = function(e) {
                return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."), new ch(e)
            }, e.ZeroCurvatureEnding = Ht, e.ZeroFactor = F, e.ZeroSlopeEnding = Vt, e.ZeroStencilOp = 0, e.sRGBEncoding = Yt, Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, "object" === (void 0 === n ? "undefined" : (0, g.default)(n)) && void 0 !== t ? i(n) : "function" == typeof define && define.amd ? define(["exports"], i) : i((r = "undefined" != typeof globalThis ? globalThis : r || self).THREE = {})
    }, {
        "@babel/runtime/helpers/assertThisInitialized": 4,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/get": 9,
        "@babel/runtime/helpers/getPrototypeOf": 10,
        "@babel/runtime/helpers/inherits": 11,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/possibleConstructorReturn": 17,
        "@babel/runtime/helpers/slicedToArray": 19,
        "@babel/runtime/helpers/typeof": 24
    }],
    64: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.default = void 0;
        var i = r(e("@babel/runtime/helpers/createClass")),
            a = r(e("@babel/runtime/helpers/classCallCheck")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = (e("./AudioItem").default, e("../core/properties")),
            u = e("../utils/math"),
            l = e("min-signal"),
            c = (0, i.default)((function e() {
                var t = this;
                (0, a.default)(this, e), (0, o.default)(this, "fadeToVolume", (function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                    t._volumeFrom = t.volume, t.targetVolume = e, t._volumeTime = 0, t._volumeDuration = n, 0 === n && (t.volume = t.targetVolume, t.onFadeCompleted.dispatch(t.volume))
                })), (0, o.default)(this, "add", (function(e) {
                    t.children.push(e)
                })), (0, o.default)(this, "addSingle", (function(e) {
                    t.children.push(e), t._isSingle = !0, t.onFadeCompleted.add((function(t) {
                        0 === t && e.stop()
                    }))
                })), (0, o.default)(this, "playSingle", (function() {
                    t.children[0].play()
                })), (0, o.default)(this, "stopSingle", (function() {
                    t.children[0].stop()
                })), (0, o.default)(this, "stop", (function() {
                    t.children.forEach((function(e) {
                        return e.stop()
                    }))
                })), (0, o.default)(this, "setFinalVolume", (function(e) {
                    t.volume !== t.targetVolume && (t._volumeDuration ? (t._volumeTime = Math.min(t._volumeDuration, t._volumeTime + s.deltaTime), t.volume = u.mix(t._volumeFrom, t.targetVolume, t._volumeTime / t._volumeDuration)) : t.volume = t.targetVolume, t.volume == t.targetVolume && t.onFadeCompleted.dispatch(t.volume)), e *= t.volume, t.children.forEach((function(t) {
                        t.setFinalVolume(e)
                    }))
                })), this.children = [], this.volume = 1, this.targetVolume = 1, this._volumeFrom = 0, this._volumeDuration = 0, this._volumeTime = 0, this._isSingle = !1, this._isVideo = !1, this.onFadeCompleted = new l
            }));
        n.default = c
    }, {
        "../core/properties": 71,
        "../utils/math": 104,
        "./AudioItem": 65,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "min-signal": 30
    }],
    65: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.default = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("three"),
            u = e("../core/properties"),
            l = e("../core/settings"),
            c = e("min-signal"),
            h = function() {
                function e(t) {
                    var n = this,
                        r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        a = r.preload,
                        h = void 0 === a || a,
                        d = r.isPositional,
                        f = void 0 !== d && d,
                        p = r.autoplay,
                        v = void 0 !== p && p,
                        m = r.loop,
                        g = void 0 !== m && m,
                        y = r.isMutable,
                        _ = void 0 !== y && y,
                        x = r.fileSize,
                        b = void 0 === x ? 100 : x,
                        w = r.elem,
                        T = void 0 === w ? null : w;
                    (0, i.default)(this, e), (0, o.default)(this, "load", (function(e) {
                        if (n.elem) n.elem.src = n.url;
                        else {
                            var t = n.preload ? "add" : "load";
                            u.loader[t](n.url, {
                                weight: n.fileSize,
                                type: "xhr",
                                responseType: "arraybuffer",
                                hasLoading: !0,
                                onLoad: function(t) {
                                    n._buffer = t, n.hasInitialized && n._decodeAudioData(), e && e()
                                }
                            })
                        }
                    })), (0, o.default)(this, "init", (function(e) {
                        n.hasInitialized || (n.hasInitialized = !0, n.audioObject = n.isPositional ? new s.PositionalAudio(e) : new s.Audio(e), n.positionObjectParent && n.positionObjectParent.add(n.audioObject), n._orginalOnEnd = n.audioObject.onEnded.bind(n.audioObject), n.audioObject.onEnded = n.onEnd.bind(n), n.isPositional && n.setRefDistance(n.refDistance), n.elem ? (n.elem.loop = n.loop, n.audioObject.setMediaElementSource(n.elem), n.elem.addEventListener("ended", n.onEnd.bind(n)), n.autoplay && n.play()) : (n.audioObject.setLoop(n.loop), n._buffer && n._decodeAudioData()))
                    })), (0, o.default)(this, "onEnd", (function() {
                        n._orginalOnEnd && n._orginalOnEnd(), n.onEnded.dispatch()
                    })), (0, o.default)(this, "setFinalVolume", (function(e) {
                        var t;
                        null === (t = n.audioObject) || void 0 === t || t.setVolume(e * n.volume)
                    })), (0, o.default)(this, "_decodeAudioData", (function() {
                        var e = n._buffer.slice(0);
                        s.AudioContext.getContext().decodeAudioData(e, (function(e) {
                            n.audioObject.setBuffer(e), n.autoplay && n.play()
                        }))
                    })), (0, o.default)(this, "setRefDistance", (function(e) {
                        n.refDistance = e, n.isPositional && n.audioObject && n.audioObject.setRefDistance(n.refDistance)
                    })), (0, o.default)(this, "play", (function() {
                        n.autoplay = !0, n.audioObject && !n.audioObject.isPlaying && (n.elem ? (n.elem.play(), n.elem.currentTime = .01, n.audioObject.isPlaying = !0) : n.audioObject.play(), n.onPlayed.dispatch())
                    })), (0, o.default)(this, "stop", (function() {
                        n.autoplay = !1, n.audioObject && n.audioObject.isPlaying && (n.elem ? (n.elem.pause(), n.audioObject.isPlaying = !1) : n.audioObject.stop(), n.onEnded.dispatch())
                    })), this.url = l.AUDIO_PATH + t, this.preload = h, this.isPositional = !!f, this.positionObjectParent = null, this.autoplay = v, this.loop = g, this.isMutable = _, this.elem = T, this.audioObject = null, this.hasInitialized = !1, this.volume = 1, this.fileSize = b, this.refDistance = 1, this._buffer = null, this._orginalOnEnd = null, this.onPlayed = new c, this.onEnded = new c
                }
                return (0, a.default)(e, [{
                    key: "setPositionObjectParent",
                    value: function(e) {
                        this.hasInitialized ? e ? e.add(this.audioObject) : this.audioObject.parent && this.audioObject.parent.remove(this.audioObject) : this.positionObjectParent = e
                    }
                }]), e
            }();
        n.default = h
    }, {
        "../core/properties": 71,
        "../core/settings": 72,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "min-signal": 30,
        three: 63
    }],
    66: [function(e, t, n) {
        "use strict";
        var r = e("../core/properties"),
            i = e("../utils/math"),
            a = e("../input/input"),
            o = e("./AudioGroup").default,
            s = e("./AudioItem").default,
            u = e("three"),
            l = e("min-signal");
        n.preInit = function() {
            for (var e = 0; e < T.length; e++) {
                var t = T[e],
                    r = n.groups[t] = new o;
                n.master.add(r)
            }
            window.addEventListener("blur", M), window.addEventListener("focus", S), a.onDowned.add(A), f = document.querySelectorAll(".audio__bar"), (d = document.querySelector(".header-more--audio")).addEventListener("click", R), d.addEventListener("mouseenter", k), d.style.pointerEvents = "auto", L("bgm", "ui", !1, !0, !1, !0), L("transition", "ui", !0), L("hover_0", "ui", !0), L("hover_1", "ui", !0), L("change_0", "ui", !0), L("change_1", "ui", !0)
        }, n.init = function() {
            D((function(e) {
                for (var t in x) x[t].init(e);
                x.bgm.play()
            }))
        }, n.play = C, n.playTap = function() {
            0
        }, n.playHover = E, n.playChange = function() {
            return C("change_" + ++w % 2)
        }, n.enable = P, n.getListener = D, n.update = I, n.master = new o, n.groups = {}, n.uiGroup = new o, n.sceneGroup = new o;
        var c, h, d, f, p = 0,
            v = !1,
            m = !0,
            g = !1,
            y = new l,
            _ = 0,
            x = n.audioItems = {},
            b = 0,
            w = 0,
            T = ["ui", "scene"];

        function M() {
            m = !1, I(0), g = !0
        }

        function S() {
            p = 0, m = !0, I(1), g = !1
        }

        function E() {
            return C("hover_" + ++b % 2)
        }

        function A(e) {
            a.onDowned.remove(A), c = new u.AudioListener, h = c.context.createBiquadFilter(), c.setFilter(h), r.camera.add(c), y.dispatch(c), P(!0)
        }

        function L(e, t, r, i, a, o) {
            var u;
            o && (u = document.createElement("audio"));
            var l = x[e] = new s(e + ".mp3", {
                preload: !!r,
                loop: i,
                elem: u,
                isPositional: !!a
            });
            return n.groups[t].add(l), l.load(), l
        }

        function C(e) {
            return v && x[e].play(), x[e]
        }

        function R() {
            P(!v)
        }

        function k() {
            E()
        }

        function P(e) {
            v = !!e
        }

        function D(e) {
            c ? e(c) : y.add(e)
        }

        function I(e) {
            if (c) {
                var t = v ? 1 : -1;
                p = i.saturate(p + t * e * .5);
                var a = m && !g;
                n.master.setFinalVolume(p * (m ? 1 : 0), a), _ += 12 * e;
                for (var o = 0; o < f.length; o++) f[o].style.transform = "translate3d(0, 0, 0) scale3d(1, " + ((3 + 11 * (.5 * Math.sin(_ + 23.2512 * o) + .5) * p) / 14).toFixed(4) + ",1)";
                var s = c.context.sampleRate / 2,
                    u = Math.log(s / 40) / Math.LN2,
                    l = Math.pow(2, u * i.fit(r.cinematicRatio, 0, 1, 1, -.7));
                h.frequency.value = i.clamp(s * l, 40, s), h.gain.value = i.fit(r.cinematicRatio, 0, 1, 0, 5)
            }
        }
    }, {
        "../core/properties": 71,
        "../input/input": 83,
        "../utils/math": 104,
        "./AudioGroup": 64,
        "./AudioItem": 65,
        "min-signal": 30,
        three: 63
    }],
    67: [function(e, t, n) {
        "use strict";
        var r = e("three");
        t.exports = r.DeviceOrientationControls = function(e) {
            var t = this;
            this.object = e, this.object.rotation.reorder("YXZ"), this.enabled = !0, this.hasValue = !1, this.deviceOrientation = {}, this.screenOrientation = 0, this.alphaOffset = 0;
            var n, i, a, o, s = function(e) {
                    t.deviceOrientation = e
                },
                u = function() {
                    t.screenOrientation = window.orientation || 0
                },
                l = (n = new r.Vector3(0, 0, 1), i = new r.Euler, a = new r.Quaternion, o = new r.Quaternion(-Math.sqrt(.5), 0, 0, Math.sqrt(.5)), function(e, t, r, s, u) {
                    i.set(r, t, -s, "YXZ"), e.setFromEuler(i), e.multiply(o), e.multiply(a.setFromAxisAngle(n, -u))
                });
            this.connect = function() {
                u(), void 0 !== window.DeviceOrientationEvent && "function" == typeof window.DeviceOrientationEvent.requestPermission ? window.DeviceOrientationEvent.requestPermission().then((function(e) {
                    "granted" == e && (window.addEventListener("orientationchange", u, !1), window.addEventListener("deviceorientation", s, !1))
                })).catch((function(e) {})) : (window.addEventListener("orientationchange", u, !1), window.addEventListener("deviceorientation", s, !1)), t.enabled = !0
            }, this.disconnect = function() {
                window.removeEventListener("orientationchange", u, !1), window.removeEventListener("deviceorientation", s, !1), t.enabled = !1
            }, this.update = function() {
                if (!1 !== t.enabled) {
                    var e = t.deviceOrientation;
                    if (e) {
                        var n = e.alpha ? r.Math.degToRad(e.alpha) + t.alphaOffset : 0,
                            i = e.beta ? r.Math.degToRad(e.beta) : 0,
                            a = e.gamma ? r.Math.degToRad(e.gamma) : 0,
                            o = t.screenOrientation ? r.Math.degToRad(t.screenOrientation) : 0;
                        l(t.object.quaternion, n, i, a, o), t.hasValue = e.alpha && e.beta && e.gamma
                    }
                }
            }, this.dispose = function() {
                t.disconnect()
            }, this.connect()
        }
    }, {
        three: 63
    }],
    68: [function(e, t, n) {
        "use strict";
        var r = e("three");
        t.exports = r.OrbitControls = function(e, t) {
            var n, i, a, o, s;
            this.object = e, this.domElement = void 0 !== t ? t : document, this.enabled = !0, this.target = new r.Vector3, this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -1 / 0, this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = .05, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.panSpeed = 1, this.screenSpacePanning = !1, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = {
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                BOTTOM: 40
            }, this.mouseButtons = {
                LEFT: r.MOUSE.ROTATE,
                MIDDLE: r.MOUSE.DOLLY,
                RIGHT: r.MOUSE.PAN
            }, this.touches = {
                ONE: r.TOUCH.ROTATE,
                TWO: r.TOUCH.DOLLY_PAN
            }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function() {
                return v.phi
            }, this.getAzimuthalAngle = function() {
                return v.theta
            }, this.saveState = function() {
                u.target0.copy(u.target), u.position0.copy(u.object.position), u.zoom0 = u.object.zoom
            }, this.reset = function() {
                u.target.copy(u.target0), u.object.position.copy(u.position0), u.object.zoom = u.zoom0, u.object.updateProjectionMatrix(), u.dispatchEvent(l), u.update(), f = d.NONE
            }, this.update = (n = new r.Vector3, i = (new r.Quaternion).setFromUnitVectors(e.up, new r.Vector3(0, 1, 0)), a = i.clone().invert(), o = new r.Vector3, s = new r.Quaternion, function() {
                var e = u.object.position;
                return n.copy(e).sub(u.target), n.applyQuaternion(i), v.setFromVector3(n), u.autoRotate && f === d.NONE && R(2 * Math.PI / 60 / 60 * u.autoRotateSpeed), u.enableDamping ? (v.theta += m.theta * u.dampingFactor, v.phi += m.phi * u.dampingFactor) : (v.theta += m.theta, v.phi += m.phi), v.theta = Math.max(u.minAzimuthAngle, Math.min(u.maxAzimuthAngle, v.theta)), v.phi = Math.max(u.minPolarAngle, Math.min(u.maxPolarAngle, v.phi)), v.makeSafe(), v.radius *= g, v.radius = Math.max(u.minDistance, Math.min(u.maxDistance, v.radius)), !0 === u.enableDamping ? u.target.addScaledVector(y, u.dampingFactor) : u.target.add(y), n.setFromSpherical(v), n.applyQuaternion(a), e.copy(u.target).add(n), u.object.lookAt(u.target), !0 === u.enableDamping ? (m.theta *= 1 - u.dampingFactor, m.phi *= 1 - u.dampingFactor, y.multiplyScalar(1 - u.dampingFactor)) : (m.set(0, 0, 0), y.set(0, 0, 0)), g = 1, !!(_ || o.distanceToSquared(u.object.position) > p || 8 * (1 - s.dot(u.object.quaternion)) > p) && (u.dispatchEvent(l), o.copy(u.object.position), s.copy(u.object.quaternion), _ = !1, !0)
            }), this.dispose = function() {
                u.domElement.removeEventListener("contextmenu", ee, !1), u.domElement.removeEventListener("mousedown", q, !1), u.domElement.removeEventListener("wheel", K, !1), u.domElement.removeEventListener("touchstart", J, !1), u.domElement.removeEventListener("touchend", $, !1), u.domElement.removeEventListener("touchmove", Q, !1), document.removeEventListener("mousemove", X, !1), document.removeEventListener("mouseup", Y, !1), window.removeEventListener("keydown", Z, !1)
            };
            var u = this,
                l = {
                    type: "change"
                },
                c = {
                    type: "start"
                },
                h = {
                    type: "end"
                },
                d = {
                    NONE: -1,
                    ROTATE: 0,
                    DOLLY: 1,
                    PAN: 2,
                    TOUCH_ROTATE: 3,
                    TOUCH_PAN: 4,
                    TOUCH_DOLLY_PAN: 5,
                    TOUCH_DOLLY_ROTATE: 6
                },
                f = d.NONE,
                p = 1e-6,
                v = new r.Spherical,
                m = new r.Spherical,
                g = 1,
                y = new r.Vector3,
                _ = !1,
                x = new r.Vector2,
                b = new r.Vector2,
                w = new r.Vector2,
                T = new r.Vector2,
                M = new r.Vector2,
                S = new r.Vector2,
                E = new r.Vector2,
                A = new r.Vector2,
                L = new r.Vector2;

            function C() {
                return Math.pow(.95, u.zoomSpeed)
            }

            function R(e) {
                m.theta -= e
            }

            function k(e) {
                m.phi -= e
            }
            var P, D = (P = new r.Vector3, function(e, t) {
                    P.setFromMatrixColumn(t, 0), P.multiplyScalar(-e), y.add(P)
                }),
                I = function() {
                    var e = new r.Vector3;
                    return function(t, n) {
                        !0 === u.screenSpacePanning ? e.setFromMatrixColumn(n, 1) : (e.setFromMatrixColumn(n, 0), e.crossVectors(u.object.up, e)), e.multiplyScalar(t), y.add(e)
                    }
                }(),
                O = function() {
                    var e = new r.Vector3;
                    return function(t, n) {
                        var r = u.domElement === document ? u.domElement.body : u.domElement;
                        if (u.object.isPerspectiveCamera) {
                            var i = u.object.position;
                            e.copy(i).sub(u.target);
                            var a = e.length();
                            a *= Math.tan(u.object.fov / 2 * Math.PI / 180), D(2 * t * a / r.clientHeight, u.object.matrix), I(2 * n * a / r.clientHeight, u.object.matrix)
                        } else u.object.isOrthographicCamera ? (D(t * (u.object.right - u.object.left) / u.object.zoom / r.clientWidth, u.object.matrix), I(n * (u.object.top - u.object.bottom) / u.object.zoom / r.clientHeight, u.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), u.enablePan = !1)
                    }
                }();

            function N(e) {
                u.object.isPerspectiveCamera ? g /= e : u.object.isOrthographicCamera ? (u.object.zoom = Math.max(u.minZoom, Math.min(u.maxZoom, u.object.zoom * e)), u.object.updateProjectionMatrix(), _ = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), u.enableZoom = !1)
            }

            function F(e) {
                u.object.isPerspectiveCamera ? g *= e : u.object.isOrthographicCamera ? (u.object.zoom = Math.max(u.minZoom, Math.min(u.maxZoom, u.object.zoom / e)), u.object.updateProjectionMatrix(), _ = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), u.enableZoom = !1)
            }

            function U(e) {
                x.set(e.clientX, e.clientY)
            }

            function B(e) {
                T.set(e.clientX, e.clientY)
            }

            function z(e) {
                if (1 == e.touches.length) x.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                        n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    x.set(t, n)
                }
            }

            function G(e) {
                if (1 == e.touches.length) T.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                        n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    T.set(t, n)
                }
            }

            function H(e) {
                var t = e.touches[0].pageX - e.touches[1].pageX,
                    n = e.touches[0].pageY - e.touches[1].pageY,
                    r = Math.sqrt(t * t + n * n);
                E.set(0, r)
            }

            function V(e) {
                if (1 == e.touches.length) b.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                        n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    b.set(t, n)
                }
                w.subVectors(b, x).multiplyScalar(u.rotateSpeed);
                var r = u.domElement === document ? u.domElement.body : u.domElement;
                R(2 * Math.PI * w.x / r.clientHeight), k(2 * Math.PI * w.y / r.clientHeight), x.copy(b)
            }

            function W(e) {
                if (1 == e.touches.length) M.set(e.touches[0].pageX, e.touches[0].pageY);
                else {
                    var t = .5 * (e.touches[0].pageX + e.touches[1].pageX),
                        n = .5 * (e.touches[0].pageY + e.touches[1].pageY);
                    M.set(t, n)
                }
                S.subVectors(M, T).multiplyScalar(u.panSpeed), O(S.x, S.y), T.copy(M)
            }

            function j(e) {
                var t = e.touches[0].pageX - e.touches[1].pageX,
                    n = e.touches[0].pageY - e.touches[1].pageY,
                    r = Math.sqrt(t * t + n * n);
                A.set(0, r), L.set(0, Math.pow(A.y / E.y, u.zoomSpeed)), N(L.y), E.copy(A)
            }

            function q(e) {
                if (!1 !== u.enabled) {
                    switch (e.preventDefault(), u.domElement.focus ? u.domElement.focus() : window.focus(), e.button) {
                        case 0:
                            switch (u.mouseButtons.LEFT) {
                                case r.MOUSE.ROTATE:
                                    if (e.ctrlKey || e.metaKey || e.shiftKey) {
                                        if (!1 === u.enablePan) return;
                                        B(e), f = d.PAN
                                    } else {
                                        if (!1 === u.enableRotate) return;
                                        U(e), f = d.ROTATE
                                    }
                                    break;
                                case r.MOUSE.PAN:
                                    if (e.ctrlKey || e.metaKey || e.shiftKey) {
                                        if (!1 === u.enableRotate) return;
                                        U(e), f = d.ROTATE
                                    } else {
                                        if (!1 === u.enablePan) return;
                                        B(e), f = d.PAN
                                    }
                                    break;
                                default:
                                    f = d.NONE
                            }
                            break;
                        case 1:
                            if (u.mouseButtons.MIDDLE === r.MOUSE.DOLLY) {
                                if (!1 === u.enableZoom) return;
                                ! function(e) {
                                    E.set(e.clientX, e.clientY)
                                }(e), f = d.DOLLY
                            } else f = d.NONE;
                            break;
                        case 2:
                            switch (u.mouseButtons.RIGHT) {
                                case r.MOUSE.ROTATE:
                                    if (!1 === u.enableRotate) return;
                                    U(e), f = d.ROTATE;
                                    break;
                                case r.MOUSE.PAN:
                                    if (!1 === u.enablePan) return;
                                    B(e), f = d.PAN;
                                    break;
                                default:
                                    f = d.NONE
                            }
                    }
                    f !== d.NONE && (document.addEventListener("mousemove", X, !1), document.addEventListener("mouseup", Y, !1), u.dispatchEvent(c))
                }
            }

            function X(e) {
                if (!1 !== u.enabled) switch (e.preventDefault(), f) {
                    case d.ROTATE:
                        if (!1 === u.enableRotate) return;
                        ! function(e) {
                            b.set(e.clientX, e.clientY), w.subVectors(b, x).multiplyScalar(u.rotateSpeed);
                            var t = u.domElement === document ? u.domElement.body : u.domElement;
                            R(2 * Math.PI * w.x / t.clientHeight), k(2 * Math.PI * w.y / t.clientHeight), x.copy(b), u.update()
                        }(e);
                        break;
                    case d.DOLLY:
                        if (!1 === u.enableZoom) return;
                        ! function(e) {
                            A.set(e.clientX, e.clientY), L.subVectors(A, E), L.y > 0 ? N(C()) : L.y < 0 && F(C()), E.copy(A), u.update()
                        }(e);
                        break;
                    case d.PAN:
                        if (!1 === u.enablePan) return;
                        ! function(e) {
                            M.set(e.clientX, e.clientY), S.subVectors(M, T).multiplyScalar(u.panSpeed), O(S.x, S.y), T.copy(M), u.update()
                        }(e)
                }
            }

            function Y(e) {
                !1 !== u.enabled && (document.removeEventListener("mousemove", X, !1), document.removeEventListener("mouseup", Y, !1), u.dispatchEvent(h), f = d.NONE)
            }

            function K(e) {
                !1 === u.enabled || !1 === u.enableZoom || f !== d.NONE && f !== d.ROTATE || (e.stopPropagation(), u.dispatchEvent(c), function(e) {
                    e.deltaY < 0 ? F(C()) : e.deltaY > 0 && N(C()), u.update()
                }(e), u.dispatchEvent(h))
            }

            function Z(e) {
                !1 !== u.enabled && !1 !== u.enableKeys && !1 !== u.enablePan && function(e) {
                    var t = !1;
                    switch (e.keyCode) {
                        case u.keys.UP:
                            O(0, u.keyPanSpeed), t = !0;
                            break;
                        case u.keys.BOTTOM:
                            O(0, -u.keyPanSpeed), t = !0;
                            break;
                        case u.keys.LEFT:
                            O(u.keyPanSpeed, 0), t = !0;
                            break;
                        case u.keys.RIGHT:
                            O(-u.keyPanSpeed, 0), t = !0
                    }
                    t && (e.preventDefault(), u.update())
                }(e)
            }

            function J(e) {
                if (!1 !== u.enabled) {
                    switch (e.preventDefault(), e.touches.length) {
                        case 1:
                            switch (u.touches.ONE) {
                                case r.TOUCH.ROTATE:
                                    if (!1 === u.enableRotate) return;
                                    z(e), f = d.TOUCH_ROTATE;
                                    break;
                                case r.TOUCH.PAN:
                                    if (!1 === u.enablePan) return;
                                    G(e), f = d.TOUCH_PAN;
                                    break;
                                default:
                                    f = d.NONE
                            }
                            break;
                        case 2:
                            switch (u.touches.TWO) {
                                case r.TOUCH.DOLLY_PAN:
                                    if (!1 === u.enableZoom && !1 === u.enablePan) return;
                                    ! function(e) {
                                        u.enableZoom && H(e), u.enablePan && G(e)
                                    }(e), f = d.TOUCH_DOLLY_PAN;
                                    break;
                                case r.TOUCH.DOLLY_ROTATE:
                                    if (!1 === u.enableZoom && !1 === u.enableRotate) return;
                                    ! function(e) {
                                        u.enableZoom && H(e), u.enableRotate && z(e)
                                    }(e), f = d.TOUCH_DOLLY_ROTATE;
                                    break;
                                default:
                                    f = d.NONE
                            }
                            break;
                        default:
                            f = d.NONE
                    }
                    f !== d.NONE && u.dispatchEvent(c)
                }
            }

            function Q(e) {
                if (!1 !== u.enabled) switch (e.preventDefault(), e.stopPropagation(), f) {
                    case d.TOUCH_ROTATE:
                        if (!1 === u.enableRotate) return;
                        V(e), u.update();
                        break;
                    case d.TOUCH_PAN:
                        if (!1 === u.enablePan) return;
                        W(e), u.update();
                        break;
                    case d.TOUCH_DOLLY_PAN:
                        if (!1 === u.enableZoom && !1 === u.enablePan) return;
                        ! function(e) {
                            u.enableZoom && j(e), u.enablePan && W(e)
                        }(e), u.update();
                        break;
                    case d.TOUCH_DOLLY_ROTATE:
                        if (!1 === u.enableZoom && !1 === u.enableRotate) return;
                        ! function(e) {
                            u.enableZoom && j(e), u.enableRotate && V(e)
                        }(e), u.update();
                        break;
                    default:
                        f = d.NONE
                }
            }

            function $(e) {
                !1 !== u.enabled && (u.dispatchEvent(h), f = d.NONE)
            }

            function ee(e) {
                !1 !== u.enabled && e.preventDefault()
            }
            u.domElement.addEventListener("contextmenu", ee, !1), u.domElement.addEventListener("mousedown", q, !1), u.domElement.addEventListener("wheel", K, !1), u.domElement.addEventListener("touchstart", J, !1), u.domElement.addEventListener("touchend", $, !1), u.domElement.addEventListener("touchmove", Q, !1), window.addEventListener("keydown", Z, !1), this.update()
        }, r.OrbitControls.prototype = Object.create(r.EventDispatcher.prototype), r.OrbitControls.prototype.constructor = r.OrbitControls, Object.defineProperties(r.OrbitControls.prototype, {
            center: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target
                }
            },
            noZoom: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !e
                }
            },
            noRotate: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !e
                }
            },
            noPan: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !e
                }
            },
            noKeys: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !e
                }
            },
            staticMoving: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !e
                }
            },
            dynamicDampingFactor: {
                get: function() {
                    return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor
                },
                set: function(e) {
                    console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = e
                }
            }
        }), r.MapControls = function(e, t) {
            r.OrbitControls.call(this, e, t), this.mouseButtons.LEFT = r.MOUSE.PAN, this.mouseButtons.RIGHT = r.MOUSE.ROTATE, this.touches.ONE = r.TOUCH.PAN, this.touches.TWO = r.TOUCH.DOLLY_ROTATE
        }, r.MapControls.prototype = Object.create(r.EventDispatcher.prototype), r.MapControls.prototype.constructor = r.MapControls
    }, {
        three: 63
    }],
    69: [function(e, t, n) {
        "use strict";
        var r, i, a, o, s, u, l, c = e("../core/browser"),
            h = e("../core/properties"),
            d = e("../motions/BrownianMotion"),
            f = e("../utils/ease"),
            p = e("three"),
            v = (e("glslify"), e("./DeviceOrientationControls")),
            m = e("./OrbitControls");
        n.preInit = function() {
            var e = h.camera;
            w = new p.Vector3, T = new p.Vector3, e.position.copy(y), r = h.brownianMotion = new d, a = h.orbitCamera = e.clone(), (i = h.orbitControls = new m(a, document.body)).target0.copy(_), i.reset(), c.isMobile && (l = new p.Camera, s = new p.Quaternion, u = new p.Quaternion, o = new v(l))
        }, n.init = function() {}, n.resize = function(e, t) {}, n.update = function(e) {
            var t = h.camera;
            t.matrix.identity(), t.matrix.decompose(t.position, t.quaternion, t.scale), t.position.copy(y), i.update(), a.updateMatrix(), a.matrix.decompose(t.position, t.quaternion, t.scale), w.set(0, 0, -1).applyQuaternion(t.quaternion);
            var n = T.copy(i.target).sub(t.position).dot(w);
            t.filmGauge = 70, t.setFocalLength(30);
            var d = t.fov;
            t.fov = d + h.cameraDollyZoomFovOffset + 10 * f.easeInOutCubic(h.cinematicRatio);
            var p = n;
            p = p * Math.tan(d / 360 * Math.PI / 2) / Math.tan(t.fov / 360 * Math.PI / 2) - p, t.translateZ(p), h.cameraDollyZoomZOffset = p, h.cameraDollyZoomFovOffset *= .975, t.updateProjectionMatrix(), t.fov = d, t.translateZ(-n), c.isMobile && (o.update(), o.hasValue && (g || (u.copy(l.quaternion), s.copy(l.quaternion)), u.slerp(l.quaternion, .02), s.slerp(u, .02), g = !0), x.copy(s).invert().multiply(u), t.quaternion.multiply(x));
            b.set(h.cameraLookX, h.cameraLookY, 0), x.setFromEuler(b), t.quaternion.multiply(x), t.translateZ(n), t.matrix.compose(t.position, t.quaternion, t.scale), r.positionAmplitude = h.cameraShakePositionStrength, r.positionFrequency = h.cameraShakePositionSpeed, r.rotationAmplitude = h.cameraShakeRotationStrength, r.rotationFrequency = h.cameraShakeRotationSpeed, r.update(e), t.matrix.multiply(r.matrix), t.matrix.decompose(t.position, t.quaternion, t.scale), w.set(0, 0, -1).applyQuaternion(t.quaternion), h.cameraDistance = T.copy(i.target).sub(t.position).dot(w)
        }, n.container = null;
        var g = !1,
            y = new p.Vector3(0, 0, 5),
            _ = new p.Vector3(0, .5, 0),
            x = new p.Quaternion,
            b = new p.Euler,
            w = new p.Vector3,
            T = new p.Vector3
    }, {
        "../core/browser": 70,
        "../core/properties": 71,
        "../motions/BrownianMotion": 89,
        "../utils/ease": 103,
        "./DeviceOrientationControls": 67,
        "./OrbitControls": 68,
        glslify: 27,
        three: 63
    }],
    70: [function(e, t, n) {
        "use strict";
        var r;
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.videoFormat = n.transitionStyle = n.transformStyle = n.transformPerspectiveStyle = n.transformOriginStyle = n.transform3dStyle = n.isSupportOpacity = n.isSafari = n.isRetina = n.isMobile = n.isIOS = n.isIFrame = n.isIE = n.isFirefox = n.isEdge = n.isChrome = n.filterStyle = n.devicePixelRatio = n.cpuCoreCount = n.baseUrl = n.audioFormat = n.WebAudioContext = void 0;
        var i = "Webkit Moz O ms".split(" "),
            a = document.createElement("div").style,
            o = window,
            s = document,
            u = (navigator.userAgent || navigator.vendor || window.opera).toLowerCase(),
            l = k("video", ["video/mp4", "video/ogv"]);
        n.videoFormat = l;
        var c = k("audio", ["audio/mp3", "audio/ogg"]);
        n.audioFormat = c;
        var h = o.self !== o.top;
        n.isIFrame = h;
        var d = o.devicePixelRatio && o.devicePixelRatio >= 1.5;
        n.isRetina = d;
        var f = a.opacity !== r;
        n.isSupportOpacity = f;
        var p = navigator.hardwareConcurrency || 1;
        n.cpuCoreCount = p;
        var v = u.indexOf("edge") > -1;
        n.isEdge = v;
        var m = u.indexOf("msie") > -1;
        n.isIE = m;
        var g = u.indexOf("firefox") > -1;
        n.isFirefox = g;
        var y = !v && u.indexOf("chrome") > -1;
        n.isChrome = y;
        var _ = !v && !y && u.indexOf("safari") > -1;
        n.isSafari = _;
        var x = /(iPad|iPhone|Android)/i.test(u);
        n.isMobile = x;
        var b = /(iPad|iPhone)/i.test(u);
        n.isIOS = b;
        var w = m ? r : P("filter");
        n.filterStyle = w;
        var T = P("transition");
        n.transitionStyle = T;
        var M = P("transform");
        n.transformStyle = M;
        var S = P("transform", "perspective");
        n.transform3dStyle = S;
        var E = P("perspective");
        n.transformPerspectiveStyle = E;
        var A = P("transformOrigin");
        n.transformOriginStyle = A;
        var L = o.AudioContext || o.webkitAudioContext;
        n.WebAudioContext = L;
        var C = document.location.origin;
        n.baseUrl = C;
        var R = window.devicePixelRatio || 1;

        function k(e, t) {
            var n, r;
            try {
                switch (e) {
                    case "video":
                        n = new o.Video;
                        break;
                    case "audio":
                        n = new o.Audio
                }
            } catch (t) {
                n = s.createElement(e)
            }
            for (var i = 0, a = t.length; i < a; i++)
                if (n.canPlayType && n.canPlayType(t[i])) {
                    r = t[i].substr(t[i].indexOf("/") + 1);
                    break
                }
            return r
        }

        function P(e, t) {
            return function(e, t) {
                return t > 1 ? i[t - 2] + e.charAt(0).toUpperCase() + e.slice(1) : 1 === t && e
            }(e, function(e) {
                var t = e.charAt(0).toUpperCase() + e.slice(1),
                    n = i.length;
                for (; n--;)
                    if (a[i[n] + t] !== r) return n + 2;
                if (a[e] !== r) return 1;
                return 0
            }(t || e))
        }
        n.devicePixelRatio = R
    }, {}],
    71: [function(e, t, n) {
        "use strict";
        var r = e("min-signal"),
            i = e("../visuals/stage0/themeData/themeData");
        n.loader = e("quick-loader").create(), n.gl = null, n.isSupportWebGL = null, n.isAudioActive = !1, n.renderer = null, n.scene = null, n.camera = null, n.postprocessing = null, n.sharedUniforms = {
            u_resolution: {
                value: null
            },
            u_bgColor: {
                value: null
            },
            u_time: {
                value: 0
            }
        }, n.resolution = null, n.isStageReady = !1, n.hasInitialized = !1, n.domElement = null, n.rawWidth = 0, n.rawHeight = 0, n.width = 0, n.height = 0, n.time = 0, n.visualTimeScale = 1, n.cinematicRatio = 0, n.showAnimation = 0, n.bloom = null, n.final = null, n.hitTestList = [], n.bgColorHex = "#000000", n.opacity = 0, n.bloomAmount = 1.4, n.bloomRadius = 0, n.bloomThreshold = .2, n.bloomSmoothWidth = .75, n.haloWidth = .8, n.haloRGBShift = .03, n.haloStrength = .3, n.haloMaskInner = .8255, n.haloMaskOuter = 1, n.vignetteFrom = .6, n.vignetteTo = 1.6, n.vignetteColorHex = "#878A8C", n.saturation = 1, n.contrast = 0, n.brightness = 1, n.tintColorHex = "#0044ef", n.tintOpacity = .1, n.bokehAutoDistance = !0, n.bokehAmount = 0, n.bokehFNumber = .181, n.bokehFocusDistance = 2.515, n.bokehFocalLength = .344, n.bokehKFilmHeight = 19.26, n.cameraShakeBlurAmount = 0, n.orbitControls = null, n.orbitCamera = null, n.cameraLookX = 0, n.cameraLookY = 0, n.cameraLookStrength = .05, n.cameraLookEaseDamp = .075, n.cameraDollyZoomFovOffset = 0, n.cameraDollyZoomZOffset = 0, n.cameraDistance = 3, n.cameraShakePositionStrength = 0, n.cameraShakePositionSpeed = .3, n.cameraShakeRotationStrength = 0, n.cameraShakeRotationSpeed = .3, n.stage0_changeColors = new r, n.cinematicIsActive = new r, n.cacheBlendRatio = 0, n.cacheBlendDirection = 1, n.stage0_activeThemeData = i[4], n.sky = {
            topColor: n.stage0_activeThemeData.sky.topColor,
            bottomColor: n.stage0_activeThemeData.sky.bottomColor,
            offset: n.stage0_activeThemeData.sky.offset,
            exponent: n.stage0_activeThemeData.sky.exponent
        }, n.ground = {
            mainColor: n.stage0_activeThemeData.ground.mainColor,
            diffLightColor: n.stage0_activeThemeData.ground.diffLightColor,
            diffLightIntensity: n.stage0_activeThemeData.ground.diffLightIntensity,
            maskStrength: n.stage0_activeThemeData.ground.maskStrength
        }, n.lightning = {
            topColor: n.stage0_activeThemeData.lightning.topColor,
            bottomColor: n.stage0_activeThemeData.lightning.bottomColor,
            intensity: n.stage0_activeThemeData.lightning.intensity
        }, n.trails = {
            color: n.stage0_activeThemeData.trails.color,
            speed: n.stage0_activeThemeData.trails.speed,
            metalness: n.stage0_activeThemeData.trails.metalness,
            roughness: n.stage0_activeThemeData.trails.roughness,
            envMapIntensity: n.stage0_activeThemeData.envMapIntensitytrails
        }, n.leo = {
            color: n.stage0_activeThemeData.leo.color,
            emissive: n.stage0_activeThemeData.leo.emissive
        }
    }, {
        "../visuals/stage0/themeData/themeData": 114,
        "min-signal": 30,
        "quick-loader": 51
    }],
    72: [function(e, t, n) {
        "use strict";
        var r = e("mout/lang/isBoolean"),
            i = e("mout/lang/isInteger"),
            a = e("mout/queryString/parse")(window.location.href),
            o = e("./browser");
        for (var s in n.AUDIO_PATH = "assets/audios/", n.MODEL_PATH = "assets/models/", n.IMAGE_PATH = "assets/images/", n.TEXTURE_PATH = "assets/textures/", n.GLOBAL_ID = "webglApi", n.canvas = null, n.gl = null, n.webglOpts = {
                    antialias: !1,
                    alpha: !1,
                    xrCompatible: !0
                }, n.RENDER_TARGET_FLOAT_TYPE = null, n.DATA_FLOAT_TYPE = null, n.USE_FLOAT_PACKING = !1, n.USE_WEBGL2 = !1, //!(browser.isSafari || browser.isIOS);
                n.DPR = Math.min(1.5, o.devicePixelRatio) || 1, n.MAX_PIXEL_COUNT = 3686400, n.CROSS_ORIGINS = {}, n.SKIP_ANIMATION = !1, n.LOOK_DEV_MODE = !1, n.DEFAULT_STAGE_INDEX = -1, n.STAGE_0_ID = "motion", n.STAGE_1_ID = "style", a)
            if (void 0 !== n[s]) {
                var u = a[s];
                r(n[s]) ? n[s] = !(0 == u) : i(n[s]) && (n[s] = parseInt(u, 10))
            }
        var l = window.location.href.indexOf(n.STAGE_0_ID) > -1,
            c = window.location.href.indexOf(n.STAGE_1_ID) > -1;
        n.DEFAULT_STAGE_INDEX = l || c ? l ? 0 : 1 : -1 === n.DEFAULT_STAGE_INDEX ? Math.random() > .5 ? 1 : 0 : n.DEFAULT_STAGE_INDEX
    }, {
        "./browser": 70,
        "mout/lang/isBoolean": 34,
        "mout/lang/isInteger": 35,
        "mout/queryString/parse": 49
    }],
    73: [function(e, t, n) {
        "use strict";
        var r = e("../../core/properties"),
            i = e("../../core/settings"),
            a = e("../../helpers/shaderHelper"),
            o = e("three"),
            s = e("glslify");
        n.preInit = function() {
            var e = new o.Texture;
            e.generateMipmaps = !1, e.minFilter = e.magFilter = o.LinearFilter, e.wrapS = e.wrapT = o.RepeatWrapping;
            var t = new o.Texture(r.loader.add(i.TEXTURE_PATH + "LDR_RGB1_0.png", {
                weight: 55,
                onLoad: function() {
                    t.needsUpdate = !0, e.needsUpdate = !0
                }
            }).content);
            e.image = t.image, t.generateMipmaps = !1, t.minFilter = t.magFilter = o.NearestFilter, t.wrapS = t.wrapT = o.RepeatWrapping, l.u_blueNoiseTexture.value = t, l.u_blueNoiseLinearTexture.value = e, l.u_blueNoiseTexelSize.value = new o.Vector2(1 / c, 1 / c), l.u_blueNoiseCoordOffset.value = u = new o.Vector2, a.addChunk("getBlueNoise", s(["#define GLSLIFY 1\nuniform sampler2D u_blueNoiseTexture;\nuniform vec2 u_blueNoiseTexelSize;\nuniform vec2 u_blueNoiseCoordOffset;\n\n// getBlueNoise(gl_FragCoord.xy)\nvec3 getBlueNoise (vec2 coord) {\n\treturn texture2D(u_blueNoiseTexture, coord * u_blueNoiseTexelSize + u_blueNoiseCoordOffset).rgb;\n}\n// getStaticBlueNoise(gl_FragCoord.xy)\nvec3 getStaticBlueNoise (vec2 coord) {\n\treturn texture2D(u_blueNoiseTexture, coord * u_blueNoiseTexelSize).rgb;\n}"]))
        }, n.update = function(e) {
            u.set(Math.random(), Math.random())
        };
        var u, l = n.sharedUniforms = {
                u_blueNoiseTexture: {
                    value: null
                },
                u_blueNoiseLinearTexture: {
                    value: null
                },
                u_blueNoiseTexelSize: {
                    value: null
                },
                u_blueNoiseCoordOffset: {
                    value: null
                }
            },
            c = 128
    }, {
        "../../core/properties": 71,
        "../../core/settings": 72,
        "../../helpers/shaderHelper": 80,
        glslify: 27,
        three: 63
    }],
    74: [function(e, t, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.blur = m, n.blur9 = function(e, t, n, r, i, a) {
            m(v(), .25, e, t, n, r, i, a)
        }, n.blur9RGBA = function(e, t, n, r, i, a) {
            m(v(!0), .25, e, t, n, r, i, a)
        }, n.getBlur9DepthMaterial = function(e, t) {
            t = !!t;
            var n = (e = !!e) ? t ? o : u : t ? s : l,
                i = d.MAX_VARYING_VECTORS > 8;
            n || (n = new f.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        type: "t",
                        value: r
                    },
                    u_delta: {
                        type: "v2",
                        value: new f.Vector2
                    }
                },
                vertexShader: i ? d.precisionPrefix + p(["#define GLSLIFY 1\nattribute vec3 position;\n\nuniform vec2 u_delta;\nvarying vec2 v_uv[9];\n\nvoid main() {\n    vec2 uv = position.xy * 0.5 + 0.5;\n\n    v_uv[0] = uv;\n\n    vec2 delta = u_delta;\n    v_uv[1] = uv - delta;\n    v_uv[2] = uv + delta;\n\n    delta += u_delta;\n    v_uv[3] = uv - delta;\n    v_uv[4] = uv + delta;\n\n    delta += u_delta;\n    v_uv[5] = uv - delta;\n    v_uv[6] = uv + delta;\n\n    delta += u_delta;\n    v_uv[7] = uv - delta;\n    v_uv[8] = uv + delta;\n\n    gl_Position = vec4( position, 1.0 );\n\n}\n"]) : d.vertexShader,
                fragmentShader: d.precisionPrefix + p(i ? ["#define GLSLIFY 1\n#include <packing>\n\nuniform sampler2D u_texture;\nuniform float u_cameraFarSubNear;\nuniform float u_cameraNearMulFar;\nuniform float u_cameraNear;\nuniform float u_cameraFar;\n\nvarying vec2 v_uv[9];\n\n#if FROM_LINEAR\nfloat tap (vec2 uv) {\n    return unpackRGBAToDepth(texture2D(u_texture, uv));\n}\n#else\nfloat tap (vec2 uv) {\n    return u_cameraNearMulFar / (unpackRGBAToDepth(texture2D(u_texture, uv) * u_cameraFarSubNear - u_cameraFar);\n}\n#endif\n\n#if TO_LINEAR\nfloat encode (float depth) {\n    return packDepthToRGBA(depth);\n}\n#else\nfloat encode (float depth) {\n    return packDepthToRGBA((u_cameraNear + depth) * u_cameraFar) / (u_cameraFarSubNear * viewZ);\n}\n#endif\n\nvoid main() {\n        vec4 color = tap(v_uv[0]) * 0.1633;\n        color += tap( v_uv[1]) * 0.1531;\n        color += tap( v_uv[2]) * 0.1531;\n        color += tap( v_uv[3]) * 0.12245;\n        color += tap( v_uv[4]) * 0.12245;\n        color += tap( v_uv[5]) * 0.0918;\n        color += tap( v_uv[6]) * 0.0918;\n        color += tap( v_uv[7]) * 0.051;\n        color += tap( v_uv[8]) * 0.051;\n\n        gl_FragColor = encode(color);\n}\n"] : ["#define GLSLIFY 1\n#include <packing>\n\nuniform sampler2D u_texture;\nuniform vec2 u_delta;\nuniform float u_cameraFarSubNear;\nuniform float u_cameraNearMulFar;\nuniform float u_cameraNear;\nuniform float u_cameraFar;\n\nvarying vec2 v_uv;\n\n#if FROM_LINEAR\nfloat tap (vec2 uv) {\n    return unpackRGBAToDepth(texture2D(u_texture, uv));\n}\n#else\nfloat tap (vec2 uv) {\n    return u_cameraNearMulFar / (unpackRGBAToDepth(texture2D(u_texture, uv) * u_cameraFarSubNear - u_cameraFar);\n}\n#endif\n\n#if TO_LINEAR\nfloat encode (float depth) {\n    return packDepthToRGBA(depth);\n}\n#else\nfloat encode (float depth) {\n    return packDepthToRGBA((u_cameraNear + depth) * u_cameraFar) / (u_cameraFarSubNear * viewZ);\n}\n#endif\n\nvoid main() {\n        vec4 color = tap(v_uv) * 0.1633;\n\n        vec2 delta = u_delta;\n        color += tap(v_uv - delta) * 0.1531;\n        color += tap(v_uv + delta) * 0.1531;\n\n        delta += u_delta;\n        color += tap(v_uv - delta) * 0.12245;\n        color += tap(v_uv + delta) * 0.12245;\n\n        delta += u_delta;\n        color += tap(v_uv - delta) * 0.0918;\n        color += tap(v_uv + delta) * 0.0918;\n\n        delta += u_delta;\n        color += tap(v_uv - delta) * 0.051;\n        color += tap(v_uv + delta) * 0.051;\n\n        gl_FragColor = encode(color);\n}\n"]),
                blending: f.NoBlending,
                transparent: !0,
                defines: {
                    FROM_LINEAR: e,
                    TO_LINEAR: t
                }
            }));
            e ? t ? o = n : u = n : t ? s = n : l = n;
            return n
        }, n.getBlur9Material = v;
        var r, i, a, o, s, u, l, c, h, d = e("../../helpers/fboHelper"),
            f = e("three"),
            p = e("glslify");

        function v(e) {
            var t = (e = !!e) ? a : i,
                n = d.MAX_VARYING_VECTORS > 8;
            return t || (t = new f.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        type: "t",
                        value: r
                    },
                    u_delta: {
                        type: "v2",
                        value: new f.Vector2
                    }
                },
                vertexShader: n ? d.precisionPrefix + p(["#define GLSLIFY 1\nattribute vec3 position;\n\nuniform vec2 u_delta;\nvarying vec2 v_uv[9];\n\nvoid main() {\n    vec2 uv = position.xy * 0.5 + 0.5;\n\n    v_uv[0] = uv;\n\n    vec2 delta = u_delta;\n    v_uv[1] = uv - delta;\n    v_uv[2] = uv + delta;\n\n    delta += u_delta;\n    v_uv[3] = uv - delta;\n    v_uv[4] = uv + delta;\n\n    delta += u_delta;\n    v_uv[5] = uv - delta;\n    v_uv[6] = uv + delta;\n\n    delta += u_delta;\n    v_uv[7] = uv - delta;\n    v_uv[8] = uv + delta;\n\n    gl_Position = vec4( position, 1.0 );\n\n}\n"]) : d.vertexShader,
                fragmentShader: d.precisionPrefix + p(n ? ["#define GLSLIFY 1\nuniform sampler2D u_texture;\nvarying vec2 v_uv[9];\n\nvoid main() {\n\n    #ifdef USE_RGBA\n        vec4 color = texture2D( u_texture, v_uv[0] ) * 0.1633;\n        color += texture2D( u_texture,  v_uv[1] ) * 0.1531;\n        color += texture2D( u_texture,  v_uv[2] ) * 0.1531;\n        color += texture2D( u_texture,  v_uv[3] ) * 0.12245;\n        color += texture2D( u_texture,  v_uv[4] ) * 0.12245;\n        color += texture2D( u_texture,  v_uv[5] ) * 0.0918;\n        color += texture2D( u_texture,  v_uv[6] ) * 0.0918;\n        color += texture2D( u_texture,  v_uv[7] ) * 0.051;\n        color += texture2D( u_texture,  v_uv[8] ) * 0.051;\n\n        gl_FragColor = color;\n    #else\n        vec4 center = texture2D( u_texture, v_uv[0] );\n        vec3 color = center.rgb * 0.1633;\n        color += texture2D( u_texture,  v_uv[1] ).rgb * 0.1531;\n        color += texture2D( u_texture,  v_uv[2] ).rgb * 0.1531;\n        color += texture2D( u_texture,  v_uv[3] ).rgb * 0.12245;\n        color += texture2D( u_texture,  v_uv[4] ).rgb * 0.12245;\n        color += texture2D( u_texture,  v_uv[5] ).rgb * 0.0918;\n        color += texture2D( u_texture,  v_uv[6] ).rgb * 0.0918;\n        color += texture2D( u_texture,  v_uv[7] ).rgb * 0.051;\n        color += texture2D( u_texture,  v_uv[8] ).rgb * 0.051;\n\n        gl_FragColor = vec4(color, center.a);\n    #endif\n\n}\n"] : ["#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform vec2 u_delta;\n\nvarying vec2 v_uv;\n\nvoid main() {\n\n    #ifdef USE_RGBA\n        vec4 color = texture2D( u_texture, v_uv ) * 0.1633;\n\n        vec2 delta = u_delta;\n        color += texture2D( u_texture,  v_uv - delta ) * 0.1531;\n        color += texture2D( u_texture,  v_uv + delta ) * 0.1531;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ) * 0.12245;\n        color += texture2D( u_texture,  v_uv + delta ) * 0.12245;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ) * 0.0918;\n        color += texture2D( u_texture,  v_uv + delta ) * 0.0918;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ) * 0.051;\n        color += texture2D( u_texture,  v_uv + delta ) * 0.051;\n\n        gl_FragColor = color;\n\n    #else\n        vec4 center = texture2D( u_texture, v_uv );\n        vec3 color = center.rgb * 0.1633;\n\n        vec2 delta = u_delta;\n        color += texture2D( u_texture,  v_uv - delta ).rgb * 0.1531;\n        color += texture2D( u_texture,  v_uv + delta ).rgb * 0.1531;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ).rgb * 0.12245;\n        color += texture2D( u_texture,  v_uv + delta ).rgb * 0.12245;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ).rgb * 0.0918;\n        color += texture2D( u_texture,  v_uv + delta ).rgb * 0.0918;\n\n        delta += u_delta;\n        color += texture2D( u_texture,  v_uv - delta ).rgb * 0.051;\n        color += texture2D( u_texture,  v_uv + delta ).rgb * 0.051;\n\n        gl_FragColor = vec4(color, center.a);\n\n    #endif\n\n}\n"]),
                blending: f.NoBlending,
                transparent: e,
                defines: {
                    USE_RGBA: e
                }
            }), e ? a = t : i = t), t
        }

        function m(e, t, n, r, i, a, o, s) {
            var u = Math.ceil(i.width * r) || 0,
                l = Math.ceil(i.height * r) || 0;
            a || (e.transparent ? (h || (h = d.createRenderTarget(1, 1, !0)), a = h) : (c || (c = d.createRenderTarget(1, 1)), a = c)), a.setSize(u, l), o ? s || o.setSize(i.width, i.height) : o = i, e.uniforms.u_texture.value = i.texture || i, e.uniforms.u_delta.value.set(n / u * t, 0), d.render(e, a), e.uniforms.u_texture.value = a.texture || a, e.uniforms.u_delta.value.set(0, n / l * t), d.render(e, o)
        }
    }, {
        "../../helpers/fboHelper": 79,
        glslify: 27,
        three: 63
    }],
    75: [function(e, t, n) {
        t.exports = "uniform vec2 u_glPositionOffset;\n\nvec4 glPositionOffset (vec4 glPosition) {\n\treturn glPosition + vec4(u_glPositionOffset * glPosition.w, 0.0, 0.0);\n}"
    }, {}],
    76: [function(e, t, n) {
        "use strict";
        var r = e("../../helpers/shaderHelper"),
            i = e("three");
        n.init = function() {
            o.u_glPositionOffset.value = a = new i.Vector2, r.addChunk("glPositionOffset", e("./glPositionOffset.glsl"))
        }, n.setOffset = function(e, t) {
            return a.set(e, t)
        };
        var a, o = n.sharedUniforms = {
            u_glPositionOffset: {
                value: null
            }
        }
    }, {
        "../../helpers/shaderHelper": 80,
        "./glPositionOffset.glsl": 75,
        three: 63
    }],
    77: [function(e, t, n) {
        "use strict";
        var r = e("three"),
            i = e("glslify"),
            a = e("../../utils/math"),
            o = e("../../helpers/fboHelper"),
            s = e("../../helpers/shaderHelper");
        (n = t.exports = function(e, t) {
            this.tmpRenderTarget = o.createRenderTarget(1, 1, !0), this.fixedMaxMipmapLevel = e || 16, this.maxMipmapLevel = 0, this.needsBlur = !!t, this.textureSize = new r.Vector2;
            var n = c + 1;
            this.geometry = h(n), this.oddGeometry = h(n), this.clampCache = new Float32Array(4 * n), this.needsBlur && (l || (l = new r.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    },
                    u_loClamp: {
                        value: new r.Vector2
                    },
                    u_hiClamp: {
                        value: new r.Vector2
                    },
                    u_texelSize: {
                        value: new r.Vector2
                    }
                },
                vertexShader: o.precisionPrefix + i(["#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform vec2 u_texelSize;\n\nvarying vec2 v_uvE;\nvarying vec2 v_uvS;\nvarying vec2 v_uvW;\nvarying vec2 v_uvN;\n\nvoid main() {\n    v_uvE = uv + vec2(u_texelSize.x, 0.0);\n    v_uvS = uv - vec2(0.0, u_texelSize.y);\n    v_uvW = uv - vec2(u_texelSize.x, 0.0);\n    v_uvN = uv + vec2(0.0, u_texelSize.y);\n    gl_Position = vec4(position, 1.0 );\n}\n"]),
                fragmentShader: o.precisionPrefix + i(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nuniform vec2 u_loClamp;\nuniform vec2 u_hiClamp;\n\nvarying vec2 v_uvE;\nvarying vec2 v_uvS;\nvarying vec2 v_uvW;\nvarying vec2 v_uvN;\n\nvoid main () {\n\n\tvec4 e = texture2D(u_texture, clamp(v_uvE, u_loClamp, u_hiClamp));\n\tvec4 s = texture2D(u_texture, clamp(v_uvS, u_loClamp, u_hiClamp));\n\tvec4 w = texture2D(u_texture, clamp(v_uvW, u_loClamp, u_hiClamp));\n\tvec4 n = texture2D(u_texture, clamp(v_uvN, u_loClamp, u_hiClamp));\n\n    gl_FragColor = (e + s + w + n) * 0.25;\n}\n"]),
                depthTest: !1,
                depthWrite: !1,
                blending: r.NoBlending
            })))
        }).init = function() {
            s.addChunk("lodMipmapSample", i(["#define GLSLIFY 1\nvec2 getMipUv (vec2 uv, float lod, vec2 mipmapTextureSize) {\n\tvec2 textureSize = mipmapTextureSize * vec2(0.666666667, 1.0);\n\tfloat isNonZeroLod = step(0.5, lod);\n\tvec2 xy = vec2(\n\t\tisNonZeroLod * textureSize.x / mipmapTextureSize.x,\n\t\t1.0 - 1.0 / pow(2.0, max(0.0, lod - 1.0))\n\t);\n\tvec2 wh = (max(vec2(1.0), floor(textureSize / pow(2.0, lod))));\n\treturn xy + uv * wh / mipmapTextureSize;\n}\n\nvec2 getMipUv (vec2 uv, float lod, vec2 mipmapTextureSize, out vec4 clampRect) {\n\tvec2 textureSize = mipmapTextureSize * vec2(0.666666667, 1.0);\n\tfloat isNonZeroLod = step(0.5, lod);\n\tvec2 xy = vec2(\n\t\tisNonZeroLod * textureSize.x / mipmapTextureSize.x,\n\t\t1.0 - 1.0 / pow(2.0, max(0.0, lod - 1.0))\n\t);\n\tvec2 wh = (max(vec2(1.0), floor(textureSize / pow(2.0, lod))));\n\tvec2 halfTexelSize = 0.5 / mipmapTextureSize;\n\n\tclampRect = vec4(\n\t\txy + halfTexelSize,\n\t\txy + halfTexelSize + (wh - 1.0) / mipmapTextureSize\n\t);\n\t\n\treturn xy + uv * wh / mipmapTextureSize;\n}\n\nvec4 lodMipmapSampleNearestCubic (sampler2D tex, vec2 uv, float lod, vec2 mipmapTextureSize) {\n\tvec4 clampRect;\n\tuv = getMipUv(uv, lod, mipmapTextureSize, clampRect);\n\treturn textureBicubic(tex, uv, mipmapTextureSize, clampRect);\n}\n\nvec4 lodMipmapSampleNearest (sampler2D tex, vec2 uv, float lod, vec2 mipmapTextureSize) {\n\treturn texture2D(tex, getMipUv(uv, lod, mipmapTextureSize));\n}\n\nvec4 lodMipmapSampleCubic (sampler2D tex, vec2 uv, float lod, vec2 mipmapTextureSize) {\n\tfloat lodFloor = floor(lod);\n\tfloat lodCeil = lodFloor + 1.0;\n\tfloat lodFract = lod - lodFloor;\n\n\tvec4 loClamp, hiClamp;\n\tvec2 loUv = getMipUv(uv, lodFloor, mipmapTextureSize, loClamp);\n\tvec2 hiUv = getMipUv(uv, lodCeil, mipmapTextureSize, hiClamp);\n\treturn mix(\n\t\ttextureBicubic(tex, loUv, mipmapTextureSize, loClamp),\n\t\ttextureBicubic(tex, hiUv, mipmapTextureSize, hiClamp),\n\t\tlodFract\n\t);\n}\n\nvec4 lodMipmapSample (sampler2D tex, vec2 uv, float lod, vec2 mipmapTextureSize) {\n\tfloat lodFloor = floor(lod);\n\tfloat lodCeil = lodFloor + 1.0;\n\tfloat lodFract = lod - lodFloor;\n\treturn mix(\n\t\ttexture2D(tex, getMipUv(uv, lodFloor, mipmapTextureSize)),\n\t\ttexture2D(tex, getMipUv(uv, lodCeil, mipmapTextureSize)),\n\t\tlodFract\n\t);\n}\n"]))
        };
        var u = n.prototype;
        u.resize = function(e, t, n, r) {
            var i = a.powerTwoFloorBase(t);
            this.maxMipmapLevel = Math.min(i, this.fixedMaxMipmapLevel), this.tmpRenderTarget.setSize(n, r), this.textureSize.set(n, r);
            for (var o = this.geometry.attributes.position.array, s = this.geometry.attributes.uv.array, u = this.clampCache, l = 0, c = 0, h = 0, d = i; h < d; h++) {
                var f = (h > 0 ? e : 0) / n,
                    p = (r - (r >> Math.max(0, h - 1))) / r,
                    v = Math.max(1, e >> h) / n,
                    m = Math.max(1, t >> h) / r;
                s[c + 0] = f, s[c + 1] = p + m, s[c + 2] = f, s[c + 3] = p, s[c + 4] = f + v, s[c + 5] = p + m, s[c + 6] = f + v, s[c + 7] = p + m, s[c + 8] = f, s[c + 9] = p, s[c + 10] = f + v, s[c + 11] = p, u[l + 0] = f + .5 / n, u[l + 1] = p + .5 / r, u[l + 2] = u[l + 0] + v - 1 / n, u[l + 3] = u[l + 1] + m - 1 / r, l += 4, c += 12
            }
            var g = this.oddGeometry.attributes.uv.array,
                y = this.oddGeometry.attributes.position.array;
            c = 0;
            for (var _ = 0, x = 0, b = 0, w = 0, T = i - 1; w < T; w++) o[_ + 0] = 2 * s[c + 12] - 1, o[_ + 1] = 2 * s[c + 13] - 1, o[_ + 3] = 2 * s[c + 14] - 1, o[_ + 4] = 2 * s[c + 15] - 1, o[_ + 6] = 2 * s[c + 16] - 1, o[_ + 7] = 2 * s[c + 17] - 1, o[_ + 9] = 2 * s[c + 18] - 1, o[_ + 10] = 2 * s[c + 19] - 1, o[_ + 12] = 2 * s[c + 20] - 1, o[_ + 13] = 2 * s[c + 21] - 1, o[_ + 15] = 2 * s[c + 22] - 1, o[_ + 16] = 2 * s[c + 23] - 1, (w + 1) % 2 && (y[b + 0] = 2 * (g[x + 0] = s[c + 12]) - 1, y[b + 1] = 2 * (g[x + 1] = s[c + 13]) - 1, y[b + 3] = 2 * (g[x + 2] = s[c + 14]) - 1, y[b + 4] = 2 * (g[x + 3] = s[c + 15]) - 1, y[b + 6] = 2 * (g[x + 4] = s[c + 16]) - 1, y[b + 7] = 2 * (g[x + 5] = s[c + 17]) - 1, y[b + 9] = 2 * (g[x + 6] = s[c + 18]) - 1, y[b + 10] = 2 * (g[x + 7] = s[c + 19]) - 1, y[b + 12] = 2 * (g[x + 8] = s[c + 20]) - 1, y[b + 13] = 2 * (g[x + 9] = s[c + 21]) - 1, y[b + 15] = 2 * (g[x + 10] = s[c + 22]) - 1, y[b + 16] = 2 * (g[x + 11] = s[c + 23]) - 1, x += 12, b += 18), c += 12, _ += 18;
            this.geometry.attributes.uv.needsUpdate = !0, this.geometry.attributes.position.needsUpdate = !0, this.oddGeometry.attributes.uv.needsUpdate = !0, this.oddGeometry.attributes.position.needsUpdate = !0
        }, u.render = function(e) {
            var t = o.getColorState(),
                n = o.uvCopyMaterial,
                r = n;
            this.textureSize.x == e.width && this.textureSize.y == e.height || (e.setSize(e.width, e.height), this.resize(Math.round(e.width / 3 * 2), e.height, e.width, e.height));
            this.needsBlur && (r = l, l.uniforms.u_texelSize.value.set(1 / e.width, 1 / e.height));
            o.renderer.autoClear = !1;
            for (var i = e, a = this.tmpRenderTarget, s = 0, u = this.clampCache, c = 0, h = this.maxMipmapLevel - 1; c < h; c++) {
                if (r.uniforms.u_texture.value = i.texture, this.geometry.drawRange.start = 6 * c, this.geometry.drawRange.count = 6, this.needsBlur) {
                    var d = u[4 * c + 0],
                        f = u[4 * c + 1],
                        p = u[4 * c + 2],
                        v = u[4 * c + 3];
                    l.uniforms.u_loClamp.value.set(d, f), l.uniforms.u_hiClamp.value.set(p, v)
                }
                o.renderGeometry(this.geometry, r, a), a === this.tmpRenderTarget && s++;
                var m = a;
                a = i, i = m
            }
            this.oddGeometry.drawRange.start = 0, this.oddGeometry.drawRange.count = 6 * s, n.uniforms.u_texture.value = this.tmpRenderTarget.texture, o.renderGeometry(this.oddGeometry, n, e), o.setColorState(t)
        };
        var l, c = 14;

        function h(e) {
            var t = new Float32Array(6 * e * 2),
                n = new Float32Array(6 * e * 3),
                i = new r.BufferGeometry;
            return i.setAttribute("position", new r.BufferAttribute(n, 3)), i.setAttribute("uv", new r.BufferAttribute(t, 2)), i
        }
    }, {
        "../../helpers/fboHelper": 79,
        "../../helpers/shaderHelper": 80,
        "../../utils/math": 104,
        glslify: 27,
        three: 63
    }],
    78: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = e("@babel/runtime/helpers/typeof"),
            a = r(e("@babel/runtime/helpers/asyncToGenerator"));

        function o() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            o = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                s = a.iterator || "@@iterator",
                u = a.asyncIterator || "@@asyncIterator",
                l = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == i(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[s];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, l, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, u, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, l, "Generator"), c(x, s, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var s = e("gsap/gsap-core").gsap,
            u = e("three");

        function l() {
            return (l = (0, a.default)(o().mark((function e(t, n, r, i) {
                var a, l;
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return a = new u.Color(t.value), l = new u.Color(n), e.abrupt("return", s.to(a, {
                                delay: i,
                                r: l.r,
                                g: l.g,
                                b: l.b,
                                duration: r,
                                ease: Power2.easeInOut,
                                onUpdate: function() {
                                    t.value = a
                                }
                            }));
                        case 3:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }

        function c() {
            return (c = (0, a.default)(o().mark((function e(t, n, r, i, a) {
                var l, c;
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return l = new u.Color(n), c = new u.Color(r), e.abrupt("return", s.to(l, {
                                delay: a,
                                r: c.r,
                                g: c.g,
                                b: c.b,
                                duration: i,
                                ease: Power2.easeInOut,
                                onUpdate: function() {
                                    t.color = l
                                }
                            }));
                        case 3:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }
        n.fadeShaderColor = function(e, t, n, r) {
            return l.apply(this, arguments)
        }, n.fadeMaterialColor = function(e, t, n, r) {
            var i = new u.Color(e.color.getHex()),
                a = new u.Color(t);
            s.to(i, {
                delay: r,
                r: a.r,
                g: a.g,
                b: a.b,
                duration: n,
                ease: Power2.easeInOut,
                onUpdate: function() {
                    e.color = i
                }
            })
        }, n.fadeLightColor = function(e, t, n, r, i) {
            return c.apply(this, arguments)
        }
    }, {
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        "gsap/gsap-core": 29,
        three: 63
    }],
    79: [function(e, t, n) {
        "use strict";
        var r = e("three"),
            i = e("glslify"),
            a = e("../core/browser");
        n.init = function(e, t) {
            h = n.renderer = e, n.floatType = t, n.scene = new r.Scene, n.camera = new r.Camera, n.camera.position.z = 1, o = new r.Color, (d = n.triGeom = new r.BufferGeometry).setAttribute("position", new r.BufferAttribute(new Float32Array([-1, -1, 0, 4, -1, 0, -1, 4, 0]), 3)), n.quadGeom = new r.PlaneBufferGeometry(2, 2), (f = n.tri = new r.Mesh(d)).frustumCulled = !1, n.scene.add(n.tri);
            var a = n.precisionPrefix = "precision " + h.capabilities.precision + " float;\n";
            n.precisionPrefix2 = "#version 300 es\nprecision " + h.capabilities.precision + " float;\nprecision " + h.capabilities.precision + " int;\n#define IS_WEBGL2 true\n";
            n.vertexShader = a + i(["#define GLSLIFY 1\nattribute vec3 position;\nvarying vec2 v_uv;\n\nvoid main() {\n    v_uv = position.xy * 0.5 + 0.5;\n    gl_Position = vec4(position, 1.0 );\n}\n"]), n.copyMaterial = new r.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    }
                },
                vertexShader: n.vertexShader,
                fragmentShader: a + i(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\n\nvoid main () {\n    gl_FragColor = texture2D(u_texture, v_uv);\n}\n"]),
                depthTest: !1,
                depthWrite: !1,
                blending: r.NoBlending
            }), n.uvCopyMaterial = new r.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    }
                },
                vertexShader: a + i(["#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\nvarying vec2 v_uv;\n\nvoid main() {\n    v_uv = uv;\n    gl_Position = vec4(position, 1.0 );\n}\n"]),
                fragmentShader: a + i(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\n\nvoid main () {\n    gl_FragColor = texture2D(u_texture, v_uv);\n}\n"]),
                depthTest: !1,
                depthWrite: !1,
                blending: r.NoBlending
            }), n.clearMaterial = new r.RawShaderMaterial({
                uniforms: {
                    u_color: {
                        value: new r.Vector4(1, 1, 1, 1)
                    }
                },
                vertexShader: n.vertexShader,
                fragmentShader: a + i(["#define GLSLIFY 1\nuniform vec4 u_color;\n\nvarying vec2 v_uv;\n\nvoid main () {\n    gl_FragColor = u_color;\n}\n"]),
                depthTest: !1,
                depthWrite: !1,
                transparent: !0,
                blending: r.NoBlending
            }), s = new r.Scene;
            var c = new r.PlaneBufferGeometry(1, 1);
            c.translate(.5, -.5, 0), l = new r.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    },
                    u_transform: {
                        value: new r.Vector4(0, 0, 1, 1)
                    }
                },
                vertexShader: a + i(["#define GLSLIFY 1\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform vec4 u_transform;\n\nvarying vec2 v_uv;\n\nvoid main() {\n    v_uv = uv;\n    gl_Position = vec4( position.xy * u_transform.zw + u_transform.xy, 0.0, 1.0 );\n}\n"]),
                fragmentShader: a + i(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\n\nvoid main () {\n    gl_FragColor = texture2D(u_texture, v_uv);\n}\n"]),
                depthTest: !1,
                depthWrite: !1,
                blending: r.NoBlending
            }), u = new r.Mesh(c, l), s.frustumCulled = !1, s.add(u)
        }, n.copy = function(e, t) {
            var r = n.copyMaterial;
            r.uniforms.u_texture.value = e, p(r, t)
        }, n.uvCopy = function(e, t) {
            var r = n.uvCopyMaterial;
            r.uniforms.u_texture.value = e, p(r, t)
        }, n.render = p, n.renderGeometry = function(e, t, n) {
            f.geometry = e, p(t, n), f.geometry = d
        }, n.renderMesh = function(e, t) {
            f.visible = !1, n.scene.add(e), t && h.setRenderTarget(t || null);
            h.render(n.scene, n.camera), t && h.setRenderTarget(null);
            n.scene.remove(e), f.visible = !0
        }, n.debugTo = function(e, t, i, a, o) {
            t = t || e.width || e.image.width, i = i || e.height || e.image.height, a = a || 0, o = o || 0;
            var u = h.getSize(new r.Vector2);
            a = a / u.width * 2 - 1, o = 1 - o / u.height * 2, t = t / u.width * 2, i = i / u.height * 2, l.uniforms.u_texture.value = e, l.uniforms.u_transform.value.set(a, o, t, i);
            var c = v();
            h.autoClearColor = !1, h.setRenderTarget(null), h.render(s, n.camera), m(c)
        }, n.clearColor = function(e, t, i, a, o) {
            var s = n.clearMaterial;
            s.uniforms.u_color.value.set(e, t, i, a), s.transparent = a < 1, s.blending = a < 1 ? r.NormalBlending : r.NoBlending, p(n.clearMaterial, o), s.transparent = !1, s.blending = r.NoBlending
        }, n.getColorState = v, n.setColorState = m, n.createRenderTarget = g, n.createMultisampleRenderTarget = function(e, t, i, o, s) {
            var u = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 4;
            if (!h.capabilities.isWebGL2 || a.isSafari || a.isIOS) return g(e, t, i, o, s);
            var l = new r.WebGLMultisampleRenderTarget(e, t, {
                wrapS: r.ClampToEdgeWrapping,
                wrapT: r.ClampToEdgeWrapping,
                magFilter: o ? r.NearestFilter : r.LinearFilter,
                minFilter: o ? r.NearestFilter : r.LinearFilter,
                format: i ? r.RGBAFormat : r.RGBFormat,
                type: s ? n.floatType : r.UnsignedByteType,
                anisotropy: 0,
                encoding: r.LinearEncoding,
                depthBuffer: !1,
                stencilBuffer: !1
            });
            c || (c = h.getContext().getParameter(h.getContext().MAX_SAMPLES));
            return l.samples = Math.min(u, c), l
        }, n.clearMultisampleRenderTargetState = function() {
            var e = h.getRenderTarget();
            if (e && e.isWebGLMultisampleRenderTarget) {
                var t = h.properties.get(e),
                    n = h.getContext();
                n.bindFramebuffer(n.READ_FRAMEBUFFER, t.__webglMultisampledFramebuffer), n.bindFramebuffer(n.DRAW_FRAMEBUFFER, t.__webglFramebuffer);
                var r = e.width,
                    i = e.height,
                    a = n.COLOR_BUFFER_BIT;
                e.depthBuffer && (a |= n.DEPTH_BUFFER_BIT), e.stencilBuffer && (a |= n.STENCIL_BUFFER_BIT), n.blitFramebuffer(0, 0, r, i, 0, 0, r, i, a, n.NEAREST), n.bindFramebuffer(n.FRAMEBUFFER, t.__webglMultisampledFramebuffer)
            }
        };
        var o, s, u, l, c, h = n.renderer = null,
            d = (n.quadGeom = null, n.triGeom = null),
            f = n.tri = null;

        function p(e, t) {
            f.material = e, t && h.setRenderTarget(t), h.render(n.scene, n.camera), t && h.setRenderTarget(null)
        }

        function v() {
            return {
                autoClear: h.autoClear,
                autoClearColor: h.autoClearColor,
                autoClearStencil: h.autoClearStencil,
                autoClearDepth: h.autoClearDepth,
                clearColor: h.getClearColor(o).getHex(),
                clearAlpha: h.getClearAlpha()
            }
        }

        function m(e) {
            h.setClearColor(e.clearColor, e.clearAlpha), h.autoClear = e.autoClear, h.autoClearColor = e.autoClearColor, h.autoClearStencil = e.autoClearStencil, h.autoClearDepth = e.autoClearDepth
        }

        function g(e, t, i, a, o) {
            return new r.WebGLRenderTarget(e, t, {
                wrapS: r.ClampToEdgeWrapping,
                wrapT: r.ClampToEdgeWrapping,
                magFilter: a ? r.NearestFilter : r.LinearFilter,
                minFilter: a ? r.NearestFilter : r.LinearFilter,
                format: i ? r.RGBAFormat : r.RGBFormat,
                type: o ? n.floatType : r.UnsignedByteType,
                anisotropy: 0,
                encoding: r.LinearEncoding,
                depthBuffer: !1,
                stencilBuffer: !1
            })
        }
        n.clearMaterial = null, n.floatType = null, n.precisionPrefix = "", n.precisionPrefix2 = "", n.vertexShader = "", n.scene = null, n.camera = null
    }, {
        "../core/browser": 70,
        glslify: 27,
        three: 63
    }],
    80: [function(e, t, n) {
        "use strict";
        var r = e("three");

        function i(e) {
            return e.replace(/#define\sGLSLIFY\s./, "")
        }

        function a(e) {
            return "#include <" + e + ">"
        }
        n.glslifyStrip = i, n.addChunk = function(e, t) {
            r.ShaderChunk[e] = i(t)
        }, n.insertBefore = function(e, t, n, r) {
            r && (t = a(t));
            return e.replace(t, i(n) + "\n" + t)
        }, n.insertAfter = function(e, t, n, r) {
            r && (t = a(t));
            return e.replace(t, t + "\n" + i(n) + "\n")
        }, n.replace = function(e, t, n, r) {
            r && (t = a(t));
            return e.replace(t, "\n" + i(n) + "\n")
        }
    }, {
        three: 63
    }],
    81: [function(e, t, n) {
        "use strict";
        var r = e("three");

        function i(e) {
            new r.DataTexture(new Uint8Array(e)).format = r.RGBAFormat
        }
        n.init = function() {
            n.blackTexture = i([0, 0, 0, 1]), n.whiteTexture = i([1, 1, 1, 1]), n.transparentTexture = i([0, 0, 0, 0])
        }, n.blackTexture = null, n.whiteTexture = null, n.transparentTexture = null
    }, {
        three: 63
    }],
    82: [function(e, t, n) {
        "use strict";
        var r, i, a, o, s = e("@babel/runtime/helpers/interopRequireDefault")(e("./ui/ui")),
            u = e("./core/browser"),
            l = e("./core/settings"),
            c = e("./core/properties"),
            h = e("./helpers/fboHelper"),
            d = e("./helpers/textureHelper"),
            f = e("./helpers/shaderHelper"),
            p = e("./input/input"),
            v = e("./audios/audios"),
            m = e("./post/Postprocessing"),
            g = e("./post/smaa/Smaa"),
            y = e("./post/bloom/Bloom"),
            _ = e("./post/bokeh/Bokeh"),
            x = e("./post/cameraShakeBlur/CameraShakeBlur"),
            b = e("./post/final/Final"),
            w = e("./controls/cameraControls"),
            T = e("./visuals/visuals"),
            M = e("three"),
            S = e("glslify"),
            E = e("mout/object/mixIn"),
            A = e("./loaders/BufItem"),
            L = e("./loaders/TextureItem"),
            C = e("./effects/blueNoise/blueNoise"),
            R = e("./effects/mipmapper/Mipmapper"),
            k = +new Date / 1e3;

        function P(e) {
            E(l, e), l.USE_WEBGL2 || g.updateTextures(), v.init(), w.init(), T.init(), s.default.init(), i.add(T.container), c.hasInitialized = !0, D(c.rawWidth, c.rawHeight), l.SKIP_ANIMATION ? c.showAnimation = 1 : gsap.to(c, {
                    showAnimation: 1,
                    duration: 1
                }), s.default.start(),
                function() {
                    if (l.LOOK_DEV_MODE && window.dat) {
                        var e = new dat.GUI,
                            t = e.addFolder("bloom");
                        t.add(c, "bloomAmount", 0, 5, 1e-5).listen(), t.add(c, "bloomRadius", -1, 1, 1e-5).listen(), t.add(c, "bloomThreshold", 0, 1, 1e-5).listen(), t.add(c, "bloomSmoothWidth", 0, 2, 1e-5).listen(), t.add(c, "haloWidth", 0, 2, 1e-5).listen(), t.add(c, "haloRGBShift", 0, .2, 1e-5).listen(), t.add(c, "haloStrength", 0, 3, 1e-5).listen(), t.add(c, "haloMaskInner", 0, 1, 1e-5).listen(), t.add(c, "haloMaskOuter", 0, 1, 1e-5).listen(), t.open();
                        var n = e.addFolder("color");
                        n.add(c, "vignetteFrom", 0, 3, 1e-5).listen(), n.add(c, "vignetteTo", 0, 3, 1e-5).listen(), n.addColor(c, "vignetteColorHex").listen(), n.add(c, "saturation", 0, 3, 1e-5).listen(), n.add(c, "contrast", -1, 3, 1e-5).listen(), n.add(c, "brightness", 0, 2, 1e-5).listen(), n.addColor(c, "tintColorHex").listen(), n.add(c, "tintOpacity", 0, 1, 1e-5).listen(), n.open();
                        var r = e.addFolder("bokeh");
                        r.add(c, "bokehAmount", 0, 1, 1e-5).listen(), r.add(c, "bokehFNumber", 1e-4, 1, 1e-5).listen(), r.add(c, "bokehFocusDistance", 0, 20, 1e-5).listen(), r.add(c, "bokehFocalLength", 0, 3, 1e-5).listen(), r.add(c, "bokehKFilmHeight", 1e-5, 90, 1e-5).listen(), r.add(c.bokeh, "quality", 0, 3, 1).listen(), r.open()
                    }
                }()
        }

        function D(e, t) {
            if (c.isStageReady) {
                var n = u.isMobile ? Math.min(1.25, l.DPR) : l.DPR,
                    i = e * n,
                    s = t * n;
                if (i * s > l.MAX_PIXEL_COUNT) {
                    var h = i / s;
                    s = Math.sqrt(l.MAX_PIXEL_COUNT / h), i = Math.ceil(s * h), s = Math.ceil(s), c.final.useBicubicOut = !0
                } else c.final.useBicubicOut = !1;
                c.rawWidth = e, c.rawHeight = t, c.width = i, c.height = s, c.resolution.set(i, s), a.aspect = i / s, a.updateProjectionMatrix(), r.setSize(i, s), o.setSize(i, s), l.canvas.style.width = e + "px", l.canvas.style.height = t + "px", T.resize(i, s)
            }
        }

        function I() {
            D(window.innerWidth, window.innerHeight)
        }

        function O() {
            var e, t;
            requestAnimationFrame(O), e = +new Date / 1e3, t = e - k, k = e, c.isStageReady && (t = Math.min(1 / 30, t), c.dt = t, c.time += t, c.sharedUniforms.u_time.value += t, c.cameraLookX += (p.mouseXY.y * c.cameraLookStrength - c.cameraLookX) * c.cameraLookEaseDamp, c.cameraLookY += (-p.mouseXY.x * c.cameraLookStrength - c.cameraLookY) * c.cameraLookEaseDamp, c.bgColor.setStyle(c.bgColorHex), r.setClearColor(c.bgColor, 1), w.update(t * c.visualTimeScale), C.update(t), s.default.update(t), c.hasInitialized && T.update(t * c.visualTimeScale), c.bloom.amount = c.bloomAmount, c.bloom.radius = c.bloomRadius, c.bloom.threshold = c.bloomThreshold, c.bloom.smoothWidth = c.bloomSmoothWidth, c.bloom.haloWidth = .03 * Math.cos(c.time) + c.haloWidth, c.bloom.haloRGBShift = c.haloRGBShift, c.bloom.haloStrength = c.haloStrength, c.bloom.haloMaskInner = c.haloMaskInner, c.bloom.haloMaskOuter = c.haloMaskOuter, c.final.vignetteFrom = c.vignetteFrom, c.final.vignetteTo = c.vignetteTo, c.final.vignetteColor.setStyle(c.vignetteColorHex), c.final.saturation = c.saturation, c.final.contrast = c.contrast, c.final.brightness = c.brightness, c.final.tintColor.setStyle(c.tintColorHex), c.final.tintOpacity = c.tintOpacity, c.final.bgColor.setStyle(c.bgColorHex), c.final.opacity = c.opacity, c.final.cacheBlendRatio = c.cacheBlendRatio, c.final.cacheBlendDirection = c.cacheBlendDirection, c.bokeh.amount = c.bokehAmount, c.bokeh.fNumber = c.bokehFNumber, c.bokeh.focusDistance = c.bokehFocusDistance, c.bokeh.focalLength = c.bokehFocalLength, c.bokeh.kFilmHeight = c.bokehKFilmHeight, c.cameraShakeBlur.amount = c.cameraShakeBlurAmount, o.render(i, a, !0), window.___debugTexture && h.debugTo(window.___debugTexture), v.update(t), p.update(t))
        }(function(e) {
            if (l.canvas = e, l.USE_WEBGL2 && window.WebGL2RenderingContext) try {
                return l.gl = e.getContext("webgl2", l.webglOpts), l.RENDER_TARGET_FLOAT_TYPE = M.FloatType, l.DATA_FLOAT_TYPE = M.FloatType, !0
            } catch (e) {}
            if (l.USE_WEBGL2 = !1, window.WebGLRenderingContext) try {
                var t = l.gl = e.getContext("webgl", l.webglOpts) || e.getContext("experimental-webgl", l.webglOpts);
                return (t.getExtension("OES_texture_float") || t.getExtension("OES_texture_half_float")) && t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS) ? (l.RENDER_TARGET_FLOAT_TYPE = u.isIOS || !t.getExtension("OES_texture_float") ? M.HalfFloatType : M.FloatType, l.DATA_FLOAT_TYPE = M.FloatType) : (l.USE_FLOAT_PACKING = !0, l.RENDER_TARGET_FLOAT_TYPE = l.DATA_FLOAT_TYPE = M.UnsignedByteType), !0
            } catch (e) {
                return !1
            }
            return !1
        })(document.getElementById("app")) && function() {
            document.documentElement.classList.add("is-" + (u.isMobile ? "mobile" : "desktop"));
            for (var e = 0; e < l.CROSS_ORIGINS.length; e++) {
                var t = l.CROSS_ORIGINS[e];
                n.loader.setCrossOrigin(t.baseUrl, t.value)
            }
            c.loader.register(A), c.loader.register(L), r = c.renderer = new M.WebGLRenderer({
                canvas: l.canvas,
                context: l.gl,
                stencil: !1,
                depth: !1,
                powerPreference: "high-performance"
            }), f.addChunk("textureBicubic", S(["#define GLSLIFY 1\nvec4 cubic(float v) {\n    vec4 n = vec4(1.0, 2.0, 3.0, 4.0) - v;\n    vec4 s = n * n * n;\n    float x = s.x;\n    float y = s.y - 4.0 * s.x;\n    float z = s.z - 4.0 * s.y + 6.0 * s.x;\n    float w = 6.0 - x - y - z;\n    return vec4(x, y, z, w);\n}\n\n// https://stackoverflow.com/questions/13501081/efficient-bicubic-filtering-code-in-glsl\nvec4 textureBicubic(sampler2D t, vec2 texCoords, vec2 textureSize) {\n   vec2 invTexSize = 1.0 / textureSize;\n   texCoords = texCoords * textureSize - 0.5;\n\n    vec2 fxy = fract(texCoords);\n    texCoords -= fxy;\n    vec4 xcubic = cubic(fxy.x);\n    vec4 ycubic = cubic(fxy.y);\n\n    vec4 c = texCoords.xxyy + vec2 (-0.5, 1.5).xyxy;\n\n    vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);\n    vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;\n\n    offset *= invTexSize.xxyy;\n\n    vec4 sample0 = texture2D(t, offset.xz);\n    vec4 sample1 = texture2D(t, offset.yz);\n    vec4 sample2 = texture2D(t, offset.xw);\n    vec4 sample3 = texture2D(t, offset.yw);\n\n    float sx = s.x / (s.x + s.y);\n    float sy = s.z / (s.z + s.w);\n\n    return mix(\n       mix(sample3, sample2, sx), mix(sample1, sample0, sx)\n    , sy);\n}\n\nvec4 textureBicubic(sampler2D t, vec2 texCoords, vec2 textureSize, vec4 clampRect) {\n   vec2 invTexSize = 1.0 / textureSize;\n   texCoords = texCoords * textureSize - 0.5;\n\n    vec2 fxy = fract(texCoords);\n    texCoords -= fxy;\n    vec4 xcubic = cubic(fxy.x);\n    vec4 ycubic = cubic(fxy.y);\n\n    vec4 c = texCoords.xxyy + vec2 (-0.5, 1.5).xyxy;\n\n    vec4 s = vec4(xcubic.xz + xcubic.yw, ycubic.xz + ycubic.yw);\n    vec4 offset = c + vec4 (xcubic.yw, ycubic.yw) / s;\n\n    offset *= invTexSize.xxyy;\n\n    vec4 sample0 = texture2D(t, clamp(offset.xz, clampRect.xy, clampRect.zw));\n    vec4 sample1 = texture2D(t, clamp(offset.yz, clampRect.xy, clampRect.zw));\n    vec4 sample2 = texture2D(t, clamp(offset.xw, clampRect.xy, clampRect.zw));\n    vec4 sample3 = texture2D(t, clamp(offset.yw, clampRect.xy, clampRect.zw));\n\n    float sx = s.x / (s.x + s.y);\n    float sy = s.z / (s.z + s.w);\n\n    return mix(\n       mix(sample3, sample2, sx), mix(sample1, sample0, sx)\n    , sy);\n}"])), i = c.scene = new M.Scene, a = c.camera = new M.PerspectiveCamera(60, 1, .1, 100), i.add(a), c.sharedUniforms.u_resolution.value = c.resolution = new M.Vector2, c.sharedUniforms.u_bgColor.value = c.bgColor = new M.Color, h.init(r, l.RENDER_TARGET_FLOAT_TYPE), d.init(), o = c.postprocessing = new m(!0), C.preInit(), R.init(), c.bokeh = new _, o.useDepthTexture && !u.isMobile && o.queue.push(c.bokeh), o.useDepthTexture && o.queue.push(c.cameraShakeBlur = new x), r.capabilities.isWebGL2 || (g.setTextures(c.loader.add(l.TEXTURE_PATH + "smaa-area.png", {
                weight: 32
            }).content, c.loader.add(l.TEXTURE_PATH + "smaa-search.png", {
                weight: .1
            }).content), o.queue.push(c.smaa = new g)), o.queue.push(c.bloom = new y), o.queue.push(c.final = new b), c.isStageReady = !0, v.preInit(), p.init(document.body, l.canvas), w.preInit(), T.preInit(), s.default.preInit(P), window.addEventListener("resize", I), I(), O()
        }()
    }, {
        "./audios/audios": 66,
        "./controls/cameraControls": 69,
        "./core/browser": 70,
        "./core/properties": 71,
        "./core/settings": 72,
        "./effects/blueNoise/blueNoise": 73,
        "./effects/mipmapper/Mipmapper": 77,
        "./helpers/fboHelper": 79,
        "./helpers/shaderHelper": 80,
        "./helpers/textureHelper": 81,
        "./input/input": 83,
        "./loaders/BufItem": 87,
        "./loaders/TextureItem": 88,
        "./post/Postprocessing": 91,
        "./post/bloom/Bloom": 92,
        "./post/bokeh/Bokeh": 93,
        "./post/cameraShakeBlur/CameraShakeBlur": 94,
        "./post/final/Final": 95,
        "./post/smaa/Smaa": 96,
        "./ui/ui": 102,
        "./visuals/visuals": 123,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    83: [function(e, t, n) {
        "use strict";
        var r = e("three"),
            i = e("min-signal");
        n.init = function() {
            var e = document;
            e.addEventListener("mousedown", s), e.addEventListener("touchstart", c(s)), e.addEventListener("mousemove", u), e.addEventListener("touchmove", c(u)), e.addEventListener("pointermove", u), e.addEventListener("mouseup", l), e.addEventListener("touchend", c(l)), e.addEventListener("mousewheel", o, !0), e.addEventListener("DOMMouseScroll", o, !0)
        }, n.update = function(e) {
            n.prevThroughElems.length = 0, n.prevThroughElems.concat(n.currThroughElems), n.wheelDelta = 0
        }, n.hasThroughElem = function(e, t) {
            var r = n[t + "ThroughElems"] || n.currThroughElems,
                i = r.length;
            for (; i--;)
                if (r[i] === e) return !0;
            return !1
        }, n.hasThroughElemWithClass = function(e, t) {
            var r = n[t + "ThroughElems"] || n.currThroughElems,
                i = r.length;
            for (; i--;)
                if (r[i].classList.contains(e)) return r[i];
            return null
        }, n.onDowned = new i, n.onMoved = new i, n.onUped = new i, n.onClicked = new i, n.onWheeled = new i, n.hasInteracted = !1, n.wasDown = !1, n.isDown = !0, n.downTime = 0, n.downXY = new r.Vector2, n.downPixelXY = new r.Vector2, n.hasClicked = !1, n.mouseXY = new r.Vector2, n.mousePixelXY = new r.Vector2, n.wheelDelta = 0, n.downThroughElems = [], n.currThroughElems = [], n.prevThroughElems = [], n.clickThroughElems = [];
        var a = 0;

        function o(e) {
            var t = +new Date;
            if (!(t - a < 35)) {
                a = t;
                var r = (e = e || _win.event).wheelDelta;
                r ? r /= 40 : r = -e.detail, n.wheelDelta += Math.min(3, Math.max(r, -3)), n.onWheeled.dispatch(e.target, n.wheelDelta)
            }
        }

        function s(e) {
            n.isDown = !0, n.downTime = +new Date, n.prevThroughElems.length = 0, f(e, n.downThroughElems), h(e, n.downXY), d(e, n.downPixelXY), n.onDowned.dispatch(e), u(e)
        }

        function u(e) {
            n.hasInteracted = !0, h(e, n.mouseXY), d(e, n.mousePixelXY), f(e, n.currThroughElems), n.onMoved.dispatch(e)
        }

        function l(e) {
            var t = e.clientX - n.downPixelXY.x,
                r = e.clientY - n.downPixelXY.y;
            Math.sqrt(t * t + r * r) < 40 && +new Date - n.downTime < 300 && (f(e, n.clickThroughElems), h(e, n.mouseXY), n.hasClicked = !0, n.onClicked.dispatch(e)), n.isDown = !1, n.onUped.dispatch(e)
        }

        function c(e, t) {
            return function(n) {
                t && n.usePreventDefault(), e.call(this, n.changedTouches[0] || n.touches[0])
            }
        }

        function h(e, t) {
            return t.set(e.clientX / window.innerWidth * 2 - 1, 1 - e.clientY / window.innerHeight * 2), t
        }

        function d(e, t) {
            t.set(e.clientX, e.clientY)
        }

        function f(e, t) {
            var n = e.target;
            for (t.length = 0; n.parentNode;) t.push(n), n = n.parentNode
        }
    }, {
        "min-signal": 30,
        three: 63
    }],
    84: [function(e, t, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.default = n.CustomEase = void 0;
        var r, i = e("./utils/paths.js"),
            a = e("gsap"),
            o = function() {
                a.gsap ? (a.gsap.registerEase("_CE", h.create), r = 1) : console.warn("Please gsap.registerPlugin(CustomEase)")
            },
            s = function(e) {
                return ~~(1e3 * e + (e < 0 ? -.5 : .5)) / 1e3
            },
            u = /[-+=\.]*\d+[\.e\-\+]*\d*[e\-\+]*\d*/gi,
            l = /[cLlsSaAhHvVtTqQ]/g,
            c = function e(t, n, r, i, a, o, s, u, l, c, h) {
                var d, f = (t + r) / 2,
                    p = (n + i) / 2,
                    v = (r + a) / 2,
                    m = (i + o) / 2,
                    g = (a + s) / 2,
                    y = (o + u) / 2,
                    _ = (f + v) / 2,
                    x = (p + m) / 2,
                    b = (v + g) / 2,
                    w = (m + y) / 2,
                    T = (_ + b) / 2,
                    M = (x + w) / 2,
                    S = s - t,
                    E = u - n,
                    A = Math.abs((r - s) * E - (i - u) * S),
                    L = Math.abs((a - s) * E - (o - u) * S);
                return c || (c = [{
                    x: t,
                    y: n
                }, {
                    x: s,
                    y: u
                }], h = 1), c.splice(h || c.length - 1, 0, {
                    x: T,
                    y: M
                }), (A + L) * (A + L) > l * (S * S + E * E) && (d = c.length, e(t, n, f, p, _, x, T, M, l, c, h), e(T, M, b, w, g, y, s, u, l, c, h + 1 + (c.length - d))), c
            },
            h = function() {
                function e(e, t, n) {
                    r || o(), this.id = e, this.setData(t, n)
                }
                var t = e.prototype;
                return t.setData = function(e, t) {
                    t = t || {};
                    var n, r, o, s, h, d, f, p, v, m = (e = e || "0,0,1,1").match(u),
                        g = 1,
                        y = [],
                        _ = [],
                        x = t.precision || 1,
                        b = x <= 1;
                    if (this.data = e, (l.test(e) || ~e.indexOf("M") && e.indexOf("C") < 0) && (m = (0, i.stringToRawPath)(e)[0]), 4 === (n = m.length)) m.unshift(0, 0), m.push(1, 1), n = 8;
                    else if ((n - 2) % 6) throw "Invalid CustomEase";
                    for (0 == +m[0] && 1 == +m[n - 2] || function(e, t, n) {
                            n || 0 === n || (n = Math.max(+e[e.length - 1], +e[1]));
                            var r, i = -1 * +e[0],
                                a = -n,
                                o = e.length,
                                s = 1 / (+e[o - 2] + i),
                                u = -t || (Math.abs(+e[o - 1] - +e[1]) < .01 * (+e[o - 2] - +e[0]) ? function(e) {
                                    var t, n = e.length,
                                        r = 1e20;
                                    for (t = 1; t < n; t += 6) + e[t] < r && (r = +e[t]);
                                    return r
                                }(e) + a : +e[o - 1] + a);
                            for (u = u ? 1 / u : -s, r = 0; r < o; r += 2) e[r] = (+e[r] + i) * s, e[r + 1] = (+e[r + 1] + a) * u
                        }(m, t.height, t.originY), this.segment = m, s = 2; s < n; s += 6) r = {
                        x: +m[s - 2],
                        y: +m[s - 1]
                    }, o = {
                        x: +m[s + 4],
                        y: +m[s + 5]
                    }, y.push(r, o), c(r.x, r.y, +m[s], +m[s + 1], +m[s + 2], +m[s + 3], o.x, o.y, 1 / (2e5 * x), y, y.length - 1);
                    for (n = y.length, s = 0; s < n; s++) f = y[s], p = y[s - 1] || f, (f.x > p.x || p.y !== f.y && p.x === f.x || f === p) && f.x <= 1 ? (p.cx = f.x - p.x, p.cy = f.y - p.y, p.n = f, p.nx = f.x, b && s > 1 && Math.abs(p.cy / p.cx - y[s - 2].cy / y[s - 2].cx) > 2 && (b = 0), p.cx < g && (p.cx ? g = p.cx : (p.cx = .001, s === n - 1 && (p.x -= .001, g = Math.min(g, .001), b = 0)))) : (y.splice(s--, 1), n--);
                    if (h = 1 / (n = 1 / g + 1 | 0), d = 0, f = y[0], b) {
                        for (s = 0; s < n; s++) v = s * h, f.nx < v && (f = y[++d]), r = f.y + (v - f.x) / f.cx * f.cy, _[s] = {
                            x: v,
                            cx: h,
                            y: r,
                            cy: 0,
                            nx: 9
                        }, s && (_[s - 1].cy = r - _[s - 1].y);
                        _[n - 1].cy = y[y.length - 1].y - r
                    } else {
                        for (s = 0; s < n; s++) f.nx < s * h && (f = y[++d]), _[s] = f;
                        d < y.length - 1 && (_[s - 1] = y[y.length - 2])
                    }
                    return this.ease = function(e) {
                        var t = _[e * n | 0] || _[n - 1];
                        return t.nx < e && (t = t.n), t.y + (e - t.x) / t.cx * t.cy
                    }, this.ease.custom = this, this.id && a.gsap.registerEase(this.id, this.ease), this
                }, t.getSVGData = function(t) {
                    return e.getSVGData(this, t)
                }, e.create = function(t, n, r) {
                    return new e(t, n, r).ease
                }, e.register = function(e) {
                    o()
                }, e.get = function(e) {
                    return a.gsap.parseEase(e)
                }, e.getSVGData = function(t, n) {
                    var r, o, u, l, c, h, d, f, p, v, m = (n = n || {}).width || 100,
                        g = n.height || 100,
                        y = n.x || 0,
                        _ = (n.y || 0) + g,
                        x = a.gsap.utils.toArray(n.path)[0];
                    if (n.invert && (g = -g, _ = 0), "string" == typeof t && (t = a.gsap.parseEase(t)), t.custom && (t = t.custom), t instanceof e) r = (0, i.rawPathToString)((0, i.transformRawPath)([t.segment], m, 0, 0, -g, y, _));
                    else {
                        for (r = [y, _], l = 1 / (d = Math.max(5, 200 * (n.precision || 1))), f = 5 / (d += 2), p = s(y + l * m), o = ((v = s(_ + t(l) * -g)) - _) / (p - y), u = 2; u < d; u++) c = s(y + u * l * m), h = s(_ + t(u * l) * -g), (Math.abs((h - v) / (c - p) - o) > f || u === d - 1) && (r.push(p, v), o = (h - v) / (c - p)), p = c, v = h;
                        r = "M" + r.join(",")
                    }
                    return x && x.setAttribute("d", r), r
                }, e
            }();
        n.default = n.CustomEase = h, a.gsap.registerPlugin(h), h.version = "3.6.1"
    }, {
        "./utils/paths.js": 85,
        gsap: 28
    }],
    85: [function(e, t, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.bezierToPoints = function e(t, n, r, i, a, o, s, u, l, c, h) {
            var f, p = (t + r) / 2,
                v = (n + i) / 2,
                m = (r + a) / 2,
                g = (i + o) / 2,
                y = (a + s) / 2,
                _ = (o + u) / 2,
                x = (p + m) / 2,
                b = (v + g) / 2,
                w = (m + y) / 2,
                T = (g + _) / 2,
                M = (x + w) / 2,
                S = (b + T) / 2,
                E = s - t,
                A = u - n,
                L = d((r - s) * A - (i - u) * E),
                C = d((a - s) * A - (o - u) * E);
            c || (c = [t, n, s, u], h = 2);
            c.splice(h || c.length - 2, 0, M, S), (L + C) * (L + C) > l * (E * E + A * A) && (f = c.length, e(t, n, p, v, x, b, M, S, l, c, h), e(M, S, w, T, y, _, s, u, l, c, h + 2 + (c.length - f)));
            return c
        }, n.cacheRawPathMeasurements = N, n.convertToPath = function(e, t) {
            var n, r, i, o, s, u, l, c, h, d, f, p, v, m, g, y, _, x, b, w, T, M, S = e.tagName.toLowerCase(),
                E = .552284749831;
            if ("path" === S || !e.getBBox) return e;
            u = k(e, "x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points"), M = D(e, P[S]), "rect" === S ? (o = M.rx, s = M.ry || o, r = M.x, i = M.y, d = M.width - 2 * o, f = M.height - 2 * s, n = o || s ? "M" + (y = (m = (v = r + o) + d) + o) + "," + (x = i + s) + " V" + (b = x + f) + " C" + [y, w = b + s * E, g = m + o * E, T = b + s, m, T, m - (m - v) / 3, T, v + (m - v) / 3, T, v, T, p = r + o * (1 - E), T, r, w, r, b, r, b - (b - x) / 3, r, x + (b - x) / 3, r, x, r, _ = i + s * (1 - E), p, i, v, i, v + (m - v) / 3, i, m - (m - v) / 3, i, m, i, g, i, y, _, y, x].join(",") + "z" : "M" + (r + d) + "," + i + " v" + f + " h" + -d + " v" + -f + " h" + d + "z") : "circle" === S || "ellipse" === S ? ("circle" === S ? c = (o = s = M.r) * E : (o = M.rx, c = (s = M.ry) * E), n = "M" + ((r = M.cx) + o) + "," + (i = M.cy) + " C" + [r + o, i + c, r + (l = o * E), i + s, r, i + s, r - l, i + s, r - o, i + c, r - o, i, r - o, i - c, r - l, i - s, r, i - s, r + l, i - s, r + o, i - c, r + o, i].join(",") + "z") : "line" === S ? n = "M" + M.x1 + "," + M.y1 + " L" + M.x2 + "," + M.y2 : "polyline" !== S && "polygon" !== S || (n = "M" + (r = (h = (e.getAttribute("points") + "").match(a) || []).shift()) + "," + (i = h.shift()) + " L" + h.join(","), "polygon" === S && (n += "," + r + "," + i + "z"));
            u.setAttribute("d", V(u._gsRawPath = z(n))), t && e.parentNode && (e.parentNode.insertBefore(u, e), e.parentNode.removeChild(e));
            return u
        }, n.copyRawPath = C, n.flatPointsToSegment = function(e, t) {
            void 0 === t && (t = 1);
            for (var n = e[0], r = 0, i = [n, r], a = 2; a < e.length; a += 2) i.push(n, r, e[a], r = (e[a] - n) * t / 2, n = e[a], -r);
            return i
        }, n.getClosestData = function(e, t, n, i) {
            var a, o, s, u, l = {
                    j: 0,
                    i: 0,
                    t: 0
                },
                c = v;
            for (o = 0; o < e.length; o++)
                for (u = e[o], a = 0; a < u.length; a += 6) s = H(1, t, n, 0, 1, i || 20, u[a], u[a + 1], u[a + 2], u[a + 3], u[a + 4], u[a + 5], u[a + 6], u[a + 7]), c > r && (c = r, l.j = o, l.i = a, l.t = s);
            return l
        }, n.getPositionOnPath = function(e, t, n, r) {
            var i, a, o, s, u, l, c, h, d, f = e[0],
                p = r || {};
            (t < 0 || t > 1) && (t = w(t));
            if (e.length > 1) {
                for (o = e.totalLength * t, u = l = 0;
                    (u += e[l++].totalLength) < o;) f = e[l];
                t = (o - (s = u - f.totalLength)) / (u - s) || 0
            }
            i = f.samples, a = f.resolution, o = f.totalLength * t, l = f.lookup[t < 1 ? ~~(o / f.minLength) : f.lookup.length - 1] || 0, s = l ? i[l - 1] : 0, (u = i[l]) < o && (s = u, u = i[++l]);
            d = 1 - (c = 1 / a * ((o - s) / (u - s) + l % a) || 0), h = f[l = 6 * ~~(l / a)], p.x = T((c * c * (f[l + 6] - h) + 3 * d * (c * (f[l + 4] - h) + d * (f[l + 2] - h))) * c + h), p.y = T((c * c * (f[l + 7] - (h = f[l + 1])) + 3 * d * (c * (f[l + 5] - h) + d * (f[l + 3] - h))) * c + h), n && (p.angle = f.totalLength ? I(f, l, c >= 1 ? 1 - 1e-9 : c || 1e-9) : f.angle || 0);
            return p
        }, n.getRawPath = function(e) {
            var t, n = (e = m(e) && s.test(e) && document.querySelector(e) || e).getAttribute ? e : 0;
            if (n && (e = e.getAttribute("d"))) return n._gsPath || (n._gsPath = {}), (t = n._gsPath[e]) && !t._dirty ? t : n._gsPath[e] = z(e);
            return e ? m(e) ? z(e) : g(e[0]) ? [e] : e : console.warn("Expecting a <path> element or an SVG path data string")
        }, n.getRotationAtProgress = function(e, t) {
            var n = U(e, t >= 1 ? 1 - 1e-9 : t || 1e-9);
            return I(n.segment, n.i, n.t)
        }, n.pointsToSegment = function(e, t, n) {
            d(e[0] - e[2]) < 1e-4 && d(e[1] - e[3]) < 1e-4 && (e = e.slice(2));
            var r, i, a, o, s, u, l, v, m, g, y, _, x, b, w = e.length - 2,
                M = +e[0],
                S = +e[1],
                E = +e[2],
                A = +e[3],
                L = [M, S, M, S],
                C = E - M,
                R = A - S,
                k = Math.abs(e[w] - M) < .001 && Math.abs(e[w + 1] - S) < .001;
            isNaN(n) && (n = Math.PI / 10);
            k && (e.push(E, A), E = M, A = S, M = e[w - 2], S = e[w - 1], e.unshift(M, S), w += 4);
            for (t = t || 0 === t ? +t : 1, s = 2; s < w; s += 2) r = M, i = S, M = E, S = A, E = +e[s + 2], A = +e[s + 3], M === E && S === A || (_ = (u = C) * u + (v = R) * v, x = (C = E - M) * C + (R = A - S) * R, b = (l = E - r) * l + (m = A - i) * m, y = (a = Math.acos((_ + x - b) / f(4 * _ * x))) / Math.PI * t, g = f(_) * y, y *= f(x), M === r && S === i || (a > n ? (o = p(m, l), L.push(T(M - h(o) * g), T(S - c(o) * g), T(M), T(S), T(M + h(o) * y), T(S + c(o) * y))) : (o = p(v, u), L.push(T(M - h(o) * g), T(S - c(o) * g)), o = p(R, C), L.push(T(M), T(S), T(M + h(o) * y), T(S + c(o) * y)))));
            M !== E || S !== A || L.length < 4 ? L.push(T(E), T(A), T(E), T(A)) : L.length -= 2, k && (L.splice(0, 6), L.length = L.length - 6);
            return L
        }, n.rawPathToString = V, n.reverseSegment = R, n.simplifyPoints = function(e, t) {
            var n, r, i, a, o, s, u, l = parseFloat(e[0]),
                c = parseFloat(e[1]),
                h = [l, c],
                d = e.length - 2;
            for (t = Math.pow(t || 1, 2), n = 2; n < d; n += 2)(a = l - (r = parseFloat(e[n]))) * a + (o = c - (i = parseFloat(e[n + 1]))) * o > t && (h.push(r, i), l = r, c = i);
            return h.push(parseFloat(e[d]), parseFloat(e[d + 1])), u = h.length - 2, s = [h[0], h[1]], G(h, 0, u, t, s), s.push(h[u], h[u + 1]), s
        }, n.sliceRawPath = function(e, t, n) {
            n = y(n) ? 1 : M(n) || 0, t = M(t) || 0;
            var r = Math.max(0, ~~(d(n - t) - 1e-8)),
                i = C(e);
            t > n && (t = 1 - t, n = 1 - n, E(i), i.totalLength = 0);
            if (t < 0 || n < 0) {
                var a = Math.abs(~~Math.min(t, n)) + 1;
                t += a, n += a
            }
            i.totalLength || N(i);
            var o, s, u, l, c, h, f, p, v = n > 1,
                m = U(i, t, _, !0),
                g = U(i, n, x),
                b = g.segment,
                w = m.segment,
                T = g.segIndex,
                A = m.segIndex,
                R = g.i,
                k = m.i,
                P = A === T,
                D = R === k && P;
            if (v || r) {
                for (o = T < A || P && R < k || D && g.t < m.t, S(i, A, k, m.t) && (A++, o || (T++, D ? (g.t = (g.t - m.t) / (1 - m.t), R = 0) : P && (R -= k))), 1 - (n - t) < 1e-5 ? T = A - 1 : !g.t && T ? T-- : S(i, T, R, g.t) && o && A++, 1 === m.t && (A = (A + 1) % i.length), c = [], f = 1 + (h = i.length) * r, p = A, f += (h - A + T) % h, l = 0; l < f; l++) L(c, i[p++ % h]);
                i = c
            } else if (u = 1 === g.t ? 6 : F(b, R, g.t), t !== n)
                for (s = F(w, k, D ? m.t / g.t : m.t), P && (u += s), b.splice(R + u + 2), (s || k) && w.splice(0, k + s), l = i.length; l--;)(l < A || l > T) && i.splice(l, 1);
            else b.angle = I(b, R + u, 0), m = b[R += u], g = b[R + 1], b.length = b.totalLength = 0, b.totalPoints = i.totalPoints = 8, b.push(m, g, m, g, m, g, m, g);
            return i.totalLength = 0, i
        }, n.stringToRawPath = z, n.subdivideSegment = F, n.subdivideSegmentNear = function(e, t, n, i, a) {
            var o, s, u = n.length,
                l = v,
                c = 0,
                h = 0;
            for (i = i || 20, a = a || 3, s = 0; s < u; s += 6) o = H(1, e, t, 0, 1, i, n[s], n[s + 1], n[s + 2], n[s + 3], n[s + 4], n[s + 5], n[s + 6], n[s + 7]), l > r && (l = r, c = o, h = s);
            return o = H(a, e, t, c - .05, c + .05, i, n[h], n[h + 1], n[h + 2], n[h + 3], n[h + 4], n[h + 5], n[h + 6], n[h + 7]), F(n, h, o), h + 6
        }, n.transformRawPath = function(e, t, n, r, i, a, o) {
            var s, u, l, c, h, d = e.length;
            for (; --d > -1;)
                for (u = (s = e[d]).length, l = 0; l < u; l += 2) c = s[l], h = s[l + 1], s[l] = c * t + h * r + a, s[l + 1] = c * n + h * i + o;
            return e._dirty = 1, e
        };
        /*!
         * paths 3.6.1
         * https://greensock.com
         *
         * Copyright 2008-2021, GreenSock. All rights reserved.
         * Subject to the terms at https://greensock.com/standard-license or for
         * Club GreenSock members, the agreement issued with that membership.
         * @author: Jack Doyle, jack@greensock.com
         */
        var r, i = /[achlmqstvz]|(-?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
            a = /(?:(-)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
            o = /[\+\-]?\d*\.?\d+e[\+\-]?\d+/gi,
            s = /(^[#\.][a-z]|[a-y][a-z])/i,
            u = Math.PI / 180,
            l = 180 / Math.PI,
            c = Math.sin,
            h = Math.cos,
            d = Math.abs,
            f = Math.sqrt,
            p = Math.atan2,
            v = 1e8,
            m = function(e) {
                return "string" == typeof e
            },
            g = function(e) {
                return "number" == typeof e
            },
            y = function(e) {
                return void 0 === e
            },
            _ = {},
            x = {},
            b = 1e5,
            w = function(e) {
                return Math.round((e + v) % 1 * b) / b || (e < 0 ? 0 : 1)
            },
            T = function(e) {
                return Math.round(e * b) / b || 0
            },
            M = function(e) {
                return Math.round(1e10 * e) / 1e10 || 0
            },
            S = function(e, t, n, r) {
                var i = e[t],
                    a = 1 === r ? 6 : F(i, n, r);
                if (a && a + n + 2 < i.length) return e.splice(t, 0, i.slice(0, n + a + 2)), i.splice(0, n + a), 1
            },
            E = function(e, t) {
                var n = e.length;
                for (t || e.reverse(); n--;) e[n].reversed || R(e[n])
            },
            A = function(e, t) {
                return t.totalLength = e.totalLength, e.samples ? (t.samples = e.samples.slice(0), t.lookup = e.lookup.slice(0), t.minLength = e.minLength, t.resolution = e.resolution) : e.totalPoints && (t.totalPoints = e.totalPoints), t
            },
            L = function(e, t) {
                var n = e.length,
                    r = e[n - 1] || [],
                    i = r.length;
                n && t[0] === r[i - 2] && t[1] === r[i - 1] && (t = r.concat(t.slice(2)), n--), e[n] = t
            };

        function C(e) {
            for (var t = [], n = 0; n < e.length; n++) t[n] = A(e[n], e[n].slice(0));
            return A(e, t)
        }

        function R(e) {
            var t, n = 0;
            for (e.reverse(); n < e.length; n += 2) t = e[n], e[n] = e[n + 1], e[n + 1] = t;
            e.reversed = !e.reversed
        }
        var k = function(e, t) {
                var n, r = document.createElementNS("http://www.w3.org/2000/svg", "path"),
                    i = [].slice.call(e.attributes),
                    a = i.length;
                for (t = "," + t + ","; --a > -1;) n = i[a].nodeName.toLowerCase(), t.indexOf("," + n + ",") < 0 && r.setAttributeNS(null, n, i[a].nodeValue);
                return r
            },
            P = {
                rect: "rx,ry,x,y,width,height",
                circle: "r,cx,cy",
                ellipse: "rx,ry,cx,cy",
                line: "x1,x2,y1,y2"
            },
            D = function(e, t) {
                for (var n = t ? t.split(",") : [], r = {}, i = n.length; --i > -1;) r[n[i]] = +e.getAttribute(n[i]) || 0;
                return r
            };

        function I(e, t, n) {
            var r, i = e[t],
                a = e[t + 2],
                o = e[t + 4];
            return i += (a - i) * n, i += ((a += (o - a) * n) - i) * n, r = a + (o + (e[t + 6] - o) * n - a) * n - i, i = e[t + 1], i += ((a = e[t + 3]) - i) * n, i += ((a += ((o = e[t + 5]) - a) * n) - i) * n, T(p(a + (o + (e[t + 7] - o) * n - a) * n - i, r) * l)
        }

        function O(e, t, n) {
            t = t || 0, e.samples || (e.samples = [], e.lookup = []);
            var r, i, a, o, s, u, l, c, h, p, m, g, y, _, x, b, w, T = ~~e.resolution || 12,
                M = 1 / T,
                S = n ? t + 6 * n + 1 : e.length,
                E = e[t],
                A = e[t + 1],
                L = t ? t / 6 * T : 0,
                C = e.samples,
                R = e.lookup,
                k = (t ? e.minLength : v) || v,
                P = C[L + n * T - 1],
                D = t ? C[L - 1] : 0;
            for (C.length = R.length = 0, i = t + 2; i < S; i += 6) {
                if (a = e[i + 4] - E, o = e[i + 2] - E, s = e[i] - E, c = e[i + 5] - A, h = e[i + 3] - A, p = e[i + 1] - A, u = l = m = g = 0, d(a) < 1e-5 && d(c) < 1e-5 && d(s) + d(p) < 1e-5) e.length > 8 && (e.splice(i, 6), i -= 6, S -= 6);
                else
                    for (r = 1; r <= T; r++) u = l - (l = ((_ = M * r) * _ * a + 3 * (y = 1 - _) * (_ * o + y * s)) * _), m = g - (g = (_ * _ * c + 3 * y * (_ * h + y * p)) * _), (b = f(m * m + u * u)) < k && (k = b), D += b, C[L++] = D;
                E += a, A += c
            }
            if (P)
                for (P -= D; L < C.length; L++) C[L] += P;
            if (C.length && k)
                for (e.totalLength = w = C[C.length - 1] || 0, e.minLength = k, b = x = 0, r = 0; r < w; r += k) R[b++] = C[x] < r ? ++x : x;
            else e.totalLength = C[0] = 0;
            return t ? D - C[t / 2 - 1] : D
        }

        function N(e, t) {
            var n, r, i;
            for (i = n = r = 0; i < e.length; i++) e[i].resolution = ~~t || 12, r += e[i].length, n += O(e[i]);
            return e.totalPoints = r, e.totalLength = n, e
        }

        function F(e, t, n) {
            if (n <= 0 || n >= 1) return 0;
            var r = e[t],
                i = e[t + 1],
                a = e[t + 2],
                o = e[t + 3],
                s = e[t + 4],
                u = e[t + 5],
                l = r + (a - r) * n,
                c = a + (s - a) * n,
                h = i + (o - i) * n,
                d = o + (u - o) * n,
                f = l + (c - l) * n,
                p = h + (d - h) * n,
                v = s + (e[t + 6] - s) * n,
                m = u + (e[t + 7] - u) * n;
            return c += (v - c) * n, d += (m - d) * n, e.splice(t + 2, 4, T(l), T(h), T(f), T(p), T(f + (c - f) * n), T(p + (d - p) * n), T(c), T(d), T(v), T(m)), e.samples && e.samples.splice(t / 6 * e.resolution | 0, 0, 0, 0, 0, 0, 0, 0), 6
        }

        function U(e, t, n, r) {
            n = n || {}, e.totalLength || N(e), (t < 0 || t > 1) && (t = w(t));
            var i, a, o, s, u, l, c, h = 0,
                d = e[0];
            if (t)
                if (1 === t) c = 1, l = (d = e[h = e.length - 1]).length - 8;
                else {
                    if (e.length > 1) {
                        for (o = e.totalLength * t, u = l = 0;
                            (u += e[l++].totalLength) < o;) h = l;
                        t = (o - (s = u - (d = e[h]).totalLength)) / (u - s) || 0
                    }
                    i = d.samples, a = d.resolution, o = d.totalLength * t, s = (l = d.lookup[~~(o / d.minLength)] || 0) ? i[l - 1] : 0, (u = i[l]) < o && (s = u, u = i[++l]), c = 1 / a * ((o - s) / (u - s) + l % a), l = 6 * ~~(l / a), r && 1 === c && (l + 6 < d.length ? (l += 6, c = 0) : h + 1 < e.length && (l = c = 0, d = e[++h]))
                }
            else c = l = h = 0, d = e[0];
            return n.t = c, n.i = l, n.path = e, n.segment = d, n.segIndex = h, n
        }

        function B(e, t, n, r, i, a, o, s, l) {
            if (e !== s || t !== l) {
                n = d(n), r = d(r);
                var p = i % 360 * u,
                    v = h(p),
                    m = c(p),
                    g = Math.PI,
                    y = 2 * g,
                    _ = (e - s) / 2,
                    x = (t - l) / 2,
                    b = v * _ + m * x,
                    w = -m * _ + v * x,
                    T = b * b,
                    M = w * w,
                    S = T / (n * n) + M / (r * r);
                S > 1 && (n = f(S) * n, r = f(S) * r);
                var E = n * n,
                    A = r * r,
                    L = (E * A - E * M - A * T) / (E * M + A * T);
                L < 0 && (L = 0);
                var C = (a === o ? -1 : 1) * f(L),
                    R = C * (n * w / r),
                    k = C * (-r * b / n),
                    P = (e + s) / 2 + (v * R - m * k),
                    D = (t + l) / 2 + (m * R + v * k),
                    I = (b - R) / n,
                    O = (w - k) / r,
                    N = (-b - R) / n,
                    F = (-w - k) / r,
                    U = I * I + O * O,
                    B = (O < 0 ? -1 : 1) * Math.acos(I / f(U)),
                    z = (I * F - O * N < 0 ? -1 : 1) * Math.acos((I * N + O * F) / f(U * (N * N + F * F)));
                isNaN(z) && (z = g), !o && z > 0 ? z -= y : o && z < 0 && (z += y), B %= y, z %= y;
                var G, H = Math.ceil(d(z) / (y / 4)),
                    V = [],
                    W = z / H,
                    j = 4 / 3 * c(W / 2) / (1 + h(W / 2)),
                    q = v * n,
                    X = m * n,
                    Y = m * -r,
                    K = v * r;
                for (G = 0; G < H; G++) b = h(i = B + G * W), w = c(i), I = h(i += W), O = c(i), V.push(b - j * w, w + j * b, I + j * O, O - j * I, I, O);
                for (G = 0; G < V.length; G += 2) b = V[G], w = V[G + 1], V[G] = b * q + w * Y + P, V[G + 1] = b * X + w * K + D;
                return V[G - 2] = s, V[G - 1] = l, V
            }
        }

        function z(e) {
            var t, n, r, a, s, u, l, c, h, f, p, v, m, g, y, _ = (e + "").replace(o, (function(e) {
                    var t = +e;
                    return t < 1e-4 && t > -1e-4 ? 0 : t
                })).match(i) || [],
                x = [],
                b = 0,
                w = 0,
                T = 2 / 3,
                M = _.length,
                S = 0,
                E = "ERROR: malformed path: " + e,
                A = function(e, t, n, r) {
                    f = (n - e) / 3, p = (r - t) / 3, l.push(e + f, t + p, n - f, r - p, n, r)
                };
            if (!e || !isNaN(_[0]) || isNaN(_[1])) return console.log(E), x;
            for (t = 0; t < M; t++)
                if (m = s, isNaN(_[t]) ? u = (s = _[t].toUpperCase()) !== _[t] : t--, r = +_[t + 1], a = +_[t + 2], u && (r += b, a += w), t || (c = r, h = a), "M" === s) l && (l.length < 8 ? x.length -= 1 : S += l.length), b = c = r, w = h = a, l = [r, a], x.push(l), t += 2, s = "L";
                else if ("C" === s) l || (l = [0, 0]), u || (b = w = 0), l.push(r, a, b + 1 * _[t + 3], w + 1 * _[t + 4], b += 1 * _[t + 5], w += 1 * _[t + 6]), t += 6;
            else if ("S" === s) f = b, p = w, "C" !== m && "S" !== m || (f += b - l[l.length - 4], p += w - l[l.length - 3]), u || (b = w = 0), l.push(f, p, r, a, b += 1 * _[t + 3], w += 1 * _[t + 4]), t += 4;
            else if ("Q" === s) f = b + (r - b) * T, p = w + (a - w) * T, u || (b = w = 0), b += 1 * _[t + 3], w += 1 * _[t + 4], l.push(f, p, b + (r - b) * T, w + (a - w) * T, b, w), t += 4;
            else if ("T" === s) f = b - l[l.length - 4], p = w - l[l.length - 3], l.push(b + f, w + p, r + (b + 1.5 * f - r) * T, a + (w + 1.5 * p - a) * T, b = r, w = a), t += 2;
            else if ("H" === s) A(b, w, b = r, w), t += 1;
            else if ("V" === s) A(b, w, b, w = r + (u ? w - b : 0)), t += 1;
            else if ("L" === s || "Z" === s) "Z" === s && (r = c, a = h, l.closed = !0), ("L" === s || d(b - r) > .5 || d(w - a) > .5) && (A(b, w, r, a), "L" === s && (t += 2)), b = r, w = a;
            else if ("A" === s) {
                if (g = _[t + 4], y = _[t + 5], f = _[t + 6], p = _[t + 7], n = 7, g.length > 1 && (g.length < 3 ? (p = f, f = y, n--) : (p = y, f = g.substr(2), n -= 2), y = g.charAt(1), g = g.charAt(0)), v = B(b, w, +_[t + 1], +_[t + 2], +_[t + 3], +g, +y, (u ? b : 0) + 1 * f, (u ? w : 0) + 1 * p), t += n, v)
                    for (n = 0; n < v.length; n++) l.push(v[n]);
                b = l[l.length - 2], w = l[l.length - 1]
            } else console.log(E);
            return (t = l.length) < 6 ? (x.pop(), t = 0) : l[0] === l[t - 2] && l[1] === l[t - 1] && (l.closed = !0), x.totalPoints = S + t, x
        }

        function G(e, t, n, r, i) {
            var a, o, s, u, l, c, h, d, f, p, v, m, g = r,
                y = e[t],
                _ = e[t + 1],
                x = e[n],
                b = e[n + 1];
            for (o = t + 2; o < n; o += 2) u = e[o], l = e[o + 1], p = void 0, v = void 0, m = void 0, m = (f = b) - (h = _), ((v = (d = x) - (c = y)) || m) && ((p = ((u - c) * v + (l - h) * m) / (v * v + m * m)) > 1 ? (c = d, h = f) : p > 0 && (c += v * p, h += m * p)), (s = Math.pow(u - c, 2) + Math.pow(l - h, 2)) > g && (a = o, g = s);
            g > r && (a - t > 2 && G(e, t, a, r, i), i.push(e[a], e[a + 1]), n - a > 2 && G(e, a, n, r, i))
        }

        function H(e, t, n, i, a, o, s, u, l, c, h, d, f, p) {
            var m, g, y, _, x = (a - i) / o,
                b = 0,
                w = i;
            for (r = v; w <= a;)(m = (g = (_ = 1 - w) * _ * _ * s + 3 * _ * _ * w * l + 3 * _ * w * w * h + w * w * w * f - t) * g + (y = _ * _ * _ * u + 3 * _ * _ * w * c + 3 * _ * w * w * d + w * w * w * p - n) * y) < r && (r = m, b = w), w += x;
            return e > 1 ? H(e - 1, t, n, Math.max(b - x, 0), Math.min(b + x, 1), o, s, u, l, c, h, d, f, p) : b
        }

        function V(e) {
            g(e[0]) && (e = [e]);
            var t, n, r, i, a = "",
                o = e.length;
            for (n = 0; n < o; n++) {
                for (i = e[n], a += "M" + T(i[0]) + "," + T(i[1]) + " C", t = i.length, r = 2; r < t; r++) a += T(i[r++]) + "," + T(i[r++]) + " " + T(i[r++]) + "," + T(i[r++]) + " " + T(i[r++]) + "," + T(i[r]) + " ";
                i.closed && (a += "z")
            }
            return a
        }
    }, {}],
    86: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.splitText = n.byWord = n.byLetter = void 0;
        var i = r(e("@babel/runtime/helpers/toConsumableArray")),
            a = function(e, t) {
                var n = document.createElement("span");
                return n.textContent = e, n.style.setProperty("--index", t), n
            },
            o = function(e) {
                return (0, i.default)(e).map(a)
            };
        n.byLetter = o;
        var s = function(e) {
            return e.split(" ").map(a)
        };
        n.byWord = s;
        n.splitText = function() {
            document.querySelectorAll("[split-by]").forEach((function(e) {
                var t = e.getAttribute("split-by"),
                    n = null,
                    r = [],
                    a = 0;
                if (e.innerHTML = e.innerHTML.replace(/<a.+?<\/a>/g, (function(e) {
                        var t = "%" + a++ + "%";
                        return r[r.length] = e, t
                    })), "letter" === t ? n = o(e.textContent) : "word" === t && (n = s(e.textContent)), n) {
                    var u;
                    (u = e.firstChild).replaceWith.apply(u, (0, i.default)(n));
                    for (var l = e.innerHTML, c = 0; c < a; c++) l = l.replace("%" + c + "%", r[c]);
                    e.innerHTML = l
                }
            }))
        }
    }, {
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/toConsumableArray": 21
    }],
    87: [function(e, t, n) {
        "use strict";
        var r = e("../core/properties"),
            i = e("three"),
            a = r.loader.ITEM_CLASSES.xhr;

        function o(e, t) {
            e && (t.responseType = "arraybuffer", s.constructor.apply(this, arguments))
        }
        t.exports = o, o.type = "buf", o.extensions = ["buf"];
        var s = a.prototype,
            u = o.prototype = new a;
        u.constructor = o, u._onLoad = function() {
            if (!this.content) {
                for (var e = this.xmlhttp.response, t = new Uint32Array(e, 0, 1)[0], n = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(e, 4, t))), r = n.vertexCount, a = n.indexCount, o = 4 + t, u = new i.BufferGeometry, l = n.attributes, c = 0, h = l.length; c < h; c++) {
                    var d = l[c],
                        f = d.id,
                        p = "indices" === f ? a : r,
                        v = d.componentSize,
                        m = window[d.storageType],
                        g = new m(e, o, p * v),
                        y = m.BYTES_PER_ELEMENT,
                        _ = void 0;
                    if (d.needsPack) {
                        var x = d.packedComponents,
                            b = x.length,
                            w = 1 << 8 * y,
                            T = 0 === d.storageType.indexOf("Int") ? .5 * w : 0,
                            M = 1 / w;
                        _ = new Float32Array(p * v);
                        for (var S = 0, E = 0; S < p; S++)
                            for (var A = 0; A < b; A++) {
                                var L = x[A];
                                _[E] = (g[E] + T) * M * L.delta + L.from, E++
                            }
                    } else _ = g;
                    "normal" === f && !0, "indices" === f ? u.setIndex(new i.BufferAttribute(_, 1)) : u.setAttribute(f, new i.BufferAttribute(_, v)), o += p * v * y
                }
                this.content = u
            }
            this.xmlhttp = void 0, s._onLoad.call(this)
        }, o.retrieve = function() {
            return !1
        }
    }, {
        "../core/properties": 71,
        three: 63
    }],
    88: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault")(e("../core/properties")),
            i = e("three"),
            a = r.default.loader.ITEM_CLASSES.image,
            o = a.prototype.constructor;

        function s(e, t) {
            if (e) {
                var n = t.content || new i.Texture(new Image);
                switch (t.content = n.image, n.minFilter = t.minFilter || i.LinearMipMapLinearFilter, n.minFilter) {
                    case i.NearestMipMapNearestFilter:
                    case i.NearestMipMapLinearFilter:
                    case i.LinearMipMapNearestFilter:
                    case i.LinearMipMapLinearFilter:
                        n.generateMipmaps = !0, n.anisotropy = t.anisotropy || r.default.renderer.capabilities.getMaxAnisotropy();
                        break;
                    default:
                        n.generateMipmaps = !1
                }
                n.flipY = void 0 === t.flipY || t.flipY, t.wrap ? n.wrapS = n.wrapT = t.wrap : (t.wrapS && (n.wrapS = t.wrapS), t.wrapT && (n.wrapT = t.wrapT)), u.constructor.apply(this, arguments), this.content = n
            }
        }
        t.exports = s, s.type = "texture", s.extensions = [];
        var u = a.prototype,
            l = s.prototype = new a;
        l.constructor = s, l.load = function() {
            o.prototype.load.apply(this, arguments);
            var e = this.content.image;
            e.onload = this.boundOnLoad, e.src = this.url
        }, l._onLoad = function() {
            delete this.content.image.onload, this.width = this.content.image.width, this.height = this.content.image.height, this.content.needsUpdate = !0, o.prototype._onLoad.call(this)
        }, s.retrieve = function() {
            return !1
        }
    }, {
        "../core/properties": 71,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        three: 63
    }],
    89: [function(e, t, n) {
        "use strict";
        var r = e("three");

        function i() {
            this.position = new r.Vector3, this.rotation = new r.Quaternion, this.scale = new r.Vector3(1, 1, 1), this.matrix = new r.Matrix4, this.enablePositionNoise = !0, this.enableRotationNoise = !0, this.positionFrequency = .25, this.rotationFrequency = .25, this.positionAmplitude = .3, this.rotationAmplitude = .003, this.positionScale = new r.Vector3(1, 1, 1), this.rotationScale = new r.Vector3(1, 1, 0), this.positionFractalLevel = 4, this.rotationFractalLevel = 4, this.times = new Float32Array(6), this.rehash()
        }
        t.exports = i;
        var a = i.prototype;
        a.rehash = function() {
            for (var e = 0; e < 6; e++) this.times[e] = -1e4 * Math.random()
        }, a.update = function(e) {
            var t;
            if (e = void 0 === e ? 1e3 / 60 : e, this.enablePositionNoise) {
                for (t = 0; t < 3; t++) this.times[t] += this.positionFrequency * e;
                s.set(c(this.times[0], this.positionFractalLevel), c(this.times[1], this.positionFractalLevel), c(this.times[2], this.positionFractalLevel)), s.multiply(this.positionScale), s.multiplyScalar(this.positionAmplitude * u), this.position.copy(s)
            }
            if (this.enableRotationNoise) {
                for (t = 0; t < 3; t++) this.times[t + 3] += this.rotationFrequency * e;
                s.set(c(this.times[3], this.rotationFractalLevel), c(this.times[4], this.rotationFractalLevel), c(this.times[5], this.rotationFractalLevel)), s.multiply(this.rotationScale), s.multiplyScalar(this.rotationAmplitude * u), o.set(s.x, s.y, s.z), this.rotation.setFromEuler(o)
            }
            this.matrix.compose(this.position, this.rotation, this.scale)
        };
        var o = new r.Euler,
            s = new r.Vector3,
            u = 1 / .75;
        var l = new function() {
            for (var e = 1, t = 1, n = [], r = 0; r < 256; ++r) n.push(Math.random() - .5);
            var i = function(e, t, n) {
                return e * (1 - n) + t * n
            };
            return {
                getVal: function(r) {
                    var a = r * t,
                        o = Math.floor(a),
                        s = a - o,
                        u = s * s * (3 - 2 * s),
                        l = 255 & o,
                        c = l + 1 & 255;
                    return i(n[l], n[c], u) * e
                },
                setAmplitude: function(t) {
                    e = t
                },
                setScale: function(e) {
                    t = e
                }
            }
        };

        function c(e, t) {
            for (var n = 0, r = .5, i = 0; i < t; i++) n += r * l.getVal(e), e *= 2, r *= .5;
            return n
        }
    }, {
        three: 63
    }],
    90: [function(e, t, n) {
        "use strict";
        var r = e("three"),
            i = e("mout/object/deepMixIn"),
            a = e("../helpers/fboHelper");

        function o(e) {
            i(this, {
                uniforms: {
                    u_texture: {},
                    u_resolution: {
                        value: null
                    },
                    u_fullResolution: {
                        value: null
                    },
                    u_isVR: {
                        value: !1
                    }
                },
                defines: {},
                enabled: !0,
                vertexShader: "",
                fragmentShader: "",
                isRawMaterial: !0,
                depthTest: !1,
                depthWrite: !1,
                blending: r.NoBlending,
                transparent: !0
            }, e), this.vertexShader || (this.vertexShader = a.vertexShader), this.addRawShaderPrefix && this.isRawMaterial && (this.vertexShader = a.precisionPrefix + this.vertexShader, this.fragmentShader = a.precisionPrefix + this.fragmentShader), this.material = new(this.isRawMaterial ? r.RawShaderMaterial : r.ShaderMaterial)({
                uniforms: this.uniforms,
                vertexShader: this.vertexShader,
                fragmentShader: this.fragmentShader,
                defines: this.defines,
                depthTest: this.depthTest,
                depthWrite: this.depthWrite,
                blending: this.blending,
                transparent: this.transparent
            })
        }
        t.exports = o;
        var s = o.prototype;
        s.setPostprocessing = function(e) {
            this.uniforms.u_resolution.value = e.resolution
        }, s.dispose = function() {}, s.needsRender = function() {
            return !0
        }, s.render = function(e, t) {
            this.uniforms.u_texture.value = e.fromTexture, e.renderMaterial(this.material, t ? null : e.toRenderTarget), e.swap()
        }
    }, {
        "../helpers/fboHelper": 79,
        "mout/object/deepMixIn": 41,
        three: 63
    }],
    91: [function(e, t, n) {
        "use strict";
        var r = e("three"),
            i = e("../helpers/fboHelper"),
            a = e("min-signal");

        function o(e) {
            var t;
            (u || n.init(), this.width = 1, this.height = 1, this.scene = null, this.camera = null, this.resolution = new r.Vector2(0, 0), this.texelSize = new r.Vector2(0, 0), this.aspect = new r.Vector2(1, 1), this.onBeforeSceneRendered = new a, this.onAfterSceneRendered = new a, this.onAfterRendered = new a, this.sceneRenderTarget = i.createMultisampleRenderTarget(1, 1, !0), this.sceneRenderTarget.depthBuffer = !0, this.fromRenderTarget = i.createRenderTarget(1, 1, !0), this.toRenderTarget = this.fromRenderTarget.clone(), this.useDepthTexture = !!e && (i.renderer.capabilities.isWebGL2 || i.renderer.extensions.get("WEBGL_depth_texture")), this.fromTexture = this.fromRenderTarget.texture, this.toTexture = this.toRenderTarget.texture, this.sceneTexture = this.sceneRenderTarget.texture, this.mesh = new r.Mesh, this.queue = [], this.sharedUniforms = {
                u_sceneTexture: {
                    value: this.sceneRenderTarget.texture
                },
                u_sceneDepthTexture: {
                    value: null
                },
                u_cameraNear: {
                    value: 0
                },
                u_cameraFar: {
                    value: 1
                },
                u_cameraFovRad: {
                    value: 1
                },
                u_resolution: {
                    value: this.resolution
                },
                u_texelSize: {
                    value: this.texelSize
                },
                u_aspect: {
                    value: this.aspect
                }
            }, this.useDepthTexture) && ((t = new r.DepthTexture).type = r.UnsignedShortType, i.renderer.capabilities.isWebGL2 && (t.type = r.UnsignedIntType), t.minFilter = r.NearestFilter, t.magFilter = r.NearestFilter, i.renderer.capabilities.isWebGL2 || (t.format = r.DepthStencilFormat, t.type = r.UnsignedInt248Type), this.sceneRenderTarget.depthTexture = t, this.depthTexture = this.sharedUniforms.u_sceneDepthTexture.value = t)
        }
        var s = o.prototype;
        n = t.exports = o, s.swap = function() {
            var e = this.fromRenderTarget;
            this.fromRenderTarget = this.toRenderTarget, this.toRenderTarget = e, this.fromTexture = this.fromRenderTarget.texture, this.toTexture = this.toRenderTarget.texture
        }, s.setSize = function(e, t) {
            this.width = e, this.height = t, this.resolution.set(e, t), this.texelSize.set(1 / e, 1 / t);
            var n = t / Math.sqrt(e * e + t * t) * 2;
            this.aspect.set(e / t * n, n), this.sceneRenderTarget.setSize(e, t), this.fromRenderTarget.setSize(e, t), this.toRenderTarget.setSize(e, t)
        }, s.dispose = function() {
            this.fromRenderTarget && this.fromRenderTarget.dispose();
            this.toRenderTarget && this.toRenderTarget.dispose();
            this.prevSceneRenderTarget && this.prevSceneRenderTarget.dispose();
            this.sceneRenderTarget && this.sceneRenderTarget.dispose()
        }, s.renderMaterial = function(e, t) {
            this.mesh.material = e, i.renderMesh(this.mesh, t)
        }, s.render = function(e, t, n) {
            this.scene = e, this.camera = t, this.mesh.geometry = i.renderer.xr.enabled ? l : u;
            var r, a = this.queue.filter(c),
                o = this.sharedUniforms;
            if (o.u_sceneTexture.value = this.sceneRenderTarget.texture, o.u_cameraNear.value = t.near, o.u_cameraFar.value = t.far, o.u_cameraFovRad.value = t.fov / 180 * Math.PI, this.onBeforeSceneRendered.dispatch(), a.length) {
                i.renderer.setRenderTarget(this.sceneRenderTarget), i.renderer.render(e, t), i.renderer.setRenderTarget(null), i.copy(this.sceneRenderTarget.texture, this.fromRenderTarget), this.onAfterSceneRendered.dispatch(this.sceneRenderTarget);
                var s = i.getColorState();
                i.renderer.autoClear = !1;
                for (var h = 0, d = a.length; h < d; h++) {
                    var f = h === d - 1 && n;
                    (r = a[h]).setPostprocessing(this), r.render(this, f)
                }
                i.setColorState(s)
            } else i.renderer.render(e, t), this.onAfterSceneRendered.dispatch();
            this.onAfterRendered.dispatch()
        };
        var u = n.geom = null,
            l = n.vrGeom = null;

        function c(e) {
            return e.enabled && e.needsRender()
        }
        n.init = function() {
            (u = n.geom = n.geom || new r.BufferGeometry).setAttribute("position", new r.BufferAttribute(new Float32Array([-1, -1, 0, 4, -1, 0, -1, 4, 0]), 3)), u.setAttribute("a_uvClamp", new r.BufferAttribute(new Float32Array([0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1]), 4)), (l = n.vrGeom = n.vrGeom || new r.BufferGeometry).setAttribute("position", new r.BufferAttribute(new Float32Array([-4, -1, 0, 0, -1, 0, 0, 4, 0, 0, -1, 0, 4, -1, 0, 0, 4, 0]), 3)), l.setAttribute("a_uvClamp", new r.BufferAttribute(new Float32Array([0, 0, .5, 1, 0, 0, .5, 1, 0, 0, .5, 1, .5, 0, 1, 1, .5, 0, 1, 1, .5, 0, 1, 1]), 4))
        }
    }, {
        "../helpers/fboHelper": 79,
        "min-signal": 30,
        three: 63
    }],
    92: [function(e, t, n) {
        "use strict";
        var r = e("../PostEffect"),
            i = e("../../helpers/fboHelper"),
            a = e("../../utils/math"),
            o = e("mout/object/merge"),
            s = e("three"),
            u = e("glslify");

        function l(e) {
            var t = (e = o({
                useHighPass: !0,
                ITERATION: 5,
                amount: 4,
                radius: .1,
                threshold: .2,
                smoothWidth: 1,
                haloWidth: .7,
                haloRGBShift: .03,
                haloStrength: .21,
                haloMaskInner: .3,
                haloMaskOuter: .5
            }, e)).ITERATION;
            this.directionX = new s.Vector2(1, 0), this.directionY = new s.Vector2(0, 1);
            var n = this.highPassRenderTarget = i.createRenderTarget(1, 1, !0);
            this.renderTargetsHorizontal = [], this.renderTargetsVertical = [], this.blurMaterials = [];
            for (var r = 0; r < t; r++) this.renderTargetsHorizontal.push(n.clone()), this.renderTargetsVertical.push(n.clone());
            for (var a = {
                    u_bloomStrength: {
                        value: 1
                    },
                    u_bloomWeights: {
                        value: []
                    }
                }, l = 0; l < t; l++) a["u_blurTexture" + l] = {
                value: this.renderTargetsVertical[l].texture
            };
            c.constructor.call(this, o({
                uniforms: a,
                defines: {
                    ITERATION: t
                },
                fragmentShader: i.precisionPrefix + u(["#define GLSLIFY 1\nvarying vec2 v_uv;\nuniform sampler2D u_texture;\n\nuniform sampler2D u_blurTexture0;\n#if ITERATION > 1\nuniform sampler2D u_blurTexture1;\n#endif\n#if ITERATION > 2\nuniform sampler2D u_blurTexture2;\n#endif\n#if ITERATION > 3\nuniform sampler2D u_blurTexture3;\n#endif\n#if ITERATION > 4\nuniform sampler2D u_blurTexture4;\n#endif\nuniform float u_bloomWeights[ITERATION];\n\n#include <common>\n\t// based on https://www.shadertoy.com/view/MslGR8\n\tvec3 dithering( vec3 color ) {\n\t\t//Calculate grid position\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\n\t\t//Shift the individual colors differently, thus making it even harder to see the dithering pattern\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\n\t\t//modify shift acording to grid position.\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\n\t\t//shift the color by dither_shift\n\t\treturn color + dither_shift_RGB;\n\t}\n\nvoid main() {\n\tvec4 c = texture2D(u_texture, v_uv);\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\n\tfloat v = dot( c.xyz, luma );\n\tfloat a = 1.0 - v;//max(0.0, 1.2 - v);//mix(1.0, 0.1, v);\n\n\tgl_FragColor = c + (\n\t\tu_bloomWeights[0] * texture2D(u_blurTexture0, v_uv)\n\t\t#if ITERATION > 1\n\t\t+ u_bloomWeights[1] * texture2D(u_blurTexture1, v_uv)\n\t\t#endif\n\t\t#if ITERATION > 2\n\t\t+ u_bloomWeights[2] * texture2D(u_blurTexture2, v_uv)\n\t\t#endif\n\t\t#if ITERATION > 3\n\t\t+ u_bloomWeights[3] * texture2D(u_blurTexture3, v_uv)\n\t\t#endif\n\t\t#if ITERATION > 4\n\t\t+ u_bloomWeights[4] * texture2D(u_blurTexture4, v_uv)\n\t\t#endif\n\t) * a;\n\n    gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n\tgl_FragColor.a = 1.0;\n}\n"]),
                blending: s.NoBlending
            }, e)), this.highPassMaterial = new s.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    },
                    u_luminosityThreshold: {
                        value: 1
                    },
                    u_smoothWidth: {
                        value: 1
                    },
                    u_haloWidth: {
                        value: 1
                    },
                    u_haloRGBShift: {
                        value: 1
                    },
                    u_haloStrength: {
                        value: 1
                    },
                    u_haloMaskInner: {
                        value: 1
                    },
                    u_haloMaskOuter: {
                        value: 1
                    },
                    u_texelSize: null,
                    u_aspect: null
                },
                vertexShader: i.precisionPrefix + i.vertexShader,
                fragmentShader: i.precisionPrefix + u(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nuniform float u_luminosityThreshold;\nuniform float u_smoothWidth;\n\n#ifdef USE_HALO\nuniform vec2 u_texelSize;\nuniform vec2 u_aspect;\nuniform float u_haloWidth;\nuniform float u_haloRGBShift;\nuniform float u_haloStrength;\nuniform float u_haloMaskInner;\nuniform float u_haloMaskOuter;\n#endif\n\nvarying vec2 v_uv;\n\nvoid main() {\n\n\tvec4 texel = texture2D( u_texture, v_uv );\n\tvec3 luma = vec3( 0.299, 0.587, 0.114 );\n\tfloat v = dot( texel.xyz, luma );\n\tvec4 outputColor = vec4(0.0, 0.0, 0.0, 1.0);\n\tfloat alpha = smoothstep( u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v );\n\toutputColor = mix( outputColor, texel, alpha );\n\tgl_FragColor = vec4(outputColor.rgb, 1.0);\n\n\t#ifdef USE_HALO\n\t\tvec2 toCenter = (v_uv - 0.5) * u_aspect;\n\n\t\tvec2 ghostUv = 1.0 - (toCenter + 0.5);\n\t\tvec2 ghostVec = (vec2(0.5) - ghostUv);\n\n\t\tvec2 direction = normalize(ghostVec);\n\t\tvec2 haloVec = direction * u_haloWidth;\n\n\t\tvec3 distortion = vec3(-u_texelSize.x, 0.0, u_texelSize.x) * u_haloRGBShift;\n\t\tvec2 uv = ghostUv + haloVec;\n\n\t\tgl_FragColor.rgb += vec3(\n\t\t\ttexture2D(u_texture, uv + direction * distortion.r).r,\n\t\t\ttexture2D(u_texture, uv + direction * distortion.g).g,\n\t\t\ttexture2D(u_texture, uv + direction * distortion.b).b\n\t\t) * u_haloStrength * smoothstep(u_haloMaskInner, u_haloMaskOuter, length(toCenter));\n\t#endif\n}\n"])
            });
            for (var h = 0; h < this.ITERATION; h++) {
                var d = 3 + 2 * h;
                this.blurMaterials[h] = new s.RawShaderMaterial({
                    uniforms: {
                        u_texture: {
                            value: null
                        },
                        u_resolution: {
                            value: new s.Vector2
                        },
                        u_direction: {
                            value: null
                        }
                    },
                    vertexShader: i.precisionPrefix + i.vertexShader,
                    fragmentShader: i.precisionPrefix + u(["#define GLSLIFY 1\nvarying vec2 v_uv;\nuniform sampler2D u_texture;\nuniform vec2 u_resolution;\nuniform vec2 u_direction;\n\nfloat gaussianPdf(in float x, in float sigma) {\n  return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n}\nvoid main() {\n  vec2 invSize = 1.0 / u_resolution;\n  float fSigma = float(SIGMA);\n  float weightSum = gaussianPdf(0.0, fSigma);\n  vec3 diffuseSum = texture2D( u_texture, v_uv).rgb * weightSum;\n  for( int i = 1; i < KERNEL_RADIUS; i ++ ) {\n    float x = float(i);\n    float w = gaussianPdf(x, fSigma);\n    vec2 uvOffset = u_direction * invSize * x;\n    vec3 sample1 = texture2D( u_texture, v_uv + uvOffset).rgb;\n    vec3 sample2 = texture2D( u_texture, v_uv - uvOffset).rgb;\n    diffuseSum += (sample1 + sample2) * w;\n    weightSum += 2.0 * w;\n  }\n  gl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n}\n"]),
                    defines: {
                        KERNEL_RADIUS: d,
                        SIGMA: d
                    }
                })
            }
        }
        var c = r.prototype,
            h = l.prototype = Object.create(c);
        h.constructor = l, h.setPostprocessing = function(e) {
            c.setPostprocessing.call(this, e);
            var t = e.width,
                n = e.height,
                r = Math.ceil(t / 2),
                i = Math.ceil(n / 2);
            this.highPassRenderTarget.setSize(r, i);
            for (var a = 0; a < this.ITERATION; a++) this.renderTargetsHorizontal[a].setSize(r, i), this.renderTargetsVertical[a].setSize(r, i), this.blurMaterials[a].uniforms.u_resolution.value = new s.Vector2(r, i), r = Math.ceil(r / 2), i = Math.ceil(i / 2)
        }, h.dispose = function() {
            this.highPassRenderTarget && this.highPassRenderTarget.dispose();
            for (var e = 0; e < this.ITERATION; e++) this.renderTargetsHorizontal[e] && this.renderTargetsHorizontal[e].dispose(), this.renderTargetsVertical[e] && this.renderTargetsVertical[e].dispose()
        }, h.needsRender = function() {
            return !!this.amount
        }, h.render = function(e, t) {
            var n = this.ITERATION;
            if (this.useHighPass) {
                this.highPassMaterial.uniforms.u_texture.value = e.fromTexture, this.highPassMaterial.uniforms.u_luminosityThreshold.value = this.threshold, this.highPassMaterial.uniforms.u_smoothWidth.value = this.smoothWidth, this.highPassMaterial.uniforms.u_haloWidth.value = this.haloWidth, this.highPassMaterial.uniforms.u_haloRGBShift.value = this.haloRGBShift * e.width, this.highPassMaterial.uniforms.u_haloStrength.value = this.haloStrength, this.highPassMaterial.uniforms.u_haloMaskInner.value = this.haloMaskInner, this.highPassMaterial.uniforms.u_haloMaskOuter.value = this.haloMaskOuter, this.highPassMaterial.uniforms.u_texelSize = e.sharedUniforms.u_texelSize, this.highPassMaterial.uniforms.u_aspect = e.sharedUniforms.u_aspect;
                var r = this.haloStrength > 0;
                this.highPassMaterial.defines.USE_HALO !== r && (this.highPassMaterial.defines.USE_HALO = r, this.highPassMaterial.needsUpdate = !0), e.renderMaterial(this.highPassMaterial, this.highPassRenderTarget)
            }
            for (var i = this.useHighPass ? this.highPassRenderTarget : e.fromRenderTarget, o = 0; o < n; o++) {
                var s = this.blurMaterials[o];
                s.uniforms.u_texture.value = i.texture, s.uniforms.u_direction.value = this.directionX, e.renderMaterial(s, this.renderTargetsHorizontal[o]), s.uniforms.u_texture.value = this.renderTargetsHorizontal[o].texture, s.uniforms.u_direction.value = this.directionY, e.renderMaterial(s, this.renderTargetsVertical[o]), i = this.renderTargetsVertical[o]
            }
            this.material.uniforms.u_texture.value = e.fromTexture;
            for (var u = 0; u < n; u++) {
                var l = (n - u) / n;
                this.uniforms.u_bloomWeights.value[u] = this.amount * a.mix(l, 1.2 - l, this.radius) / Math.pow(2, n - u - 1)
            }
            c.render.call(this, e, t)
        }, t.exports = l
    }, {
        "../../helpers/fboHelper": 79,
        "../../utils/math": 104,
        "../PostEffect": 90,
        glslify: 27,
        "mout/object/merge": 45,
        three: 63
    }],
    93: [function(e, t, n) {
        "use strict";
        var r = e("../PostEffect"),
            i = e("../../helpers/fboHelper"),
            a = (e("../../utils/math"), e("mout/object/mixIn")),
            o = e("glslify"),
            s = e("three");

        function u(e) {
            e = a({
                amount: 1,
                fNumber: .07,
                focusDistance: 5,
                useCameraFov: !1,
                focalLength: .463,
                kFilmHeight: 36,
                quality: 1,
                _prevQuality: -1,
                useFloatTexture: !1,
                _prevUseFloatTexture: null,
                useAdditionalBlur: !0,
                _halfWidth: 0,
                _halfHeight: 0
            }, e), this.sharedUniforms = {
                u_depthTexture: {
                    value: null
                },
                u_texelSize: {
                    value: null
                },
                u_focusDistance: {
                    value: 0
                },
                u_fNumber: {
                    value: 0
                },
                u_lensCoeff: {
                    value: 0
                },
                u_maxCoC: {
                    value: 0
                },
                u_rcpMaxCoC: {
                    value: 0
                },
                u_rcpAspect: {
                    value: 0
                },
                u_cameraNear: {
                    value: 0
                },
                u_cameraFar: {
                    value: 0
                },
                u_amount: {
                    value: 0
                },
                u_halfTexelSize: {
                    value: new s.Vector2
                }
            }, this.rt2 = i.createRenderTarget(1, 1, !0), this.rt3 = i.createRenderTarget(1, 1, !0), this.cocMaterial = new s.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    },
                    u_hashNoise: {
                        value: 0
                    },
                    u_depthTexture: this.sharedUniforms.u_depthTexture,
                    u_texelSize: this.sharedUniforms.u_texelSize,
                    u_focusDistance: this.sharedUniforms.u_focusDistance,
                    u_lensCoeff: this.sharedUniforms.u_lensCoeff,
                    u_maxCoC: this.sharedUniforms.u_maxCoC,
                    u_rcpMaxCoC: this.sharedUniforms.u_rcpMaxCoC,
                    u_cameraNear: this.sharedUniforms.u_cameraNear,
                    u_cameraFar: this.sharedUniforms.u_cameraFar
                },
                vertexShader: i.precisionPrefix + i.vertexShader,
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform sampler2D u_depthTexture;\nuniform vec2 u_texelSize;\nuniform float u_focusDistance;\nuniform float u_lensCoeff;\nuniform float u_maxCoC;\nuniform float u_rcpMaxCoC;\nuniform float u_cameraNear;\nuniform float u_cameraFar;\n\nvarying vec2 v_uv;\n\n// Max between three components\nfloat max3(vec3 xyz) { return max(xyz.x, max(xyz.y, xyz.z)); }\n\n#ifndef USE_FLOAT\nuniform float u_hashNoise;\nfloat hash13(vec3 p3) {\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n#endif\n\n// Fragment shader: Downsampling, prefiltering and CoC calculation\nfloat getViewZ (vec2 uv) {\n\tfloat depth = texture2D(u_depthTexture, uv).r * 2.0 - 1.0;\n\treturn 2.0 * u_cameraNear * u_cameraFar / (u_cameraFar + u_cameraNear - depth * (u_cameraFar - u_cameraNear));\n}\n\nvoid main () {\n    // Sample source colors.\n    vec3 duv = u_texelSize.xyx * vec3(0.5, 0.5, -0.5);\n    vec3 c0 = texture2D(u_texture, v_uv - duv.xy).rgb;\n    vec3 c1 = texture2D(u_texture, v_uv - duv.zy).rgb;\n    vec3 c2 = texture2D(u_texture, v_uv + duv.zy).rgb;\n    vec3 c3 = texture2D(u_texture, v_uv + duv.xy).rgb;\n\n    // Sample linear depths.\n\tvec2 uvAlt = v_uv; // yFlippedUV? https://github.com/keijiro/KinoBokeh/blob/master/Assets/Kino/Bokeh/Shader/Common.cginc\n    float d0 = getViewZ(uvAlt - duv.xy);\n    float d1 = getViewZ(uvAlt - duv.zy);\n    float d2 = getViewZ(uvAlt + duv.zy);\n    float d3 = getViewZ(uvAlt + duv.xy);\n    vec4 depths = vec4(d0, d1, d2, d3);\n\n    // Calculate the radiuses of CoCs at these sample points.\n    float focusDistance = u_focusDistance;\n    // focusDistance = getViewZ(vec2(0.5));\n    \n\n    vec4 cocs = (depths - focusDistance) * u_lensCoeff / depths;\n    cocs = clamp(cocs, -u_maxCoC, u_maxCoC);\n\n    // Premultiply CoC to reduce background bleeding.\n    vec4 weights = clamp(abs(cocs) * u_rcpMaxCoC, vec4(0.0), vec4(1.0));\n\n// #if defined(PREFILTER_LUMA_WEIGHT)\n    // Apply luma weights to reduce flickering.\n    // Inspired by goo.gl/j1fhLe goo.gl/mfuZ4h\n    weights.x *= 1.0 / (max3(c0) + 1.0);\n    weights.y *= 1.0 / (max3(c1) + 1.0);\n    weights.z *= 1.0 / (max3(c2) + 1.0);\n    weights.w *= 1.0 / (max3(c3) + 1.0);\n// #endif\n\n    // Weighted average of the color samples\n    vec3 avg = c0 * weights.x + c1 * weights.y + c2 * weights.z + c3 * weights.w;\n    avg /= dot(weights, vec4(1.0));\n\n    // Output CoC = average of CoCs\n    float coc = dot(cocs, vec4(0.25));\n\n    // Premultiply CoC again.\n    avg *= smoothstep(0.0, u_texelSize.y * 2.0, abs(coc));\n\n    gl_FragColor = vec4(avg, coc);\n    #ifndef USE_FLOAT\n    gl_FragColor = sign(gl_FragColor) * sqrt(abs(gl_FragColor));\n    gl_FragColor = gl_FragColor * 0.5 + 0.5 + hash13(vec3(gl_FragCoord.xy, u_hashNoise)) / 255.0;\n    #endif\n}"])
            }), this.simMaterial = new s.RawShaderMaterial({
                uniforms: {
                    u_cocTexture: {
                        value: null
                    },
                    u_cocTexelSize: this.sharedUniforms.u_halfTexelSize,
                    u_rcpAspect: this.sharedUniforms.u_rcpAspect,
                    u_maxCoC: this.sharedUniforms.u_maxCoC
                },
                vertexShader: i.precisionPrefix + i.vertexShader,
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\n#if QUALITY == 0\n\n// rings = 2\n// points per ring = 5\nconst int kSampleCount = 16;\nvec2 kDiskKernel[kSampleCount];\n\nvoid initKernel () {\n    kDiskKernel[0] = vec2(0.0,0.0);\n    kDiskKernel[1] = vec2(0.54545456,0.0);\n    kDiskKernel[2] = vec2(0.16855472,0.5187581);\n    kDiskKernel[3] = vec2(-0.44128203,0.3206101);\n    kDiskKernel[4] = vec2(-0.44128197,-0.3206102);\n    kDiskKernel[5] = vec2(0.1685548,-0.5187581);\n    kDiskKernel[6] = vec2(1.0,0.0);\n    kDiskKernel[7] = vec2(0.809017,0.58778524);\n    kDiskKernel[8] = vec2(0.30901697,0.95105654);\n    kDiskKernel[9] = vec2(-0.30901703,0.9510565);\n    kDiskKernel[10] = vec2(-0.80901706,0.5877852);\n    kDiskKernel[11] = vec2(-1.0,0.0);\n    kDiskKernel[12] = vec2(-0.80901694,-0.58778536);\n    kDiskKernel[13] = vec2(-0.30901664,-0.9510566);\n    kDiskKernel[14] = vec2(0.30901712,-0.9510565);\n    kDiskKernel[15] = vec2(0.80901694,-0.5877853);\n}\n\n#endif\n\n#if QUALITY == 1\n\n// rings = 3\n// points per ring = 7\nconst int kSampleCount = 22;\nvec2 kDiskKernel[kSampleCount];\n\nvoid initKernel () {\n    kDiskKernel[0] = vec2(0.0,0.0);\n    kDiskKernel[1] = vec2(0.53333336,0.0);\n    kDiskKernel[2] = vec2(0.3325279,0.4169768);\n    kDiskKernel[3] = vec2(-0.11867785,0.5199616);\n    kDiskKernel[4] = vec2(-0.48051673,0.2314047);\n    kDiskKernel[5] = vec2(-0.48051673,-0.23140468);\n    kDiskKernel[6] = vec2(-0.11867763,-0.51996166);\n    kDiskKernel[7] = vec2(0.33252785,-0.4169769);\n    kDiskKernel[8] = vec2(1.0,0.0);\n    kDiskKernel[9] = vec2(0.90096885,0.43388376);\n    kDiskKernel[10] = vec2(0.6234898,0.7818315);\n    kDiskKernel[11] = vec2(0.22252098,0.9749279);\n    kDiskKernel[12] = vec2(-0.22252095,0.9749279);\n    kDiskKernel[13] = vec2(-0.62349,0.7818314);\n    kDiskKernel[14] = vec2(-0.90096885,0.43388382);\n    kDiskKernel[15] = vec2(-1.0,0.0);\n    kDiskKernel[16] = vec2(-0.90096885,-0.43388376);\n    kDiskKernel[17] = vec2(-0.6234896,-0.7818316);\n    kDiskKernel[18] = vec2(-0.22252055,-0.974928);\n    kDiskKernel[19] = vec2(0.2225215,-0.9749278);\n    kDiskKernel[20] = vec2(0.6234897,-0.7818316);\n    kDiskKernel[21] = vec2(0.90096885,-0.43388376);\n}\n\n#endif\n\n#if QUALITY == 2\n\n// rings = 4\n// points per ring = 7\nconst int kSampleCount = 43;\nvec2 kDiskKernel[kSampleCount];\n\nvoid initKernel () {\n    kDiskKernel[0] = vec2(0.0,0.0);\n    kDiskKernel[1] = vec2(0.36363637,0.0);\n    kDiskKernel[2] = vec2(0.22672357,0.28430238);\n    kDiskKernel[3] = vec2(-0.08091671,0.35451925);\n    kDiskKernel[4] = vec2(-0.32762504,0.15777594);\n    kDiskKernel[5] = vec2(-0.32762504,-0.15777591);\n    kDiskKernel[6] = vec2(-0.08091656,-0.35451928);\n    kDiskKernel[7] = vec2(0.22672352,-0.2843024);\n    kDiskKernel[8] = vec2(0.6818182,0.0);\n    kDiskKernel[9] = vec2(0.614297,0.29582983);\n    kDiskKernel[10] = vec2(0.42510667,0.5330669);\n    kDiskKernel[11] = vec2(0.15171885,0.6647236);\n    kDiskKernel[12] = vec2(-0.15171883,0.6647236);\n    kDiskKernel[13] = vec2(-0.4251068,0.53306687);\n    kDiskKernel[14] = vec2(-0.614297,0.29582986);\n    kDiskKernel[15] = vec2(-0.6818182,0);\n    kDiskKernel[16] = vec2(-0.614297,-0.29582983);\n    kDiskKernel[17] = vec2(-0.42510656,-0.53306705);\n    kDiskKernel[18] = vec2(-0.15171856,-0.66472363);\n    kDiskKernel[19] = vec2(0.1517192,-0.6647235);\n    kDiskKernel[20] = vec2(0.4251066,-0.53306705);\n    kDiskKernel[21] = vec2(0.614297,-0.29582983);\n    kDiskKernel[22] = vec2(1.0,0.0);\n    kDiskKernel[23] = vec2(0.9555728,0.2947552);\n    kDiskKernel[24] = vec2(0.82623875,0.5633201);\n    kDiskKernel[25] = vec2(0.6234898,0.7818315);\n    kDiskKernel[26] = vec2(0.36534098,0.93087375);\n    kDiskKernel[27] = vec2(0.07473,0.9972038);\n    kDiskKernel[28] = vec2(-0.22252095,0.9749279);\n    kDiskKernel[29] = vec2(-0.50000006,0.8660254);\n    kDiskKernel[30] = vec2(-0.73305196,0.6801727);\n    kDiskKernel[31] = vec2(-0.90096885,0.43388382);\n    kDiskKernel[32] = vec2(-0.98883086,0.14904208);\n    kDiskKernel[33] = vec2(-0.9888308,-0.14904249);\n    kDiskKernel[34] = vec2(-0.90096885,-0.43388376);\n    kDiskKernel[35] = vec2(-0.73305184,-0.6801728);\n    kDiskKernel[36] = vec2(-0.4999999,-0.86602545);\n    kDiskKernel[37] = vec2(-0.222521,-0.9749279);\n    kDiskKernel[38] = vec2(0.07473029,-0.99720377);\n    kDiskKernel[39] = vec2(0.36534148,-0.9308736);\n    kDiskKernel[40] = vec2(0.6234897,-0.7818316);\n    kDiskKernel[41] = vec2(0.8262388,-0.56332);\n    kDiskKernel[42] = vec2(0.9555729,-0.29475483);\n}\n\n#endif\n\n#if QUALITY == 3\n\n// rings = 5\n// points per ring = 7\nconst int kSampleCount = 71;\nvec2 kDiskKernel[kSampleCount];\n\nvoid initKernel () {\n    kDiskKernel[0] = vec2(0,0);\n    kDiskKernel[1] = vec2(0.2758621,0.0);\n    kDiskKernel[2] = vec2(0.1719972,0.21567768);\n    kDiskKernel[3] = vec2(-0.061385095,0.26894566);\n    kDiskKernel[4] = vec2(-0.24854316,0.1196921);\n    kDiskKernel[5] = vec2(-0.24854316,-0.11969208);\n    kDiskKernel[6] = vec2(-0.061384983,-0.2689457);\n    kDiskKernel[7] = vec2(0.17199717,-0.21567771);\n    kDiskKernel[8] = vec2(0.51724136,0.0);\n    kDiskKernel[9] = vec2(0.46601835,0.22442262);\n    kDiskKernel[10] = vec2(0.32249472,0.40439558);\n    kDiskKernel[11] = vec2(0.11509705,0.50427306);\n    kDiskKernel[12] = vec2(-0.11509704,0.50427306);\n    kDiskKernel[13] = vec2(-0.3224948,0.40439552);\n    kDiskKernel[14] = vec2(-0.46601835,0.22442265);\n    kDiskKernel[15] = vec2(-0.51724136,0.0);\n    kDiskKernel[16] = vec2(-0.46601835,-0.22442262);\n    kDiskKernel[17] = vec2(-0.32249463,-0.40439564);\n    kDiskKernel[18] = vec2(-0.11509683,-0.5042731);\n    kDiskKernel[19] = vec2(0.11509732,-0.504273);\n    kDiskKernel[20] = vec2(0.32249466,-0.40439564);\n    kDiskKernel[21] = vec2(0.46601835,-0.22442262);\n    kDiskKernel[22] = vec2(0.7586207,0.0);\n    kDiskKernel[23] = vec2(0.7249173,0.22360738);\n    kDiskKernel[24] = vec2(0.6268018,0.4273463);\n    kDiskKernel[25] = vec2(0.47299224,0.59311354);\n    kDiskKernel[26] = vec2(0.27715522,0.7061801);\n    kDiskKernel[27] = vec2(0.056691725,0.75649947);\n    kDiskKernel[28] = vec2(-0.168809,0.7396005);\n    kDiskKernel[29] = vec2(-0.3793104,0.65698475);\n    kDiskKernel[30] = vec2(-0.55610836,0.51599306);\n    kDiskKernel[31] = vec2(-0.6834936,0.32915324);\n    kDiskKernel[32] = vec2(-0.7501475,0.113066405);\n    kDiskKernel[33] = vec2(-0.7501475,-0.11306671);\n    kDiskKernel[34] = vec2(-0.6834936,-0.32915318);\n    kDiskKernel[35] = vec2(-0.5561083,-0.5159932);\n    kDiskKernel[36] = vec2(-0.37931028,-0.6569848);\n    kDiskKernel[37] = vec2(-0.16880904,-0.7396005);\n    kDiskKernel[38] = vec2(0.056691945,-0.7564994);\n    kDiskKernel[39] = vec2(0.2771556,-0.7061799);\n    kDiskKernel[40] = vec2(0.47299215,-0.59311366);\n    kDiskKernel[41] = vec2(0.62680185,-0.4273462);\n    kDiskKernel[42] = vec2(0.72491735,-0.22360711);\n    kDiskKernel[43] = vec2(1.0,0.0);\n    kDiskKernel[44] = vec2(0.9749279,0.22252093);\n    kDiskKernel[45] = vec2(0.90096885,0.43388376);\n    kDiskKernel[46] = vec2(0.7818315,0.6234898);\n    kDiskKernel[47] = vec2(0.6234898,0.7818315);\n    kDiskKernel[48] = vec2(0.43388364,0.9009689);\n    kDiskKernel[49] = vec2(0.22252098,0.9749279);\n    kDiskKernel[50] = vec2(0.0,1.0);\n    kDiskKernel[51] = vec2(-0.22252095,0.9749279);\n    kDiskKernel[52] = vec2(-0.43388385,0.90096885);\n    kDiskKernel[53] = vec2(-0.62349,0.7818314);\n    kDiskKernel[54] = vec2(-0.7818317,0.62348956);\n    kDiskKernel[55] = vec2(-0.90096885,0.43388382);\n    kDiskKernel[56] = vec2(-0.9749279,0.22252093);\n    kDiskKernel[57] = vec2(-1.0,0.0);\n    kDiskKernel[58] = vec2(-0.9749279,-0.22252087);\n    kDiskKernel[59] = vec2(-0.90096885,-0.43388376);\n    kDiskKernel[60] = vec2(-0.7818314,-0.6234899);\n    kDiskKernel[61] = vec2(-0.6234896,-0.7818316);\n    kDiskKernel[62] = vec2(-0.43388346,-0.900969);\n    kDiskKernel[63] = vec2(-0.22252055,-0.974928);\n    kDiskKernel[64] = vec2(0.0,-1.0);\n    kDiskKernel[65] = vec2(0.2225215,-0.9749278);\n    kDiskKernel[66] = vec2(0.4338835,-0.90096897);\n    kDiskKernel[67] = vec2(0.6234897,-0.7818316);\n    kDiskKernel[68] = vec2(0.78183144,-0.62348986);\n    kDiskKernel[69] = vec2(0.90096885,-0.43388376);\n    kDiskKernel[70] = vec2(0.9749279,-0.22252086);\n}\n\n#endif\n\nuniform sampler2D u_cocTexture;\nuniform vec2 u_cocTexelSize;\n\n// Camera parameters\nuniform float u_rcpAspect;\nuniform float u_maxCoC;\n// uniform float u_rcpMaxCoC;\n\nvarying vec2 v_uv;\n\nvoid main () {\n\tinitKernel();\n\n\tvec4 samp0 = texture2D(u_cocTexture, v_uv);\n    #ifndef USE_FLOAT\n    samp0 = samp0 * 2.0 - 1.0;\n    samp0 = sign(samp0) * samp0 * samp0;\n    #endif\n\n    vec4 bgAcc = vec4(0.0); // Background: far field bokeh\n    vec4 fgAcc = vec4(0.0); // Foreground: near field bokeh\n\n    for (int si = 0; si < kSampleCount; si++) {\n        vec2 disp = kDiskKernel[si] * u_maxCoC;\n        float dist = length(disp);\n\n        vec2 duv = vec2(disp.x * u_rcpAspect, disp.y);\n        vec4 samp = texture2D(u_cocTexture, v_uv + duv);\n        #ifndef USE_FLOAT\n        samp = samp * 2.0 - 1.0;\n        samp = sign(samp) * samp * samp;\n        #endif\n\n        // BG: Compare CoC of the current sample and the center sample\n        // and select smaller one.\n        float bgCoC = max(min(samp0.a, samp.a), 0.0);\n\n        // Compare the CoC to the sample distance.\n        // Add a small margin to smooth out.\n        float margin = u_cocTexelSize.y * 2.0;\n        float bgWeight = clamp((bgCoC   - dist + margin) / margin, 0.0, 1.0);\n        float fgWeight = clamp((-samp.a - dist + margin) / margin, 0.0, 1.0);\n\n        // Cut influence from focused areas because they're darkened by CoC\n        // premultiplying. This is only needed for near field.\n        fgWeight *= step(u_cocTexelSize.y, -samp.a);\n\n        // Accumulation\n        bgAcc += vec4(samp.rgb, 1.0) * bgWeight;\n        fgAcc += vec4(samp.rgb, 1.0) * fgWeight;\n    }\n\n    // Get the weighted average.\n    // bgAcc.rgb /= bgAcc.a + (bgAcc.a == 0); // zero-div guard\n    // fgAcc.rgb /= fgAcc.a + (fgAcc.a == 0);\n    bgAcc.rgb /= bgAcc.a + step(bgAcc.a, 0.0); // zero-div guard\n    fgAcc.rgb /= fgAcc.a + step(fgAcc.a, 0.0);\n\n    // BG: Calculate the alpha value only based on the center CoC.\n    // This is a rather aggressive approximation but provides stable results.\n    bgAcc.a = smoothstep(u_cocTexelSize.y, u_cocTexelSize.y * 2.0, samp0.a);\n\n    // FG: Normalize the total of the weights.\n    fgAcc.a *= 3.14159265359 / float(kSampleCount);\n\n    // Alpha premultiplying\n    vec3 rgb = vec3(0.0);\n    rgb = mix(rgb, bgAcc.rgb, clamp(bgAcc.a, 0.0, 1.0));\n    rgb = mix(rgb, fgAcc.rgb, clamp(fgAcc.a, 0.0, 1.0));\n\n    // Combined alpha value\n    float alpha = (1.0 - clamp(bgAcc.a, 0.0, 1.0)) * (1.0 - clamp(fgAcc.a, 0.0, 1.0));\n\n    gl_FragColor = vec4(rgb, alpha);\n}"])
            }), this.blurMaterial = new s.RawShaderMaterial({
                uniforms: {
                    u_bokehTexture: {
                        value: null
                    },
                    u_bokehTexelSize: this.sharedUniforms.u_halfTexelSize
                },
                vertexShader: i.precisionPrefix + i.vertexShader,
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\nuniform sampler2D u_bokehTexture;\nuniform vec2 u_bokehTexelSize;\n\nvarying vec2 v_uv;\n\nvoid main () {\n    // 9-tap tent filter\n    vec4 duv = u_bokehTexelSize.xyxy * vec4(1.0, 1.0, -1.0, 0.0);\n    vec4 acc;\n\n    acc  = texture2D(u_bokehTexture, v_uv - duv.xy);\n    acc += texture2D(u_bokehTexture, v_uv - duv.wy) * 2.0;\n    acc += texture2D(u_bokehTexture, v_uv - duv.zy);\n\n    acc += texture2D(u_bokehTexture, v_uv + duv.zw) * 2.0;\n    acc += texture2D(u_bokehTexture, v_uv ) * 4.0;\n    acc += texture2D(u_bokehTexture, v_uv + duv.xw) * 2.0;\n\n    acc += texture2D(u_bokehTexture, v_uv + duv.zy);\n    acc += texture2D(u_bokehTexture, v_uv + duv.wy) * 2.0;\n    acc += texture2D(u_bokehTexture, v_uv + duv.xy);\n\n    gl_FragColor = acc * 0.0625;\n}"])
            }), l.constructor.call(this, a({
                uniforms: {
                    u_blurTexture: {
                        value: null
                    },
                    u_amount: this.sharedUniforms.u_amount
                },
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\nvarying vec2 v_uv;\nuniform sampler2D u_texture;\nuniform sampler2D u_blurTexture;\nuniform float u_amount;\n\nvoid main() {\n\tvec4 cs = texture2D(u_texture, v_uv);\n\tvec4 cb = texture2D(u_blurTexture, v_uv);\n\tvec3 rgb = cs.rgb * cb.a + cb.rgb;\n\n\tgl_FragColor =  mix(cs, vec4(rgb, cs.a), u_amount);\n}\n"]),
                blending: s.NoBlending
            }, e))
        }
        var l = r.prototype,
            c = u.prototype = Object.create(l);
        c.constructor = u, c.setPostprocessing = function(e) {
            l.setPostprocessing.call(this, e);
            var t = e.width,
                n = e.height,
                r = Math.ceil(t / 2),
                i = Math.ceil(n / 2);
            this._halfWidth = r, this._halfHeight = i, this.rt1 && this.rt1.setSize(r, i);
            this.rt2.setSize(r, i), this.rt3.setSize(r, i), this.sharedUniforms.u_halfTexelSize.value.set(1 / r, 1 / i)
        }, c.dispose = function() {
            this.rt1 && this.rt1.dispose();
            this.rt2.dispose(), this.rt3.dispose()
        }, c.needsRender = function() {
            return this.amount > 0
        }, c.render = function(e, t) {
            var n = this._prevQuality !== this.quality,
                r = this._prevUseFloatTexture !== this.useFloatTexture,
                a = this.useCameraFov ? (v = e.sharedUniforms.u_cameraFovRad.value, m = e.camera.getFilmHeight(), .5 * m / Math.tan(.5 * v)) : this.focalLength,
                o = this.focusDistance,
                u = this.fNumber,
                c = a * a / (u * (o - a) * this.kFilmHeight * 2),
                h = (d = e.height, f = this.quality, p = 4 * f + 6, Math.min(.05, p / d));
            var d, f, p;
            var v, m;
            this.sharedUniforms.u_amount.value = this.amount, this.sharedUniforms.u_texelSize.value = e.sharedUniforms.u_texelSize.value, this.sharedUniforms.u_depthTexture.value = e.sharedUniforms.u_sceneDepthTexture.value, this.sharedUniforms.u_cameraNear.value = e.sharedUniforms.u_cameraNear.value, this.sharedUniforms.u_cameraFar.value = e.sharedUniforms.u_cameraFar.value, this.sharedUniforms.u_focusDistance.value = o, this.sharedUniforms.u_fNumber.value = u, this.sharedUniforms.u_lensCoeff.value = c, this.sharedUniforms.u_maxCoC.value = h, this.sharedUniforms.u_rcpMaxCoC.value = 1 / h, this.sharedUniforms.u_rcpAspect.value = e.height / e.width, r && (this.rt1 && this.rt1.dispose(), this.rt1 = i.createRenderTarget(this._halfWidth, this._halfHeight, !0, !1, this.useFloatTexture));
            e.fromTexture.minFilter = e.fromTexture.magFilter = s.NearestFilter, r && (this.cocMaterial.defines.USE_FLOAT = this.useFloatTexture, this.cocMaterial.needsUpdate = !0);
            this.cocMaterial.uniforms.u_hashNoise.value = (this.cocMaterial.uniforms.u_hashNoise.value + 1.2415) % 100, this.cocMaterial.uniforms.u_texture.value = e.fromTexture, e.renderMaterial(this.cocMaterial, this.rt1), e.fromTexture.minFilter = e.fromTexture.magFilter = s.LinearFilter, this.simMaterial.defines.QUALITY = this.quality, this.simMaterial.uniforms.u_cocTexture.value = this.rt1.texture, n && (this.simMaterial.needsUpdate = !0);
            r && (this.simMaterial.defines.USE_FLOAT = this.useFloatTexture, this.simMaterial.needsUpdate = !0);
            e.renderMaterial(this.simMaterial, this.rt2), this.useAdditionalBlur && (this.blurMaterial.uniforms.u_bokehTexture.value = this.rt2.texture, e.renderMaterial(this.blurMaterial, this.rt3));
            this.material.uniforms.u_blurTexture.value = this.useAdditionalBlur ? this.rt3.texture : this.rt2.texture, this._prevQuality = this.quality, this._prevUseFloatTexture = this.useFloatTexture, l.render.call(this, e, t, e.fromTexture)
        }, t.exports = u
    }, {
        "../../helpers/fboHelper": 79,
        "../../utils/math": 104,
        "../PostEffect": 90,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    94: [function(e, t, n) {
        "use strict";
        var r = e("../PostEffect"),
            i = e("../../helpers/fboHelper"),
            a = (e("../../utils/math"), e("mout/object/mixIn")),
            o = e("../../effects/blueNoise/blueNoise"),
            s = e("../../core/properties"),
            u = e("glslify"),
            l = e("three"),
            c = new l.Matrix4,
            h = new l.Matrix4;

        function d(e) {
            e = a({
                amount: 20,
                _prevSampleCount: -1,
                projectionViewMatrix: new l.Matrix4,
                prevProjectionViewMatrix: new l.Matrix4,
                projectionViewInverseMatrix: new l.Matrix4,
                prevProjectionViewInverseMatrix: new l.Matrix4,
                prevShakeMatrix: new l.Matrix4
            }, e), f.constructor.call(this, a({
                uniforms: a({
                    u_prevTexture: {
                        value: null
                    },
                    u_depthTexture: {
                        value: null
                    },
                    u_amount: {
                        value: 1
                    },
                    u_projectionViewInverseMatrix: {
                        value: e.projectionViewInverseMatrix
                    },
                    u_prevProjectionViewMatrix: {
                        value: e.prevProjectionViewMatrix
                    }
                }, o.sharedUniforms),
                fragmentShader: i.precisionPrefix + u(["#define GLSLIFY 1\nuniform sampler2D u_texture;\nuniform sampler2D u_depthTexture;\n\nuniform mat4 u_projectionViewInverseMatrix;\nuniform mat4 u_prevProjectionViewMatrix;\nuniform float u_amount;\n\nvarying vec2 v_uv;\n\n#include <getBlueNoise>\n\nvoid main () {\n\tvec3 bnoise = getBlueNoise(gl_FragCoord.xy);\n\tvec2 uv = v_uv;\n\tfloat depth = texture2D(u_depthTexture, uv).r;\n\n\tvec4 ndc =  vec4(\n\t\tuv.xy * 2.0 - 1.0,\n\t\tdepth,\n\t\t1.0\n\t);\n\n\tvec4 worldPos = u_projectionViewInverseMatrix * ndc;\n\n\tvec4 prevPos = u_prevProjectionViewMatrix * worldPos;\n\tprevPos /= prevPos.w;\n\tprevPos.xy = prevPos.xy * 0.5 + 0.5;\n\n\tvec2 velocity = (prevPos.xy - uv) / 9.0 * u_amount * (0.5 + bnoise.x * 0.5);\n\n\t// vec4 color = texture2D(u_texture, uv);\n\t// uv += velocity;\n\t// for(int i = 1; i < SAMPLE_COUNT; ++i) {\n\t// \tcolor += texture2D(u_texture, uv);\n\t// \tuv += velocity;\n\t// }\n\t// gl_FragColor = color / fSampleCount;\n\tvec4 color = texture2D(u_texture, uv) * 0.051;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.0918;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.12245;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.1531;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.1633;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.1531;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.12245;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.0918;\n\tuv += velocity;\n\tcolor += texture2D(u_texture, uv) * 0.051;\n\n\tgl_FragColor = color;\n}"]),
                blending: l.NoBlending
            }, e)), this.needsRefresh = !0
        }
        t.exports = d;
        var f = r.prototype,
            p = d.prototype = Object.create(f);
        p.constructor = d, p.needsRender = function(e) {
            return this.amount > 0
        }, p.refresh = function() {
            this.needsRefresh = !0
        }, p.render = function(e, t) {
            this.uniforms.u_depthTexture.value = e.sharedUniforms.u_sceneDepthTexture.value, this.uniforms.u_amount.value = this.amount;
            var n = e.camera;
            this.projectionViewMatrix.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this.projectionViewInverseMatrix.copy(this.projectionViewMatrix).invert(), h.copy(s.brownianMotion.matrix).invert().premultiply(this.prevShakeMatrix), c.copy(n.matrix).multiply(h).invert(), this.prevProjectionViewMatrix.multiplyMatrices(n.projectionMatrix, c), this.prevProjectionViewInverseMatrix.copy(this.prevProjectionViewMatrix).invert(), this.prevShakeMatrix.copy(s.brownianMotion.matrix), (this.needsRefresh || e.temporalEffectNeedsReset) && (this.prevProjectionViewMatrix.copy(this.projectionViewMatrix), this.prevProjectionViewInverseMatrix.copy(this.projectionViewInverseMatrix), this.needsRefresh = !1);
            this.sampleCount !== this._prevSampleCount && (this.material.needsUpdate = !0, this._prevSampleCount = this.sampleCount);
            f.render.call(this, e, t)
        }
    }, {
        "../../core/properties": 71,
        "../../effects/blueNoise/blueNoise": 73,
        "../../helpers/fboHelper": 79,
        "../../utils/math": 104,
        "../PostEffect": 90,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    95: [function(e, t, n) {
        "use strict";
        var r = e("../PostEffect"),
            i = e("../../helpers/fboHelper"),
            a = (e("../../utils/math"), e("mout/object/merge")),
            o = e("glslify"),
            s = e("three"),
            u = e("../../effects/blueNoise/blueNoise"),
            l = e("mout/object/mixIn");

        function c(e) {
            e = a({
                bgColor: new s.Color(0),
                vignetteFrom: .6,
                vignetteTo: 1.6,
                vignetteAspect: new s.Vector2,
                vignetteColor: new s.Color(0),
                saturation: 1,
                contrast: 0,
                brightness: 1,
                tintColor: new s.Color(0),
                tintOpacity: 1,
                opacity: 1,
                cacheBlendRatio: 0,
                cacheBlendDirection: 1,
                cacheRenderTarget: i.createRenderTarget(1, 1),
                hasCache: !1
            }, e), this.transitionMaterial = new s.RawShaderMaterial({
                uniforms: l({
                    u_texture: {
                        value: null
                    },
                    u_cacheTexture: {
                        value: e.cacheRenderTarget.texture
                    },
                    u_cacheBlendDirection: {
                        value: 0
                    },
                    u_cacheBlendRatio: {
                        value: 0
                    }
                }, u.sharedUniforms),
                vertexShader: i.precisionPrefix + i.vertexShader,
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\nvarying vec2 v_uv;\n\nuniform sampler2D u_texture;\nuniform sampler2D u_cacheTexture;\nuniform float u_cacheBlendRatio;\nuniform float u_cacheBlendDirection;\n\n#include <getBlueNoise>\n\nfloat range(float vmin, float vmax, float value) {\n\treturn clamp((value - vmin) / (vmax - vmin), 0.0, 1.0);\n}\n\nvoid main() {\n\tvec3 bnoise = getBlueNoise(gl_FragCoord.xy);\n\n\tvec2 uv = v_uv;\n\tvec3 color = vec3(0.0);\n\tvec3 cacheColor = vec3(0.0);\n\n\tvec2 colorUv = uv;\n\tvec2 cacheColorUv = uv;\n\n\tfloat direction = u_cacheBlendDirection;\n\n\tfloat blendRatio = range(bnoise.x * 0.05, 0.95 + bnoise.y * 0.05, u_cacheBlendRatio);\n\n\tfloat colorUvOffsetRatio = direction > 0.0 ? 1.0 - uv.x : uv.x;\n\tfloat cacheColorUvOffsetRatio = direction < 0.0 ? 1.0 - uv.x : uv.x;\n\n\tfloat colorUvOffsetDist = (colorUvOffsetRatio * colorUvOffsetRatio * 0.95);\n\tfloat cacheColorUvOffsetDist = (cacheColorUvOffsetRatio * cacheColorUvOffsetRatio * 0.95);\n\n\tvec2 colorUvOffset = vec2((colorUvOffsetDist + 0.5) * direction, colorUvOffsetDist * (0.5 - uv.y) * 2.0) * blendRatio / 16.0;\n\tvec2 cacheColorUvOffset = vec2((cacheColorUvOffsetDist + 0.5) * -direction, cacheColorUvOffsetDist * (0.5 - uv.y) * 2.0) * (1.0 - blendRatio) / 16.0;\n\n\tcolorUv += colorUvOffset ;\n\tcacheColorUv += cacheColorUvOffset;\n\n\tfor (int i = 0; i < 16; i++) {\n\t\tcolor += texture2D(u_texture, colorUv).rgb;\n\t\tcacheColor += texture2D(u_cacheTexture, cacheColorUv).rgb;\n\t\tcolorUv += colorUvOffset;\n\t\tcacheColorUv += cacheColorUvOffset;\n\t}\n\n\tcolor /= 16.0;\n\tcacheColor /= 16.0;\n\t\n\tcolor = mix(color, cacheColor, clamp(blendRatio * 2.0 - colorUvOffsetRatio * colorUvOffsetRatio, 0.0, 1.0));\n\t\n\tgl_FragColor = vec4(color, 1.0);\n}\n"])
            }), h.constructor.call(this, a({
                uniforms: {
                    u_vignetteFrom: {
                        value: 0
                    },
                    u_vignetteTo: {
                        value: 0
                    },
                    u_vignetteAspect: {
                        value: e.vignetteAspect
                    },
                    u_vignetteColor: {
                        value: e.vignetteColor
                    },
                    u_saturation: {
                        value: 0
                    },
                    u_contrast: {
                        value: 0
                    },
                    u_brightness: {
                        value: 0
                    },
                    u_tintColor: {
                        value: e.tintColor
                    },
                    u_tintOpacity: {
                        value: 0
                    },
                    u_bgColor: {
                        value: e.bgColor
                    },
                    u_opacity: {
                        value: 0
                    },
                    u_ditherSeed: {
                        value: 0
                    }
                },
                fragmentShader: i.precisionPrefix + o(["#define GLSLIFY 1\nvarying vec2 v_uv;\nuniform sampler2D u_texture;\nuniform vec3 u_bgColor;\nuniform float u_opacity;\n\nuniform float u_vignetteFrom;\nuniform float u_vignetteTo;\nuniform vec2 u_vignetteAspect;\nuniform vec3 u_vignetteColor;\n\nuniform float u_saturation;\nuniform float u_contrast;\nuniform float u_brightness;\n\nuniform vec3 u_tintColor;\nuniform float u_tintOpacity;\nuniform float u_ditherSeed;\n\nfloat hash13(vec3 p3) {\n\tp3  = fract(p3 * .1031);\n    p3 += dot(p3, p3.yzx + 33.33);\n    return fract((p3.x + p3.y) * p3.z);\n}\n\nvec3 screen (vec3 cb, vec3 cs) {\n\treturn cb + cs - (cb * cs);\n}\n\nvec3 colorDodge (vec3 cb, vec3 cs) {\n\treturn mix(\n\t\tmin(vec3(1.0), cb / (1.0 - cs)),\n\t\tvec3(1.0),\n\t\tstep(vec3(1.0), cs)\n\t);\n}\nvoid main() {\n\tvec2 uv = v_uv;\n\tvec3 color = texture2D(u_texture, uv).rgb;\n\n\tfloat luma = dot(color, vec3(0.299, 0.587, 0.114));\n\n\tcolor = mix(vec3(luma), color, 1.0 + u_saturation);\n\tcolor = 0.5 + (1.0 + u_contrast) * (color - 0.5);\n\tcolor += u_brightness;\n\n\t// linear dodge add\n\tcolor = mix(color, screen(colorDodge(color, u_tintColor), u_tintColor), u_tintOpacity);\n\n\tfloat d = length((uv - 0.5) * u_vignetteAspect) * 2.0;\n\tcolor = mix(color, u_vignetteColor, smoothstep(u_vignetteFrom, u_vignetteTo, d));\n\t\n\tgl_FragColor = vec4(mix(u_bgColor, color, u_opacity) + hash13(vec3(gl_FragCoord.xy, u_ditherSeed)) / 255.0, 1.0);\n}\n"]),
                blending: s.NoBlending
            }, e))
        }
        t.exports = c;
        var h = r.prototype,
            d = c.prototype = Object.create(h);
        d.constructor = c, d.cachePreviousFrame = function(e) {
            var t = e.width,
                n = e.height;
            this.cacheRenderTarget.setSize(t, n), this.uniforms.u_texture.value = e.toTexture, e.renderMaterial(this.material, e.fromRenderTarget), i.copy(e.fromRenderTarget.texture, this.cacheRenderTarget), e.swap()
        }, d.needsRender = function() {
            return !0
        }, d.render = function(e, t) {
            var n = e.width,
                r = e.height;
            this.uniforms.u_vignetteFrom.value = this.vignetteFrom, this.uniforms.u_vignetteTo.value = this.vignetteTo, this.uniforms.u_vignetteAspect.value.set(n / r, 1).multiplyScalar(r / Math.sqrt(n * n + r * r)), this.uniforms.u_saturation.value = this.saturation - 1, this.uniforms.u_contrast.value = this.contrast, this.uniforms.u_brightness.value = this.brightness - 1, this.uniforms.u_tintOpacity.value = this.tintOpacity, this.uniforms.u_opacity.value = this.opacity, this.uniforms.u_ditherSeed.value = 1e3 * Math.random();
            var i = this.hasCache ? 0 : this.cacheBlendRatio,
                a = i > 0;
            this.uniforms.u_texture.value = e.fromTexture, e.renderMaterial(this.material, t && !a ? null : e.toRenderTarget), a && (e.swap(), this.transitionMaterial.uniforms.u_texture.value = e.fromTexture, this.transitionMaterial.uniforms.u_cacheBlendDirection.value = this.cacheBlendDirection, this.transitionMaterial.uniforms.u_cacheBlendRatio.value = i, e.renderMaterial(this.transitionMaterial, t ? null : e.toRenderTarget));
            e.swap()
        }
    }, {
        "../../effects/blueNoise/blueNoise": 73,
        "../../helpers/fboHelper": 79,
        "../../utils/math": 104,
        "../PostEffect": 90,
        glslify: 27,
        "mout/object/merge": 45,
        "mout/object/mixIn": 46,
        three: 63
    }],
    96: [function(e, t, n) {
        "use strict";
        var r = e("../../helpers/fboHelper"),
            i = e("../PostEffect"),
            a = e("mout/object/merge"),
            o = e("three"),
            s = e("glslify");

        function u(e) {
            e = a({}, e), this.edgesRenderTarget = r.createRenderTarget(1, 1), this.weightsRenderTarget = r.createRenderTarget(1, 1, !0), this.uResolutionInv = {
                value: new o.Vector2
            }, l.constructor.call(this, a({
                uniforms: {
                    u_weightsTexture: {
                        value: this.weightsRenderTarget.texture
                    },
                    u_resolutionInv: this.uResolutionInv
                },
                vertexShader: r.precisionPrefix + s(["#define GLSLIFY 1\nattribute vec3 position;\n\nuniform vec2 u_resolutionInv;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[ 2 ];\n\nvoid SMAANeighborhoodBlendingVS( vec2 texcoord ) {\n  v_offsets[ 0 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( -1.0, 0.0, 0.0, 1.0 ); // WebGL port note: Changed sign in W component\n  v_offsets[ 1 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( 1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n}\n\nvoid main() {\n\tv_uv = position.xy * 0.5 + 0.5;\n\n  SMAANeighborhoodBlendingVS( v_uv );\n\n  // gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = vec4( position, 1.0 );\n\n}\n"]),
                fragmentShader: r.precisionPrefix + s(["#define GLSLIFY 1\nuniform sampler2D u_weightsTexture;\nuniform sampler2D u_texture;\nuniform vec2 u_resolutionInv;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[ 2 ];\n\nvec4 SMAANeighborhoodBlendingPS( vec2 texcoord, vec4 offset[ 2 ], sampler2D colorTex, sampler2D blendTex ) {\n  // Fetch the blending weights for current pixel:\n  vec4 a;\n  a.xz = texture2D( blendTex, texcoord ).xz;\n  a.y = texture2D( blendTex, offset[ 1 ].zw ).g;\n  a.w = texture2D( blendTex, offset[ 1 ].xy ).a;\n\n  // Is there any blending weight with a value greater than 0.0?\n  if ( dot(a, vec4( 1.0, 1.0, 1.0, 1.0 )) < 1e-5 ) {\n    return texture2D( colorTex, texcoord, 0.0 );\n  } else {\n    // Up to 4 lines can be crossing a pixel (one through each edge). We\n    // favor blending by choosing the line with the maximum weight for each\n    // direction:\n    vec2 offset;\n    offset.x = a.a > a.b ? a.a : -a.b; // left vs. right\n    offset.y = a.g > a.r ? -a.g : a.r; // top vs. bottom // WebGL port note: Changed signs\n\n    // Then we go in the direction that has the maximum weight:\n    if ( abs( offset.x ) > abs( offset.y )) { // horizontal vs. vertical\n      offset.y = 0.0;\n    } else {\n      offset.x = 0.0;\n    }\n\n    // Fetch the opposite color and lerp by hand:\n    vec4 C = texture2D( colorTex, texcoord, 0.0 );\n    texcoord += sign( offset ) * u_resolutionInv;\n    vec4 Cop = texture2D( colorTex, texcoord, 0.0 );\n    float s = abs( offset.x ) > abs( offset.y ) ? abs( offset.x ) : abs( offset.y );\n\n    // WebGL port note: Added gamma correction\n    C.xyz = pow(abs(C.xyz), vec3(2.2));\n    Cop.xyz = pow(abs(Cop.xyz), vec3(2.2));\n    vec4 mixed = mix(C, Cop, s);\n    mixed.xyz = pow(abs(mixed.xyz), vec3(1.0 / 2.2));\n\n    return mixed;\n  }\n}\n\nvoid main() {\n\n  gl_FragColor = SMAANeighborhoodBlendingPS( v_uv, v_offsets, u_texture, u_weightsTexture );\n}\n"])
            }, e)), this.edgesMaterial = new o.RawShaderMaterial({
                uniforms: {
                    u_texture: {
                        value: null
                    },
                    u_resolutionInv: this.uResolutionInv
                },
                vertexShader: r.precisionPrefix + s(["#define GLSLIFY 1\nattribute vec3 position;\n\nuniform vec2 u_resolutionInv;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[ 3 ];\n\nvoid SMAAEdgeDetectionVS( vec2 texcoord ) {\n  v_offsets[ 0 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( -1.0, 0.0, 0.0,  1.0 ); // WebGL port note: Changed sign in W component\n  v_offsets[ 1 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4(  1.0, 0.0, 0.0, -1.0 ); // WebGL port note: Changed sign in W component\n  v_offsets[ 2 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( -2.0, 0.0, 0.0,  2.0 ); // WebGL port note: Changed sign in W component\n}\n\nvoid main() {\n\n\tv_uv = position.xy * 0.5 + 0.5;\n\n  SMAAEdgeDetectionVS( v_uv );\n\n  // gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = vec4( position, 1.0 );\n\n}\n"]),
                fragmentShader: r.precisionPrefix + s(["#define GLSLIFY 1\nuniform sampler2D u_texture;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[ 3 ];\n\nvec4 SMAAColorEdgeDetectionPS( vec2 texcoord, vec4 offset[3], sampler2D colorTex ) {\n  vec2 threshold = vec2( SMAA_THRESHOLD, SMAA_THRESHOLD );\n\n  // Calculate color deltas:\n  vec4 delta;\n  vec3 C = texture2D( colorTex, texcoord ).rgb;\n\n  vec3 Cleft = texture2D( colorTex, offset[0].xy ).rgb;\n  vec3 t = abs( C - Cleft );\n  delta.x = max( max( t.r, t.g ), t.b );\n\n  vec3 Ctop = texture2D( colorTex, offset[0].zw ).rgb;\n  t = abs( C - Ctop );\n  delta.y = max( max( t.r, t.g ), t.b );\n\n  // We do the usual threshold:\n  vec2 edges = step( threshold, delta.xy );\n\n  // Then discard if there is no edge:\n  if ( dot( edges, vec2( 1.0, 1.0 ) ) == 0.0 )\n    discard;\n\n  // Calculate right and bottom deltas:\n  vec3 Cright = texture2D( colorTex, offset[1].xy ).rgb;\n  t = abs( C - Cright );\n  delta.z = max( max( t.r, t.g ), t.b );\n\n  vec3 Cbottom  = texture2D( colorTex, offset[1].zw ).rgb;\n  t = abs( C - Cbottom );\n  delta.w = max( max( t.r, t.g ), t.b );\n\n  // Calculate the maximum delta in the direct neighborhood:\n  float maxDelta = max( max( max( delta.x, delta.y ), delta.z ), delta.w );\n\n  // Calculate left-left and top-top deltas:\n  vec3 Cleftleft  = texture2D( colorTex, offset[2].xy ).rgb;\n  t = abs( C - Cleftleft );\n  delta.z = max( max( t.r, t.g ), t.b );\n\n  vec3 Ctoptop = texture2D( colorTex, offset[2].zw ).rgb;\n  t = abs( C - Ctoptop );\n  delta.w = max( max( t.r, t.g ), t.b );\n\n  // Calculate the final maximum delta:\n  maxDelta = max( max( maxDelta, delta.z ), delta.w );\n\n  // Local contrast adaptation in action:\n  edges.xy *= step( 0.5 * maxDelta, delta.xy );\n\n  return vec4( edges, 0.0, 0.0 );\n}\n\nvoid main() {\n\n  gl_FragColor = SMAAColorEdgeDetectionPS( v_uv, v_offsets, u_texture );\n\n}\n"]),
                defines: {
                    SMAA_THRESHOLD: "0.1"
                },
                blending: o.NoBlending,
                depthTest: !1,
                depthWrite: !1
            }), this.weightsMaterial = new o.RawShaderMaterial({
                uniforms: {
                    u_edgesTexture: {
                        value: this.edgesRenderTarget.texture
                    },
                    u_areaTexture: h.u_areaTexture,
                    u_searchTexture: h.u_searchTexture,
                    u_resolutionInv: this.uResolutionInv
                },
                vertexShader: r.precisionPrefix + s(["#define GLSLIFY 1\nattribute vec3 position;\n\nuniform vec2 u_resolutionInv;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[ 3 ];\nvarying vec2 v_pixcoord;\n\nvoid SMAABlendingWeightCalculationVS( vec2 texcoord ) {\n  v_pixcoord = texcoord / u_resolutionInv;\n\n  // We will use these offsets for the searches later on (see @PSEUDO_GATHER4):\n  v_offsets[ 0 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( -0.25, 0.125, 1.25, 0.125 ); // WebGL port note: Changed sign in Y and W components\n  v_offsets[ 1 ] = texcoord.xyxy + u_resolutionInv.xyxy * vec4( -0.125, 0.25, -0.125, -1.25 ); // WebGL port note: Changed sign in Y and W components\n\n  // And these for the searches, they indicate the ends of the loops:\n  v_offsets[ 2 ] = vec4( v_offsets[ 0 ].xz, v_offsets[ 1 ].yw ) + vec4( -2.0, 2.0, -2.0, 2.0 ) * u_resolutionInv.xxyy * float( SMAA_MAX_SEARCH_STEPS );\n\n}\n\nvoid main() {\n\tv_uv = position.xy * 0.5 + 0.5;\n\n  SMAABlendingWeightCalculationVS( v_uv );\n\n  // gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = vec4( position, 1.0 );\n\n}\n"]),
                fragmentShader: r.precisionPrefix + s(["#define GLSLIFY 1\n#define SMAASampleLevelZeroOffset( tex, coord, offset ) texture2D( tex, coord + float( offset ) * u_resolutionInv, 0.0 )\n\nuniform sampler2D u_edgesTexture;\nuniform sampler2D u_areaTexture;\nuniform sampler2D u_searchTexture;\nuniform vec2 u_resolutionInv;\n\nvarying vec2 v_uv;\nvarying vec4 v_offsets[3];\nvarying vec2 v_pixcoord;\n\nvec2 round( vec2 x ) {\n  return sign( x ) * floor( abs( x ) + 0.5 );\n}\n\nfloat SMAASearchLength( sampler2D searchTex, vec2 e, float bias, float scale ) {\n  // Not required if searchTex accesses are set to point:\n  // float2 SEARCH_TEX_PIXEL_SIZE = 1.0 / float2(66.0, 33.0);\n  // e = float2(bias, 0.0) + 0.5 * SEARCH_TEX_PIXEL_SIZE +\n  //     e * float2(scale, 1.0) * float2(64.0, 32.0) * SEARCH_TEX_PIXEL_SIZE;\n  e.r = bias + e.r * scale;\n  return 255.0 * texture2D( searchTex, e, 0.0 ).r;\n}\n\nfloat SMAASearchXLeft( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n  /**\n  * @PSEUDO_GATHER4\n  * This texcoord has been offset by (-0.25, -0.125) in the vertex shader to\n  * sample between edge, thus fetching four edges in a row.\n  * Sampling with different offsets in each direction allows to disambiguate\n  * which edges are active from the four fetched ones.\n  */\n  vec2 e = vec2( 0.0, 1.0 );\n\n  for ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n    e = texture2D( edgesTex, texcoord, 0.0 ).rg;\n    texcoord -= vec2( 2.0, 0.0 ) * u_resolutionInv;\n    if ( ! ( texcoord.x > end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n  }\n\n  // We correct the previous (-0.25, -0.125) offset we applied:\n  texcoord.x += 0.25 * u_resolutionInv.x;\n\n  // The searches are bias by 1, so adjust the coords accordingly:\n  texcoord.x += u_resolutionInv.x;\n\n  // Disambiguate the length added by the last step:\n  texcoord.x += 2.0 * u_resolutionInv.x; // Undo last step\n  texcoord.x -= u_resolutionInv.x * SMAASearchLength(searchTex, e, 0.0, 0.5);\n\n  return texcoord.x;\n}\n\nfloat SMAASearchXRight( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n  vec2 e = vec2( 0.0, 1.0 );\n\n  for ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n    e = texture2D( edgesTex, texcoord, 0.0 ).rg;\n    texcoord += vec2( 2.0, 0.0 ) * u_resolutionInv;\n    if ( ! ( texcoord.x < end && e.g > 0.8281 && e.r == 0.0 ) ) break;\n  }\n\n  texcoord.x -= 0.25 * u_resolutionInv.x;\n  texcoord.x -= u_resolutionInv.x;\n  texcoord.x -= 2.0 * u_resolutionInv.x;\n  texcoord.x += u_resolutionInv.x * SMAASearchLength( searchTex, e, 0.5, 0.5 );\n\n  return texcoord.x;\n}\n\nfloat SMAASearchYUp( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n  vec2 e = vec2( 1.0, 0.0 );\n\n  for ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n    e = texture2D( edgesTex, texcoord, 0.0 ).rg;\n    texcoord += vec2( 0.0, 2.0 ) * u_resolutionInv; // WebGL port note: Changed sign\n    if ( ! ( texcoord.y > end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n  }\n\n  texcoord.y -= 0.25 * u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y -= u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y -= 2.0 * u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y += u_resolutionInv.y * SMAASearchLength( searchTex, e.gr, 0.0, 0.5 ); // WebGL port note: Changed sign\n\n  return texcoord.y;\n}\n\nfloat SMAASearchYDown( sampler2D edgesTex, sampler2D searchTex, vec2 texcoord, float end ) {\n  vec2 e = vec2( 1.0, 0.0 );\n\n  for ( int i = 0; i < SMAA_MAX_SEARCH_STEPS; i ++ ) { // WebGL port note: Changed while to for\n    e = texture2D( edgesTex, texcoord, 0.0 ).rg;\n    texcoord -= vec2( 0.0, 2.0 ) * u_resolutionInv; // WebGL port note: Changed sign\n    if ( ! ( texcoord.y < end && e.r > 0.8281 && e.g == 0.0 ) ) break;\n  }\n\n  texcoord.y += 0.25 * u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y += u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y += 2.0 * u_resolutionInv.y; // WebGL port note: Changed sign\n  texcoord.y -= u_resolutionInv.y * SMAASearchLength( searchTex, e.gr, 0.5, 0.5 ); // WebGL port note: Changed sign\n\n  return texcoord.y;\n}\n\nvec2 SMAAArea( sampler2D areaTex, vec2 dist, float e1, float e2, float offset ) {\n  // Rounding prevents precision errors of bilinear filtering:\n  vec2 texcoord = float( SMAA_AREATEX_MAX_DISTANCE ) * round( 4.0 * vec2( e1, e2 ) ) + dist;\n\n  // We do a scale and bias for mapping to texel space:\n  texcoord = SMAA_AREATEX_PIXEL_SIZE * texcoord + ( 0.5 * SMAA_AREATEX_PIXEL_SIZE );\n\n  // Move to proper place, according to the subpixel offset:\n  texcoord.y += SMAA_AREATEX_SUBTEX_SIZE * offset;\n\n  return texture2D( areaTex, texcoord, 0.0 ).rg;\n}\n\nvec4 SMAABlendingWeightCalculationPS( vec2 texcoord, vec2 pixcoord, vec4 offset[ 3 ], sampler2D edgesTex, sampler2D areaTex, sampler2D searchTex, ivec4 subsampleIndices ) {\n  vec4 weights = vec4( 0.0, 0.0, 0.0, 0.0 );\n\n  vec2 e = texture2D( edgesTex, texcoord ).rg;\n\n  if ( e.g > 0.0 ) { // Edge at north\n    vec2 d;\n\n    // Find the distance to the left:\n    vec2 coords;\n    coords.x = SMAASearchXLeft( edgesTex, searchTex, offset[ 0 ].xy, offset[ 2 ].x );\n    coords.y = offset[ 1 ].y; // offset[1].y = texcoord.y - 0.25 * u_resolutionInv.y (@CROSSING_OFFSET)\n    d.x = coords.x;\n\n    // Now fetch the left crossing edges, two at a time using bilinear\n    // filtering. Sampling at -0.25 (see @CROSSING_OFFSET) enables to\n    // discern what value each edge has:\n    float e1 = texture2D( edgesTex, coords, 0.0 ).r;\n\n    // Find the distance to the right:\n    coords.x = SMAASearchXRight( edgesTex, searchTex, offset[ 0 ].zw, offset[ 2 ].y );\n    d.y = coords.x;\n\n    // We want the distances to be in pixel units (doing this here allow to\n    // better interleave arithmetic and memory accesses):\n    d = d / u_resolutionInv.x - pixcoord.x;\n\n    // SMAAArea below needs a sqrt, as the areas texture is compressed\n    // quadratically:\n    vec2 sqrt_d = sqrt( abs( d ) );\n\n    // Fetch the right crossing edges:\n    coords.y -= 1.0 * u_resolutionInv.y; // WebGL port note: Added\n    float e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 1, 0 ) ).r;\n\n    // Ok, we know how this pattern looks like, now it is time for getting\n    // the actual area:\n    weights.rg = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.y ) );\n  }\n\n  if ( e.r > 0.0 ) { // Edge at west\n    vec2 d;\n\n    // Find the distance to the top:\n    vec2 coords;\n\n    coords.y = SMAASearchYUp( edgesTex, searchTex, offset[ 1 ].xy, offset[ 2 ].z );\n    coords.x = offset[ 0 ].x; // offset[1].x = texcoord.x - 0.25 * u_resolutionInv.x;\n    d.x = coords.y;\n\n    // Fetch the top crossing edges:\n    float e1 = texture2D( edgesTex, coords, 0.0 ).g;\n\n    // Find the distance to the bottom:\n    coords.y = SMAASearchYDown( edgesTex, searchTex, offset[ 1 ].zw, offset[ 2 ].w );\n    d.y = coords.y;\n\n    // We want the distances to be in pixel units:\n    d = d / u_resolutionInv.y - pixcoord.y;\n\n    // SMAAArea below needs a sqrt, as the areas texture is compressed\n    // quadratically:\n    vec2 sqrt_d = sqrt( abs( d ) );\n\n    // Fetch the bottom crossing edges:\n    coords.y -= 1.0 * u_resolutionInv.y; // WebGL port note: Added\n    float e2 = SMAASampleLevelZeroOffset( edgesTex, coords, ivec2( 0, 1 ) ).g;\n\n    // Get the area for this direction:\n    weights.ba = SMAAArea( areaTex, sqrt_d, e1, e2, float( subsampleIndices.x ) );\n  }\n\n  return weights;\n}\n\nvoid main() {\n\n  gl_FragColor = SMAABlendingWeightCalculationPS( v_uv, v_pixcoord, v_offsets, u_edgesTexture, u_areaTexture, u_searchTexture, ivec4( 0.0 ) );\n\n}\n"]),
                defines: {
                    SMAA_MAX_SEARCH_STEPS: "8",
                    SMAA_AREATEX_MAX_DISTANCE: "16",
                    SMAA_AREATEX_PIXEL_SIZE: "( 1.0 / vec2( 160.0, 560.0 ) )",
                    SMAA_AREATEX_SUBTEX_SIZE: "( 1.0 / 7.0 )"
                },
                transparent: !0,
                blending: o.NoBlending,
                depthTest: !1,
                depthWrite: !1
            })
        }
        var l = i.prototype,
            c = u.prototype = Object.create(l);
        c.constructor = u, c.setPostprocessing = function(e) {
            l.setPostprocessing.call(this, e);
            var t = e.width,
                n = e.height;
            this.edgesRenderTarget.setSize(t, n), this.weightsRenderTarget.setSize(t, n), this.uResolutionInv.value.set(1 / t, 1 / n)
        }, c.dispose = function() {
            this.edgesRenderTarget && this.edgesRenderTarget.dispose();
            this.weightsRenderTarget && this.weightsRenderTarget.dispose()
        }, c.needsRender = function() {
            return !h.u_areaTexture.value.needsUpdate
        }, c.render = function(e, t) {
            var n = r.getColorState();
            h.u_searchTexture.value || console.warn("You need to use Smaa.setImages() to set the smaa textures manually and assign to this class.");
            var i = r.renderer;
            i.autoClear = !0, i.setClearColor(0, 0), this.edgesMaterial.uniforms.u_texture.value = e.fromTexture, e.renderMaterial(this.edgesMaterial, this.edgesRenderTarget, !0), e.renderMaterial(this.weightsMaterial, this.weightsRenderTarget, !0), r.setColorState(n), this.material.uniforms.u_texture.value = e.fromTexture, l.render.call(this, e, t)
        }, (n = t.exports = u).setTextures = function(e, t) {
            var n;
            (n = h.u_areaTexture.value = d(e)).format = o.RGBFormat, n.minFilter = o.LinearFilter, (n = h.u_searchTexture.value = d(t)).magFilter = o.NearestFilter, n.minFilter = o.NearestFilter
        }, n.updateTextures = function() {
            h.u_areaTexture.value.needsUpdate = !0, h.u_searchTexture.value.needsUpdate = !0
        };
        var h = {
            u_areaTexture: {
                value: null
            },
            u_searchTexture: {
                value: null
            }
        };

        function d(e) {
            var t = new o.Texture(e);
            return t.generateMipmaps = !1, t.flipY = !1, t
        }
    }, {
        "../../helpers/fboHelper": 79,
        "../PostEffect": 90,
        glslify: 27,
        "mout/object/merge": 45,
        three: 63
    }],
    97: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.Cinematic = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("./RandomText"),
            u = e("../../input/input"),
            l = e("../../core/properties"),
            c = e("../../utils/math"),
            h = e("../../core/settings"),
            d = function() {
                function e() {
                    (0, i.default)(this, e), (0, o.default)(this, "_header", void 0), (0, o.default)(this, "_stageNavBtns", void 0), (0, o.default)(this, "_footer", void 0), (0, o.default)(this, "_cinematicBars", void 0), (0, o.default)(this, "_cinematicHeadline", void 0), (0, o.default)(this, "_cinematicHeader", void 0), (0, o.default)(this, "_cinematicGrid", void 0), (0, o.default)(this, "_cinematicFooter", void 0), (0, o.default)(this, "_cinematicText", void 0), (0, o.default)(this, "_cinematicDataLinesAndBars", void 0), (0, o.default)(this, "_cinematicGridRects", void 0), (0, o.default)(this, "_arrayTextAnimation", []), (0, o.default)(this, "_cinematicPointerDataCopies", void 0), (0, o.default)(this, "_time", void 0), (0, o.default)(this, "_isActive", void 0), (0, o.default)(this, "_timeout", void 0), (0, o.default)(this, "_tlFadeIn", gsap.timeline({
                        paused: !0
                    }))
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {
                        this._header = document.querySelector("header"), this._stageNavBtns = document.querySelectorAll(".stage-nav-btn"), this._footer = document.querySelector("footer"), this._cinematicBars = document.querySelectorAll(".cinematic-bar"), this._cinematicHeadline = document.querySelector("#cinematic-header-headline h2"), this._cinematicHeader = document.getElementById("cinematic-header"), this._cinematicGrid = document.getElementById("cinematic-grid"), this._cinematicFooter = document.getElementById("cinematic-footer"), this._cinematicText = document.querySelectorAll(".cinematic-copy"), this._cinematicGridRects = document.querySelectorAll(".grid-rect"), this._cinematicPointerDataCopies = document.getElementById("cinematic-footer-pointerData").getElementsByClassName("cinematic-copy"), this._cinematicDataLinesAndBars = document.querySelectorAll(".data-lines-and-bars"), this._time = document.getElementById("cinematic-time"), l.cinematicRatio = 0, this.init()
                    }
                }, {
                    key: "init",
                    value: function() {
                        this._initFadeInAnimation(), this._createRandomText()
                    }
                }, {
                    key: "_initFadeInAnimation",
                    value: function() {
                        this._tlFadeIn.to(this._header, {
                            opacity: 0,
                            y: 10,
                            duration: .12
                        }, 0).to(this._stageNavBtns, {
                            opacity: 0,
                            duration: .12
                        }, 0).to(this._footer, {
                            opacity: 0,
                            y: -10,
                            duration: .12
                        }, 0).to(this._cinematicBars, {
                            y: 0,
                            duration: .4
                        }, .2).to(this._cinematicGrid, {
                            opacity: 1
                        }, .25).to(this._cinematicDataLinesAndBars, {
                            opacity: 1,
                            scaleX: 1,
                            duration: .35,
                            ease: "Power2.easeInOut",
                            stagger: {
                                each: .2
                            }
                        }, .26).to(this._cinematicHeader, {
                            opacity: 1
                        }, .27).to(this._cinematicFooter, {
                            opacity: 1
                        }, .28)
                    }
                }, {
                    key: "_createRandomText",
                    value: function() {
                        var e = this;
                        this._cinematicText.forEach((function(t) {
                            var n = new s.RandomText;
                            n.init({
                                elem: t
                            });
                            var r = t.innerHTML;
                            n.changeText(r), e._arrayTextAnimation.push(n)
                        }))
                    }
                }, {
                    key: "show",
                    value: function() {
                        var e = this;
                        this._isActive = !0, this._tlFadeIn.play(), clearTimeout(this._timeout), this._timeout = setTimeout((function() {
                            for (var t = 0; t < e._arrayTextAnimation.length; t++) e._arrayTextAnimation[t].show()
                        }), 250), l.cinematicIsActive.dispatch()
                    }
                }, {
                    key: "hide",
                    value: function() {
                        var e = this;
                        this._isActive = !1, this._tlFadeIn.reverse(), clearTimeout(this._timeout), this._timeout = setTimeout((function() {
                            for (var t = 0; t < e._arrayTextAnimation.length; t++) e._arrayTextAnimation[t].hide()
                        }), 800)
                    }
                }, {
                    key: "setHeadline",
                    value: function(e) {
                        this._cinematicHeadline.innerText = "IN ".concat(h["STAGE_".concat(e.index, "_ID")], " VIEW").toUpperCase()
                    }
                }, {
                    key: "updateTime",
                    value: function() {
                        this._time.innerText = l.time.toFixed(2)
                    }
                }, {
                    key: "updatePointerData",
                    value: function() {
                        this._cinematicPointerDataCopies[1].innerText = u.mousePixelXY.x.toFixed(3), this._cinematicPointerDataCopies[2].innerText = u.mousePixelXY.y.toFixed(3)
                    }
                }, {
                    key: "updateRectsPosition",
                    value: function() {
                        this._cinematicGridRects.forEach((function(e, t) {
                            var n = 5 * Math.random(),
                                r = (Math.random(), 100 + 100 * u.mouseXY.x * Math.max(t, .75)),
                                i = -100 * u.mouseXY.y * Math.max(t, .75) - 100;
                            e.style.transform = "translate3d( ".concat(r, "px, ").concat(i, "px, 0)"), e.style.opacity = c.clamp(n, 0, .5)
                        }))
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        l.cinematicRatio = c.saturate(l.cinematicRatio + (this._isActive ? e : -e));
                        for (var t = 0; t < this._arrayTextAnimation.length; t++) this._arrayTextAnimation[t].update(e);
                        this._isActive && (this.updateTime(), this.updatePointerData())
                    }
                }]), e
            }();
        n.Cinematic = d
    }, {
        "../../core/properties": 71,
        "../../core/settings": 72,
        "../../input/input": 83,
        "../../utils/math": 104,
        "./RandomText": 99,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12
    }],
    98: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.Hold = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("../../utils/math"),
            u = r(e("../../input/input")),
            l = e("min-signal"),
            c = function() {
                function e() {
                    (0, i.default)(this, e), (0, o.default)(this, "_uiEle", void 0), (0, o.default)(this, "_btn", void 0), (0, o.default)(this, "_innerCicle", void 0), (0, o.default)(this, "_outerCircle", void 0), (0, o.default)(this, "_circlePath", void 0), (0, o.default)(this, "_text", void 0), (0, o.default)(this, "_allowAnimation", !1), (0, o.default)(this, "_hasStarted", !1), (0, o.default)(this, "state", {
                        isHolding: !1,
                        position: {},
                        x: {
                            previous: 0,
                            current: 0
                        },
                        y: {
                            previous: 0,
                            current: 0
                        },
                        x2: {
                            previous: 0,
                            current: 0
                        },
                        y2: {
                            previous: 0,
                            current: 0
                        },
                        scale: {
                            previous: 1,
                            current: 1
                        },
                        angle: {
                            previous: 0,
                            current: 0
                        },
                        squeeze: {
                            previous: 0,
                            current: 0
                        }
                    }), (0, o.default)(this, "onMouseDown", new l), (0, o.default)(this, "onMouseUp", new l), (0, o.default)(this, "_tlHoldIn", gsap.timeline({
                        paused: !0
                    }))
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {
                        var e = this;
                        this._uiEl = document.getElementById("ui"), this._btn = document.querySelector(".hold-interaction"), this._outerCicleGroup = document.querySelector(".holdOuterCircle"), this._innerCircleGroup = document.querySelector(".holdInnerCircle"), this._outerCircle = document.querySelector(".hold__outerCircle"), this._circlePath = document.querySelector(".hold__outerCirclePath"), this._text = document.querySelector(".hold-interaction--text"), this._links = document.querySelectorAll(".link"), u.default.onDowned.add(this.onPointerdown, this), u.default.onUped.add(this.onPointerup, this), this._links.forEach((function(t) {
                            t.addEventListener("mouseenter", (function(t) {
                                return e.hide(t)
                            })), t.addEventListener("mouseleave", (function(t) {
                                return e.show(t)
                            }))
                        })), this.init()
                    }
                }, {
                    key: "init",
                    value: function() {
                        this.initHoldAnimation(), this.getPosition()
                    }
                }, {
                    key: "initHoldAnimation",
                    value: function() {
                        var e = this;
                        this._tlHoldIn.to(this._circlePath, {
                            strokeDashoffset: 0
                        }).to(this._outerCicleGroup, {
                            opacity: 1,
                            duration: .5
                        }).to(this._text, {
                            opacity: 1,
                            ease: "Power3.easeInOut",
                            onComplete: function() {
                                e.state.isHolding = !0
                            }
                        }, 0)
                    }
                }, {
                    key: "getPosition",
                    value: function() {
                        this.state.position = this._outerCicleGroup.getBoundingClientRect()
                    }
                }, {
                    key: "getSqueeze",
                    value: function(e, t) {
                        var n = (0, s.distanceTo)(e, t);
                        return 10 * Math.min(n / 1500, .1)
                    }
                }, {
                    key: "onPointerdown",
                    value: function(e) {
                        e.target === this._uiEl && (this.state.isHolding = !0, this.onMouseDown.dispatch(), this._tlHoldIn.play())
                    }
                }, {
                    key: "onPointerup",
                    value: function() {
                        this.state.isHolding && (this.state.isHolding = !1, this.onMouseUp.dispatch(), this._tlHoldIn.reverse())
                    }
                }, {
                    key: "show",
                    value: function(e) {
                        this.state.scale.current = 1
                    }
                }, {
                    key: "hide",
                    value: function(e) {
                        this.state.scale.current = 0
                    }
                }, {
                    key: "update",
                    value: function() {
                        var e = this.state.position,
                            t = e.width,
                            n = e.height;
                        for (var r in this.state.x.current = this.state.x2.current = u.default.mousePixelXY.x - t / 2, this.state.y.current = this.state.y2.current = u.default.mousePixelXY.y - n / 2, this.state) Math.abs(this.state[r].previous - this.state[r].current) > .001 && (this._allowAnimation = !0, this.state[r].previous = (0, s.lerp)(this.state[r].previous, this.state[r].current, "x2" == r || "y2" == r ? .08 : .15));
                        !this._hasStarted && u.default.hasInteracted && (this._hasStarted = !0, this._allowAnimation = !0, this._btn.style.opacity = 1, this.state.x.previous = this.state.x.current, this.state.y.previous = this.state.y.current, this.state.x2.previous = this.state.x2.current, this.state.y2.previous = this.state.y2.current);
                        var i = Math.round(this.state.x.current - this.state.x.previous),
                            a = Math.round(this.state.y.current - this.state.y.previous);
                        this.state.squeeze.current = this.getSqueeze(i, a), this.state.angle.current = (0, s.getAngle)(i, a);
                        var o = "translateX(".concat(this.state.x.previous, "px) translateY(").concat(this.state.y.previous, "px) scale(").concat(this.state.scale.previous, ")"),
                            l = "translateX(".concat(this.state.x2.previous, "px) translateY(").concat(this.state.y2.previous, "px) scale(").concat(this.state.scale.previous, ")"),
                            c = "scale(".concat(1 + .35 * this.state.squeeze.current, ", ").concat(1 + .35 * this.state.squeeze.current, ")"),
                            h = "scale(".concat(1 + this.state.squeeze.current, ", ").concat(1 - .5 * this.state.squeeze.current, ")"),
                            d = "rotate(".concat(this.state.angle.current, "deg)");
                        this._allowAnimation && (this._innerCircleGroup.style.transform = o + d + h, this._text.style.transform = l, this.state.isHolding ? this._outerCicleGroup.style.transform = l : this._outerCicleGroup.style.transform = l + c)
                    }
                }]), e
            }();
        n.Hold = c
    }, {
        "../../input/input": 83,
        "../../utils/math": 104,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "min-signal": 30
    }],
    99: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.default = n.RandomText = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("../../utils/math"),
            u = function() {
                function e() {
                    (0, i.default)(this, e), (0, o.default)(this, "elem", null), (0, o.default)(this, "cps", 60), (0, o.default)(this, "maxTextDuration", 1), (0, o.default)(this, "useBlinkEffect", !0), (0, o.default)(this, "blinkDuration", 1), (0, o.default)(this, "_text", ""), (0, o.default)(this, "_isActive", !1), (0, o.default)(this, "_charTime", 0), (0, o.default)(this, "_blinkRatio", 0), (0, o.default)(this, "_prevText", ""), (0, o.default)(this, "_prevOpacity", -1)
                }
                return (0, a.default)(e, [{
                    key: "init",
                    value: function(e) {
                        Object.assign(this, e), this.changeText(this.elem.innerHTML)
                    }
                }, {
                    key: "changeText",
                    value: function(e) {
                        this._text = e || "", this._charTime = 0, this.elem.innerHTML = e || ""
                    }
                }, {
                    key: "toggleVisibility",
                    value: function() {
                        this._isActive ? this.hide() : this.show()
                    }
                }, {
                    key: "show",
                    value: function() {
                        this._isActive = !0
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this._isActive = !1
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        e = this._isActive ? e : -e;
                        var t = Math.max(this.cps, this._text.length / this.maxTextDuration);
                        this._charTime = s.clamp(this._charTime + e, 0, this._text.length / t);
                        var n, r = Math.min(this._text.length, this._charTime * t);
                        if (n = 0 == r ? "" : r < this._text.length ? this._text.substr(0, r) + String.fromCharCode(33 + ~~(94 * Math.random())) : this._text, this._prevText !== n && (this.elem.innerHTML = n, this._prevText = n), this.useBlinkEffect) {
                            this._blinkRatio = s.clamp(this._blinkRatio + e / this.blinkDuration, 0, 1);
                            var i = s.clamp(this._blinkRatio + Math.random() * Math.random() * s.smoothstep(0, .5, this._blinkRatio), 0, 1);
                            this._prevOpacity !== i && (this.elem.style.opacity = i, this._prevOpacity = i)
                        }
                    }
                }]), e
            }();
        n.RandomText = u;
        var l = new u;
        n.default = l
    }, {
        "../../utils/math": 104,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12
    }],
    100: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.About = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("gsap"),
            u = e("../../libs/gsap/CustomEase").default,
            l = (e("../../core/browser"), e("../../audios/audios")),
            c = function() {
                function e() {
                    (0, i.default)(this, e), (0, o.default)(this, "_about", void 0), (0, o.default)(this, "_aboutCloseBtn", void 0), (0, o.default)(this, "_aboutExploreBtn", void 0), (0, o.default)(this, "_aboutExploreBtnArrow", void 0), (0, o.default)(this, "_aboutExploreBtnText", void 0), (0, o.default)(this, "_hideTimeout", void 0), (0, o.default)(this, "_tlFadeIn", s.gsap.timeline({
                        paused: !0
                    })), (0, o.default)(this, "_tlFadeOut", s.gsap.timeline({
                        paused: !0
                    })), (0, o.default)(this, "_tlHover", s.gsap.timeline({
                        paused: !0
                    }))
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {
                        var e = this;
                        this._about = document.getElementById("about"), this._aboutCloseBtn = document.getElementById("about-exit--close-btn"), this._aboutExploreBtn = document.querySelector(".explore-btn"), this._aboutExploreBtnArrow = document.querySelector(".explore-btn--arrow"), this._aboutExploreBtnText = document.querySelector(".explore-btn--text"), this._aboutExploreBtn.addEventListener("mouseenter", (function() {
                            return e._onMouseEnter()
                        }), !1), this._aboutExploreBtn.addEventListener("mouseleave", (function() {
                            return e._onMouseLeave()
                        }), !1), this._aboutCloseBtn.addEventListener("click", (function() {
                            return e._hide()
                        }), !1), this.init()
                    }
                }, {
                    key: "init",
                    value: function() {
                        this._initFadeInAnimation(), this._initFadeOutAnimation(), this._initHoverAnimation()
                    }
                }, {
                    key: "addLinkHoverEvents",
                    value: function() {
                        for (var e = this, t = this._about.querySelectorAll("a"), n = function() {
                                return e._onLinkHover()
                            }, r = 0, i = t.length; r < i; r++) t[r].addEventListener("mouseenter", n, !1);
                        this._aboutCloseBtn.addEventListener("mouseenter", n, !1)
                    }
                }, {
                    key: "_onLinkHover",
                    value: function() {
                        l.playHover()
                    }
                }, {
                    key: "_initFadeInAnimation",
                    value: function() {
                        this._tlFadeIn.to(this._about, {
                            opacity: 1
                        }).fromTo(this._aboutExploreBtn, {
                            opacity: 0,
                            y: 20
                        }, {
                            opacity: 1,
                            y: 0
                        })
                    }
                }, {
                    key: "_initFadeOutAnimation",
                    value: function() {
                        this._tlFadeOut.to(this._about, {
                            opacity: 0
                        })
                    }
                }, {
                    key: "_initHoverAnimation",
                    value: function() {
                        this._tlHover.to(this._aboutExploreBtnArrow, {
                            x: 30,
                            duration: 1,
                            ease: u.create("easeCubic", "0.42, 0, 0, 0.99")
                        }, 0).to(this._aboutExploreBtnText, {
                            x: 35,
                            duration: .85,
                            ease: u.create("easeCubic", "0.42, 0, 0, 0.99")
                        }, .2)
                    }
                }, {
                    key: "_show",
                    value: function() {
                        clearTimeout(this._hideTimeout), this._about.style.pointerEvents = "auto", this._about.style.display = "inline-block", this._tlFadeIn.restart()
                    }
                }, {
                    key: "_hide",
                    value: function() {
                        var e = this;
                        clearTimeout(this._hideTimeout), this._about.style.pointerEvents = "none", this._tlFadeOut.restart(), this._hideTimeout = setTimeout((function() {
                            e._about.style.display = "none"
                        }), 1e3)
                    }
                }, {
                    key: "_onClickClose",
                    value: function(e) {}
                }, {
                    key: "_onMouseEnter",
                    value: function() {
                        this._tlHover.play()
                    }
                }, {
                    key: "_onMouseLeave",
                    value: function() {
                        this._tlHover.pause(), this._tlHover.reverse()
                    }
                }, {
                    key: "update",
                    value: function() {}
                }, {
                    key: "resize",
                    value: function() {}
                }]), e
            }();
        n.About = c
    }, {
        "../../audios/audios": 66,
        "../../core/browser": 70,
        "../../libs/gsap/CustomEase": 84,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        gsap: 28
    }],
    101: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault");
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.Preloader = void 0;
        var i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("gsap"),
            u = e("../../core/settings"),
            l = e("../../core/properties"),
            c = function() {
                function e() {
                    (0, i.default)(this, e), (0, o.default)(this, "_percent", 0), (0, o.default)(this, "_targetPercent", 0), (0, o.default)(this, "_cb", void 0), (0, o.default)(this, "_container", void 0), (0, o.default)(this, "_logo", void 0), (0, o.default)(this, "_text", void 0), (0, o.default)(this, "_startPreloadAnimation", !1), (0, o.default)(this, "_isCompleted", !1)
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function(e) {
                        var t = this;
                        this._container = document.getElementById("preloader"), this._logo = document.getElementById("preloader-logo-title"), this._text = document.getElementById("preloader-text"), this._cb = e, l.loader.start((function(e) {
                            t._targetPercent = e
                        })), this.show()
                    }
                }, {
                    key: "show",
                    value: function() {
                        var e = this;
                        this._container.classList.add("is-active"), s.gsap.set(this._text, {
                            x: -20,
                            force3D: !0
                        }), s.gsap.to(this._text, {
                            duration: .4,
                            delay: .5,
                            x: 0,
                            opacity: 1,
                            ease: Cubic.easeOut,
                            onComplete: function() {
                                e._startPreloadAnimation = !0
                            }
                        }), u.SKIP_ANIMATION && (this._startPreloadAnimation = !0)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        var e = this;
                        this._container.classList.remove("is-active"), s.gsap.to(this._logo, {
                            duration: .75,
                            x: -10,
                            opacity: 0,
                            ease: Cubic.easeIn
                        }), s.gsap.to(this._text, {
                            duration: .4,
                            delay: .5,
                            x: 20,
                            opacity: 0,
                            ease: Cubic.easeOutIn
                        }), s.gsap.to(this._container, {
                            opacity: 0,
                            onComplete: function() {
                                e._container.remove()
                            }
                        })
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        this._percent = Math.min(this._targetPercent, this._percent + (u.SKIP_ANIMATION ? 1 : e / 1.5)), 1 == this._percent && (this._isCompleted || (this._isCompleted = !0, document.documentElement.classList.add("is-ready"), this.hide(), this._cb()))
                    }
                }]), e
            }();
        n.Preloader = c
    }, {
        "../../core/properties": 71,
        "../../core/settings": 72,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        gsap: 28
    }],
    102: [function(e, t, n) {
        "use strict";
        var r, i, a, o, s, u, l, c = e("./pages/AboutPage"),
            h = e("./pages/PreloaderPage"),
            d = e("./components/CinematicOverlay"),
            f = e("./components/Hold"),
            p = e("../libs/splitting"),
            v = e("../core/browser"),
            m = (e("../core/settings"), e("../core/properties")),
            g = e("../visuals/stages"),
            y = e("../audios/audios"),
            _ = e("../utils/math"),
            x = e("../utils/ease");

        function b() {
            if (u) {
                var e = +this.dataset.id;
                u.index != e && y.playHover()
            }
        }

        function w() {
            if (u) {
                var e = +this.dataset.id;
                u.index != e && g.changeTo(e)
            }
        }

        function T(e) {
            if (u = e, l.setHeadline(u), o) {
                var t = o;
                t.style.pointerEvents = "none", gsap.to(s, {
                    duration: .3,
                    stagger: -.05,
                    opacity: 0,
                    force3D: !0,
                    x: -20,
                    onComplete: function() {
                        t.parentNode.removeChild(t)
                    }
                });
                for (var n = 0; n < s.length; n++) {
                    var r = s[n];
                    r.__data = null, r.removeEventListener("click", S), v.isMobile || r.addEventListener("mouseenter", M)
                }
            }(o = document.createElement("div")).className = "themes-selector-options-wrapper";
            for (var i = e.getThemes(), c = "", h = 0; h < i.length; h++) c += '<div class="themes-selector-option"><div class="themes-selector-option-color"></div></div>';
            o.innerHTML = c, s = o.querySelectorAll(".themes-selector-option-color"), gsap.set(s, {
                opacity: 0,
                force3D: !0,
                x: -30
            }), gsap.to(s, {
                duration: .3,
                stagger: -.05,
                opacity: 1,
                force3D: !0,
                x: 0
            });
            for (var d = 0; d < i.length; d++) {
                var f = i[d],
                    p = s[d];
                p.style.background = "linear-gradient(126deg, ".concat(f.color1, " 0%, ").concat(f.color2, " 100%)"), p.dataset.color = f.color, p.classList.toggle("is-selected", !!f.isSelected), p.__data = f, p.addEventListener("click", S), v.isMobile || p.addEventListener("mouseenter", M)
            }
            a.appendChild(o)
        }

        function M() {
            this.classList.contains("is-selected") || y.playHover()
        }

        function S() {
            if ((0 !== u.index || !u.changeThemeIsActive) && u.changeTheme(this.__data)) {
                y.playChange();
                for (var e = 0; e < s.length; e++) {
                    var t = s[e],
                        n = this.__data === t.__data;
                    t.__data.isSelected = n, t.classList.toggle("is-selected", n)
                }
            }
        }
        n.preInit = function(e) {
            this._preloader = new h.Preloader, this._about = new c.About, l = new d.Cinematic, this._holdBtn = new f.Hold, this._preloader.preInit(e), this._about.preInit(), l.preInit(), this._holdBtn.preInit(), this._aboutBtn = document.querySelector(".header-more--about"), (0, p.splitText)()
        }, n.init = function() {
            var e = this;
            r = document.querySelectorAll(".stage-nav-btn"), i = document.querySelectorAll(".stage-nav-btn-text-wrapper"), r.forEach((function(e) {
                e.addEventListener("click", w), e.addEventListener("mouseenter", b)
            })), a = document.getElementById("themes-selector"), this._aboutBtn.addEventListener("click", (function() {
                e._about._show()
            }), !1), this._aboutBtn.addEventListener("mouseenter", (function() {
                y.playHover()
            }), !1), g.onChangeStarted.add(T), this._holdBtn.onMouseDown.add((function() {
                return l.show()
            })), this._holdBtn.onMouseUp.add((function() {
                return l.hide()
            })), this._about.addLinkHoverEvents()
        }, n.start = function() {
            gsap.fromTo("#header-logo-title", {
                x: -20
            }, {
                x: 0,
                opacity: 1,
                duration: .5
            })
        }, n.resize = function() {
            l.resize()
        }, n.update = function(e) {
            if (this._preloader.update(e), l.update(e), m.hasInitialized) {
                this._holdBtn.update(), r[0].style.transform = "translate3d(" + _.fit(g.currentIndexRatio - (1 - m.showAnimation), .4, .8, -104, 0, x.easeInOutCubic) + "%,0,0)", r[1].style.transform = "translate3d(" + _.fit(g.currentIndexRatio + (1 - m.showAnimation), .2, .6, 0, 104, x.easeInOutCubic) + "%,0,0)";
                var t = v.isMobile ? 150 : 250;
                i[0].style.width = Math.min(m.showAnimation * t, _.fit(g.currentIndexRatio, .6, 1, 0, t, x.easeInOutCubic)) + "px", i[1].style.width = Math.min(m.showAnimation * t, _.fit(g.currentIndexRatio, 0, .4, t, 0, x.easeInOutCubic)) + "px"
            }
        }
    }, {
        "../audios/audios": 66,
        "../core/browser": 70,
        "../core/properties": 71,
        "../core/settings": 72,
        "../libs/splitting": 86,
        "../utils/ease": 103,
        "../utils/math": 104,
        "../visuals/stages": 122,
        "./components/CinematicOverlay": 97,
        "./components/Hold": 98,
        "./pages/AboutPage": 100,
        "./pages/PreloaderPage": 101
    }],
    103: [function(e, t, n) {
        "use strict";
        var r, i, a = {
            Linear: {
                None: function(e) {
                    return e
                }
            },
            Quad: {
                In: function(e) {
                    return e * e
                },
                Out: function(e) {
                    return e * (2 - e)
                },
                InOut: function(e) {
                    return (e *= 2) < 1 ? .5 * e * e : -.5 * (--e * (e - 2) - 1)
                }
            },
            Cubic: {
                In: function(e) {
                    return e * e * e
                },
                Out: function(e) {
                    return --e * e * e + 1
                },
                InOut: function(e) {
                    return (e *= 2) < 1 ? .5 * e * e * e : .5 * ((e -= 2) * e * e + 2)
                }
            },
            Quart: {
                In: function(e) {
                    return e * e * e * e
                },
                Out: function(e) {
                    return 1 - --e * e * e * e
                },
                InOut: function(e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e : -.5 * ((e -= 2) * e * e * e - 2)
                }
            },
            Quint: {
                In: function(e) {
                    return e * e * e * e * e
                },
                Out: function(e) {
                    return --e * e * e * e * e + 1
                },
                InOut: function(e) {
                    return (e *= 2) < 1 ? .5 * e * e * e * e * e : .5 * ((e -= 2) * e * e * e * e + 2)
                }
            },
            Sine: {
                In: function(e) {
                    return 1 - Math.cos(e * Math.PI / 2)
                },
                Out: function(e) {
                    return Math.sin(e * Math.PI / 2)
                },
                InOut: function(e) {
                    return .5 * (1 - Math.cos(Math.PI * e))
                }
            },
            Expo: {
                In: function(e) {
                    return 0 === e ? 0 : Math.pow(1024, e - 1)
                },
                Out: function(e) {
                    return 1 === e ? 1 : 1 - Math.pow(2, -10 * e)
                },
                InOut: function(e) {
                    return 0 === e ? 0 : 1 === e ? 1 : (e *= 2) < 1 ? .5 * Math.pow(1024, e - 1) : .5 * (2 - Math.pow(2, -10 * (e - 1)))
                }
            },
            Circ: {
                In: function(e) {
                    return 1 - Math.sqrt(1 - e * e)
                },
                Out: function(e) {
                    return Math.sqrt(1 - --e * e)
                },
                InOut: function(e) {
                    return (e *= 2) < 1 ? -.5 * (Math.sqrt(1 - e * e) - 1) : .5 * (Math.sqrt(1 - (e -= 2) * e) + 1)
                }
            },
            Elastic: {
                In: function(e) {
                    var t, n = .1;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || n < 1 ? (n = 1, t = .1) : t = .4 * Math.asin(1 / n) / (2 * Math.PI), -n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / .4))
                },
                Out: function(e) {
                    var t, n = .1;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || n < 1 ? (n = 1, t = .1) : t = .4 * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * e) * Math.sin(2 * (e - t) * Math.PI / .4) + 1)
                },
                InOut: function(e) {
                    var t, n = .1,
                        r = .4;
                    return 0 === e ? 0 : 1 === e ? 1 : (!n || n < 1 ? (n = 1, t = .1) : t = r * Math.asin(1 / n) / (2 * Math.PI), (e *= 2) < 1 ? -.5 * n * Math.pow(2, 10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / r) : n * Math.pow(2, -10 * (e -= 1)) * Math.sin(2 * (e - t) * Math.PI / r) * .5 + 1)
                }
            },
            Back: {
                In: function(e) {
                    var t = 1.70158;
                    return e * e * ((t + 1) * e - t)
                },
                Out: function(e) {
                    var t = 1.70158;
                    return --e * e * ((t + 1) * e + t) + 1
                },
                InOut: function(e) {
                    var t = 2.5949095;
                    return (e *= 2) < 1 ? .5 * e * e * ((t + 1) * e - t) : .5 * ((e -= 2) * e * ((t + 1) * e + t) + 2)
                }
            },
            Bounce: {
                In: function(e) {
                    return 1 - a.Bounce.Out(1 - e)
                },
                Out: function(e) {
                    return e < 1 / 2.75 ? 7.5625 * e * e : e < 2 / 2.75 ? 7.5625 * (e -= 1.5 / 2.75) * e + .75 : e < 2.5 / 2.75 ? 7.5625 * (e -= 2.25 / 2.75) * e + .9375 : 7.5625 * (e -= 2.625 / 2.75) * e + .984375
                },
                InOut: function(e) {
                    return e < .5 ? .5 * a.Bounce.In(2 * e) : .5 * a.Bounce.Out(2 * e - 1) + .5
                }
            }
        };
        for (r in n.basic = a, n.linear = a.Linear, a) "Linear" !== r && (i = a[r], n["easeIn" + r] = i.In, n["easeOut" + r] = i.Out, n["easeInOut" + r] = i.InOut)
    }, {}],
    104: [function(e, t, n) {
        "use strict";
        Object.defineProperty(n, "__esModule", {
            value: !0
        }), n.unMix = n.step = n.smoothstep = n.sign = n.saturate = n.powerTwoFloorBase = n.powerTwoFloor = n.powerTwoCeilingBase = n.powerTwoCeiling = n.normalize = n.mix = n.map = n.lerp = n.latLngDistance = n.latLngBearing = n.isPowerOfTwo = n.hash2 = n.hash = n.getRandomFloat = n.getAngle = n.fract = n.fit = n.distanceTo3 = n.distanceTo = n.distanceSqrTo3 = n.distanceSqrTo = n.cubicBezierFn = n.cubicBezier = n.closestAngleTo = n.clamp = n.cUnMix = n.cMix = n.cMap = n.RAD2DEG = n.PI2 = n.PI = n.HALF_PI = n.DEG2RAD = void 0;
        var r = Math.PI;
        n.PI = r;
        var i = 2 * r;
        n.PI2 = i;
        var a = .5 * r;
        n.HALF_PI = a;
        var o = r / 180;
        n.DEG2RAD = o;
        var s = 180 / r;
        n.RAD2DEG = s;
        n.step = function(e, t) {
            return t < e ? 0 : 1
        };
        var u = function(e, t, n) {
            return e < t ? t : e > n ? n : e
        };
        n.clamp = u;
        n.mix = function(e, t, n) {
            return e + (t - e) * n
        };
        n.cMix = function(e, t, n) {
            return e + (t - e) * u(n, 0, 1)
        };
        n.unMix = function(e, t, n) {
            return (n - e) / (t - e)
        };
        var l = function(e, t, n) {
            return u((n - e) / (t - e), 0, 1)
        };
        n.cUnMix = l;
        n.saturate = function(e) {
            return u(e, 0, 1)
        };
        var c = function(e, t, n, r, i) {
            return r + (i - r) * (e - t) / (n - t)
        };
        n.map = c;
        n.cMap = function(e, t, n, r, i) {
            return r + (i - r) * u((e - t) / (n - t), 0, 1)
        };
        n.fit = function(e, t, n, r, i, a) {
            return e = l(t, n, e), a && (e = a(e)), r + e * (i - r)
        };
        n.normalize = function(e, t, n) {
            return c(e, t, n, 0, 1)
        };
        n.smoothstep = function(e, t, n) {
            return (n = l(e, t, n)) * n * (3 - 2 * n)
        };
        var h = function(e) {
            return e - Math.floor(e)
        };
        n.fract = h;
        n.hash = function(e) {
            return h(43758.5453123 * Math.sin(e))
        };
        n.hash2 = function(e, t) {
            return h(43758.5453 * Math.sin(12.9898 * e + 4.1414 * t))
        };
        n.sign = function(e) {
            return e ? e < 0 ? -1 : 1 : 0
        };
        var d = function(e) {
            return (e & -e) === e
        };
        n.isPowerOfTwo = d;
        var f = function(e) {
            return Math.ceil(Math.log(e) / Math.log(2))
        };
        n.powerTwoCeilingBase = f;
        n.powerTwoCeiling = function(e) {
            return d(e) ? e : 1 << f(e)
        };
        var p = function(e) {
            return Math.floor(Math.log(e) / Math.log(2))
        };
        n.powerTwoFloorBase = p;
        n.powerTwoFloor = function(e) {
            return d(e) ? e : 1 << p(e)
        };
        n.latLngBearing = function(e, t, n, r) {
            var i = Math.sin(r - t) * Math.cos(n),
                a = Math.cos(e) * Math.sin(n) - Math.sin(e) * Math.cos(n) * Math.cos(r - t);
            return Math.atan2(i, a)
        };
        n.distanceTo = function(e, t) {
            return Math.sqrt(e * e + t * t)
        };
        n.distanceSqrTo = function(e, t) {
            return e * e + t * t
        };
        n.distanceTo3 = function(e, t, n) {
            return Math.sqrt(e * e + t * t + n * n)
        };
        n.distanceSqrTo3 = function(e, t, n) {
            return e * e + t * t + n * n
        };
        n.latLngDistance = function(e, t, n, r) {
            var i = Math.sin((n - e) / 2),
                a = Math.sin((r - t) / 2),
                o = i * i + Math.cos(e) * Math.cos(n) * a * a;
            return 2 * Math.atan2(Math.sqrt(o), Math.sqrt(1 - o))
        };
        n.cubicBezier = function(e, t, n, r, i) {
            var a = 3 * (t - e),
                o = 3 * (n - t) - a,
                s = i * i;
            return (r - e - a - o) * (s * i) + o * s + a * i + e
        };
        n.cubicBezierFn = function(e, t, n, r) {
            var i = 3 * (t - e),
                a = 3 * (n - t) - i,
                o = r - e - i - a;
            return function(t) {
                var n = t * t;
                return o * (n * t) + a * n + i * t + e
            }
        };
        n.closestAngleTo = function(e, t) {
            var n = t - e;
            return n = (n += r) < 0 ? i - Math.abs(n % i) : n % i, e + (n -= r)
        };
        n.getRandomFloat = function(e, t) {
            return Math.random() * (t - e) + e
        };
        n.lerp = function(e, t, n) {
            return (1 - n) * e + n * t
        };
        n.getAngle = function(e, t) {
            return 180 * Math.atan2(t, e) / Math.PI
        }
    }, {}],
    105: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("../core/properties"),
            u = e("./VisualProfile"),
            l = e("three"),
            c = function() {
                function e(t, n) {
                    (0, i.default)(this, e), (0, o.default)(this, "container", null), (0, o.default)(this, "index", null), (0, o.default)(this, "visualProfile", null), (0, o.default)(this, "isActive", !1), (0, o.default)(this, "activeRatio", 0), this.index = t, this.visualProfile = new u(n), this.container = new l.Object3D, this.container.visible = !1, this.container.matrixAutoUpdate = !1, this.container.userData.name = "stage_".concat(t)
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {}
                }, {
                    key: "init",
                    value: function() {}
                }, {
                    key: "resize",
                    value: function(e, t) {}
                }, {
                    key: "update",
                    value: function(e) {}
                }, {
                    key: "getThemes",
                    value: function() {
                        return []
                    }
                }, {
                    key: "changeTheme",
                    value: function(e) {
                        return !0
                    }
                }, {
                    key: "show",
                    value: function() {
                        this.container.visible = !0, this.isActive = !0, this.visualProfile.apply(), s.orbitCamera.position.set(3, 0, 4)
                    }
                }, {
                    key: "hide",
                    value: function() {
                        this.container.visible = !1, this.isActive = !1
                    }
                }, {
                    key: "onDown",
                    value: function() {}
                }]), e
            }();
        t.exports = c
    }, {
        "../core/properties": 71,
        "./VisualProfile": 106,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        three: 63
    }],
    106: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = e("../core/properties"),
            u = e("mout/object/mixIn"),
            l = function() {
                function e(t) {
                    (0, i.default)(this, e), (0, o.default)(this, "config", {}), u(this.config, {
                        bgColorHex: "#000000",
                        opacity: 1,
                        bloomAmount: 1.4,
                        bloomRadius: 0,
                        bloomThreshold: .2,
                        bloomSmoothWidth: .75,
                        vignetteFrom: .6,
                        vignetteTo: 1.6,
                        vignetteColorHex: "#000000",
                        saturation: 1,
                        contrast: 0,
                        brightness: 1,
                        tintColorHex: "#0044ef",
                        tintOpacity: .1,
                        bokehAutoDistance: !1,
                        bokehAmount: 0,
                        bokehFNumber: .181,
                        bokehFocusDistance: 2.515,
                        bokehFocalLength: .344,
                        bokehKFilmHeight: 19.26,
                        cameraLookX: 0,
                        cameraLookY: 0,
                        cameraLookStrength: .05,
                        cameraLookEaseDamp: .075,
                        cameraDistance: 3,
                        cameraShakePositionStrength: .06,
                        cameraShakePositionSpeed: .3,
                        cameraShakeRotationStrength: .03,
                        cameraShakeRotationSpeed: .3,
                        cameraShakeBlurAmount: 0
                    }, t)
                }
                return (0, a.default)(e, [{
                    key: "apply",
                    value: function() {
                        u(s, this.config)
                    }
                }]), e
            }();
        t.exports = l
    }, {
        "../core/properties": 71,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "mout/object/mixIn": 46
    }],
    107: [function(e, t, n) {
        "use strict";
        t.exports = {
            frontLeft: {
                x: .901386,
                y: .374643,
                z: 1.67812,
                isFlipped: !1
            },
            frontRight: {
                x: -.85745,
                y: .374643,
                z: 1.67812,
                isFlipped: !0
            },
            backLeft: {
                x: .901386,
                y: .374643,
                z: -1.2346,
                isFlipped: !1
            },
            backRight: {
                x: -.85745,
                y: .374643,
                z: -1.2346,
                isFlipped: !0
            }
        }
    }, {}],
    108: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/typeof")),
            a = r(e("@babel/runtime/helpers/asyncToGenerator"));

        function o() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            o = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                s = a.iterator || "@@iterator",
                u = a.asyncIterator || "@@asyncIterator",
                l = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == (0, i.default)(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[s];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, l, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, u, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, l, "Generator"), c(x, s, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var s = e("../../../core/settings"),
            u = e("../../../core/properties"),
            l = e("three"),
            c = e("glslify"),
            h = e("../../../helpers/fboHelper"),
            d = e("../../../helpers/colorHelper"),
            f = e("gsap/gsap-core").gsap;
        n.preInit = function() {
            u.loader.add(s.TEXTURE_PATH + "gradient.jpg", {
                type: "texture",
                weight: 200,
                onLoad: function(e) {
                    return g = e
                }
            }).content, u.loader.add(s.TEXTURE_PATH + "mask_gradient.jpg", {
                type: "texture",
                weight: 200,
                onLoad: function(e) {
                    return y = e
                }
            }).content
        }, n.init = function(e, t) {
            v = new l.RawShaderMaterial({
                uniforms: S,
                vertexShader: h.vertexShader,
                fragmentShader: h.precisionPrefix + c(["#define GLSLIFY 1\n\nuniform float u_time;\nuniform float u_speed;\nuniform float u_size;\nuniform float u_resolution;\nvarying vec2 v_uv;\n\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex \n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r){\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v){ \n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n  // First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n  // Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n  // Permutations\n  i = mod289(i); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n  //Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n  // Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), \n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main(){\t\n    //float val = snoise(vec3(uv.x * size, uv.y * size, iTime * speed)); lets see\n    float snoiseValue = snoise(vec3(v_uv.x * u_size - ( u_time * u_speed ), v_uv.y * u_size, 1.0)) * u_resolution;\n\n// snoiseValue *= smoothstep(0.001, 0.001, abs(snoiseValue)); // road stripe\n\n\t  gl_FragColor = vec4(snoiseValue);\n\n}"])
            }), m = h.createRenderTarget(T, M, !1);
            var r = function() {
                for (var e = [], t = x, n = b, r = w, i = 0; i < t; i += 1)
                    for (var a = 0; a < n; a += 1) {
                        var o = new l.Vector3((i - t / 2) * r, 0, (a - n / 2) * r);
                        e.push(o)
                    }
                return e
            }();
            if (_ = function(e, t) {
                    var n = t.length,
                        r = .125,
                        i = new l.BoxBufferGeometry(r, r, r);
                    i.translate(0, .0625, 0);
                    var a = new l.InstancedBufferGeometry;
                    for (var o in i.attributes) a.setAttribute(o, i.attributes[o]);
                    i.index && a.setIndex(i.getIndex());
                    for (var s = new Float32Array(3 * n), u = 0, d = 0; u < n; u++) {
                        var f = t[u];
                        s[d + 0] = f.x, s[d + 1] = f.y, s[d + 2] = f.z, d += 3
                    }
                    return a.setAttribute("instancePositions", new l.InstancedBufferAttribute(s, 3)), p = new l.InstancedMesh(a, new l.RawShaderMaterial({
                        uniforms: {
                            u_time: S.u_time,
                            u_gridSize: S.u_gridSize,
                            u_gridSpacing: S.u_gridSpacing,
                            u_noiseTexture: {
                                value: m.texture
                            },
                            u_diffLightPos: {
                                value: new l.Vector3(0, 12, 0)
                            },
                            u_diffLightColor: {
                                value: new l.Color(e.ground.diffLightColor)
                            },
                            u_diffLightIntensity: {
                                value: e.ground.diffLightIntensity
                            },
                            u_mainColor: {
                                value: new l.Color(e.ground.mainColor)
                            },
                            u_radialGradientTexture: {
                                value: g
                            },
                            u_linearGradientTexture: {
                                value: y
                            },
                            u_strength: {
                                value: e.ground.maskStrength
                            },
                            u_progress: {
                                value: 0
                            }
                        },
                        transparent: !0,
                        vertexShader: c(["#define GLSLIFY 1\n\nattribute vec3 position; \nattribute vec3 normal; \nattribute vec3 instancePositions;\nattribute vec2 uv;\n\n//Built-in\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix; \nuniform mat3 normalMatrix; \n\nuniform sampler2D u_noiseTexture;\nuniform float u_time;\nuniform float u_gridSize;\nuniform float u_gridSpacing;\n\nuniform sampler2D u_radialGradientTexture;\nuniform sampler2D u_linearGradientTexture;\n\nvarying vec3 v_viewPosition;\nvarying vec3 v_viewNormal;\nvarying float v_radialMaskValue;\nvarying float v_linearMaskValue;\nvarying vec3 v_position;\n//varying float v_ao;\n\nfloat getNoise (vec3 worldPos, sampler2D texture) {\n    vec2 noiseTextureUv =  worldPos.xz / (u_gridSize * u_gridSpacing) + 0.5;\n    noiseTextureUv.y = 1.0 - noiseTextureUv.y;\n    return texture2D(texture, noiseTextureUv).r;\n}\n\n// vec4 hash44(vec4 p4) {\n// \tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n//     p4 += dot(p4, p4.wzxy+33.33);\n//     return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n// }\n\nvoid main(){\n\n    vec3 offset = vec3(mod(u_time * 2.5, u_gridSpacing), 0.0, 0.0);\n\n    vec3 pos = position + offset;\n\n    // const int SAMPLE_COUNT = 16;\n    // float CUBE_SIZE = 0.125;\n\n    // float isBottom = pos.y < 0.01 ? 1.0 : 0.0;\n\n    float noiseValue = getNoise(instancePositions + offset, u_noiseTexture);\n\n    // if (pos.y < 0.01) {\n    //     vec3 heightSamplePosition = instancePositions;\n    //     heightSamplePosition += normal * CUBE_SIZE * isBottom;\n    //     noiseValue = min(getNoise(heightSamplePosition), noiseValue);\n    // }\n\n    v_radialMaskValue = getNoise(instancePositions + offset,u_radialGradientTexture);\n    v_linearMaskValue = getNoise(instancePositions + offset,u_linearGradientTexture);\n\n    pos.y += noiseValue;\n    pos += instancePositions;\n\n    // vec3 worldNormal = normal; // no rotation anyway\n\n    // float hitCount = 0.0;\n    // vec3 orgin = pos;\n    // for (int i = 0; i < SAMPLE_COUNT; i++) {\n    //     vec4 rand4 = hash44(vec4(pos.xzz + worldNormal, float(i)) * 10.0);\n\n    //     float sampleDist = (0.5 + pow(rand4.w, 1.0) * 5.0) * CUBE_SIZE;\n    //     vec3 sampleVec = normalize(worldNormal + normalize(rand4.xyz - 0.5) * 0.75);\n    //     sampleVec *= sampleDist;\n        \n    //     float sampleHeight = getNoise(orgin + sampleVec);\n    //     hitCount += step(noiseValue + 0.01, sampleHeight);\n    // }\n\n    // v_ao = 0.35 + pow((1.0 - float(hitCount) / float(SAMPLE_COUNT)), 0.5) * 0.65;\n\n    //Road strip\n    pos.y *= smoothstep(.75, 6.0, abs(pos.z)); \n    \n    v_position = pos;\n    \n    vec4 viewPosition = modelViewMatrix * vec4(pos, 1.0);\n    v_viewPosition = viewPosition.xyz;\n\n    v_viewNormal = normalMatrix * normal;\n    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4( pos, 1.0 );\n}\n"]),
                        fragmentShader: h.precisionPrefix + c(["#define GLSLIFY 1\nuniform vec3 u_diffLightPos;\nuniform vec3 u_diffLightColor;\nuniform float u_diffLightIntensity;\nuniform vec3 u_mainColor;\nuniform float u_progress;\nuniform float u_strength;\n\nvarying vec3 v_viewPosition;\nvarying vec3 v_viewNormal;\nvarying float v_radialMaskValue;\nvarying float v_linearMaskValue;\nvarying vec3 v_position;\n//varying float v_ao;\n\nvoid main(){\n  //vec3 color = vec3(v_ao);\n  vec3 viewNormal = normalize(v_viewNormal);\n\t\n  vec3 viewLightPos = u_diffLightPos;\n\tvec3 viewLightDir = normalize(viewLightPos - v_viewPosition);\n\n\tfloat diff = max(0.0, dot(viewNormal, viewLightDir)) * u_diffLightIntensity;\n  vec3 diffLight = diff * u_diffLightColor;\n  //float specLight = max(0.0, dot(reflect(normalize(v_viewPosition), viewNormal), viewLightDir));\n  \n\n  float range = 10.0 - u_progress * 10.0; \n  float visibility = (v_linearMaskValue - u_strength);\n  vec3 fadeColor = (u_mainColor.rgb + normalize((v_position.x) + range ) + visibility + u_progress) ;\n\n\tvec4 outputColor = vec4(mix(diffLight, fadeColor, 0.2),1.0);\n  \n  gl_FragColor = vec4(outputColor.rgb, v_radialMaskValue);\n\n  //gl_FragColor = vec4(outputColor.rgb + u_mainColor, v_radialMaskValue);\n\n\tfloat luma = dot(gl_FragColor.rgb, vec3(0.299, 0.587, 0.114));\n\n  float u_saturation = 0.5;\n  float u_contrast = 0.5;\n  float u_brightness = 0.0;\n\n\tgl_FragColor.rgb = mix(vec3(luma), gl_FragColor.rgb, 1.0 + u_saturation);\n\tgl_FragColor.rgb = 0.5 + (1.0 + u_contrast) * (gl_FragColor.rgb - 0.5);\n\tgl_FragColor.rgb += u_brightness;\n\n  if(gl_FragColor.a<.01)discard;\n}\n"])
                    }), n)
                }(e, r), n.container.add(_), t) {
                var i = t.addFolder("ground");
                i.addColor(u.ground, "mainColor").listen(), i.addColor(u.ground, "diffLightColor").listen(), i.add(u.ground, "diffLightIntensity", 0, 1, 1e-5).listen(), i.add(u.ground, "maskStrength", 0, 2, 1e-5).listen(), i.open()
            }
        }, n.changeColors = function(e) {
            return A.apply(this, arguments)
        }, n.update = function(e) {
            S.u_time.value += e, h.render(v, m), s.LOOK_DEV_MODE && window.dat && (_.material.uniforms.u_diffLightColor.value.setStyle(u.ground.diffLightColor), _.material.uniforms.u_diffLightIntensity.value = u.ground.diffLightIntensity, _.material.uniforms.u_mainColor.value.setStyle(u.ground.mainColor), _.material.uniforms.u_strength.value = u.ground.maskStrength)
        }, n.container = new l.Object3D, n.container.rotation.y = .5 * Math.PI;
        var p, v, m, g, y, _, x = 120,
            b = 120,
            w = .125,
            T = x,
            M = b,
            S = {
                u_time: {
                    value: 0
                },
                u_speed: {
                    value: 1
                },
                u_size: {
                    value: 4
                },
                u_resolution: {
                    value: 1
                },
                u_gridSize: {
                    value: 120
                },
                u_gridSpacing: {
                    value: w
                }
            },
            E = !1;

        function A() {
            return (A = (0, a.default)(o().mark((function e(t) {
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            if (!E) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return");
                        case 2:
                            return E = !0, u.ground.diffLightColor = t.ground.diffLightColor, u.ground.diffLightIntensity = t.ground.diffLightIntensity, u.ground.mainColor = t.ground.mainColor, u.ground.maskStrength = t.ground.maskStrength, e.abrupt("return", Promise.all([f.to(p.material.uniforms.u_strength, {
                                value: 1.25
                            }), f.to(p.material.uniforms.u_strength, {
                                value: 0,
                                duration: .5,
                                delay: .5
                            }), f.fromTo(p.material.uniforms.u_progress, {
                                value: 0
                            }, {
                                value: 2,
                                duration: 1,
                                onComplete: function() {
                                    return E = !1
                                }
                            }), d.fadeShaderColor(p.material.uniforms.u_diffLightColor, t.ground.diffLightColor, 1, 0), d.fadeShaderColor(p.material.uniforms.u_mainColor, t.ground.mainColor, 0, 0)]));
                        case 8:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../helpers/colorHelper": 78,
        "../../../helpers/fboHelper": 79,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        glslify: 27,
        "gsap/gsap-core": 29,
        three: 63
    }],
    109: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/typeof")),
            a = r(e("@babel/runtime/helpers/asyncToGenerator"));

        function o() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            o = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                s = a.iterator || "@@iterator",
                u = a.asyncIterator || "@@asyncIterator",
                l = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == (0, i.default)(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[s];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, l, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, u, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, l, "Generator"), c(x, s, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var s, u = e("three"),
            l = e("../../../helpers/colorHelper"),
            c = e("../../../core/properties"),
            h = e("../../../core/settings");

        function d() {
            return (d = (0, a.default)(o().mark((function e(t) {
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return c.lightning.topColor = t.lightning.topColor, c.lightning.bottomColor = t.lightning.bottomColor, c.lightning.intensity = t.lightning.intensity, s.color.setStyle(c.lightning.topColor), s.groundColor.setStyle(c.lightning.bottomColor), e.abrupt("return", Promise.all([l.fadeShaderColor(s, s.color, c.lightning.topColor, .5, 0), l.fadeShaderColor(s, s.groundColor, c.lightning.bottomColor, .5, 0), gsap.to(s, {
                                intensity: c.lightning.intensity,
                                duration: .5
                            })]));
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }
        n.preInit = function() {
            n.container = new u.Object3D, s = new u.HemisphereLight, n.container.add(s)
        }, n.init = function(e, t) {
            if (t) {
                c.lightning.topColor = e.lightning.topColor, c.lightning.bottomColor = e.lightning.bottomColor, c.lightning.intensity = e.lightning.intensity;
                var n = t.addFolder("light");
                n.addColor(c.lightning, "topColor").listen(), n.addColor(c.lightning, "bottomColor").listen(), n.add(c.lightning, "intensity", 0, 3, 1e-5).listen(), n.open(), n.open()
            }
        }, n.changeColors = function(e) {
            return d.apply(this, arguments)
        }, n.update = function(e) {
            h.LOOK_DEV_MODE && window.dat && (s.color.setStyle(c.lightning.topColor), s.groundColor.setStyle(c.lightning.bottomColor), s.intensity = c.lightning.intensity)
        }, n.container = null
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../helpers/colorHelper": 78,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        three: 63
    }],
    110: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/typeof")),
            a = r(e("@babel/runtime/helpers/asyncToGenerator"));

        function o() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            o = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                s = a.iterator || "@@iterator",
                u = a.asyncIterator || "@@asyncIterator",
                l = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == (0, i.default)(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[s];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, l, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, u, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, l, "Generator"), c(x, s, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var s, u = e("three"),
            l = e("glslify"),
            c = e("../../../helpers/colorHelper"),
            h = e("../../../core/properties"),
            d = e("../../../core/settings");

        function f() {
            return (f = (0, a.default)(o().mark((function e(t) {
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return h.sky.topColor = t.sky.topColor, h.sky.bottomColor = t.sky.bottomColor, h.sky.offset = t.sky.offset, h.sky.exponent = t.sky.exponent, e.abrupt("return", Promise.all([c.fadeShaderColor(s.material.uniforms.topColor, t.sky.topColor, .5, .15), c.fadeShaderColor(s.material.uniforms.bottomColor, t.sky.bottomColor, .5, .15)]));
                        case 5:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }
        n.preInit = function() {
            n.container = new u.Object3D, e = {
                topColor: {
                    value: new u.Color(h.sky.topColor)
                },
                bottomColor: {
                    value: new u.Color(h.sky.bottomColor)
                },
                offset: {
                    value: h.sky.offset
                },
                exponent: {
                    value: h.sky.exponent
                }
            }, t = new u.SphereBufferGeometry(45, 32, 32), r = new u.ShaderMaterial({
                transparent: !0,
                uniforms: e,
                vertexShader: l(["#define GLSLIFY 1\nvarying vec3 vWorldPosition;\nvarying vec2 v_uv;\n\nvoid main() {\n  v_uv = uv;\n  \n  vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n  \n  vWorldPosition = worldPosition.xyz;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"]),
                fragmentShader: l(["#define GLSLIFY 1\nuniform vec3 topColor;\nuniform vec3 bottomColor;\nuniform float offset;\nuniform float exponent;\n\nvarying vec3 vWorldPosition;\nvarying vec2 v_uv;\n\nfloat NOISE_GRANULARITY = 0.5/255.0;\n\nfloat random(vec2 coords) {\n  return fract(sin(dot(coords.xy, vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvoid main() {\n  float h = normalize( vWorldPosition + offset ).y;\n  vec4 colorGradient = vec4( mix( bottomColor, topColor, max( pow( max( h , 0.0), exponent ), 0.0 ) ), 1.0 );\n\n  float dithering = mix(-NOISE_GRANULARITY, NOISE_GRANULARITY, random(v_uv));\n  \n  vec4 outputColor =  colorGradient + dithering;\n  gl_FragColor = vec4(outputColor);\n}"]),
                side: u.BackSide
            }), i = new u.Mesh(t, r), i.matrixAutoUpdate = !1, i.updateMatrix(), s = i, n.container.add(s);
            var e, t, r, i
        }, n.init = function(e, t) {
            if (h.sky.topColor = e.sky.topColor, h.sky.bottomColor = e.sky.bottomColor, h.sky.offset = e.sky.offset, h.sky.exponent = e.sky.exponent, t) {
                var n = t.addFolder("sky");
                n.addColor(h.sky, "topColor").listen(), n.addColor(h.sky, "bottomColor").listen(), n.add(h.sky, "offset", 0, 30, 1e-5).listen(), n.add(h.sky, "exponent", 0, 10, 1e-5).listen(), n.open()
            }
        }, n.changeColors = function(e) {
            return f.apply(this, arguments)
        }, n.update = function() {
            d.LOOK_DEV_MODE && window.dat && (s.material.uniforms.topColor.value.setStyle(h.sky.topColor), s.material.uniforms.bottomColor.value.setStyle(h.sky.bottomColor), s.material.uniforms.offset.value = h.sky.offset, s.material.uniforms.exponent.value = h.sky.exponent)
        }
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../helpers/colorHelper": 78,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        glslify: 27,
        three: 63
    }],
    111: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = e("@babel/runtime/helpers/typeof"),
            a = r(e("@babel/runtime/helpers/asyncToGenerator")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = r(e("@babel/runtime/helpers/classCallCheck")),
            u = r(e("@babel/runtime/helpers/createClass")),
            l = r(e("@babel/runtime/helpers/get")),
            c = r(e("@babel/runtime/helpers/inherits")),
            h = r(e("@babel/runtime/helpers/possibleConstructorReturn")),
            d = r(e("@babel/runtime/helpers/getPrototypeOf"));

        function f() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            f = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                o = a.iterator || "@@iterator",
                s = a.asyncIterator || "@@asyncIterator",
                u = a.toStringTag || "@@toStringTag";

            function l(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                l({}, "")
            } catch (e) {
                l = function(e, t, n) {
                    return e[t] = n
                }
            }

            function c(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function h(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = c;
            var d = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            l(g, o, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, o) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    l(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = h(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            d = c.value;
                        return d && "object" == i(d) && n.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(d).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === d) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = h(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === d) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), d;
                var i = h(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, d;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, d) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, d)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[o];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = l(m, u, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, l(e, u, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), l(w.prototype, s, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(c(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), l(x, u, "Generator"), l(x, o, (function() {
                return this
            })), l(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, d) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), d
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), d
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), d
                }
            }, e
        }

        function p(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, r = (0, d.default)(e);
                if (t) {
                    var i = (0, d.default)(this).constructor;
                    n = Reflect.construct(r, arguments, i)
                } else n = r.apply(this, arguments);
                return (0, h.default)(this, n)
            }
        }
        var v = e("../Stage"),
            m = e("./trails/trails"),
            g = e("./lightning/lightning"),
            y = e("./ground/ground"),
            _ = e("./sky/sky"),
            x = e("./stage0Car/stage0Car"),
            b = e("./stage0Leo/stage0Leo"),
            w = e("../../core/properties"),
            T = e("../../core/settings"),
            M = e("./themeData/themeData"),
            S = e("three"),
            E = function(e) {
                (0, c.default)(r, e);
                var t, n = p(r);

                function r() {
                    var e, t;
                    return (0, s.default)(this, r), (t = n.call(this, 0, (e = {
                        bloomAmount: .7,
                        bokehAutoDistance: !0,
                        bokehAmount: 1,
                        bokehFNumber: .12,
                        haloWidth: .715,
                        haloRGBShift: .016,
                        haloStrength: 1.5,
                        haloMaskInner: 0,
                        haloMaskOuter: 1,
                        vignetteFrom: 0,
                        vignetteTo: 1.6,
                        vignetteColorHex: "#878A8C"
                    }, (0, o.default)(e, "haloMaskInner", w.stage0_activeThemeData.haloMaskInner), (0, o.default)(e, "contrast", w.stage0_activeThemeData.contrast), (0, o.default)(e, "brightness", w.stage0_activeThemeData.brightness), (0, o.default)(e, "tintColorHex", w.stage0_activeThemeData.tintColorHex), (0, o.default)(e, "tintOpacity", w.stage0_activeThemeData.tintOpacity), (0, o.default)(e, "cameraShakePositionStrength", .08), (0, o.default)(e, "cameraShakePositionSpeed", 2), (0, o.default)(e, "cameraShakeRotationStrength", .045), (0, o.default)(e, "cameraShakeRotationSpeed", 1.5), (0, o.default)(e, "cameraShakeBlurAmount", 25), e))).activeThemeData = w.stage0_activeThemeData, t.changeThemeIsActive = !1, t
                }
                return (0, u.default)(r, [{
                    key: "preInit",
                    value: function() {
                        (0, l.default)((0, d.default)(r.prototype), "preInit", this).call(this), w.loader.add(T.TEXTURE_PATH + "studio.jpg", {
                            type: "texture",
                            weight: 200,
                            onLoad: this.onEnvTextureLoaded.bind(this)
                        }).content, _.preInit(), this.container.add(_.container), y.preInit(), this.container.add(y.container), g.preInit(), this.container.add(g.container), m.preInit(300), this.container.add(m.container), x.preInit(), this.container.add(x.container), b.preInit(), this.container.add(b.container)
                    }
                }, {
                    key: "init",
                    value: function() {
                        (0, l.default)((0, d.default)(r.prototype), "init", this).call(this);
                        var e = T.LOOK_DEV_MODE && window.dat ? new dat.GUI : null;
                        _.init(this.activeThemeData, e), y.init(this.activeThemeData, e), g.init(this.activeThemeData, e), m.init(this.activeThemeData, e), b.init(this.activeThemeData, e)
                    }
                }, {
                    key: "onEnvTextureLoaded",
                    value: function(e) {
                        var t = new S.PMREMGenerator(w.renderer);
                        t.compileEquirectangularShader(), w.scene.environment = t.fromEquirectangular(e).texture, t.dispose()
                    }
                }, {
                    key: "setOrbitCamera",
                    value: function() {
                        w.orbitCamera.position.set(3, 0, 3)
                    }
                }, {
                    key: "setOrbitControls",
                    value: function() {
                        var e = w.orbitControls;
                        e.minPolarAngle = 1.25, e.maxPolarAngle = 1.45, e.minDistance = 4.5, e.maxDistance = 6, e.rotateSpeed = .2, e.enableDamping = !0, e.enablePan = !1
                    }
                }, {
                    key: "getThemes",
                    value: function() {
                        return M
                    }
                }, {
                    key: "changeTheme",
                    value: (t = (0, a.default)(f().mark((function e(t) {
                        return f().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (!this.changeThemeIsActive) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return this.changeThemeIsActive = !0, this.activeThemeData = w.stage0_activeThemeData = t, e.next = 6, Promise.all([gsap.to(w, {
                                        tintColorHex: this.activeThemeData.tintColorHex
                                    }), gsap.to(w, {
                                        tintOpacity: this.activeThemeData.tintOpacity
                                    }), gsap.to(w, {
                                        vignetteColorHex: this.activeThemeData.vignetteColorHex
                                    }), gsap.to(w, {
                                        haloMaskInner: this.activeThemeData.haloMaskInner
                                    }), gsap.to(w, {
                                        contrast: this.activeThemeData.contrast
                                    }), gsap.to(w, {
                                        brightness: this.activeThemeData.brightness
                                    }), _.changeColors(this.activeThemeData), y.changeColors(this.activeThemeData), g.changeColors(this.activeThemeData), m.changeColors(this.activeThemeData), b.changeColors(this.activeThemeData)]);
                                case 6:
                                    return this.changeThemeIsActive = !1, e.abrupt("return", !0);
                                case 8:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function(e) {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "show",
                    value: function() {
                        (0, l.default)((0, d.default)(r.prototype), "show", this).call(this), this.setOrbitCamera(), this.setOrbitControls(), this.changeTheme(this.activeThemeData), w.vignetteColorHex = this.activeThemeData.vignetteColorHex, w.haloMaskInner = this.activeThemeData.haloMaskInner, w.contrast = this.activeThemeData.contrast, w.brightness = this.activeThemeData.brightness, w.tintColorHex = this.activeThemeData.tintColorHex, w.tintOpacity = this.activeThemeData.tintOpacity
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        (0, l.default)((0, d.default)(r.prototype), "update", this).call(this, e), _.update(), y.update(e), g.update(e), m.update(e), x.update(e), b.update(e)
                    }
                }]), r
            }(v);
        t.exports = new E
    }, {
        "../../core/properties": 71,
        "../../core/settings": 72,
        "../Stage": 105,
        "./ground/ground": 108,
        "./lightning/lightning": 109,
        "./sky/sky": 110,
        "./stage0Car/stage0Car": 112,
        "./stage0Leo/stage0Leo": 113,
        "./themeData/themeData": 114,
        "./trails/trails": 115,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/get": 9,
        "@babel/runtime/helpers/getPrototypeOf": 10,
        "@babel/runtime/helpers/inherits": 11,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/possibleConstructorReturn": 17,
        "@babel/runtime/helpers/typeof": 24,
        three: 63
    }],
    112: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/defineProperty")),
            a = r(e("@babel/runtime/helpers/classCallCheck")),
            o = r(e("@babel/runtime/helpers/createClass")),
            s = e("../../../core/settings"),
            u = e("../../../core/properties"),
            l = e("three"),
            c = e("glslify"),
            h = e("mout/object/mixIn"),
            d = e("../../carTiresConfigs"),
            f = function() {
                function e(t, n, r) {
                    (0, a.default)(this, e), this.container = new l.Object3D, this.tireContainers = [], this.tireMeshes = [], this.cubeRenderTarget = null, this.cubeCamera = null, this.errorMaterial = new l.MeshBasicMaterial({
                        color: "#ff0000"
                    }), this.carBodyMesh = null, this.carWindowMesh = null
                }
                return (0, o.default)(e, [{
                    key: "preInit",
                    value: function() {
                        this.setupCubeCamera(), this.loadModels()
                    }
                }, {
                    key: "setupCubeCamera",
                    value: function() {
                        this.cubeRenderTarget = new l.WebGLCubeRenderTarget(1024, {
                            format: l.RGBFormat,
                            generateMipmaps: !1,
                            minFilter: l.LinearFilter,
                            magFilter: l.LinearFilter
                        }), this.cubeCamera = new l.CubeCamera(1, 100, this.cubeRenderTarget), this.cubeCamera.position.set(0, 0, 0), this.cubeCamera.lookAt(new l.Vector3(0, 0, 0)), window.cubeCamera = this.cubeCamera, this.container.add(this.cubeCamera)
                    }
                }, {
                    key: "loadModels",
                    value: function() {
                        u.loader.add(s.MODEL_PATH + "full_body.buf", {
                            weight: 3282,
                            onLoad: this.onCarBodyLoaded.bind(this, "full_body")
                        }), u.loader.add(s.MODEL_PATH + "full_windows.buf", {
                            weight: 28,
                            onLoad: this.onCarWindowsLoaded.bind(this, "full_windows")
                        }), u.loader.add(s.MODEL_PATH + "full_tire.buf", {
                            weight: 86,
                            onLoad: this.onCarTiresLoaded.bind(this, "full_tire")
                        }), u.loader.add(s.TEXTURE_PATH + "carshadow.png", {
                            type: "texture",
                            weight: 200,
                            onLoad: this.onCarShadowLoaded.bind(this)
                        })
                    }
                }, {
                    key: "onCarBodyLoaded",
                    value: function(e, t) {
                        "full_body" == e ? (this.carBodyMesh = new l.Mesh(t, new l.MeshStandardMaterial({
                            color: "#ffffff",
                            envMap: this.cubeRenderTarget.texture,
                            metalness: .05,
                            roughness: 0,
                            envMapIntensity: 4
                        })), this.carBodyMesh.material.type = "ShaderMaterial", this.carBodyMesh.material.uniforms = h(l.UniformsUtils.merge([l.ShaderLib.standard.uniforms]), {}), this.carBodyMesh.material.vertexShader = c(["#define GLSLIFY 1\n#define STANDARD\n\nattribute float isCarPaint;\nattribute float occlusion;\n//attribute float roughness; //naming conflicts with uniform\nattribute float specular;\n//attribute float diffuse; //naming conflicts with uniform\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n//varying float v_diffuse;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec4 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition;\n\n#endif\n\n\t//v_isCarPaint = isCarPaint;\n\tv_occlusion = occlusion;\n\t//v_roughness = roughness; //naming conflicts with uniform\n\t//v_specular = specular;\n\t//v_diffuse = diffuse; //naming conflicts with uniform\n}"]), this.carBodyMesh.material.fragmentShader = c(["#define GLSLIFY 1\n#define STANDARD\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n// varying float v_diffuse; //naming conflicts with uniform\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define SPECULAR\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\n\t// REMOVE THE INTERNAL AO SNIPPET\n\t// #_include <aomap_fragment> \n\n\t// ADD SOME VERTEX BASED CUSTOM AO\n\tfloat ambientOcclusion = 0.75 + v_occlusion * 0.25;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n\t\n\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n\t#include <transmission_fragment>\n\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}"]), this.carBodyMesh.updateMatrix(), this.carBodyMesh.matrixAutoUpdate = !1, this.container.add(this.carBodyMesh)) : this.addErrorMesh(e, t)
                    }
                }, {
                    key: "onCarWindowsLoaded",
                    value: function(e, t) {
                        var n;
                        "full_windows" == e ? (this.carWindowMesh = new l.Mesh(t, new l.MeshBasicMaterial((n = {
                            envMap: this.cubeRenderTarget.texture,
                            transparent: !0,
                            opacity: .25,
                            refractionRatio: .985
                        }, (0, i.default)(n, "transparent", !0), (0, i.default)(n, "depthWrite", !1), n))), this.carWindowMesh.updateMatrix(), this.carWindowMesh.matrixAutoUpdate = !1, this.container.add(this.carWindowMesh)) : this.addErrorMesh(e, t)
                    }
                }, {
                    key: "onCarTiresLoaded",
                    value: function(e, t) {
                        if ("full_tire" === e) {
                            var n = new l.MeshStandardMaterial({
                                color: "#ffffff",
                                envMap: this.cubeRenderTarget.texture,
                                metalness: 0,
                                roughness: .1,
                                envMapIntensity: 4
                            });
                            for (var r in d) {
                                var i = new l.Object3D,
                                    a = new l.Mesh(t, n);
                                a.material.type = "ShaderMaterial", a.material.uniforms = h(l.UniformsUtils.merge([l.ShaderLib.standard.uniforms]), {}), a.material.vertexShader = c(["#define GLSLIFY 1\n#define STANDARD\n\nattribute float isCarPaint;\nattribute float occlusion;\n//attribute float roughness; //naming conflicts with uniform\nattribute float specular;\n//attribute float diffuse; //naming conflicts with uniform\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n//varying float v_diffuse;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec4 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\n#ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n\tvNormal = normalize( transformedNormal );\n\n\t#ifdef USE_TANGENT\n\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n\t#endif\n\n#endif\n\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition;\n\n#endif\n\n\t//v_isCarPaint = isCarPaint;\n\tv_occlusion = occlusion;\n\t//v_roughness = roughness; //naming conflicts with uniform\n\t//v_specular = specular;\n\t//v_diffuse = diffuse; //naming conflicts with uniform\n}"]), a.material.fragmentShader = c(["#define GLSLIFY 1\n#define STANDARD\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n// varying float v_diffuse; //naming conflicts with uniform\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define SPECULAR\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\n\t// REMOVE THE INTERNAL AO SNIPPET\n\t// #_include <aomap_fragment> \n\n\t// ADD SOME VERTEX BASED CUSTOM AO\n\tfloat ambientOcclusion = 0.75 + v_occlusion * 0.25;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n\t\n\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n\t#include <transmission_fragment>\n\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}"]), i.add(a), this.container.add(i);
                                var o = d[r];
                                a.userData.config = o, i.position.copy(o), i.rotation.y = o.isFlipped ? Math.PI : 0, this.tireContainers.push(i), this.tireMeshes.push(a)
                            }
                        } else this.addErrorMesh(e, t)
                    }
                }, {
                    key: "onCarShadowLoaded",
                    value: function(e) {
                        var t = new l.MeshBasicMaterial({
                                map: e,
                                transparent: !0,
                                depthWrite: !1,
                                opacity: .85
                            }),
                            n = new l.PlaneBufferGeometry(5.4, 5.75, 1, 1),
                            r = new l.Mesh(n, t);
                        r.rotation.set(-Math.PI / 2, 0, 0), r.position.set(.03, .01, .275), r.renderOrder = 1, r.updateMatrix(), r.matrixAutoUpdate = !1, window.carshadowplane = r, this.container.add(r)
                    }
                }, {
                    key: "addErrorMesh",
                    value: function(e, t) {
                        var n = new l.Mesh(t, errorMaterial);
                        this.container.add(n), console.log("[stage0Car] addErrorMesh() - error meshId: ", e)
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        for (var t = 0, n = this.tireMeshes.length; t < n; t++) {
                            var r = this.tireMeshes[t];
                            r.visible = !1, r.rotation.x += 9 * (r.userData.config.isFlipped ? -e : e)
                        }
                        this.carBodyMesh.visible = !1, this.carWindowMesh.visible = !1, this.cubeCamera.update(u.renderer, u.scene), this.carBodyMesh.visible = !0, this.carWindowMesh.visible = !0;
                        for (var i = 0, a = this.tireMeshes.length; i < a; i++) this.tireMeshes[i].visible = !0
                    }
                }]), e
            }();
        t.exports = new f
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../carTiresConfigs": 107,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    113: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = e("@babel/runtime/helpers/typeof"),
            a = r(e("@babel/runtime/helpers/asyncToGenerator")),
            o = r(e("@babel/runtime/helpers/defineProperty")),
            s = r(e("@babel/runtime/helpers/classCallCheck")),
            u = r(e("@babel/runtime/helpers/createClass"));

        function l() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            l = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                o = a.iterator || "@@iterator",
                s = a.asyncIterator || "@@asyncIterator",
                u = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, o, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, o) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == i(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[o];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, u, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, u, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, s, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, u, "Generator"), c(x, o, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var c = e("../../../core/settings"),
            h = e("../../../core/properties"),
            d = e("three"),
            f = e("glslify"),
            p = e("mout/object/mixIn"),
            v = e("../../../utils/math"),
            m = e("../../../utils/ease"),
            g = function() {
                function e(t, n, r) {
                    (0, s.default)(this, e), this.container = new d.Object3D, this.BONE_COUNT = 36, this.FRAME_COUNT = 20, this.FRAME_RATE = 24, this.leoMeshMain = null, this.leoMeshClone = null, this.dissolveTexture = null, this.leoAnimationTexture = null, this.leoAnimationTextureSize = new d.Vector2, this.triggerCounter = 0
                }
                var t;
                return (0, u.default)(e, [{
                    key: "preInit",
                    value: function() {
                        var e = this;
                        h.cinematicIsActive.add((function() {
                            return e.onCinematicIsTriggered()
                        })), h.loader.add(c.MODEL_PATH + "leo.buf", {
                            weight: 80,
                            onLoad: this.onLeoBodyLoaded.bind(this, "full_body")
                        }), h.loader.add(c.MODEL_PATH + "leo_run_animation.buf", {
                            weight: 16,
                            onLoad: this.onLeoAnimaLoaded.bind(this, "animation")
                        })
                    }
                }, {
                    key: "init",
                    value: function(e, t) {
                        if (t) {
                            var n = t.addFolder("leo");
                            n.addColor(h.leo, "color").listen(), n.addColor(h.leo, "emissive").listen(), n.open()
                        }
                        this.leoMeshMain.material.uniforms.u_animationTexture.value = this.leoAnimationTexture, this.changeColors(e)
                    }
                }, {
                    key: "onLeoBodyLoaded",
                    value: function(e, t) {
                        var n = new d.LineSegments(t, new d.MeshStandardMaterial((0, o.default)({
                            color: "#ffffff",
                            metalness: .05,
                            roughness: 0,
                            envMapIntensity: 1,
                            transparent: !0,
                            blending: d.AdditiveBlending,
                            opacity: 0,
                            emissiveIntensity: .25
                        }, "envMapIntensity", .5)));
                        n.material.type = "ShaderMaterial", n.material.uniforms = p(d.UniformsUtils.merge([d.ShaderLib.standard.uniforms]), {
                            u_animationTexture: {
                                value: null
                            },
                            u_animationTextureSize: {
                                value: this.leoAnimationTextureSize
                            },
                            u_animationBoneCount: {
                                value: this.BONE_COUNT
                            },
                            u_animationFrameCount: {
                                value: this.FRAME_COUNT
                            },
                            u_animationFrameDataOffset1: {
                                value: 0
                            },
                            u_animationFrameDataOffset2: {
                                value: 0
                            },
                            u_animationFrameDataFract: {
                                value: 0
                            },
                            u_dissolveStrength: {
                                value: 0
                            },
                            u_time: h.sharedUniforms.u_time
                        }), window.leomat = n.material, n.material.vertexShader = f(["#define GLSLIFY 1\n#define STANDARD\nvarying float v_activeRatio;\nuniform float u_dissolveStrength;\nuniform float u_time;\n\nattribute float isCarPaint;\nattribute float occlusion;\n//attribute float roughness; //naming conflicts with uniform\nattribute float specular;\n//attribute float diffuse; //naming conflicts with uniform\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n//varying float v_diffuse;\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#ifdef USE_TRANSMISSION\n\n\tvarying vec4 vWorldPosition;\n\n#endif\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nattribute vec4 boneIndices;\nattribute vec4 boneWeights;\n\nuniform sampler2D u_animationTexture;\nuniform vec2 u_animationTextureSize;\nuniform float u_animationBoneCount;\nuniform float u_animationFrameCount;\nuniform float u_animationFrameDataOffset1;\nuniform float u_animationFrameDataOffset2;\nuniform float u_animationFrameDataFract;\n\nvec2 getAnimationUv(float pixelDataOffset) {\n\tpixelDataOffset += 0.5;\n\treturn (floor(vec2(\n\t\tmod(pixelDataOffset, u_animationTextureSize.x),\n\t\tpixelDataOffset / u_animationTextureSize.x\n\t)) + 0.5) / u_animationTextureSize;\n}\n\nvec3 qrotate(vec4 q, vec3 v) {\n\treturn v + 2.0 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\n}\n\nvoid computeSkin (inout vec3 pos, inout vec3 nor, float offset) {\n\tvec4 pixelDataOffsets = (boneIndices + offset) * 2.0;\n\tvec2 animationUv0 = getAnimationUv(pixelDataOffsets.x);\n\tvec2 animationUv1 = getAnimationUv(pixelDataOffsets.y);\n\tvec2 animationUv2 = getAnimationUv(pixelDataOffsets.z);\n\tvec2 animationUv3 = getAnimationUv(pixelDataOffsets.w);\n\t\n\tpos = vec3(0.0);\n\tnor = vec3(0.0);\n\t\n\tvec2 orientOffset = vec2(1.0 / u_animationTextureSize.x, 0.0);\n\n\tvec4 quat0 = texture2D(u_animationTexture, animationUv0 + orientOffset);\n\tvec4 quat1 = texture2D(u_animationTexture, animationUv1 + orientOffset);\n\tvec4 quat2 = texture2D(u_animationTexture, animationUv2 + orientOffset);\n\tvec4 quat3 = texture2D(u_animationTexture, animationUv3 + orientOffset);\n\n\tpos += (qrotate(quat0, position) + texture2D(u_animationTexture, animationUv0).xyz) * boneWeights.x;\n\tpos += (qrotate(quat1, position) + texture2D(u_animationTexture, animationUv1).xyz) * boneWeights.y;\n\tpos += (qrotate(quat2, position) + texture2D(u_animationTexture, animationUv2).xyz) * boneWeights.z;\n\tpos += (qrotate(quat3, position) + texture2D(u_animationTexture, animationUv3).xyz) * boneWeights.w;\n\n\tnor += qrotate(quat0, normal) * boneWeights.x;\n\tnor += qrotate(quat1, normal) * boneWeights.y;\n\tnor += qrotate(quat2, normal) * boneWeights.z;\n\tnor += qrotate(quat3, normal) * boneWeights.w;\n\n\tnor = normalize(nor);\n}\n\nvec4 hash44(vec4 p4) {\n\tp4 = fract(p4  * vec4(.1031, .1030, .0973, .1099));\n    p4 += dot(p4, p4.wzxy+33.33);\n    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\n}\n\nvoid main() {\n\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t// #include <color_vertex>\n\n// \t#include <beginnormal_vertex>\n// \t#include <morphnormal_vertex>\n// \t#include <skinbase_vertex>\n// \t#include <skinnormal_vertex>\n// \t#include <defaultnormal_vertex>\n\n// #ifndef FLAT_SHADED // Normal computed with derivatives when FLAT_SHADED\n\n// \tvNormal = normalize( transformedNormal );\n\n// \t#ifdef USE_TANGENT\n\n// \t\tvTangent = normalize( transformedTangent );\n// \t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\n// \t#endif\n\n// #endif\n\n\t// #include <begin_vertex>\n\t// #include <morphtarget_vertex>\n\t// #include <skinning_vertex>\n\t// #include <displacementmap_vertex>\n\n\tvec3 pos1 = vec3(0.0);\n\tvec3 pos2 = vec3(0.0);\n\tvec3 nor1 = vec3(0.0);\n\tvec3 nor2 = vec3(0.0);\n\n\tcomputeSkin(pos1, nor1, u_animationFrameDataOffset1);\n\tcomputeSkin(pos2, nor2, u_animationFrameDataOffset2);\n\n\tvec3 transformed = mix(pos1, pos2, u_animationFrameDataFract);\n\n\tvec3 noisePos = transformed;\n\tnoisePos.z = 0.0;\n\tnoisePos.xy = floor(noisePos.xy * 10.0) / 10.0;\n\tvec3 offsetPos = hash44(vec4(noisePos, u_time)).xyz - 0.5;\n\n\tv_activeRatio = smoothstep(u_dissolveStrength * 2.0, u_dissolveStrength * 2.0 - 1.0, -position.x);\n\n\ttransformed.z += -abs(offsetPos.z) * (1.0 - v_activeRatio) * 2.0;\n\n\tvec3 transformedNormal = normalMatrix * normalize(mix(nor1, nor2, u_animationFrameDataFract));\n\tvNormal = transformedNormal;\n\t\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n#ifdef USE_TRANSMISSION\n\n\tvWorldPosition = worldPosition;\n\n#endif\n\n\t//v_isCarPaint = isCarPaint;\n\tv_occlusion = occlusion;\n\t//v_roughness = roughness; //naming conflicts with uniform\n\t//v_specular = specular;\n\t//v_diffuse = diffuse; //naming conflicts with uniform\n}"]), n.material.fragmentShader = f(["#define GLSLIFY 1\n#define STANDARD\n\n//varying float v_isCarPaint;\nvarying float v_occlusion;\nvarying float v_activeRatio;\n//varying float v_roughness; //naming conflicts with uniform\n//varying float v_specular;\n// varying float v_diffuse; //naming conflicts with uniform\n\nuniform float u_dissolveStrength;\n\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define SPECULAR\n#endif\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n\n#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n#endif\n\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n\t#ifdef USE_TANGENT\n\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\n\t#endif\n\n#endif\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <transmission_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\n\t// REMOVE THE INTERNAL AO SNIPPET\n\t// #_include <aomap_fragment> \n\n\t// ADD SOME VERTEX BASED CUSTOM AO\n\tfloat ambientOcclusion = 0.75 + v_occlusion * 0.25;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n\t\n\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n\t#include <transmission_fragment>\n\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n\t//DISSOLVING\n\tif (v_activeRatio < 0.1) {\n\t\tdiscard;\n\t}\n}"]), n.userData.frame = 0, n.renderOrder = 1, this.createLeopards(n)
                    }
                }, {
                    key: "onLeoAnimaLoaded",
                    value: function(e, t) {
                        var n = t.attributes.position.array,
                            r = t.attributes.orient.array,
                            i = this.FRAME_COUNT * this.BONE_COUNT,
                            a = Math.ceil(Math.sqrt(i)),
                            o = Math.ceil(i / a);
                        a *= 2, this.leoAnimationTextureSize.set(a, o);
                        for (var s = new Float32Array(4 * (a * o)), u = 0, l = 0, c = 0, h = 0; u < i; u++) s[h + 0] = n[l + 0], s[h + 1] = n[l + 1], s[h + 2] = n[l + 2], s[h + 4] = r[c + 0], s[h + 5] = r[c + 1], s[h + 6] = r[c + 2], s[h + 7] = r[c + 3], l += 3, c += 4, h += 8;
                        this.leoAnimationTexture = new d.DataTexture(s, a, o, d.RGBAFormat, d.FloatType)
                    }
                }, {
                    key: "createLeopards",
                    value: function(e) {
                        this.leoMeshMain = e, this.leoMeshMain.position.set(1.75, .1, 0), this.leoMeshMain.userData.startPos = -.5, this.container.add(this.leoMeshMain), this.leoMeshClone = e.clone(), this.leoMeshClone.position.set(-1.75, .1, 0), this.leoMeshClone.userData.frame = this.FRAME_COUNT / 2, this.leoMeshClone.userData.startPos = -.75, this.container.add(this.leoMeshClone)
                    }
                }, {
                    key: "changeColors",
                    value: (t = (0, a.default)(l().mark((function e(t) {
                        return l().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return h.leo.color = t.leo.color, h.leo.emissive = t.leo.emissive, e.abrupt("return", Promise.resolve([this.leoMeshMain.material.color.setStyle(t.leo.color), this.leoMeshMain.material.emissive.setStyle(t.leo.emissive)]));
                                case 3:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function(e) {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "onCinematicIsTriggered",
                    value: function() {
                        h.cinematicRatio > 0 || (this.triggerCounter % 2 == 0 ? (this.leoMeshMain.userData.startPos = -.25, this.leoMeshClone.userData.startPos = -1.75) : (this.leoMeshMain.userData.startPos = -1.5, this.leoMeshClone.userData.startPos = -1), this.triggerCounter++)
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        var t, n;
                        this.leoMeshMain && (t = (n = this.leoMeshMain).material.uniforms, n.userData.frame += e * this.FRAME_RATE, n.userData.frame = this.leoMeshMain.userData.frame % this.FRAME_COUNT, t.u_animationFrameDataOffset1.value = Math.floor(this.leoMeshMain.userData.frame) % this.FRAME_COUNT * this.BONE_COUNT, t.u_animationFrameDataOffset2.value = Math.ceil(this.leoMeshMain.userData.frame) % this.FRAME_COUNT * this.BONE_COUNT, t.u_animationFrameDataFract.value = this.leoMeshMain.userData.frame % 1, n.position.z = n.userData.startPos + t.u_dissolveStrength.value / 5, t = (n = this.leoMeshClone).material.uniforms, n.userData.frame += e * this.FRAME_RATE, n.userData.frame = this.leoMeshMain.userData.frame % this.FRAME_COUNT, t.u_animationFrameDataOffset1.value = Math.floor(this.leoMeshMain.userData.frame) % this.FRAME_COUNT * this.BONE_COUNT, t.u_animationFrameDataOffset2.value = Math.ceil(this.leoMeshMain.userData.frame) % this.FRAME_COUNT * this.BONE_COUNT, t.u_animationFrameDataFract.value = this.leoMeshMain.userData.frame % 1, n.position.z = n.userData.startPos + t.u_dissolveStrength.value / 2, t.u_dissolveStrength.value = v.fit(h.cinematicRatio + e, -.1, 1, -.1, 2.5, m.easeInOutCubic), n.material.opacity = v.clamp(h.cinematicRatio, .5, 1));
                        c.LOOK_DEV_MODE && window.dat && (this.leoMeshMain.material.color.setStyle(h.leo.color), this.leoMeshMain.material.emissive.setStyle(h.leo.emissive))
                    }
                }]), e
            }();
        t.exports = new g
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../utils/ease": 103,
        "../../../utils/math": 104,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    114: [function(e, t, n) {
        "use strict";
        t.exports = [{
            color1: "#f2f5f8",
            color2: "#75777a",
            vignetteColorHex: "#000000",
            haloMaskInner: 0,
            contrast: 0,
            brightness: 1,
            tintColorHex: "#0048ff",
            tintOpacity: .1,
            sky: {
                topColor: "#cccccc",
                bottomColor: "#474747",
                offset: 20.67,
                exponent: 2.691
            },
            ground: {
                mainColor: "#383838",
                diffLightColor: "#0a0707",
                diffLightIntensity: .55,
                maskStrength: .5
            },
            lightning: {
                topColor: "#ffffff",
                bottomColor: "#010101",
                intensity: 0
            },
            trails: {
                color: "#ffffff",
                speed: 1,
                metalness: 0,
                roughness: 1,
                envMapIntensity: 1.345
            },
            leo: {
                color: "#000000",
                emissive: "#111111"
            }
        }, {
            color1: "#DBCBBD",
            color2: "#FA9062",
            vignetteColorHex: "#010101",
            haloMaskInner: .622,
            contrast: .429,
            brightness: .9,
            tintColorHex: "#38a6b7",
            tintOpacity: .1,
            sky: {
                topColor: "#d8d8d8",
                bottomColor: "#f98600",
                offset: 15,
                exponent: 1
            },
            ground: {
                mainColor: "#ff9292",
                diffLightColor: "#d6bfbf",
                diffLightIntensity: .55,
                maskStrength: 1.22
            },
            lightning: {
                topColor: "#4100ff",
                bottomColor: "#0038ff",
                intensity: .075
            },
            trails: {
                color: "#896318",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#fc00d4",
                emissive: "#eeff00"
            }
        }, {
            color1: "#c83c43",
            color2: "#f5c0b6",
            vignetteColorHex: "#010101",
            haloMaskInner: .622,
            contrast: .429,
            brightness: .891,
            tintColorHex: "#834CC9",
            tintOpacity: .4,
            sky: {
                topColor: "#646656",
                bottomColor: "#f93b00",
                offset: 15,
                exponent: 1
            },
            ground: {
                mainColor: "#ff9292",
                diffLightColor: "#af9d9d",
                diffLightIntensity: .55,
                maskStrength: 1.22
            },
            lightning: {
                topColor: "#f290a1",
                bottomColor: "#d8d694",
                intensity: .275
            },
            trails: {
                color: "#f4ddb1",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#010101",
                emissive: "#913d00"
            }
        }, {
            color1: "#c31a65",
            color2: "#9b81ea",
            vignetteColorHex: "#170840",
            haloMaskInner: 0,
            contrast: 0,
            brightness: 1,
            tintColorHex: "#1400ff",
            tintOpacity: .26,
            sky: {
                topColor: "#0084ff",
                bottomColor: "#ff0000",
                offset: 15,
                exponent: 1
            },
            ground: {
                mainColor: "#ff0000",
                diffLightColor: "#0084ff",
                diffLightIntensity: .55,
                maskStrength: .5
            },
            lightning: {
                topColor: "#4100ff",
                bottomColor: "#0038ff",
                intensity: .075
            },
            trails: {
                color: "#ff0000",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#0000ff",
                emissive: "#840000"
            }
        }, {
            color1: "#9b9fc2",
            color2: "#73538A",
            vignetteColorHex: "#170840",
            haloMaskInner: 0,
            contrast: 0,
            brightness: 1,
            tintColorHex: "#1400ff",
            tintOpacity: .26,
            isSelected: !0,
            sky: {
                topColor: "#cde7ff",
                bottomColor: "#300000",
                offset: 15,
                exponent: 1
            },
            ground: {
                mainColor: "#ba3a3a",
                diffLightColor: "#698cad",
                diffLightIntensity: .55,
                maskStrength: .5
            },
            lightning: {
                topColor: "#170059",
                bottomColor: "#0038ff",
                intensity: .075
            },
            trails: {
                color: "#3d0000",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#0000ff",
                emissive: "#840000"
            }
        }, {
            color1: "#20A481",
            color2: "#4562A9",
            vignetteColorHex: "#000000",
            haloMaskInner: 0,
            contrast: 0,
            brightness: 1,
            tintColorHex: "#000000",
            tintOpacity: .1,
            sky: {
                topColor: "#21bf8f",
                bottomColor: "#220038",
                offset: 15,
                exponent: 1
            },
            ground: {
                mainColor: "#bc00ff",
                diffLightColor: "#00b27c",
                diffLightIntensity: .55,
                maskStrength: .5
            },
            lightning: {
                topColor: "#004430",
                bottomColor: "#2f003f",
                intensity: .25
            },
            trails: {
                color: "#8ee8d2",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#8ee8d2",
                emissive: "#720a84"
            }
        }, {
            color1: "#303030",
            color2: "#000000",
            vignetteColorHex: "#010101",
            haloMaskInner: .622,
            contrast: .429,
            brightness: .891,
            tintColorHex: "#ffffff",
            tintOpacity: 0,
            sky: {
                topColor: "#4c4c4c",
                bottomColor: "#353535",
                offset: 15,
                exponent: 1.9
            },
            ground: {
                mainColor: "#222222",
                diffLightColor: "#010101",
                diffLightIntensity: .5,
                maskStrength: 1.22
            },
            lightning: {
                topColor: "#1c1c1c",
                bottomColor: "#aaaaaa",
                intensity: .5
            },
            trails: {
                color: "#f4ddb1",
                speed: 1,
                metalness: 0,
                roughness: 0,
                envMapIntensity: 1
            },
            leo: {
                color: "#010101",
                emissive: "#913d00"
            }
        }]
    }, {}],
    115: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/typeof")),
            a = r(e("@babel/runtime/helpers/asyncToGenerator"));

        function o() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
            o = function() {
                return e
            };
            var e = {},
                t = Object.prototype,
                n = t.hasOwnProperty,
                r = Object.defineProperty || function(e, t, n) {
                    e[t] = n.value
                },
                a = "function" == typeof Symbol ? Symbol : {},
                s = a.iterator || "@@iterator",
                u = a.asyncIterator || "@@asyncIterator",
                l = a.toStringTag || "@@toStringTag";

            function c(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                c({}, "")
            } catch (e) {
                c = function(e, t, n) {
                    return e[t] = n
                }
            }

            function h(e, t, n, i) {
                var a = t && t.prototype instanceof p ? t : p,
                    o = Object.create(a.prototype),
                    s = new A(i || []);
                return r(o, "_invoke", {
                    value: T(e, n, s)
                }), o
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            e.wrap = h;
            var f = {};

            function p() {}

            function v() {}

            function m() {}
            var g = {};
            c(g, s, (function() {
                return this
            }));
            var y = Object.getPrototypeOf,
                _ = y && y(y(L([])));
            _ && _ !== t && n.call(_, s) && (g = _);
            var x = m.prototype = p.prototype = Object.create(g);

            function b(e) {
                ["next", "throw", "return"].forEach((function(t) {
                    c(e, t, (function(e) {
                        return this._invoke(t, e)
                    }))
                }))
            }

            function w(e, t) {
                function a(r, o, s, u) {
                    var l = d(e[r], e, o);
                    if ("throw" !== l.type) {
                        var c = l.arg,
                            h = c.value;
                        return h && "object" == (0, i.default)(h) && n.call(h, "__await") ? t.resolve(h.__await).then((function(e) {
                            a("next", e, s, u)
                        }), (function(e) {
                            a("throw", e, s, u)
                        })) : t.resolve(h).then((function(e) {
                            c.value = e, s(c)
                        }), (function(e) {
                            return a("throw", e, s, u)
                        }))
                    }
                    u(l.arg)
                }
                var o;
                r(this, "_invoke", {
                    value: function(e, n) {
                        function r() {
                            return new t((function(t, r) {
                                a(e, n, t, r)
                            }))
                        }
                        return o = o ? o.then(r, r) : r()
                    }
                })
            }

            function T(e, t, n) {
                var r = "suspendedStart";
                return function(i, a) {
                    if ("executing" === r) throw new Error("Generator is already running");
                    if ("completed" === r) {
                        if ("throw" === i) throw a;
                        return C()
                    }
                    for (n.method = i, n.arg = a;;) {
                        var o = n.delegate;
                        if (o) {
                            var s = M(o, n);
                            if (s) {
                                if (s === f) continue;
                                return s
                            }
                        }
                        if ("next" === n.method) n.sent = n._sent = n.arg;
                        else if ("throw" === n.method) {
                            if ("suspendedStart" === r) throw r = "completed", n.arg;
                            n.dispatchException(n.arg)
                        } else "return" === n.method && n.abrupt("return", n.arg);
                        r = "executing";
                        var u = d(e, t, n);
                        if ("normal" === u.type) {
                            if (r = n.done ? "completed" : "suspendedYield", u.arg === f) continue;
                            return {
                                value: u.arg,
                                done: n.done
                            }
                        }
                        "throw" === u.type && (r = "completed", n.method = "throw", n.arg = u.arg)
                    }
                }
            }

            function M(e, t) {
                var n = t.method,
                    r = e.iterator[n];
                if (void 0 === r) return t.delegate = null, "throw" === n && e.iterator.return && (t.method = "return", t.arg = void 0, M(e, t), "throw" === t.method) || "return" !== n && (t.method = "throw", t.arg = new TypeError("The iterator does not provide a '" + n + "' method")), f;
                var i = d(r, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, f;
                var a = i.arg;
                return a ? a.done ? (t[e.resultName] = a.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : a : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function E(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function L(e) {
                if (e) {
                    var t = e[s];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var r = -1,
                            i = function t() {
                                for (; ++r < e.length;)
                                    if (n.call(e, r)) return t.value = e[r], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: C
                }
            }

            function C() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            return v.prototype = m, r(x, "constructor", {
                value: m,
                configurable: !0
            }), r(m, "constructor", {
                value: v,
                configurable: !0
            }), v.displayName = c(m, l, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
            }, e.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, m) : (e.__proto__ = m, c(e, l, "GeneratorFunction")), e.prototype = Object.create(x), e
            }, e.awrap = function(e) {
                return {
                    __await: e
                }
            }, b(w.prototype), c(w.prototype, u, (function() {
                return this
            })), e.AsyncIterator = w, e.async = function(t, n, r, i, a) {
                void 0 === a && (a = Promise);
                var o = new w(h(t, n, r, i), a);
                return e.isGeneratorFunction(n) ? o : o.next().then((function(e) {
                    return e.done ? e.value : o.next()
                }))
            }, b(x), c(x, l, "Generator"), c(x, s, (function() {
                return this
            })), c(x, "toString", (function() {
                return "[object Generator]"
            })), e.keys = function(e) {
                var t = Object(e),
                    n = [];
                for (var r in t) n.push(r);
                return n.reverse(),
                    function e() {
                        for (; n.length;) {
                            var r = n.pop();
                            if (r in t) return e.value = r, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, e.values = L, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(E), !e)
                        for (var t in this) "t" === t.charAt(0) && n.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    if (this.done) throw e;
                    var t = this;

                    function r(n, r) {
                        return o.type = "throw", o.arg = e, t.next = n, r && (t.method = "next", t.arg = void 0), !!r
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var a = this.tryEntries[i],
                            o = a.completion;
                        if ("root" === a.tryLoc) return r("end");
                        if (a.tryLoc <= this.prev) {
                            var s = n.call(a, "catchLoc"),
                                u = n.call(a, "finallyLoc");
                            if (s && u) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            } else if (s) {
                                if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                            } else {
                                if (!u) throw new Error("try statement without catch or finally");
                                if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                        var i = this.tryEntries[r];
                        if (i.tryLoc <= this.prev && n.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var a = i;
                            break
                        }
                    }
                    a && ("break" === e || "continue" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);
                    var o = a ? a.completion : {};
                    return o.type = e, o.arg = t, a ? (this.method = "next", this.next = a.finallyLoc, f) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), E(n), f
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var r = n.completion;
                            if ("throw" === r.type) {
                                var i = r.arg;
                                E(n)
                            }
                            return i
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: L(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), f
                }
            }, e
        }
        var s = e("three"),
            u = e("../../../utils/math");
        n.changeColors = p;
        var l, c = e("../../../helpers/colorHelper"),
            h = e("../../../core/properties"),
            d = e("../../../core/settings");
        n.preInit = function(e) {
            n.container.position.set(0, 2, 0);
            var t = function(e) {
                for (var t = [], n = new s.Vector3, r = 14, i = 4, a = 0; a < e; a++) n.x = Math.random() * f - f / 2, n.y = Math.random() * i - i / 2, n.z = Math.random() * r - r / 2, n.z > -1.2 && n.z < 1.2 && (n.y = 2 * Math.random() - .5), t.push(n.x, n.y, n.z);
                return t
            }(e);
            l = function(e, t) {
                for (var n = t, r = [], i = [], a = [], o = new s.BoxBufferGeometry(1, 1, 1, 9, 9, 9), l = 0; l < e; l++) {
                    var c = .6 + Math.random() * (.9 - .6),
                        h = .01 * Math.random(),
                        d = h;
                    r.push(c, h, d), i.push(Math.min(c, Math.min(h, d))), a.push(u.getRandomFloat(10, 25))
                }
                var p = new s.InstancedBufferGeometry;
                p.copy(o), p.setAttribute("boxPosition", new s.InstancedBufferAttribute(new Float32Array(n), 3)), p.setAttribute("boxSize", new s.InstancedBufferAttribute(new Float32Array(r), 3)), p.setAttribute("boxRadius", new s.InstancedBufferAttribute(new Float32Array(i), 1)), p.setAttribute("boxSpeed", new s.InstancedBufferAttribute(new Float32Array(a), 1)), p.instanceCount = 1 / 0;
                var v = new s.MeshStandardMaterial({
                    color: "#ffffff",
                    transparent: !0,
                    metalness: 0,
                    roughness: 0,
                    envMapIntensity: 1.5
                });
                window.rainmat = v;
                var m = {
                    time: {
                        value: 0
                    },
                    speed: {
                        value: 1
                    },
                    alphaDistance: {
                        value: 10
                    },
                    distribution_x: {
                        value: f
                    }
                };
                v.onBeforeCompile = function(e) {
                    e.uniforms.time = m.time, e.uniforms.speed = m.speed, e.uniforms.alphaDistance = m.alphaDistance, e.uniforms.distribution_x = m.distribution_x, e.vertexShader = "\n      uniform float time;\n      uniform float speed;\n      uniform float distribution_x;\n      attribute vec3 boxPosition;\n      attribute vec3 boxSize;\n      attribute float boxRadius;\n      attribute float boxSpeed;\n      varying float v_posShiftX;\n      " + e.vertexShader, e.vertexShader = e.vertexShader.replace("#include <begin_vertex>", "#include <begin_vertex>\n    \n        vec3 signs = sign(position);\n        vec3 box = boxSize - vec3(boxRadius);\n       \n        transformed = signs * box + normalize(position) * boxRadius;\n    \n        vec3 posShift = boxPosition;\n        posShift.x = mod(posShift.x + distribution_x + time * boxSpeed *speed, distribution_x) - distribution_x/2.0;\n        v_posShiftX = posShift.x;\n        transformed += posShift;\n        "), e.fragmentShader = "\n      uniform float alphaDistance;\n      varying float v_posShiftX;\n      " + e.fragmentShader, e.fragmentShader = e.fragmentShader.replace("#include <dithering_fragment>", "#include <dithering_fragment>\n      \n        float alpha = 1.0 - abs( v_posShiftX / alphaDistance);\n\n        gl_FragColor.a = alpha;\n      "), v.userData.shader = e
                };
                var g = new s.Mesh(p, v);
                return g.renderOrder = .1, g
            }(e, t), n.container.add(l)
        }, n.init = function(e, t) {
            if (h.trails.color = e.trails.color, h.trails.speed = e.trails.speed, h.trails.metalness = e.trails.metalness, h.trails.roughness = e.trails.roughness, h.trails.envMapIntensity = e.trails.envMapIntensity, t) {
                var n = t.addFolder("trails");
                n.addColor(h.trails, "color").listen(), n.add(h.trails, "speed", 0, 30, 1e-5).listen(), n.add(h.trails, "metalness", 0, 30, 1e-5).listen(), n.add(h.trails, "roughness", 0, 10, 1e-5).listen(), n.add(h.trails, "envMapIntensity", 0, 10, 1e-5).listen(), n.open()
            }
        }, n.update = function(e) {
            if (!l.material.userData.shader) return;
            l.material.userData.shader.uniforms.time.value += e, d.LOOK_DEV_MODE && window.dat && (l.material.color.setStyle(h.trails.color), l.material.userData.shader.uniforms.speed.value = h.trails.speed, l.material.metalness = h.trails.metalness, l.material.roughness = h.trails.roughness, l.material.envMapIntensity = h.trails.envMapIntensity)
        }, n.changeColors = p, n.container = new s.Object3D, n.container.rotation.y = .5 * Math.PI;
        var f = 200;

        function p(e) {
            return v.apply(this, arguments)
        }

        function v() {
            return (v = (0, a.default)(o().mark((function e(t) {
                return o().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return h.trails.color = t.trails.color, h.trails.speed = t.trails.speed, h.trails.metalness = t.trails.metalness, h.trails.roughness = t.trails.roughness, h.trails.envMapIntensity = t.trails.envMapIntensity, e.abrupt("return", c.fadeMaterialColor(l.material, t.trails.color, .5, .2));
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })))).apply(this, arguments)
        }
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../helpers/colorHelper": 78,
        "../../../utils/math": 104,
        "@babel/runtime/helpers/asyncToGenerator": 5,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/typeof": 24,
        three: 63
    }],
    116: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = r(e("@babel/runtime/helpers/get")),
            s = r(e("@babel/runtime/helpers/inherits")),
            u = r(e("@babel/runtime/helpers/possibleConstructorReturn")),
            l = r(e("@babel/runtime/helpers/getPrototypeOf"));

        function c(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, r = (0, l.default)(e);
                if (t) {
                    var i = (0, l.default)(this).constructor;
                    n = Reflect.construct(r, arguments, i)
                } else n = r.apply(this, arguments);
                return (0, u.default)(this, n)
            }
        }
        var h = e("../../core/properties"),
            d = (e("../../helpers/fboHelper"), e("../Stage")),
            f = e("./stage1AreaLight/stage1AreaLight"),
            p = e("./stage1Car/stage1Car"),
            v = e("./stage1Floor/stage1Floor"),
            m = e("./stage1Rings/stage1Rings"),
            g = e("./stage1Themes"),
            y = (e("three"), e("glslify"), function(e) {
                (0, s.default)(n, e);
                var t = c(n);

                function n() {
                    return (0, i.default)(this, n), t.call(this, 1, {
                        bloomAmount: 5,
                        bloomThreshold: .3,
                        bloomSmoothWidth: 1,
                        haloWidth: .736,
                        haloRGBShift: .016,
                        haloStrength: .06,
                        haloMaskInner: 0,
                        haloMaskOuter: 1,
                        bokehAutoDistance: !0,
                        bokehAmount: 1,
                        bokehFNumber: .14
                    })
                }
                return (0, a.default)(n, [{
                    key: "preInit",
                    value: function() {
                        (0, o.default)((0, l.default)(n.prototype), "preInit", this).call(this), f.preInit(), this.container.add(f.container), p.preInit(), this.container.add(p.container), v.preInit(), this.container.add(v.container), m.preInit(), this.container.add(m.container);
                        for (var e = 0; e < g.length; e++) {
                            var t = g[e];
                            if (t.isSelected) {
                                p.color2 = t.color1, p.carPaintRoughness2 = t.isShinny ? .05 : .55;
                                break
                            }
                        }
                    }
                }, {
                    key: "init",
                    value: function() {
                        (0, o.default)((0, l.default)(n.prototype), "init", this).call(this), f.init(), p.init(), v.init(), m.init()
                    }
                }, {
                    key: "setOrbitControls",
                    value: function() {
                        var e = h.orbitControls;
                        e.minPolarAngle = .75, e.maxPolarAngle = 1.55, e.minDistance = 3, e.maxDistance = 7, e.rotateSpeed = .3, e.enableDamping = !0, e.enablePan = !1
                    }
                }, {
                    key: "show",
                    value: function() {
                        (0, o.default)((0, l.default)(n.prototype), "show", this).call(this), h.orbitCamera.position.set(-2, 1.25, 5), this.setOrbitControls(), f.sharedUniforms.u_posZOffset.value = 0
                    }
                }, {
                    key: "getThemes",
                    value: function() {
                        return g
                    }
                }, {
                    key: "changeTheme",
                    value: function(e) {
                        return 1 == p.colorRatio && (p.colorRatio = 0, p.color1 = p.color2, p.carPaintRoughness1 = p.carPaintRoughness2, p.color2 = e.color1, p.carPaintRoughness2 = e.isShinny ? .05 : .55, !0)
                    }
                }, {
                    key: "resize",
                    value: function(e, t) {
                        (0, o.default)((0, l.default)(n.prototype), "resize", this).call(this, e, t), f.resize(e, t), p.resize(e, t), v.resize(e, t), m.resize(e, t)
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        (0, o.default)((0, l.default)(n.prototype), "update", this).call(this, e), f.update(e), p.update(e), m.update(e)
                    }
                }]), n
            }(d));
        t.exports = new y
    }, {
        "../../core/properties": 71,
        "../../helpers/fboHelper": 79,
        "../Stage": 105,
        "./stage1AreaLight/stage1AreaLight": 117,
        "./stage1Car/stage1Car": 118,
        "./stage1Floor/stage1Floor": 119,
        "./stage1Rings/stage1Rings": 120,
        "./stage1Themes": 121,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/get": 9,
        "@babel/runtime/helpers/getPrototypeOf": 10,
        "@babel/runtime/helpers/inherits": 11,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        "@babel/runtime/helpers/possibleConstructorReturn": 17,
        glslify: 27,
        three: 63
    }],
    117: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = e("../../../core/settings"),
            s = e("../../../core/properties"),
            u = e("../../../helpers/fboHelper"),
            l = e("three"),
            c = e("glslify"),
            h = e("../../../effects/mipmapper/Mipmapper"),
            d = new l.Matrix4,
            f = new l.Matrix4,
            p = function() {
                function e() {
                    (0, i.default)(this, e), this.scene = new l.Scene, this.container = new l.Object3D, this.mesh = null, this.aoTexture = null, this.RADIUS = 4, this.WIDTH = this.RADIUS * Math.PI, this.HEIGHT = 1 * this.WIDTH, this.TEXTURE_WIDTH = 1024, this.TEXTURE_HEIGHT = 1024, this.hasInitialized = !1, this.mipmapper = null, this.lodRenderTarget = null, this.testTexture = null, this.sharedUniforms = {
                        u_areaLightLodTexture: {
                            value: null
                        },
                        u_areaLightLodTextureSize: {
                            value: null
                        },
                        u_areaLightLodTextureMaxLod: {
                            value: 0
                        },
                        u_areaLightLtc1: {
                            value: null
                        },
                        u_areaLightLtc2: {
                            value: null
                        },
                        u_areaLightSize: {
                            value: new l.Vector3
                        },
                        u_areaLightHalfWidth: {
                            value: new l.Vector3
                        },
                        u_areaLightHalfHeight: {
                            value: new l.Vector3
                        },
                        u_areaLightTunnelRadius: {
                            value: this.RADIUS
                        },
                        u_areaLightPosition: {
                            value: new l.Vector3
                        },
                        u_areaLightIntensity: {
                            value: 5
                        },
                        u_posZOffset: {
                            value: 0
                        },
                        u_cinematicRatio: {
                            value: 0
                        }
                    }
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {
                        var e = this;
                        this.mipmapper = new h, this.mipmapper.resize(this.TEXTURE_WIDTH, this.TEXTURE_HEIGHT, 1.5 * this.TEXTURE_WIDTH, this.TEXTURE_HEIGHT), this.lodRenderTarget = u.createRenderTarget(1.5 * this.TEXTURE_WIDTH, this.TEXTURE_HEIGHT), this.lodRenderTarget.depthBuffer = !0, this.sharedUniforms.u_areaLightLodTexture.value = this.lodRenderTarget.texture, this.sharedUniforms.u_areaLightLodTextureSize.value = this.mipmapper.textureSize, this.sharedUniforms.u_areaLightLodTextureMaxLod.value = this.mipmapper.maxMipmapLevel, this.sharedUniforms.u_areaLightSize.value.set(this.WIDTH, this.HEIGHT, this.RADIUS), s.loader.add(o.MODEL_PATH + "ltc_mats.buf", {
                            type: "xhr",
                            responseType: "arraybuffer",
                            weight: 128,
                            onLoad: function(t) {
                                var n = new l.DataTexture(new Float32Array(t, 0, 16384), 64, 64, l.RGBAFormat, l.FloatType, l.UVMapping, l.ClampToEdgeWrapping, l.ClampToEdgeWrapping, l.LinearFilter, l.NearestFilter),
                                    r = new l.DataTexture(new Float32Array(t, 65536, 16384), 64, 64, l.RGBAFormat, l.FloatType, l.UVMapping, l.ClampToEdgeWrapping, l.ClampToEdgeWrapping, l.LinearFilter, l.NearestFilter);
                                n.needsUpdate = !0, r.needsUpdate = !0, e.sharedUniforms.u_areaLightLtc1.value = n, e.sharedUniforms.u_areaLightLtc2.value = r
                            }
                        })
                    }
                }, {
                    key: "onModelLoad",
                    value: function(e, t) {}
                }, {
                    key: "init",
                    value: function() {
                        var e = new l.CylinderBufferGeometry(1, 1, 1, 64, 1, !0, 0, Math.PI);
                        e.rotateY(.5 * Math.PI), e.scale(this.RADIUS / this.WIDTH, 1, this.RADIUS), e.translate(0, 0, this.RADIUS), this.mesh = new l.Mesh(e, new l.ShaderMaterial({
                            uniforms: {
                                u_areaLightLodTexture: this.sharedUniforms.u_areaLightLodTexture,
                                u_areaLightIntensity: this.sharedUniforms.u_areaLightIntensity
                            },
                            vertexShader: c(["#define GLSLIFY 1\nvarying vec2 v_uv;\n\nvoid main () {\n\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\tgl_Position = projectionMatrix * mvPosition;\n\tv_uv = vec2(1.0 - uv.x, 1.0 - uv.y);\n\tv_uv = v_uv * vec2(0.6666667, 1.0);\n}"]),
                            fragmentShader: c(["#define GLSLIFY 1\nuniform sampler2D u_areaLightLodTexture;\nuniform float u_areaLightIntensity;\n\nvarying vec2 v_uv;\n\nvoid main () {\n\tgl_FragColor = texture2D(u_areaLightLodTexture, v_uv) * u_areaLightIntensity;\n}"]),
                            side: l.BackSide
                        })), e.rotateY(Math.PI), this.mesh.position.y = this.RADIUS, this.mesh.rotation.x = .5 * -Math.PI, this.mesh.scale.set(this.WIDTH, this.HEIGHT, 1), this.hasInitialized = !0
                    }
                }, {
                    key: "resize",
                    value: function(e, t) {}
                }, {
                    key: "_renderScene",
                    value: function() {}
                }, {
                    key: "update",
                    value: function(e) {
                        if (this.hasInitialized) {
                            this.sharedUniforms.u_cinematicRatio.value = s.cinematicRatio, this.sharedUniforms.u_areaLightIntensity.value = 5 + 4 * s.cinematicRatio, this.mesh.updateMatrixWorld(!0), f.identity(), d.copy(this.mesh.matrixWorld), f.extractRotation(d), this.sharedUniforms.u_areaLightPosition.value.setFromMatrixPosition(this.mesh.matrixWorld), this.sharedUniforms.u_areaLightHalfWidth.value.set(.5 * this.WIDTH, 0, 0).applyMatrix4(f), this.sharedUniforms.u_areaLightHalfHeight.value.set(0, .5 * this.HEIGHT, 0).applyMatrix4(f);
                            var t = u.getColorState(),
                                n = s.renderer,
                                r = this.mipmapper,
                                i = n.getRenderTarget();
                            n.setRenderTarget(this.lodRenderTarget), n.setViewport(0, 0, 2 * r.textureSize.width / 3, r.textureSize.height), n.setScissor(0, 0, 2 * r.textureSize.width / 3, r.textureSize.height), n.setScissorTest(!0), n.render(this.scene, u.camera), n.setViewport(0, 0, this.lodRenderTarget.width, this.lodRenderTarget.height), n.setScissorTest(!1), r.render(this.lodRenderTarget), i ? (n.setViewport(0, 0, i.width, i.height), n.setRenderTarget(i)) : n.setViewport(0, 0, s.width, s.height), u.setColorState(t)
                        }
                    }
                }]), e
            }();
        t.exports = new p
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../effects/mipmapper/Mipmapper": 77,
        "../../../helpers/fboHelper": 79,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        glslify: 27,
        three: 63
    }],
    118: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/defineProperty")),
            a = r(e("@babel/runtime/helpers/classCallCheck")),
            o = r(e("@babel/runtime/helpers/createClass")),
            s = e("../../../core/settings"),
            u = e("../../../core/properties"),
            l = e("../stage1AreaLight/stage1AreaLight"),
            c = e("mout/object/mixIn"),
            h = e("three"),
            d = e("glslify"),
            f = e("../../carTiresConfigs"),
            p = e("../../../effects/glPositionOffset/glPositionOffset"),
            v = function() {
                function e() {
                    (0, a.default)(this, e), this.container = new h.Object3D, this.bodyMesh = null, this.windowsMesh = null, this.colorRatio = 1, this.color1 = "#ffffff", this.color2 = "#ffffff", this.carPaintRoughness1 = .05, this.carPaintRoughness2 = .05, this.tireContainers = [], this.tireMeshes = [], this.sharedUniforms = {
                        u_color1: {
                            value: new h.Color(0)
                        },
                        u_color2: {
                            value: new h.Color(0)
                        },
                        u_colorRatio: {
                            value: 0
                        },
                        u_carFromZ: {
                            value: -2.28797
                        },
                        u_carLength: {
                            value: 4.98493
                        },
                        u_carPaintRoughness1: {
                            value: .05
                        },
                        u_carPaintRoughness2: {
                            value: .05
                        }
                    }, this.hasInitialized = !1
                }
                return (0, o.default)(e, [{
                    key: "preInit",
                    value: function() {
                        u.loader.add(s.MODEL_PATH + "full_body.buf", {
                            weight: 3282,
                            onLoad: this.onModelLoad.bind(this, "full_body")
                        }), u.loader.add(s.MODEL_PATH + "full_windows.buf", {
                            weight: 28,
                            onLoad: this.onModelLoad.bind(this, "full_windows")
                        }), u.loader.add(s.MODEL_PATH + "full_tire.buf", {
                            weight: 86,
                            onLoad: this.onModelLoad.bind(this, "full_tire")
                        })
                    }
                }, {
                    key: "onModelLoad",
                    value: function(e, t) {
                        var n = new h.Mesh(t, new h.ShaderMaterial({
                            uniforms: c((0, i.default)({
                                u_worldNormalMatrix: {
                                    value: new h.Matrix3
                                }
                            }, "u_worldNormalMatrix", {
                                value: new h.Matrix3
                            }), this.sharedUniforms, l.sharedUniforms, p.sharedUniforms),
                            vertexShader: d(["#define GLSLIFY 1\nattribute float isCarPaint;\nattribute float occlusion;\nattribute float roughness;\nattribute float specular;\nattribute float diffuse;\n\nuniform mat3 u_worldNormalMatrix;\nuniform float u_areaLightTunnelRadius;\n\nuniform float u_carFromZ;\nuniform float u_carLength;\nuniform float u_carPaintRoughness;\n\n#ifdef IS_FULLBODY\nvarying float v_carRatio;\n#endif\n\nvarying vec3 v_wrappedWorldNormal;\nvarying vec3 v_wrappedWorldPosition;\nvarying vec3 v_wrappedWorldCameraPosition;\n\nvarying float v_isCarPaint;\nvarying float v_occlusion;\nvarying float v_roughness;\nvarying float v_specular;\nvarying float v_diffuse;\n\n// #include <glPositionOffset>\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec3 wrapPosition (vec3 worldPos) {\n\treturn vec3(\n\t\t(atan(worldPos.y, -worldPos.x) - 1.5707963267948966) * u_areaLightTunnelRadius,\n\t\tlength(vec2(worldPos.y, worldPos.x)),\n\t\tworldPos.z\n\t);\n}\nvec3 wrapDirection (vec3 worldPos, vec3 v) {\n\tfloat offsetAngle = 1.5707963267948966 - atan(worldPos.y, -worldPos.x);\n\tv.xy = rotate(v.xy, offsetAngle);\n\treturn v;\n}\n\nvoid main () {\n\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvec3 worldPosition = (modelMatrix * vec4(position, 1.0)).xyz;\n\tv_wrappedWorldPosition = wrapPosition(worldPosition);\n\tv_wrappedWorldNormal = wrapDirection(worldPosition, u_worldNormalMatrix * normal);\n\tv_wrappedWorldCameraPosition = wrapPosition(cameraPosition); // TODO move this to cpu\n\t\n\tgl_Position = projectionMatrix * viewMatrix * vec4(worldPosition, 1.0);\n\t\n\t// v_worldPosition = worldPosition;\n\t// v_worldNormal = u_worldNormalMatrix * normal;\n\t// v_worldCameraPosition = cameraPosition; // TODO move this to cpu\n\n\t// v_wrappedWorldPosition = v_worldPosition;\n\t// v_wrappedWorldNormal = v_worldNormal;\n\t// v_wrappedWorldCameraPosition = v_worldCameraPosition;\n\n\tv_isCarPaint = isCarPaint;\n\tv_occlusion = occlusion;\n\tv_roughness = roughness;\n\tv_specular = specular;\n\tv_diffuse = isCarPaint > 0.5 ? 1.0 : diffuse;\n\n\t#ifdef IS_FULLBODY\n\tv_carRatio = 1.0 - (position.z - u_carFromZ) / u_carLength;\n\t#endif\n\t// gl_Position = glPositionOffset(gl_Position);\n}"]),
                            fragmentShader: d(['#define GLSLIFY 1\nuniform sampler2D u_aoTexture;\n\nuniform sampler2D u_areaLightLodTexture;\nuniform sampler2D u_areaLightLtc1;\nuniform sampler2D u_areaLightLtc2;\n\nuniform vec2 u_areaLightLodTextureSize;\nuniform float u_areaLightLodTextureMaxLod;\nuniform float u_areaLightTunnelRadius;\n\nuniform vec3 u_areaLightHalfWidth;\nuniform vec3 u_areaLightHalfHeight;\nuniform vec3 u_areaLightPosition;\nuniform float u_areaLightIntensity;\n\nuniform float u_carPaintRoughness1;\nuniform float u_carPaintRoughness2;\n\nvarying float v_isCarPaint;\nvarying float v_occlusion;\nvarying float v_roughness;\nvarying float v_specular;\nvarying float v_diffuse;\n\nvarying vec3 v_wrappedWorldNormal;\nvarying vec3 v_wrappedWorldPosition;\nvarying vec3 v_wrappedWorldCameraPosition;\n\n#ifdef IS_FULLBODY\nuniform vec3 u_color1;\nuniform vec3 u_color2;\nvarying float v_carRatio;\nuniform float u_colorRatio;\n#endif\n\n#include <textureBicubic>\n#include <lodMipmapSample>\n\nfloat normalFiltering(float roughness, const vec3 worldNormal) {\n    // Kaplanyan 2016, "Stable specular highlights"\n    // Tokuyoshi 2017, "Error Reduction and Simplification for Shading Anti-Aliasing"\n    // Tokuyoshi and Kaplanyan 2019, "Improved Geometric Specular Antialiasing"\n\n    // This implementation is meant for deferred rendering in the original paper but\n    // we use it in forward rendering as well (as discussed in Tokuyoshi and Kaplanyan\n    // 2019). The main reason is that the forward version requires an expensive transform\n    // of the half vector by the tangent frame for every light. This is therefore an\n    // approximation but it works well enough for our needs and provides an improvement\n    // over our original implementation based on Vlachos 2015, "Advanced VR Rendering".\n\n    vec3 du = dFdx(worldNormal);\n    vec3 dv = dFdy(worldNormal);\n\tfloat _specularAntiAliasingVariance = 150.0;\n\tfloat _specularAntiAliasingThreshold = 0.25;\n    float variance = _specularAntiAliasingVariance * (dot(du, du) + dot(dv, dv));\n\n    float kernelRoughness = min(2.0 * variance, _specularAntiAliasingThreshold);\n    float squareRoughness = clamp(roughness * roughness + kernelRoughness, 0.0, 1.0);\n\n    return sqrt(squareRoughness);\n    // return roughness;\n}\n\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\t// Real-Time Area Lighting: a Journey from Research to Production (p.102)\n\t// An approximation of the form factor of a horizon-clipped rectangle.\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\n\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\t// rational polynomial approximation to theta / sin( theta ) / 2PI\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\n\n// https://eheitzresearch.wordpress.com/415-2/\nvec3 FetchDiffuseFilteredTexture(sampler2D texLightFiltered, float lodMax, vec2 lodTextureSize, float roughness, vec3 p1_, vec3 p2_, vec3 p3_, vec3 p4_) {\n    // area light plane basis\n    vec3 V1 = p2_ - p1_;\n    vec3 V2 = p4_ - p1_;\n    vec3 planeOrtho = (cross(V1, V2));\n    float planeAreaSquared = dot(planeOrtho, planeOrtho);\n    float planeDistxPlaneArea = dot(planeOrtho, p1_);\n    // orthonormal projection of (0,0,0) in area light space\n    vec3 P = planeDistxPlaneArea * planeOrtho / planeAreaSquared - p1_;\n\n    // find tex coords of P\n    float dot_V1_V2 = dot(V1,V2);\n    float inv_dot_V1_V1 = 1.0 / dot(V1, V1);\n    vec3 V2_ = V2 - V1 * dot_V1_V2 * inv_dot_V1_V1;\n    vec2 Puv;\n    Puv.y = dot(V2_, P) / dot(V2_, V2_);\n    Puv.x = dot(V1, P)*inv_dot_V1_V1 - dot_V1_V2*inv_dot_V1_V1*Puv.y ;\n\n    // LOD\n    float d = abs(planeDistxPlaneArea) / pow(planeAreaSquared, 0.75);\n\n\tfloat lod = min(lodMax, log(d * 50.0 * lodTextureSize.y + 1.0) * roughness);\n\t// vec2 uv = clamp(vec2(0.125, 0.125) + 0.75 * Puv, vec2(0.0), vec2(1.0));\n\tvec2 uv = clamp(Puv, vec2(0.0), vec2(1.0));\n\tuv.y = 1.0 - uv.y;\n\n    // return texture2DLodEXT(texLightFiltered, uv, lod).rgb;\n\t// vec2 uv2 = uv;\n\t// uv2.x = mod(uv2.x, 2.0) > 1.0 ? -1.0 : 1.0;\n\t// vec3 light = lodMipmapSampleCubic(texLightFiltered, uv2, lod, lodTextureSize).rgb;\n\t// light *= smoothstep(1.0, 0.5, uv.x - 0.5);\n\treturn lodMipmapSampleCubic(texLightFiltered, uv, lod, lodTextureSize).rgb;\n\t// return lodMipmapSample(texLightFiltered, uv, lod, lodTextureSize).rgb;\n}\n\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\n\nvec3 LTC_Evaluate(sampler2D texLightFiltered, float lodMax, vec2 lodTextureSize, float roughness,  const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\n\t// bail if point is on back side of plane of light\n\t// assumes ccw winding order of light vertices\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\n\t// construct orthonormal basis around N\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system\n\n\t// compute transform\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\n\t// transform rect\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\n\tvec3 textureLight = FetchDiffuseFilteredTexture(texLightFiltered, lodMax, lodTextureSize, roughness, coords[0], coords[1], coords[2], coords[3]);\n\n\t// project rect onto sphere\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\n\t// calculate vector form factor\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\n\t// adjust for horizon clipping\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\n/*\n\t// alternate method of adjusting for horizon clipping (see referece)\n\t// refactoring required\n\tfloat len = length( vectorFormFactor );\n\tfloat z = vectorFormFactor.z / len;\n\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\n\t// tabulated horizon-clipped sphere, apparently...\n\tvec2 uv = vec2( z * 0.5 + 0.5, len );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\n\tfloat scale = texture2D( ltc_2, uv ).w;\n\n\tfloat result = len * scale;\n*/\n\treturn vec3( result ) * textureLight;\n\n}\n\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = clamp( dot( N, V ), 0.0, 1.0 );\n\t// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\n\nfloat checkersTexture( in vec3 p ) {\n    vec3 q = floor(p);\n    return mod( q.x+q.y+q.z, 2.0 );\n}\n\nvec2 cylIntersect( in vec3 ro, in vec3 rd, in vec3 cb, in vec3 ca, float cr ){\n    vec3  oc = ro - cb;\n    float card = dot(ca,rd);\n    float caoc = dot(ca,oc);\n    float a = 1.0 - card*card;\n    float b = dot( oc, rd) - caoc*card;\n    float c = dot( oc, oc) - caoc*caoc - cr*cr;\n    float h = b*b - a*c;\n    if( h<0.0 ) return vec2(-1.0); //no intersection\n    h = sqrt(h);\n    return vec2(-b-h,-b+h)/a;\n}\n\nvoid main () {\n\tfloat roughness = v_roughness;//5;//mix(0.0, 0.5, checkersTexture(v_wrappedWorldPosition * 2.0));\n\tfloat metalness = 0.0;\n\n\tvec3 albedo = vec3(v_diffuse);\n\t#ifdef IS_WINDOWS\n\t\tmetalness = 0.65;\n\t\tvec3 diffuseColor = albedo * ( 1.0 - metalness );\n\t\tvec3 specularColor = mix( vec3(0.04), albedo, metalness );\n\t\troughness = 0.0;\n\t#else\n\t\t\n\t\t#ifdef IS_FULLBODY\n\t\t\tfloat gradient = mix(0.0075, 0.002, v_carRatio);\n\t\t\tfloat emissionIntensity = v_isCarPaint > 0.5 ? smoothstep(gradient, 0.0, abs(u_colorRatio * (1.0 + gradient * 2.0) - v_carRatio) ) : 0.0;\n\t\t\tfloat colorMixRatio = step(0.0, u_colorRatio - v_carRatio);\n\t\t\tvec3 carPaint = mix(u_color1, u_color2, colorMixRatio) * 1.5;\n\t\t\tvec3 emission = vec3(emissionIntensity * (carPaint + 1.0));\n\t\t\troughness = v_isCarPaint > 0.5 ? mix(u_carPaintRoughness1, u_carPaintRoughness2, colorMixRatio) : roughness;\n\t\t\talbedo = v_isCarPaint > 0.5 ? carPaint : albedo;\n\t\t\t\n\t\t\tvec3 diffuseColor = albedo;\n\t\t#else\n\t\t\tvec3 diffuseColor = max(vec3(0.08), albedo);\n\t\t#endif\n\n\t\tvec3 specularColor = vec3(v_specular);\n\t#endif\n\n\tvec3 normal = normalize(v_wrappedWorldNormal);\n\tvec3 cameraToWorld = normalize(v_wrappedWorldCameraPosition - v_wrappedWorldPosition);\n\tvec3 position = v_wrappedWorldPosition;\n\tvec3 lightPos = u_areaLightPosition;\n\n\tfloat specularRoughness = normalFiltering(roughness, normal);\n\tvec3 rectCoords[ 4 ];\n\trectCoords[ 0 ] = lightPos + u_areaLightHalfWidth - u_areaLightHalfHeight; // counterclockwise; light shines in local neg z direction\n\trectCoords[ 1 ] = lightPos - u_areaLightHalfWidth - u_areaLightHalfHeight;\n\trectCoords[ 2 ] = lightPos - u_areaLightHalfWidth + u_areaLightHalfHeight;\n\trectCoords[ 3 ] = lightPos + u_areaLightHalfWidth + u_areaLightHalfHeight;\n\tvec2 uv = LTC_Uv( normal, cameraToWorld, specularRoughness );\n\tvec4 t1 = texture2D( u_areaLightLtc1, uv );\n\tvec4 t2 = texture2D( u_areaLightLtc2, uv );\n\tmat3 mInv = mat3(\n\t\tvec3( t1.x, 0, t1.y ),\n\t\tvec3(    0, 1,    0 ),\n\t\tvec3( t1.z, 0, t1.w )\n\t);\n\t// LTC Fresnel Approximation by Stephen Hill\n\t// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf\n\tvec3 fresnel = ( specularColor * t2.x + ( vec3( 1.0 ) - specularColor ) * t2.y );\n\n\tvec3 color = vec3(0.0);\n\tfloat ao = sqrt(v_occlusion);\n\n\t#ifdef IS_WINDOWS\n\t\tvec3 directDiffuse = vec3(0.0);\n\t\tvec3 directSpecular = fresnel  * LTC_Evaluate(u_areaLightLodTexture, u_areaLightLodTextureMaxLod, u_areaLightLodTextureSize, specularRoughness, normal, cameraToWorld, position, mInv, rectCoords ) * u_areaLightIntensity;\n\t#else\n\t\tvec3 directDiffuse = diffuseColor * LTC_Evaluate(u_areaLightLodTexture, u_areaLightLodTextureMaxLod, u_areaLightLodTextureSize, 1.0, normal, cameraToWorld, position, mat3( 1.0 ), rectCoords ) * u_areaLightIntensity * ao;\n\t\tvec3 directSpecular = vec3(0.0);\n\t\tdirectSpecular += fresnel * LTC_Evaluate(u_areaLightLodTexture, u_areaLightLodTextureMaxLod, u_areaLightLodTextureSize, specularRoughness, normal, cameraToWorld, position, mInv, rectCoords ) * u_areaLightIntensity;\n\t\tdirectSpecular *= clamp( pow( clamp(dot(normal, cameraToWorld), 0.0, 1.0) + ao, exp2( - 16.0 * specularRoughness - 1.0 ) ) - 1.0 + ao, 0.0, 1.0 );\n\t#endif\n\n\tcolor += directDiffuse;\n\tcolor += directSpecular;\n\n\t// color *= ao;\n\n\t#ifdef IS_WINDOWS\n\t\tgl_FragColor = vec4(color, 0.1);\n\t#else\n\t\tgl_FragColor = vec4(color, 1.0);\n\t\t#ifdef IS_FULLBODY\n\t\t\tgl_FragColor.rgb += emission;\n\t\t#endif \n\t#endif\n}'])
                        }));
                        if (n.material.extensions.derivatives = !0, n.onBeforeRender = this.onMeshBeforeRender.bind(this, n), "full_body" == e) n.material.defines.IS_FULLBODY = !0, this.bodyMesh = n, this.container.add(n);
                        else if ("full_tire" === e)
                            for (var r in f) {
                                var a = new h.Object3D,
                                    o = new h.Mesh(t, new h.ShaderMaterial({
                                        uniforms: c({
                                            u_worldNormalMatrix: {
                                                value: new h.Matrix3
                                            }
                                        }, l.sharedUniforms, p.sharedUniforms),
                                        vertexShader: n.material.vertexShader,
                                        fragmentShader: n.material.fragmentShader
                                    }));
                                o.material.extensions.derivatives = !0, a.add(o), this.container.add(a), o.onBeforeRender = this.onMeshBeforeRender.bind(this, o);
                                var s = f[r];
                                o.userData.config = s, a.position.copy(s), a.rotation.y = s.isFlipped ? Math.PI : 0, this.tireContainers.push(a), this.tireMeshes.push(o)
                            } else n.material.transparent = !0, n.material.defines.IS_WINDOWS = !0, n.material.blending = h.CustomBlending, n.material.blendSrc = h.OneFactor, n.material.blendDst = h.OneMinusSrcAlphaFactor, n.material.blendSrcAlpha = h.ZeroFactor, n.material.blendDstAlpha = h.OneFactor, this.windowsMesh = n, this.container.add(n)
                    }
                }, {
                    key: "onMeshBeforeRender",
                    value: function(e) {
                        e.material.uniforms.u_worldNormalMatrix.value.getNormalMatrix(e.matrixWorld)
                    }
                }, {
                    key: "init",
                    value: function() {
                        this.hasInitialized = !0
                    }
                }, {
                    key: "resize",
                    value: function(e, t) {}
                }, {
                    key: "update",
                    value: function(e) {
                        for (var t = 0, n = this.tireMeshes.length; t < n; t++) {
                            var r = this.tireMeshes[t];
                            r.rotation.x = -l.sharedUniforms.u_posZOffset.value / .754819 * (r.userData.config.isFlipped ? -1 : 1)
                        }
                        this.colorRatio = Math.min(this.colorRatio + 2 * e, 1), this.sharedUniforms.u_colorRatio.value = this.colorRatio, this.sharedUniforms.u_color1.value.setStyle(this.color1), this.sharedUniforms.u_color2.value.setStyle(this.color2), this.sharedUniforms.u_carPaintRoughness1.value = this.carPaintRoughness1, this.sharedUniforms.u_carPaintRoughness2.value = this.carPaintRoughness2
                    }
                }]), e
            }();
        t.exports = new v
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../effects/glPositionOffset/glPositionOffset": 76,
        "../../carTiresConfigs": 107,
        "../stage1AreaLight/stage1AreaLight": 117,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/defineProperty": 8,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    119: [function(e, t, n) {
        "use strict";
        var r = e("../../../core/browser"),
            i = e("../../../core/settings"),
            a = e("../../../core/properties"),
            o = e("../../../helpers/fboHelper"),
            s = e("../../../effects/mipmapper/Mipmapper"),
            u = e("../../../effects/blur/blur"),
            l = e("../../../utils/math"),
            c = e("../stage1AreaLight/stage1AreaLight"),
            h = (e("mout/object/mixIn"), e("three")),
            d = e("glslify");
        n.preInit = function() {
            O = n.container = new h.Object3D, (f = a.loader.add(i.TEXTURE_PATH + "floor.jpg", {
                type: "texture",
                weight: 519
            }).content).wrapS = f.wrapT = h.RepeatWrapping, p = a.loader.add(i.TEXTURE_PATH + "stage1_floor_ao.png", {
                type: "texture",
                weight: 90,
                minFilter: h.LinearFilter
            }).content
        }, n.init = function() {
            v = new s, m = new h.Vector2, (g = o.createRenderTarget(1, 1)).depthBuffer = !0, y = new h.Matrix4, D = new h.Matrix4, I = new h.Matrix4, _ = 0, x = new h.PerspectiveCamera, b = new h.Plane, w = new h.Vector3, T = new h.Vector3, M = new h.Vector3, S = new h.Matrix4, E = new h.Vector3, A = new h.Vector4, L = new h.Vector3, C = new h.Vector3, R = new h.Vector3, k = new h.Vector4, (P = new h.PlaneBufferGeometry(50, 50)).rotateX(-.5 * Math.PI), (N = n.mesh = new h.Mesh(P, new h.ShaderMaterial({
                uniforms: {
                    u_infoTexture: {
                        value: f
                    },
                    u_aoTexture: {
                        value: p
                    },
                    u_textureMatrix: {
                        value: y
                    },
                    u_textureSize: {
                        value: m
                    },
                    u_mipmapTextureSize: {
                        value: v.textureSize
                    },
                    u_mipmapTexture: {
                        value: g.texture
                    },
                    u_mipmapMaxLod: {
                        value: 1
                    },
                    u_randSeed: {
                        value: 0
                    },
                    u_posZOffset: c.sharedUniforms.u_posZOffset
                },
                vertexShader: d(["#define GLSLIFY 1\nuniform mat4 u_textureMatrix;\nuniform float u_posZOffset;\n\nvarying vec2 v_uv;\nvarying vec2 v_uv2;\nvarying vec2 v_aoUv;\nvarying vec4 v_reflectionTextureUv;\nvarying vec3 v_worldPosition;\n\nvarying vec3 v_viewNormal;\nvarying vec3 v_viewPosition;\n\nvoid main () {\n\tvec3 pos = position;\n\tpos.z -= u_posZOffset;\n\n\tv_uv = pos.xz * 0.08;\n\tv_uv2 = pos.xz * 0.19 + 0.321;\n\tvec3 reflectionPos = position;\n\t// reflectionPos.y = -0.05;\n\tv_reflectionTextureUv = u_textureMatrix * vec4( reflectionPos, 1.0 );\n\n\tv_worldPosition = position;\n\n\tv_viewNormal = normalMatrix * normal;\n\n\tv_aoUv = v_worldPosition.xz / vec2(5.0, 15.0) * 0.5 + 0.5;\n\n\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n\tv_viewPosition = -mvPosition.xyz;\n\tgl_Position = projectionMatrix * mvPosition;\n}"]),
                fragmentShader: d(["#define GLSLIFY 1\nuniform sampler2D u_infoTexture;\nuniform sampler2D u_aoTexture;\n\nuniform sampler2D u_mipmapTexture;\nuniform vec2 u_textureSize;\nuniform vec2 u_mipmapTextureSize;\nuniform float u_mipmapMaxLod;\nuniform float u_noiseTime;\n\n#include <textureBicubic>\n#include <lodMipmapSample>\n\nvarying vec4 v_reflectionTextureUv;\nvarying vec2 v_uv;\nvarying vec2 v_uv2;\nvarying vec2 v_aoUv;\nvarying vec3 v_worldPosition;\nvarying vec3 v_viewNormal;\nvarying vec3 v_viewPosition;\n\n#define roughLodSample lodMipmapSampleCubic\n\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 q = abs(p) - b;\n    return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);\n}\n\nvoid main () {\n\tvec3 viewNormal = normalize(v_viewNormal);\n\tfloat d = dot(viewNormal, normalize(v_viewPosition));\n\tfloat f = smoothstep(0.95, 1.0, d);\n\t\n\tvec2 ao2 = texture2D(u_aoTexture, v_aoUv).rg;\n\n\tvec2 reflectionUv = v_reflectionTextureUv.xy / v_reflectionTextureUv.w;\n\n\tfloat lodRatio = u_mipmapMaxLod / 12.0;\n\n\tfloat lodMultiplier = 0.1 + 0.28 * ao2.g;\n\tfloat baseLod = 6.0 * ao2.g;\n    vec3 color = lodMipmapSampleCubic(u_mipmapTexture, reflectionUv, baseLod * lodRatio, u_mipmapTextureSize).rgb;\n\t\n\tvec3 info;\n\tvec3 blury;\n\tinfo = texture2D(u_infoTexture, v_uv).rgb;\n    blury = roughLodSample(u_mipmapTexture, reflectionUv + info.br / 128.0 * lodMultiplier, (info.r * info.g * 8.0 * lodMultiplier + baseLod) * lodRatio, u_mipmapTextureSize).rgb;\n\tcolor = mix(color, blury, clamp((info.g - 0.25) * 5.0, 0.0, 1.0));\n\t\n\tinfo = texture2D(u_infoTexture, v_uv2).rgb;\n    blury = roughLodSample(u_mipmapTexture, reflectionUv, (info.r * 5.0 * lodMultiplier + baseLod) * lodRatio, u_mipmapTextureSize).rgb;\n\tcolor = mix(color, blury, clamp((info.b - 0.3) *  7.0, 0.0, 1.0));\n\n\tgl_FragColor = vec4(color * mix(0.75, 1.0, info.g) * ao2.r, 1.0);\n\n}"])
            }))).name = "floor", N.userData.skipReflection = !0, O.add(N), (r.isMobile || r.isOculusBrowser) && (N.material.defines.IS_MOBILE = !0);
            N.onBeforeRender = F, D.makeRotationX(-.5 * Math.PI), D.premultiply(I)
        }, n.resize = function(e, t) {
            if (!m) return;
            var n = r.isMobile ? .5 : 1;
            e = 2 * Math.ceil(e * n / 2), t = 2 * Math.ceil(t * n / 2), e = l.powerTwoFloor(e), t = l.powerTwoFloor(t), a.renderer.xr.isPresenting && (e = 2 * Math.ceil(e / 4));
            m.set(e, t), g.setSize(1.5 * m.x, m.y), v.resize(m.x, m.y, g.width, g.height), N.material.uniforms.u_mipmapMaxLod.value = v.maxMipmapLevel
        };
        var f, p, v, m, g, y, _, x, b, w, T, M, S, E, A, L, C, R, k, P, D, I, O = n.container = null,
            N = n.mesh = null;

        function F(e, t, n) {
            if (m) {
                if ("recursion" in n.userData) {
                    if (n.userData.recursion === recursion) return;
                    n.userData.recursion++
                }
                if (T.setFromMatrixPosition(D), M.setFromMatrixPosition(n.matrixWorld), S.extractRotation(D), w.set(0, 0, 1), w.applyMatrix4(S), C.subVectors(T, M), !(C.dot(w) > 0)) {
                    C.reflect(w).negate(), C.add(T), S.extractRotation(n.matrixWorld), E.set(0, 0, -1), E.applyMatrix4(S), E.add(M), R.subVectors(T, E), R.reflect(w).negate(), R.add(T), x.position.copy(C), x.up.set(0, 1, 0), x.up.applyMatrix4(S), x.up.reflect(w), x.lookAt(R), x.near = n.near, x.far = n.far, x.updateMatrixWorld(), x.projectionMatrix.copy(n.projectionMatrix), y.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), y.multiply(x.projectionMatrix), y.multiply(x.matrixWorldInverse), y.multiply(N.matrixWorld), b.setFromNormalAndCoplanarPoint(w, T), b.applyMatrix4(x.matrixWorldInverse), A.set(b.normal.x, b.normal.y, b.normal.z, b.constant);
                    var r = x.projectionMatrix;
                    k.x = (Math.sign(A.x) + r.elements[8]) / r.elements[0], k.y = (Math.sign(A.y) + r.elements[9]) / r.elements[5], k.z = -1, k.w = (1 + r.elements[10]) / r.elements[14], A.multiplyScalar(2 / A.dot(k)), r.elements[2] = A.x, r.elements[6] = A.y, r.elements[10] = A.z + 1 - _, r.elements[14] = A.w, L.setFromMatrixPosition(n.matrixWorld);
                    var i = e.getRenderTarget(),
                        o = e.xr.enabled,
                        s = e.shadowMap.autoUpdate;
                    e.xr.enabled = !1, e.shadowMap.autoUpdate = !1, e.setRenderTarget(g), e.setViewport(0, 0, m.x, m.y), a.renderer.xr.isPresenting ? (e.setScissor(0, 0, a.width, a.height), e.setScissorTest(!1)) : (e.setScissor(0, 0, m.x, m.y), e.setScissorTest(!0)), a.scene.traverse(U), e.render(t, x), e.setRenderTarget(null), e.setViewport(0, 0, a.width, a.height), a.renderer.xr.isPresenting || e.setScissor(0, 0, a.width, a.height), u.blur9(4, .5, g), v.render(g), e.xr.enabled = o, e.shadowMap.autoUpdate = s, e.setRenderTarget(i), e.setViewport(0, 0, a.width, a.height), e.setScissorTest(!1);
                    var l = n.viewport;
                    void 0 !== l && e.state.viewport(l), a.scene.traverse(B), N.material.uniforms.u_randSeed.value = 1e3 * Math.random()
                }
            }
        }

        function U(e) {
            e.userData.skipReflection ? (e.userData.isVisible = e.visible, e.visible = !1) : e.material && e.material.uniforms && e.material.uniforms.u_isReflection && (e.material.uniforms.u_isReflection.value = 1)
        }

        function B(e) {
            e.userData.skipReflection ? e.visible = e.userData.isVisible : e.material && e.material.uniforms && e.material.uniforms.u_isReflection && (e.material.uniforms.u_isReflection.value = 0)
        }
    }, {
        "../../../core/browser": 70,
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../effects/blur/blur": 74,
        "../../../effects/mipmapper/Mipmapper": 77,
        "../../../helpers/fboHelper": 79,
        "../../../utils/math": 104,
        "../stage1AreaLight/stage1AreaLight": 117,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    120: [function(e, t, n) {
        "use strict";
        var r = e("@babel/runtime/helpers/interopRequireDefault"),
            i = r(e("@babel/runtime/helpers/classCallCheck")),
            a = r(e("@babel/runtime/helpers/createClass")),
            o = (e("../../../core/settings"), e("../../../core/properties")),
            s = (e("../../../helpers/fboHelper"), e("../stage1AreaLight/stage1AreaLight")),
            u = e("mout/object/mixIn"),
            l = e("three"),
            c = e("glslify"),
            h = function() {
                function e() {
                    (0, i.default)(this, e), this.container = new l.Object3D, this.mesh = null, this.lightMesh = null, this.pointMesh = null, this.hasInitialized = !1, this.instanceCount = 16, this.sharedUniforms = {
                        u_time: {
                            value: 0
                        },
                        u_ringDistance: {
                            value: 0
                        }
                    }
                }
                return (0, a.default)(e, [{
                    key: "preInit",
                    value: function() {
                        this.sharedUniforms.u_ringDistance.value = 1 / (this.instanceCount - 1) * s.HEIGHT * 2
                    }
                }, {
                    key: "init",
                    value: function() {
                        this._initMainMesh(), this._initFloorPointMesh(), this.hasInitialized = !0
                    }
                }, {
                    key: "_initMainMesh",
                    value: function() {
                        var e = new l.CylinderBufferGeometry(1, 1, 1, 4, 64),
                            t = new l.InstancedBufferGeometry;
                        for (var n in e.attributes) t.setAttribute(n, e.attributes[n]);
                        t.setIndex(e.getIndex());
                        for (var r = new Uint8Array(this.instanceCount), i = 0; i < this.instanceCount; i++) r[i] = i;
                        t.setAttribute("instanceId", new l.InstancedBufferAttribute(r, 1)), t.rotateY(.25 * Math.PI), t.translate(0, .5001, 0), this.mesh = new l.Mesh(t, new l.ShaderMaterial({
                            uniforms: u({
                                u_time: this.sharedUniforms.u_time,
                                u_ringDistance: this.sharedUniforms.u_ringDistance,
                                u_instanceCount: {
                                    value: this.instanceCount
                                }
                            }, s.sharedUniforms),
                            vertexShader: c(["#define GLSLIFY 1\nattribute float instanceId;\n\nuniform float u_time;\nuniform float u_instanceCount;\nuniform float u_ringDistance;\nuniform vec3 u_areaLightSize;\nuniform float u_posZOffset;\nuniform float u_cinematicRatio;\n\n#ifdef IS_POINTS\n\tattribute float instanceSide;\n\tvarying vec2 v_uv;\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n#ifdef IS_LIGHT\n\tvec3 wrapPosition (vec3 worldPos) {\n\t\treturn vec3 (\n\t\t\t1.0 - atan(worldPos.y, -worldPos.x) / 1.5707963267948966,\n\t\t\tworldPos.z / u_areaLightSize.y * 2.0,\n\t\t\t0.0\n\t\t);\n\t}\n\tvec3 wrapDirection (vec3 worldPos, vec3 v) {\n\t\tfloat offsetAngle = 1.5707963267948966 - atan(worldPos.y, -worldPos.x);\n\t\tv.xy = rotate(v.xy, offsetAngle);\n\t\treturn v;\n\t}\n#endif\n\nvoid main () {\n\n\tfloat radius = 4.0;\n\tfloat tubeRadius = 0.075;\n\tfloat tubeRadiusZ = 0.0375;\n\t#ifdef IS_LIGHT\n\ttubeRadiusZ *= 3.0;\n\t#endif\n\n\tfloat ringRatio;\n\t#ifdef IS_POINTS\n\t\tringRatio = 0.5 - instanceSide * 0.5;\n\t\tvec3 pos = vec3(\n\t\t\tradius * instanceSide + position.x * tubeRadius * 25.0,\n\t\t\t0.001,\n\t\t\tposition.z * tubeRadiusZ * 25.0\n\t\t);\n\t\tv_uv = uv;\n\t#else\n\t\tringRatio = position.y;\n\t\tfloat angle = 3.141592653589793 * ringRatio;\n\t\tvec3 pos = vec3(\n\t\t\tcos(angle) * (radius + position.x * tubeRadius),\n\t\t\tsin(angle) * (radius + position.x * tubeRadius),\n\t\t\tposition.z * tubeRadiusZ\n\t\t);\n\t\tv_viewNormal = normal;\n\t\tv_viewNormal.xy = rotate(v_viewNormal.xy, -angle);\n\t\tv_viewNormal = normalMatrix * v_viewNormal;\n\t#endif\n\tpos.z += instanceId * u_ringDistance - u_areaLightSize.y + mod(u_posZOffset, u_ringDistance);\n\n\t// v_intensity = cos(u_time * 1.5+ instanceId * 0.5 - ringRatio * 0.0) * 0.5 + 0.5;\n\tv_intensity = cos(u_time * 1.75 + pos.z * 0.075) * 0.5 + 0.5;\n\n\tv_intensity = min(v_intensity + u_cinematicRatio , 1.0);\n\t// v_intensity = fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0);\n\t// v_intensity = max(0.0, fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0) * 2.0 - 1.0) * 0.99 + 0.01;\n\n\tv_intensity *= smoothstep(u_areaLightSize.y, u_areaLightSize.y - u_ringDistance, abs(pos.z));\n\n\t#ifdef IS_LIGHT\n\tgl_Position = vec4(wrapPosition(pos), 1.0);\n\t#else\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\t#endif\n\n}"]),
                            fragmentShader: c(["#define GLSLIFY 1\n#ifdef IS_POINTS\n\tvarying vec2 v_uv;\n\tfloat sdBox( vec2 p, vec2 b ) {\n\t\tvec2 q = abs(p) - b;\n\t\treturn length(max(q,0.0)) + min(max(q.x, q.y),0.0);\n\t}\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvoid main () {\n\t#ifdef IS_POINTS\n\tvec2 toCenter = (v_uv - 0.5) * 2.0;\n\t// gl_FragColor = vec4(v_intensity, v_intensity, v_intensity, max(0.0, 1.0 - pow(smoothstep(0.06, 1.0, length(toCenter)), 0.15)) * 0.5);\n\tgl_FragColor = vec4(v_intensity, v_intensity, v_intensity, pow(0.975 - clamp(sdBox(toCenter, vec2(0.05, 0.065)), 0.0, 1.0), 5.0));\n\t#else\n\tvec3 viewNormal = normalize(v_viewNormal);\n\tgl_FragColor = vec4(v_intensity * (1.0 + abs(viewNormal.z) * 0.25));\n\t#endif\n}"])
                        })), this.mesh.frustumCulled = !1, this.container.add(this.mesh), this.lightMesh = new l.Mesh(t, new l.ShaderMaterial({
                            uniforms: u({}, this.mesh.material.uniforms),
                            vertexShader: c(["#define GLSLIFY 1\nattribute float instanceId;\n\nuniform float u_time;\nuniform float u_instanceCount;\nuniform float u_ringDistance;\nuniform vec3 u_areaLightSize;\nuniform float u_posZOffset;\nuniform float u_cinematicRatio;\n\n#ifdef IS_POINTS\n\tattribute float instanceSide;\n\tvarying vec2 v_uv;\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n#ifdef IS_LIGHT\n\tvec3 wrapPosition (vec3 worldPos) {\n\t\treturn vec3 (\n\t\t\t1.0 - atan(worldPos.y, -worldPos.x) / 1.5707963267948966,\n\t\t\tworldPos.z / u_areaLightSize.y * 2.0,\n\t\t\t0.0\n\t\t);\n\t}\n\tvec3 wrapDirection (vec3 worldPos, vec3 v) {\n\t\tfloat offsetAngle = 1.5707963267948966 - atan(worldPos.y, -worldPos.x);\n\t\tv.xy = rotate(v.xy, offsetAngle);\n\t\treturn v;\n\t}\n#endif\n\nvoid main () {\n\n\tfloat radius = 4.0;\n\tfloat tubeRadius = 0.075;\n\tfloat tubeRadiusZ = 0.0375;\n\t#ifdef IS_LIGHT\n\ttubeRadiusZ *= 3.0;\n\t#endif\n\n\tfloat ringRatio;\n\t#ifdef IS_POINTS\n\t\tringRatio = 0.5 - instanceSide * 0.5;\n\t\tvec3 pos = vec3(\n\t\t\tradius * instanceSide + position.x * tubeRadius * 25.0,\n\t\t\t0.001,\n\t\t\tposition.z * tubeRadiusZ * 25.0\n\t\t);\n\t\tv_uv = uv;\n\t#else\n\t\tringRatio = position.y;\n\t\tfloat angle = 3.141592653589793 * ringRatio;\n\t\tvec3 pos = vec3(\n\t\t\tcos(angle) * (radius + position.x * tubeRadius),\n\t\t\tsin(angle) * (radius + position.x * tubeRadius),\n\t\t\tposition.z * tubeRadiusZ\n\t\t);\n\t\tv_viewNormal = normal;\n\t\tv_viewNormal.xy = rotate(v_viewNormal.xy, -angle);\n\t\tv_viewNormal = normalMatrix * v_viewNormal;\n\t#endif\n\tpos.z += instanceId * u_ringDistance - u_areaLightSize.y + mod(u_posZOffset, u_ringDistance);\n\n\t// v_intensity = cos(u_time * 1.5+ instanceId * 0.5 - ringRatio * 0.0) * 0.5 + 0.5;\n\tv_intensity = cos(u_time * 1.75 + pos.z * 0.075) * 0.5 + 0.5;\n\n\tv_intensity = min(v_intensity + u_cinematicRatio , 1.0);\n\t// v_intensity = fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0);\n\t// v_intensity = max(0.0, fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0) * 2.0 - 1.0) * 0.99 + 0.01;\n\n\tv_intensity *= smoothstep(u_areaLightSize.y, u_areaLightSize.y - u_ringDistance, abs(pos.z));\n\n\t#ifdef IS_LIGHT\n\tgl_Position = vec4(wrapPosition(pos), 1.0);\n\t#else\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\t#endif\n\n}"]),
                            fragmentShader: c(["#define GLSLIFY 1\n#ifdef IS_POINTS\n\tvarying vec2 v_uv;\n\tfloat sdBox( vec2 p, vec2 b ) {\n\t\tvec2 q = abs(p) - b;\n\t\treturn length(max(q,0.0)) + min(max(q.x, q.y),0.0);\n\t}\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvoid main () {\n\t#ifdef IS_POINTS\n\tvec2 toCenter = (v_uv - 0.5) * 2.0;\n\t// gl_FragColor = vec4(v_intensity, v_intensity, v_intensity, max(0.0, 1.0 - pow(smoothstep(0.06, 1.0, length(toCenter)), 0.15)) * 0.5);\n\tgl_FragColor = vec4(v_intensity, v_intensity, v_intensity, pow(0.975 - clamp(sdBox(toCenter, vec2(0.05, 0.065)), 0.0, 1.0), 5.0));\n\t#else\n\tvec3 viewNormal = normalize(v_viewNormal);\n\tgl_FragColor = vec4(v_intensity * (1.0 + abs(viewNormal.z) * 0.25));\n\t#endif\n}"])
                        })), this.lightMesh.frustumCulled = !1, this.lightMesh.material.defines.IS_LIGHT = !0, s.scene.add(this.lightMesh)
                    }
                }, {
                    key: "_initFloorPointMesh",
                    value: function() {
                        var e = new l.PlaneBufferGeometry(1, 1);
                        e.rotateX(-.5 * Math.PI);
                        var t = new l.InstancedBufferGeometry;
                        for (var n in e.attributes) t.setAttribute(n, e.attributes[n]);
                        t.setIndex(e.getIndex());
                        for (var r = new Uint8Array(2 * this.instanceCount), i = new Int8Array(2 * this.instanceCount), a = 0; a < 2 * this.instanceCount; a++) r[a] = ~~(a / 2), i[a] = a % 2 * 2 - 1;
                        t.setAttribute("instanceId", new l.InstancedBufferAttribute(r, 1)), t.setAttribute("instanceSide", new l.InstancedBufferAttribute(i, 1)), this.pointMesh = new l.Mesh(t, new l.ShaderMaterial({
                            uniforms: u({
                                u_time: this.sharedUniforms.u_time,
                                u_ringDistance: this.sharedUniforms.u_ringDistance,
                                u_instanceCount: {
                                    value: this.instanceCount
                                }
                            }, s.sharedUniforms),
                            vertexShader: c(["#define GLSLIFY 1\nattribute float instanceId;\n\nuniform float u_time;\nuniform float u_instanceCount;\nuniform float u_ringDistance;\nuniform vec3 u_areaLightSize;\nuniform float u_posZOffset;\nuniform float u_cinematicRatio;\n\n#ifdef IS_POINTS\n\tattribute float instanceSide;\n\tvarying vec2 v_uv;\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\n#ifdef IS_LIGHT\n\tvec3 wrapPosition (vec3 worldPos) {\n\t\treturn vec3 (\n\t\t\t1.0 - atan(worldPos.y, -worldPos.x) / 1.5707963267948966,\n\t\t\tworldPos.z / u_areaLightSize.y * 2.0,\n\t\t\t0.0\n\t\t);\n\t}\n\tvec3 wrapDirection (vec3 worldPos, vec3 v) {\n\t\tfloat offsetAngle = 1.5707963267948966 - atan(worldPos.y, -worldPos.x);\n\t\tv.xy = rotate(v.xy, offsetAngle);\n\t\treturn v;\n\t}\n#endif\n\nvoid main () {\n\n\tfloat radius = 4.0;\n\tfloat tubeRadius = 0.075;\n\tfloat tubeRadiusZ = 0.0375;\n\t#ifdef IS_LIGHT\n\ttubeRadiusZ *= 3.0;\n\t#endif\n\n\tfloat ringRatio;\n\t#ifdef IS_POINTS\n\t\tringRatio = 0.5 - instanceSide * 0.5;\n\t\tvec3 pos = vec3(\n\t\t\tradius * instanceSide + position.x * tubeRadius * 25.0,\n\t\t\t0.001,\n\t\t\tposition.z * tubeRadiusZ * 25.0\n\t\t);\n\t\tv_uv = uv;\n\t#else\n\t\tringRatio = position.y;\n\t\tfloat angle = 3.141592653589793 * ringRatio;\n\t\tvec3 pos = vec3(\n\t\t\tcos(angle) * (radius + position.x * tubeRadius),\n\t\t\tsin(angle) * (radius + position.x * tubeRadius),\n\t\t\tposition.z * tubeRadiusZ\n\t\t);\n\t\tv_viewNormal = normal;\n\t\tv_viewNormal.xy = rotate(v_viewNormal.xy, -angle);\n\t\tv_viewNormal = normalMatrix * v_viewNormal;\n\t#endif\n\tpos.z += instanceId * u_ringDistance - u_areaLightSize.y + mod(u_posZOffset, u_ringDistance);\n\n\t// v_intensity = cos(u_time * 1.5+ instanceId * 0.5 - ringRatio * 0.0) * 0.5 + 0.5;\n\tv_intensity = cos(u_time * 1.75 + pos.z * 0.075) * 0.5 + 0.5;\n\n\tv_intensity = min(v_intensity + u_cinematicRatio , 1.0);\n\t// v_intensity = fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0);\n\t// v_intensity = max(0.0, fract(u_time * 0.5 + instanceId * 0.1 - ringRatio * 0.0) * 2.0 - 1.0) * 0.99 + 0.01;\n\n\tv_intensity *= smoothstep(u_areaLightSize.y, u_areaLightSize.y - u_ringDistance, abs(pos.z));\n\n\t#ifdef IS_LIGHT\n\tgl_Position = vec4(wrapPosition(pos), 1.0);\n\t#else\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n\t#endif\n\n}"]),
                            fragmentShader: c(["#define GLSLIFY 1\n#ifdef IS_POINTS\n\tvarying vec2 v_uv;\n\tfloat sdBox( vec2 p, vec2 b ) {\n\t\tvec2 q = abs(p) - b;\n\t\treturn length(max(q,0.0)) + min(max(q.x, q.y),0.0);\n\t}\n#else\n\tvarying vec3 v_viewNormal;\n#endif\n\nvarying float v_intensity;\n\nvoid main () {\n\t#ifdef IS_POINTS\n\tvec2 toCenter = (v_uv - 0.5) * 2.0;\n\t// gl_FragColor = vec4(v_intensity, v_intensity, v_intensity, max(0.0, 1.0 - pow(smoothstep(0.06, 1.0, length(toCenter)), 0.15)) * 0.5);\n\tgl_FragColor = vec4(v_intensity, v_intensity, v_intensity, pow(0.975 - clamp(sdBox(toCenter, vec2(0.05, 0.065)), 0.0, 1.0), 5.0));\n\t#else\n\tvec3 viewNormal = normalize(v_viewNormal);\n\tgl_FragColor = vec4(v_intensity * (1.0 + abs(viewNormal.z) * 0.25));\n\t#endif\n}"])
                        })), this.pointMesh.material.defines.IS_POINTS = !0, this.pointMesh.frustumCulled = !1, this.pointMesh.material.depthWrite = !1, this.pointMesh.material.transparent = !0, this.pointMesh.material.blending = l.CustomBlending, this.pointMesh.material.blendSrc = l.SrcAlphaFactor, this.pointMesh.material.blendDst = l.OneMinusSrcAlphaFactor, this.pointMesh.material.blendSrcAlpha = l.OneFactor, this.pointMesh.material.blendDstAlpha = l.OneFactor, this.container.add(this.pointMesh)
                    }
                }, {
                    key: "resize",
                    value: function(e, t) {}
                }, {
                    key: "update",
                    value: function(e) {
                        this.hasInitialized && (this.sharedUniforms.u_time.value += -1 * e, 1 == o.cinematicRatio && (this.sharedUniforms.u_time.value = 0))
                    }
                }]), e
            }();
        t.exports = new h
    }, {
        "../../../core/properties": 71,
        "../../../core/settings": 72,
        "../../../helpers/fboHelper": 79,
        "../stage1AreaLight/stage1AreaLight": 117,
        "@babel/runtime/helpers/classCallCheck": 6,
        "@babel/runtime/helpers/createClass": 7,
        "@babel/runtime/helpers/interopRequireDefault": 12,
        glslify: 27,
        "mout/object/mixIn": 46,
        three: 63
    }],
    121: [function(e, t, n) {
        "use strict";
        t.exports = [{
            color1: "#ffffff",
            color2: "#adadad",
            isShinny: !0,
            isSelected: !0
        }, {
            color1: "#060606",
            color2: "#3b3131",
            isShinny: !0
        }, {
            color1: "#ff006b",
            color2: "#ff91be",
            isShinny: !0
        }, {
            color1: "#ff0000",
            color2: "#ff7171",
            isShinny: !0
        }, {
            color1: "#ffa000",
            color2: "#fec567",
            isShinny: !0
        }, {
            color1: "#12e800",
            color2: "#a3c89f",
            isShinny: !0
        }, {
            color1: "#0038ff",
            color2: "#567cff",
            isShinny: !0
        }]
    }, {}],
    122: [function(e, t, n) {
        "use strict";
        var r = e("../core/settings"),
            i = e("../core/properties"),
            a = e("../utils/math"),
            o = e("../audios/audios"),
            s = e("./stage0/stage0"),
            u = e("./stage1/stage1"),
            l = e("three"),
            c = e("min-signal"),
            h = e("mout/queryString/getQuery");
        n.preInit = function() {
            n.container = new l.Object3D;
            for (var e = 0; e < d.length; e++) {
                var t = d[e];
                t.preInit(), n.container.add(t.container)
            }
        }, n.init = function() {
            for (var e = 0; e < d.length; e++) {
                d[e].init()
            }
        }, n.changeToNext = function() {
            p((f + 1) % d.length)
        }, n.changeTo = p, n.resize = function(e, t) {
            for (var n = 0; n < d.length; n++) {
                d[n].resize(e, t)
            }
        }, n.update = function(e) {
            for (var t = function() {
                    var t = d[s],
                        u = t.isActive,
                        l = s === f;
                    l !== u && (l ? (n.isIdle = !1, t.show(), i.final.cachePreviousFrame(i.postprocessing), o.play("transition"), n.onChangeStarted.dispatch(t), history.pushState({}, "", (0 == s ? r.STAGE_0_ID : r.STAGE_1_ID) + h(window.location.href)), gsap.to(n, {
                        duration: 1,
                        currentIndexRatio: f,
                        ease: Linear.easeNone
                    }), gsap.set(i, {
                        cacheBlendRatio: 1,
                        cacheBlendDirection: 1 == f ? -1 : 1,
                        ease: Linear.easeNone
                    }), gsap.to(i, {
                        duration: 1,
                        cacheBlendRatio: 0,
                        ease: Expo.easeInOut,
                        onComplete: function() {
                            n.isIdle = !0, n.onChangeCompleted.dispatch(t)
                        }
                    })) : t.hide()), t.isActive && (i.cacheBlendRatio > .5 && (i.cameraDollyZoomFovOffset = 0 == t.index ? 70 : 40), i.visualTimeScale = 0 == t.index ? a.mix(1, .1, i.cinematicRatio) : 1, t.update(e))
                }, s = 0; s < d.length; s++) t()
        }, n.isIdle = !0, n.currentIndexRatio = 0, n.onChangeStarted = new c, n.onChangeCompleted = new c;
        var d = [s, u],
            f = r.DEFAULT_STAGE_INDEX;

        function p(e) {
            f != e && n.isIdle && (n.isIdle = !1, f = e)
        }
    }, {
        "../audios/audios": 66,
        "../core/properties": 71,
        "../core/settings": 72,
        "../utils/math": 104,
        "./stage0/stage0": 111,
        "./stage1/stage1": 116,
        "min-signal": 30,
        "mout/queryString/getQuery": 48,
        three: 63
    }],
    123: [function(e, t, n) {
        "use strict";
        var r, i, a, o, s, u = e("../core/settings"),
            l = e("../core/properties"),
            c = e("three"),
            h = e("./stages");

        function d(e) {
            r = new c.Mesh(e, new c.MeshBasicMaterial)
        }

        function f(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a;
            if (!r) return !1;
            i.setFromCamera(t, l.camera);
            var n = i.intersectObject(r);
            return n.length ? (e.copy(n[0].point), 1) : (i.ray.intersectPlane(o, e), 2)
        }
        n.preInit = function() {
            n.container = new c.Object3D, i = new c.Raycaster, a = new c.Vector2, s = new c.Vector3, o = new c.Plane(new c.Vector3(0, 1, 0), 0), l.loader.add(u.MODEL_PATH + "low.buf", {
                weight: 10,
                onLoad: d
            }), h.preInit(), n.container.add(h.container)
        }, n.init = function() {
            h.init()
        }, n.onDown = function() {
            return
        }, n.rayCastCar = f, n.resize = function(e, t) {
            h.resize(e, t)
        }, n.update = function(e) {
            if (h.update(e), l.bokehAutoDistance) {
                var t = l.camera.far;
                f(s) && (t = Math.min(t, s.distanceTo(l.camera.position)));
                var n = .08 * (t - l.bokehFocusDistance);
                n = Math.min(Math.abs(n), .25) * Math.sign(n), l.bokehFocusDistance += n
            }
        }, n.container = null
    }, {
        "../core/properties": 71,
        "../core/settings": 72,
        "./stages": 122,
        three: 63
    }]
}, {}, [82]);